{
    "docs": [
        {
            "location": "/",
            "text": "Introduction\n\n\nSiVa is digital signature validation web service that provides SOAP and JSON\nAPI to validate following file types: \n\n\n\n\nOlder Estonian digital signature files with DDOC extension\n\n\nBDOC containers with \nTimeMark\n and \nTimeStamp\n signatures\n\n\nDigitally signed PDF files\n\n\nX-Road security server ASiCE signature containers\n\n\n\n\nArchitecture document main purpose is to give overview what SiVa is.\nGive an overview of it's internal processes and provide information \nwhen deploying it to production environment.\n\n\nSiVa architecture document sections overview\n\n\nBelow list will give You an overview of what each section of the \nSiVa architecture document will cover:\n\n\n\n\nOverview\n - gives overview what SiVa is and \n  it's main features.\n\n\nRegulatory environment\n - legal analysis \n  and standards that are used when building SiVa application\n\n\nComponent diagram\n - gives overview of \n  main SiVa subsystems and and and base validation Java libraries \n  used for different validation services\n\n\nDeployment view\n - gives general overview of \n  servers required when deploying SiVa validation web service \n  into production\n\n\nInterfaces\n - Description of SiVa \n  SOAP and JSON API request and response\n\n\nDatabase schema\n - description of SiVa \n  validation administration service database \n\n\nUse cases\n - describes main processes in SiVa \n  validation web service \n\n\nDeploying\n - how to build, deploy and configure \n  SiVa web service\n\n\nLogging\n - how to configure and setup SiVa validation \n  service logging support\n\n\n\n\nDownload documentation\n\n\n\n\nDownload SiVa documentation as PDF",
            "title": "Introduction"
        },
        {
            "location": "/#introduction",
            "text": "SiVa is digital signature validation web service that provides SOAP and JSON\nAPI to validate following file types:    Older Estonian digital signature files with DDOC extension  BDOC containers with  TimeMark  and  TimeStamp  signatures  Digitally signed PDF files  X-Road security server ASiCE signature containers   Architecture document main purpose is to give overview what SiVa is.\nGive an overview of it's internal processes and provide information \nwhen deploying it to production environment.",
            "title": "Introduction"
        },
        {
            "location": "/#siva-architecture-document-sections-overview",
            "text": "Below list will give You an overview of what each section of the \nSiVa architecture document will cover:   Overview  - gives overview what SiVa is and \n  it's main features.  Regulatory environment  - legal analysis \n  and standards that are used when building SiVa application  Component diagram  - gives overview of \n  main SiVa subsystems and and and base validation Java libraries \n  used for different validation services  Deployment view  - gives general overview of \n  servers required when deploying SiVa validation web service \n  into production  Interfaces  - Description of SiVa \n  SOAP and JSON API request and response  Database schema  - description of SiVa \n  validation administration service database   Use cases  - describes main processes in SiVa \n  validation web service   Deploying  - how to build, deploy and configure \n  SiVa web service  Logging  - how to configure and setup SiVa validation \n  service logging support",
            "title": "SiVa architecture document sections overview"
        },
        {
            "location": "/#download-documentation",
            "text": "Download SiVa documentation as PDF",
            "title": "Download documentation"
        },
        {
            "location": "/siva/version_info/",
            "text": "Version info\n\n\n\n\n\n\n\n\n\n\nVersion number\n\n\n\n\n\n\nChange date\n\n\n\n\n\n\nAuthor\n\n\n\n\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0.1\n\n\n\n\n\n\n\n06.05.2016\n\n\n\n\n\n\n\nMihkel Selgal\n\n\n\n\n\n\n\nInitial SiVa architecture\ndocument",
            "title": "Version info"
        },
        {
            "location": "/siva/version_info/#version-info",
            "text": "Version number    Change date    Author    Description        0.1    06.05.2016    Mihkel Selgal    Initial SiVa architecture\ndocument",
            "title": "Version info"
        },
        {
            "location": "/siva/definitions/",
            "text": "Definition:\n\n\n\n\nDSS\n\n\nDigital Signature Services is Java library to sign and validate European digital signature formats\n\n\nBDOC\n\n\nNot defined\n\n\nDDOC\n\n\nNot defined\n\n\nPDF\n\n\nPortable document format is a file format that provides an electronic image of text or text and graphics that\n  looks like a printed document and can be viewed, printed, and electronically transmitted.\n\n\nSiVa\n\n\nis RESTful web service providing digital signature validation services for BDOC, DDOC, PDF and X-Road\n  files\n\n\nJVM\n\n\nThe Java Virtual Machine is the runtime engine of the Java Platform, which\n  allows any program written in Java or other language compiled into Java bytecode to run on any\n  computer that has a native JVM.\n\n\nJAR\n\n\nJava Archive is a package file format typically used to aggregate many Java class files and associated metadata\n  and resources (text, images, etc.) into one file to distribute application software or libraries on the Java platform.\n\n\nFat JAR\n\n\nThe fat JAR is the JAR, which contains classes from all the libraries, on which your project depends and,\n  the classes of built project.\n\n\nSpring Boot\n\n\nis a framework from the team at Pivotal, designed to simplify the bootstrapping and development of a new\n  Spring application. The framework takes an opinionated approach to configuration, freeing developers from the\n  need to define boilerplate configuration\n\n\nLinux\n\n\nan operating system, based on UNIX, that runs on many different hardware platforms and whose source\n  code is available to the public.\n\n\nP\u00fcPKI\n\n\nNot defined\n\n\nPostgreSQL\n\n\nis an open source relational database management system ( DBMS ) developed by a worldwide team of volunteers.\n   PostgreSQL is not controlled by any corporation or other private entity and the source code is available\n   free of charge.",
            "title": "Definitions"
        },
        {
            "location": "/siva/definitions/#definition",
            "text": "DSS  Digital Signature Services is Java library to sign and validate European digital signature formats  BDOC  Not defined  DDOC  Not defined  PDF  Portable document format is a file format that provides an electronic image of text or text and graphics that\n  looks like a printed document and can be viewed, printed, and electronically transmitted.  SiVa  is RESTful web service providing digital signature validation services for BDOC, DDOC, PDF and X-Road\n  files  JVM  The Java Virtual Machine is the runtime engine of the Java Platform, which\n  allows any program written in Java or other language compiled into Java bytecode to run on any\n  computer that has a native JVM.  JAR  Java Archive is a package file format typically used to aggregate many Java class files and associated metadata\n  and resources (text, images, etc.) into one file to distribute application software or libraries on the Java platform.  Fat JAR  The fat JAR is the JAR, which contains classes from all the libraries, on which your project depends and,\n  the classes of built project.  Spring Boot  is a framework from the team at Pivotal, designed to simplify the bootstrapping and development of a new\n  Spring application. The framework takes an opinionated approach to configuration, freeing developers from the\n  need to define boilerplate configuration  Linux  an operating system, based on UNIX, that runs on many different hardware platforms and whose source\n  code is available to the public.  P\u00fcPKI  Not defined  PostgreSQL  is an open source relational database management system ( DBMS ) developed by a worldwide team of volunteers.\n   PostgreSQL is not controlled by any corporation or other private entity and the source code is available\n   free of charge.",
            "title": "Definition:"
        },
        {
            "location": "/siva/overview/",
            "text": "SiVa overview\n\n\nSiVa (Signature Validation) web service \nis continued development of PDF Validation web service. Service provides \na JSON and SOAP based API web interface which purpose is to validate signatures \nin digitally signed BDOC, DDOC, PDF and X-Road ASiCE files according to \nvalidation policy (described in the \nValidation Policy\n \nsection).\n\n\nSiVa uses following Java libraries and command line utilities:\n\n\n\n\nEU DSS (Digital Signature Service) library is chosen for digitally signed \n  PDF file validation \n\n\nDigiDoc4J Java library to validate BDOC containers. Supported signature\n\n  types are \nTimeStamp\n and \nTimeMark\n\n\nJDigiDoc Java library is used to validate DDOC files starting from version\n\n\nX-Road ASiCE containers are validated using X-Road security server project\n  provided command line utility\n\n\n\n\nValidation libraries\n\n\nDigiDoc4j EU DSS fork\n\n\nDigiDoc4J EU DSS fork library for PDF files was chosen because it all the main \nvalidation constrains already provided and all new constraints can be added easily.\nFor more information on EU DSS, see:\n\n\nhttps://joinup.ec.europa.eu/asset/sd-dss/description\n.\n\n\nSiVa will use the following functionality of EU DSS library:\n\n\n\n\nPaDES Validation Functionality\n\n\nTSL loading functionality\n\n\n\n\nDigiDoc4J\n\n\nDigiDoc4J will be used to validate both \nTimeMark\n and \nTimeStamp\n based BDOC containers. \nDigiDoc4J was chosen because it's only Java library that can validate Estonian BDOC files \naccording to SiVa validation policy.\n\nFor more information on DigiDoc4J:\n\n\nhttps://github.com/open-eid/digidoc4j\n\n\nSiVa will use the following functionality of DigiDoc4J:\n\n\n\n\nBDOC validation functionality\n\n\n\n\nJDigiDoc\n\n\nJDigiDoc provides support for DDOC files the library was chosen because it provides most\ncomplete support for all required DDOC versions. \nRead more about JDigiDoc:\n\n\nhttps://github.com/open-eid/jdigidoc\n\n\nSiVa will use the following functionality of JDigiDoc:\n\n\n\n\nDDOC validation functionality\n\n\n\n\nX-Road signature validation utility\n\n\nX-Road signature validation utility is command line tool to validate X-Road Security server\ngenerated ASiCe files. The utility was chosen because it's only available packaged to tool \nto validate X-Road signature files.\n\n\nMain features of SiVa validation service:\n\n\n\n\nSiVa SOAP ETSI compliant API to validate all supported signatures.\n\n\nSiVa REST ETSI compliant API to validate all supported signatures. \n\n\nSiVa handles files in PDF-format version 1.7 and later,\n  signed with PadES-profile signatures.\n\n\nService handles DDOC files starting from version 1.0 or later\n\n\nService supports BDOC files starting from version 2.1 or later\n\n\nService supports X-Road 6 security server ASiCE containers\n\n\nSiVa uses European Commission\u2019s TSL (Trusted Service\n  Status List) for certificate chain validation for PDF and BDOC files.\n\n\nEuropean Commission\u2019s TSL contains references to TSLs of\n  European Union\u2019s member states and members of the European\n  Economic Area. This allows the PDF Validator to validate\n  signature that has been signed with certificates issued in any\n  of European Union\u2019s member states.\n\n\nDuring the validation process, a certificate chain is created\n  from signer\u2019s certificate up to the trust anchor (national trust\n  list referenced by the central European Commission's trust list)\n  for all certificates included in the signature (i.e. the\n  signer's certificate, OCSP service's certificate, time-stamping\n  Service's certificate).\n\n\n\n\n\n\nSiVas for DDOC and X-Road signature containers will use configured \n  list certificates.\n\n\nSignatures with PadES-LT and PadES-LTA profile are supported.\n\n\nBDOC signatures with type BDOC-TM and BDOC-TS are supported \n\n\n\n\nAt the time of creating the current documentation, it is expected that\nSiVa will be used by the following applications:\n\n\n\n\nDigiDoc3 Client application\n\n\nThird party document management applications",
            "title": "SiVa Service Overview"
        },
        {
            "location": "/siva/overview/#siva-overview",
            "text": "SiVa (Signature Validation) web service \nis continued development of PDF Validation web service. Service provides \na JSON and SOAP based API web interface which purpose is to validate signatures \nin digitally signed BDOC, DDOC, PDF and X-Road ASiCE files according to \nvalidation policy (described in the  Validation Policy  \nsection).  SiVa uses following Java libraries and command line utilities:   EU DSS (Digital Signature Service) library is chosen for digitally signed \n  PDF file validation   DigiDoc4J Java library to validate BDOC containers. Supported signature \n  types are  TimeStamp  and  TimeMark  JDigiDoc Java library is used to validate DDOC files starting from version  X-Road ASiCE containers are validated using X-Road security server project\n  provided command line utility",
            "title": "SiVa overview"
        },
        {
            "location": "/siva/overview/#validation-libraries",
            "text": "",
            "title": "Validation libraries"
        },
        {
            "location": "/siva/overview/#digidoc4j-eu-dss-fork",
            "text": "DigiDoc4J EU DSS fork library for PDF files was chosen because it all the main \nvalidation constrains already provided and all new constraints can be added easily.\nFor more information on EU DSS, see:  https://joinup.ec.europa.eu/asset/sd-dss/description .  SiVa will use the following functionality of EU DSS library:   PaDES Validation Functionality  TSL loading functionality",
            "title": "DigiDoc4j EU DSS fork"
        },
        {
            "location": "/siva/overview/#digidoc4j",
            "text": "DigiDoc4J will be used to validate both  TimeMark  and  TimeStamp  based BDOC containers. \nDigiDoc4J was chosen because it's only Java library that can validate Estonian BDOC files \naccording to SiVa validation policy. \nFor more information on DigiDoc4J:  https://github.com/open-eid/digidoc4j  SiVa will use the following functionality of DigiDoc4J:   BDOC validation functionality",
            "title": "DigiDoc4J"
        },
        {
            "location": "/siva/overview/#jdigidoc",
            "text": "JDigiDoc provides support for DDOC files the library was chosen because it provides most\ncomplete support for all required DDOC versions. \nRead more about JDigiDoc:  https://github.com/open-eid/jdigidoc  SiVa will use the following functionality of JDigiDoc:   DDOC validation functionality",
            "title": "JDigiDoc"
        },
        {
            "location": "/siva/overview/#x-road-signature-validation-utility",
            "text": "X-Road signature validation utility is command line tool to validate X-Road Security server\ngenerated ASiCe files. The utility was chosen because it's only available packaged to tool \nto validate X-Road signature files.",
            "title": "X-Road signature validation utility"
        },
        {
            "location": "/siva/overview/#main-features-of-siva-validation-service",
            "text": "SiVa SOAP ETSI compliant API to validate all supported signatures.  SiVa REST ETSI compliant API to validate all supported signatures.   SiVa handles files in PDF-format version 1.7 and later,\n  signed with PadES-profile signatures.  Service handles DDOC files starting from version 1.0 or later  Service supports BDOC files starting from version 2.1 or later  Service supports X-Road 6 security server ASiCE containers  SiVa uses European Commission\u2019s TSL (Trusted Service\n  Status List) for certificate chain validation for PDF and BDOC files.  European Commission\u2019s TSL contains references to TSLs of\n  European Union\u2019s member states and members of the European\n  Economic Area. This allows the PDF Validator to validate\n  signature that has been signed with certificates issued in any\n  of European Union\u2019s member states.  During the validation process, a certificate chain is created\n  from signer\u2019s certificate up to the trust anchor (national trust\n  list referenced by the central European Commission's trust list)\n  for all certificates included in the signature (i.e. the\n  signer's certificate, OCSP service's certificate, time-stamping\n  Service's certificate).    SiVas for DDOC and X-Road signature containers will use configured \n  list certificates.  Signatures with PadES-LT and PadES-LTA profile are supported.  BDOC signatures with type BDOC-TM and BDOC-TS are supported    At the time of creating the current documentation, it is expected that\nSiVa will be used by the following applications:   DigiDoc3 Client application  Third party document management applications",
            "title": "Main features of SiVa validation service:"
        },
        {
            "location": "/siva/regulatory_environment/",
            "text": "Regulatory environment\n\n\n\n\nNote\n\n\nRegulatory environment section will be added when analysis will be completed",
            "title": "Regulatory environment"
        },
        {
            "location": "/siva/regulatory_environment/#regulatory-environment",
            "text": "Note  Regulatory environment section will be added when analysis will be completed",
            "title": "Regulatory environment"
        },
        {
            "location": "/siva/component_diagram/",
            "text": "Component diagram\n\n\n\n\n\n\nWeb API is standard Spring MVC module it will take in JSON or SOAP requests sent by\n  systems that integrate with SIVA web service API\n\n\nValidation service proxy or validation service selector is Spring module that will choose\n  the appropriate validation service for user request\n\n\nTSL loader loads in contents of TSL file from given URL in online mode or from directory when\n  using offline mode in predefined interval.\n\n\nP\u00fcPKI proxy converts P\u00fcPKI DB SQL results to Java objects that validation services,\n  validation service proxy and Web API will use\n\n\nValidation services (listed below) validate different digitally signed documents\n\n\nPDF validation service for PDF files will use \nDigiDoc4J DSS forked\n library\n\n\nBDOC for ASiC compliant containers both TM and TS will latest Maven released \nDigiDoc4J\n library\n\n\nDDOC for previous generation digitally signed files will use latest Maven release of \nJDigiDoc\n\n\nX-Road Signature validation service for X-Road web service signature files will use X-Road Security server project\n   provided X-Road signature validation command line utility.\n\n\n\n\n\n\nP\u00fcPKI DB relational database providing client information and client request counting\n\n\nP\u00fcPKI UI a separate Python application that will provide CRUD operations for clients",
            "title": "Component diagram"
        },
        {
            "location": "/siva/component_diagram/#component-diagram",
            "text": "Web API is standard Spring MVC module it will take in JSON or SOAP requests sent by\n  systems that integrate with SIVA web service API  Validation service proxy or validation service selector is Spring module that will choose\n  the appropriate validation service for user request  TSL loader loads in contents of TSL file from given URL in online mode or from directory when\n  using offline mode in predefined interval.  P\u00fcPKI proxy converts P\u00fcPKI DB SQL results to Java objects that validation services,\n  validation service proxy and Web API will use  Validation services (listed below) validate different digitally signed documents  PDF validation service for PDF files will use  DigiDoc4J DSS forked  library  BDOC for ASiC compliant containers both TM and TS will latest Maven released  DigiDoc4J  library  DDOC for previous generation digitally signed files will use latest Maven release of  JDigiDoc  X-Road Signature validation service for X-Road web service signature files will use X-Road Security server project\n   provided X-Road signature validation command line utility.    P\u00fcPKI DB relational database providing client information and client request counting  P\u00fcPKI UI a separate Python application that will provide CRUD operations for clients",
            "title": "Component diagram"
        },
        {
            "location": "/siva/deployment_view/",
            "text": "Deployment view\n\n\n\n\nLoad balancer\n\n\nLoad balancer can distribute traffic between SiVa nodes when there is more then one instance running.\nSiVa do not set any specific requirements for load balancer but in diagram the Nginx reverse proxy option is shown.\n\n\nSiVa application server\n\n\nSiVa validation service server that will provide the service needs to have JVM installed) both\nmore commonly known options Oracle or OpenJDK are supported. SiVa application is built as executable JAR and can be\nconfigured like system service on Linux operating system.\n\n\nRead more about running\n\nSpring Boot applications as Linux system service\n\n\nSiVa validation service can run in cluster because it does not keep or create any sessions with client application\nor service.\n\n\n\n\nNote\n\n\nThe single executable JAR option may change in the future because we are considering isolating\neach validation service and SiVa web application into separate JVM instance\n\n\n\n\nDatabase server\n\n\nSiVa database server requirements are dictated by P\u00fcPKI application and from these requirements needs to be\nPostgreSQL. Currently there are no special requirements for database server nor database setup.\n\n\n\n\nNote\n\n\nDatabase requirements section will be updated when analysis and development will begin on modification of\nP\u00fcPKI application\n\n\n\n\n\n\nDevelopment\n\n\nIt may be possible that we will build administration user interface as part of SiVa project so the database\nand type of database RDBMS or NoSQL may change in the future\n\n\n\n\nSiVa administration server\n\n\nSiVa administration will use P\u00fcPKI administration user interface to manage authorized service users and collect\n information about basic service usage by authorized clients.\n\n\nOnly requirement currently known is that Python programming language support must be present in the server.\n\n\n\n\nNote\n\n\nMore detailed information about SiVa administration server setup will be provided when development and\nanalysis will begin for administration service\n\n\n\n\n\n\nDevelopment\n\n\nThere is alternative option that we will build administration user interface from scratch using Java and\nSpring Boot",
            "title": "Deployment view"
        },
        {
            "location": "/siva/deployment_view/#deployment-view",
            "text": "",
            "title": "Deployment view"
        },
        {
            "location": "/siva/deployment_view/#load-balancer",
            "text": "Load balancer can distribute traffic between SiVa nodes when there is more then one instance running.\nSiVa do not set any specific requirements for load balancer but in diagram the Nginx reverse proxy option is shown.",
            "title": "Load balancer"
        },
        {
            "location": "/siva/deployment_view/#siva-application-server",
            "text": "SiVa validation service server that will provide the service needs to have JVM installed) both\nmore commonly known options Oracle or OpenJDK are supported. SiVa application is built as executable JAR and can be\nconfigured like system service on Linux operating system.  Read more about running Spring Boot applications as Linux system service  SiVa validation service can run in cluster because it does not keep or create any sessions with client application\nor service.   Note  The single executable JAR option may change in the future because we are considering isolating\neach validation service and SiVa web application into separate JVM instance",
            "title": "SiVa application server"
        },
        {
            "location": "/siva/deployment_view/#database-server",
            "text": "SiVa database server requirements are dictated by P\u00fcPKI application and from these requirements needs to be\nPostgreSQL. Currently there are no special requirements for database server nor database setup.   Note  Database requirements section will be updated when analysis and development will begin on modification of\nP\u00fcPKI application    Development  It may be possible that we will build administration user interface as part of SiVa project so the database\nand type of database RDBMS or NoSQL may change in the future",
            "title": "Database server"
        },
        {
            "location": "/siva/deployment_view/#siva-administration-server",
            "text": "SiVa administration will use P\u00fcPKI administration user interface to manage authorized service users and collect\n information about basic service usage by authorized clients.  Only requirement currently known is that Python programming language support must be present in the server.   Note  More detailed information about SiVa administration server setup will be provided when development and\nanalysis will begin for administration service    Development  There is alternative option that we will build administration user interface from scratch using Java and\nSpring Boot",
            "title": "SiVa administration server"
        },
        {
            "location": "/siva/interface_description/",
            "text": "Interface description\n\n\n\n\nWarning\n\n\nThe REST and SOAP API will be revised when final report is has been agreed upon\n\n\n\n\n\n\nDevelopment\n\n\nMaybe we should only display link to Swagger/Open API generated documentation\nto more easily keep SiVa API documentation in sync.",
            "title": "Interfaces"
        },
        {
            "location": "/siva/interface_description/#interface-description",
            "text": "Warning  The REST and SOAP API will be revised when final report is has been agreed upon    Development  Maybe we should only display link to Swagger/Open API generated documentation\nto more easily keep SiVa API documentation in sync.",
            "title": "Interface description"
        },
        {
            "location": "/siva/database_schema/",
            "text": "Database schema\n\n\n\n\nNote\n\n\nWill be added after SiVa administration system analysis has been completed.",
            "title": "Database schema"
        },
        {
            "location": "/siva/database_schema/#database-schema",
            "text": "Note  Will be added after SiVa administration system analysis has been completed.",
            "title": "Database schema"
        },
        {
            "location": "/siva/use_cases/",
            "text": "Use cases\n\n\nDigitally signed document validation process\n\n\nDigitally signed document validation process shows how SiVa chooses\nvalidation service and possible output of validation process.\n\n\n\n\nUser of SiVa system provides digitally signed document file in form of \nBase64 encoded string. The validation of file and validation policy \nis handled by validation services underlying libraries. \n\n\n\n\nIn case of PDF file it will be DSS\n\n\nFor BDOC and DDOC files we will use DigiDoc4J or when required jDigiDoc\n\n\nAnd for X-Road signatures we will use X-road signature validation utility \n\n\n\n\nWe will log following failure cases:\nWhen file upload fails (request started but was not completed successfully)\nWhen request validation (JSON or SOAP) fails\nWhen user authentication fails - \nnot shown in diagram above\n\nWhen signature validation fails \u2013 \nnot shown in diagram above\n\nWhen increasing of request count fails \u2013 \nnot shown in diagram above\n\n\nCertificate loading process\n\n\nAll validation services require certificates to validate digitally signed\ndocuments. Below process shows how certificates are loaded into \nvalidation service. Loading process is done separably for each validation\nservice.\n\n\n\n\nCertificate loading process is scheduled cron job inside each validation \nservice to update currently in memory loaded certificates.\n\n\nThis process should run after TSL loader has completed updating \nSiVa local copy of certificates.\n\n\nX-Road 6 security server SOAP request process\n\n\nX-Road validation process is brought out because we skip authentication \nprocess for X-Road security server interface and and use XML SOAP \nas input source.\n\n\n\n\nValidation of SOAP request XML is done in the SiVa web application module.\n\nDocument validation process is described in detail in \nDigitally signed document validation process\n  \n\nValidation report output id described in \nInterface description\n\n\nAuthenticate JSON REST API user\n\n\n\n\nValidation of JSON request is done in  SiVA web application module \nDocument validation process is described in detail in \nDigitally signed document validation process\n  \n\nValidation report output id described in \nInterface description\n\n\nTSL loading use case",
            "title": "Use cases"
        },
        {
            "location": "/siva/use_cases/#use-cases",
            "text": "",
            "title": "Use cases"
        },
        {
            "location": "/siva/use_cases/#digitally-signed-document-validation-process",
            "text": "Digitally signed document validation process shows how SiVa chooses\nvalidation service and possible output of validation process.   User of SiVa system provides digitally signed document file in form of \nBase64 encoded string. The validation of file and validation policy \nis handled by validation services underlying libraries.    In case of PDF file it will be DSS  For BDOC and DDOC files we will use DigiDoc4J or when required jDigiDoc  And for X-Road signatures we will use X-road signature validation utility    We will log following failure cases:\nWhen file upload fails (request started but was not completed successfully)\nWhen request validation (JSON or SOAP) fails\nWhen user authentication fails -  not shown in diagram above \nWhen signature validation fails \u2013  not shown in diagram above \nWhen increasing of request count fails \u2013  not shown in diagram above",
            "title": "Digitally signed document validation process"
        },
        {
            "location": "/siva/use_cases/#certificate-loading-process",
            "text": "All validation services require certificates to validate digitally signed\ndocuments. Below process shows how certificates are loaded into \nvalidation service. Loading process is done separably for each validation\nservice.   Certificate loading process is scheduled cron job inside each validation \nservice to update currently in memory loaded certificates.  This process should run after TSL loader has completed updating \nSiVa local copy of certificates.",
            "title": "Certificate loading process"
        },
        {
            "location": "/siva/use_cases/#x-road-6-security-server-soap-request-process",
            "text": "X-Road validation process is brought out because we skip authentication \nprocess for X-Road security server interface and and use XML SOAP \nas input source.   Validation of SOAP request XML is done in the SiVa web application module. \nDocument validation process is described in detail in  Digitally signed document validation process    \nValidation report output id described in  Interface description",
            "title": "X-Road 6 security server SOAP request process"
        },
        {
            "location": "/siva/use_cases/#authenticate-json-rest-api-user",
            "text": "Validation of JSON request is done in  SiVA web application module \nDocument validation process is described in detail in  Digitally signed document validation process    \nValidation report output id described in  Interface description",
            "title": "Authenticate JSON REST API user"
        },
        {
            "location": "/siva/use_cases/#tsl-loading-use-case",
            "text": "",
            "title": "TSL loading use case"
        },
        {
            "location": "/siva/deployment/",
            "text": "Deployment\n\n\nSystem requirements\n\n\nFollowing are minimum requirements to build and deploy SiVa validation\nweb service:\n\n\n\n\nJava 8 or above Oracle JVM is supported\n\n\nGit version control system version 1.8 or above is recommended\n\n\n2GB of RAM\n\n\n1 processor core\n\n\nOpen internet connection\n\n\n1GB of free disk space\n\n\nSupported operating system is Ubuntu 14.04 LTS  \n\n\n\n\nBuilding SiVa validation web service on Ubuntu 16.04\n\n\nFirst we need to install Git and Java SDK 8 by issuing below commands:\n\n\nsudo apt-get update\nsudo apt-get install git -y\nsudo apt-get install default-jdk -y\n\n\n\n\n\nNext we need to clone the SiVa Github repository:\n\n\ngit clone https://github.com/open-eid/SiVa.git --branch develop\n\n\n\n\n\nFinal step is building the SiVa project using Maven Wrapper\n\n\ncd\n SiVa\n./mvnw install",
            "title": "Deployment"
        },
        {
            "location": "/siva/deployment/#deployment",
            "text": "",
            "title": "Deployment"
        },
        {
            "location": "/siva/deployment/#system-requirements",
            "text": "Following are minimum requirements to build and deploy SiVa validation\nweb service:   Java 8 or above Oracle JVM is supported  Git version control system version 1.8 or above is recommended  2GB of RAM  1 processor core  Open internet connection  1GB of free disk space  Supported operating system is Ubuntu 14.04 LTS",
            "title": "System requirements"
        },
        {
            "location": "/siva/deployment/#building-siva-validation-web-service-on-ubuntu-1604",
            "text": "First we need to install Git and Java SDK 8 by issuing below commands:  sudo apt-get update\nsudo apt-get install git -y\nsudo apt-get install default-jdk -y  Next we need to clone the SiVa Github repository:  git clone https://github.com/open-eid/SiVa.git --branch develop  Final step is building the SiVa project using Maven Wrapper  cd  SiVa\n./mvnw install",
            "title": "Building SiVa validation web service on Ubuntu 16.04"
        },
        {
            "location": "/siva/logging/",
            "text": "Logging\n\n\nLogging functionality is handled by the \nSLF4J\n logging facade and on top\nof it the \nLogback\n framework is used.\u00a0As a result, logging can be\nconfigured via the standard Logback configuration file.\u00a0By default,\nlogging works on the \nINFO\n level and logs are directed to the system\nconsole as well as a log file.\n\n\nThe logback xml configuration file can be found at:\n\n\npdfValidator/pdf-validator-webapp/src/main/resources/logback.xml\n\n\n\n\n\nand when compiled the file will reside at\u00a0\n\n\nWEB-INF/classes/logback.xml\n\n\n\n\n\nwithin the packaged war. There is also a possibility to set the location\nof the default configuration file with a system\nproperty\u00a0\nlogback.configurationFile\n as a JVM argument.\u00a0The value of\nthis property can be a URL, a resource on the class path or a path to a\nfile external to the application.\n\n\njava -Dlogback.configurationFile\n=\n/path/to/config.xml\n\n\n\n\n\nIn this configuration file there are three appenders: \nSTDOUT\n (logs to\nstandard output), \nFILE\n (logs to a file) and \nSYSLOG\n (logs to syslog\nserver over the network). To disable certain appender from logging,\ncommenting out its \nappender-ref\n is sufficient, but it is \nrecommended\n\nthat the appender itself should also be commented out. For example to\ndisable \nSYSLOG\n appender (which is the default configuration), then one\ncan use following configuration:\n\n\n<!--\n\n\n<appender name=\"SYSLOG\" class=\"ch.qos.logback.classic.net.SyslogAppender\">\n\n\n    <syslogHost>enter\\_ip\\_or\\_hostname\\_here</syslogHost>\n\n\n    <port>514</port>\n\n\n    <facility>USER</facility>\n\n\n    <filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\">\n\n\n        <level>INFO</level>\n\n\n    </filter>\n\n\n    <suffixPattern>%-5level %logger{0}:%L \\[%thread\\] - %msg</suffixPattern>\n\n\n</appender>\n\n\n-->\n\n\n\n<root\n \nlevel=\n\"DEBUG\"\n>\n\n\n<appender-ref\n \nref=\n\"STDOUT\"\n/>\n\n\n<appender-ref\n \nref=\n\"FILE\"\n/>\n\n\n<!--<appender-ref ref=\"SYSLOG\"/>-->\n\n\n\n</root>\n\n\n\n\n\n\nLogback configuration manual:\u00a0\nhttp://logback.qos.ch/manual/\n\n\nSTDOUT appender\n\n\n\n\nDefault the log level is set to DEBUG\n\n\nAppender output pattern is:\u00a0\n%d{HH:mm:ss.SSS} %-5level %logger{0}:%L [%thread] - %msg%n\n\n\n\n\nFILE appender\n\n\n\n\nDefault log level is set to \nINFO\n\n\nuses\u00a0RollingFileAppender configured with\u00a0\nTimeBasedRollingPolicy\n.\n  Current configuration makes a seperate logfile for each day and each\n  file is kept for \n30 days\n. \n\n\n\n\nPS!\n keep in mind when using relative\n  destination file path, then the path is added at the end of the\n  currently working directory, i.e. where the application was started.\n  (Current day's logfile path:\u00a0\nlogs/pdf-validator-webapp.log\n,\n  prievious days pattern:\u00a0\n\n\n    logs/pdf-validator-webapp.%d{yyyy-MM-dd}.log)\n\n\n\n\n\n\n\nAppender output pattern is:\u00a0 \n%d{HH:mm:ss.SSS} %-5level %logger{0}:%L \\[%thread\\] - %msg%n\n-Dlogback.configurationFile=config.xml\n\n\n\n\n\n\n\n\n\nSYSLOG appender\n\n\n\n\nDefault log level is set to \nINFO\n\n\nTarget's ip/hostname and port are\u00a0configurable\n\n\nSyslog messsages' severity is\u00a0configurable\n\n\nSyslog messages' payload's timestamp and hostname part are created\n  implicitly and the suffixpattern is:\u00a0 \n%-5level %logger{0}:%L \\[%thread\\] - %msg",
            "title": "Logging"
        },
        {
            "location": "/siva/logging/#logging",
            "text": "Logging functionality is handled by the  SLF4J  logging facade and on top\nof it the  Logback  framework is used.\u00a0As a result, logging can be\nconfigured via the standard Logback configuration file.\u00a0By default,\nlogging works on the  INFO  level and logs are directed to the system\nconsole as well as a log file.  The logback xml configuration file can be found at:  pdfValidator/pdf-validator-webapp/src/main/resources/logback.xml  and when compiled the file will reside at\u00a0  WEB-INF/classes/logback.xml  within the packaged war. There is also a possibility to set the location\nof the default configuration file with a system\nproperty\u00a0 logback.configurationFile  as a JVM argument.\u00a0The value of\nthis property can be a URL, a resource on the class path or a path to a\nfile external to the application.  java -Dlogback.configurationFile = /path/to/config.xml  In this configuration file there are three appenders:  STDOUT  (logs to\nstandard output),  FILE  (logs to a file) and  SYSLOG  (logs to syslog\nserver over the network). To disable certain appender from logging,\ncommenting out its  appender-ref  is sufficient, but it is  recommended \nthat the appender itself should also be commented out. For example to\ndisable  SYSLOG  appender (which is the default configuration), then one\ncan use following configuration:  <!--  <appender name=\"SYSLOG\" class=\"ch.qos.logback.classic.net.SyslogAppender\">      <syslogHost>enter\\_ip\\_or\\_hostname\\_here</syslogHost>      <port>514</port>      <facility>USER</facility>      <filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\">          <level>INFO</level>      </filter>      <suffixPattern>%-5level %logger{0}:%L \\[%thread\\] - %msg</suffixPattern>  </appender>  -->  <root   level= \"DEBUG\" >  <appender-ref   ref= \"STDOUT\" />  <appender-ref   ref= \"FILE\" />  <!--<appender-ref ref=\"SYSLOG\"/>-->  </root>   Logback configuration manual:\u00a0 http://logback.qos.ch/manual/",
            "title": "Logging"
        },
        {
            "location": "/siva/logging/#stdout-appender",
            "text": "Default the log level is set to DEBUG  Appender output pattern is:\u00a0 %d{HH:mm:ss.SSS} %-5level %logger{0}:%L [%thread] - %msg%n",
            "title": "STDOUT appender"
        },
        {
            "location": "/siva/logging/#file-appender",
            "text": "Default log level is set to  INFO  uses\u00a0RollingFileAppender configured with\u00a0 TimeBasedRollingPolicy .\n  Current configuration makes a seperate logfile for each day and each\n  file is kept for  30 days .    PS!  keep in mind when using relative\n  destination file path, then the path is added at the end of the\n  currently working directory, i.e. where the application was started.\n  (Current day's logfile path:\u00a0 logs/pdf-validator-webapp.log ,\n  prievious days pattern:\u00a0      logs/pdf-validator-webapp.%d{yyyy-MM-dd}.log)   Appender output pattern is:\u00a0  %d{HH:mm:ss.SSS} %-5level %logger{0}:%L \\[%thread\\] - %msg%n -Dlogback.configurationFile=config.xml",
            "title": "FILE appender"
        },
        {
            "location": "/siva/logging/#syslog-appender",
            "text": "Default log level is set to  INFO  Target's ip/hostname and port are\u00a0configurable  Syslog messsages' severity is\u00a0configurable  Syslog messages' payload's timestamp and hostname part are created\n  implicitly and the suffixpattern is:\u00a0  %-5level %logger{0}:%L \\[%thread\\] - %msg",
            "title": "SYSLOG appender"
        },
        {
            "location": "/siva/references/",
            "text": "References",
            "title": "References"
        },
        {
            "location": "/siva/references/#references",
            "text": "",
            "title": "References"
        },
        {
            "location": "/siva/test_plan/",
            "text": "Development\n\n\n Unclear items that are not yet present in the plan \n\n\n\n\nTesting of logs\n\n\nTesting of user statistics\n\n\nConfiguration/administration of the service\n\n\nSOAP API testing\n\n\nSystem Testing of X-Road service\n\n\n\n\n\n\nSiVa Test Plan\n\n\nThis is living document and will be constantly updated as the project evolves. The aim of the document is to describe what is tested during SiVa Web Apllication development.\n\n\nIntegration Test introduction\n\n\nOverview of the SiVa (Signature Validation) web service can be found in the \nOverview\n section of the document.\n\n\nThis section of the document gives overview of Integration Testing carried out on SiVa web service.\n\n\nIntegration testing is using RestAssured library v2.5.0 to implement automatic checks for REST/SOAP based tests.\n\n\nThe testing of the SiVa web service is divided into sections based on the software architecture and functionalities provided to the users. The sections are:\n\n\n\n\nREST API\n\n\nSOAP API\n\n\nDDOC signature validation\n\n\nBDOC signature validation\n\n\nPDF signature validation\n\n\nX-Road ASICE signature validation\n\n\n\n\nThe goal is to focus testing on functionalities implemented in SiVa application. Functionalities provided by \nValidation libraries\n are not explicitly tested.\n\n\nTesting of REST API\n\n\nThe goal of the REST API testing is to check that the API is accepting the requests based on the specification and the output result (Validation Report) is in correct format and has all the required elements.\n\n\nValidation REST API tests\n\n\nFollowing areas are tested on input:\n\n\n\n\nWrong (not accepted) values in input parameters\n\n\nEmpty values in input paramters\n\n\nToo many parameters\n\n\nToo few parameters\n\n\nInconsistencies on stated parameters and actual data (wrong document type)\n\n\nCase insensitivity on parameter names\n\n\nEmpty request\n\n\nSimultaneous validation requests\n\n\n\n\nIn all of the negative cases correctness of returned error message is checked.\n\n\nSpecific test cases and input files can be found in:\n\n\n\n\nAppendix 5 - ValidationRequestTests.java\n\n\nAppendix 5 - DocumentFormatTests.java\n\n\n\n\nValidation Report tests\n\n\nSiVa web service returns uniform Validation Report on all the supported document types. This also includes correct document types without actual signature (for example PDF document without signature).\n\n\nFollowing areas are tested on output (Validation Report):\n\n\n\n\nJSON structure on DDOC, BDOC, PDF and ASICE document types\n\n\nPresence of the mandatory elements on DDOC, BDOC, PDF and ASICE document types\n\n\nPresence of optional elements on DDOC, BDOC, PDF and ASICE document types\n\n\nJSON structure on containers without signatures\n\n\n\n\nWhat is not tested:\n\n\n\n\nCorrectness of the values in the report is not in scope on these tests\n\n\n\n\nSpecific test cases and input files can be found in:\n\n\n\n\nAppendix 5 - ValidationReportJsonStructureVerification.java\n\n\n\n\nTesting of SOAP API\n\n\n\n\nDevelopment\n\n\nWill be covered when SOAP API is implemented\n\n\n\n\nTesting of DDOC signature validation\n\n\nThe goal of the DDOC signature validation testing is to check that the validation results given by JDigiDoc library are properly presented in validation report.\n\n\nThe testing of DDOC signatures consists of following main cases:\n\n\n\n\nContainers with valid signature(s) are validated.\n\n\nContainers with invalid signature(s) or no signature are validated\n\n\nContainers sizes near maximum are validated\n\n\nContainers with DDOC v1.0 - 1.3 are validated\n\n\n\n\nSpecific test cases and input files can be found in:\n\n\n\n\nAppendix 5 - DdocValidationFail.java\n\n\nAppendix 5 - DdocValidationPass.java\n\n\nAppendix 5 - LargeFileTests.java\n\n\n\n\nWhat is not tested:\n\n\n\n\nVerification of different causes in container for invalid result is out of scope.\n\n\n\n\n\n\nDevelopment\n\n\nInsert links to JDOC repos where these were tested.\n\n\n\n\nTesting of BDOC signature validation\n\n\nThe goal of the BDOC signature validation testing is to check that the validation results given by DigiDoc4J library are properly presented in validation report.\n\n\nThe testing of BDOC signatures consists of following main cases:\n\n\n\n\nContainers with valid signature(s) are validated (how many signatures are acceptable?)\n\n\nContainers with invalid signature(s) or no signature are validated\n\n\nContainers sizes near maximum are validated\n\n\n\n\nSpecific test cases and input files can be found in:\n\n\n\n\nAppendix 5 - BdocValidationFail.java\n\n\nAppendix 5 - BdocValidationPass.java\n\n\nAppendix 5 - LargeFileTests.java\n\n\n\n\nWhat is not tested:\n\n\n\n\nVerification of different causes in container for invalid result is out of scope.\n\n\n\n\n\n\nDevelopment\n\n\nInsert links where Digidoc4J repos where these were tested.\n\n\n\n\nTesting of PDF signature validation\n\n\nPortion of the validation rules for PDF documents are implemented in SiVa web apllication itself. Therefor different test area selection is used for PDF compared to other containers.\n\n\nThe testing of PDF signatures consists of following main cases:\n\n\n\n\nContainers with invalid signature(s) (different reasons for failure) are validated\n\n\nContainers with no signature are validated\n\n\nContainers sizes near maximum are validated\n\n\nContainers with different baseline profiles are validated\n\n\nContainers with serial and parallel signatures are validated\n\n\nContainers with different signature cryptocaphic algorithms are validated\n\n\nContainers with OCSP values inside and outside bounds are validated\n\n\n\n\nSpecific test cases and input files can be found in:\n\n\n\n\nAppendix 5 - PdfBaselineProfileTests.java\n\n\nAppendix 5 - PdfSignatureCryptographicAlgorithmTests.java\n\n\nAppendix 5 - PdfValidationFail.java\n\n\nAppendix 5 - PdfValidationPass.java\n\n\nAppendix 5 - SignatureRevocationValueTests.java\n\n\nAppendix 5 - LargeFileTests.java\n\n\n\n\nTesting of X-Road ASICE signature validation\n\n\nThe goal of the ASICE signature validation testing is to check that the validation results given by X-Road signature validation utility are properly presented in validation report.\n\n\nIt is possible to validate ASICE containers both via SOAP and REST interface. The same test cases are used for both interfaces.\n\n\nThe testing of ASICE signatures consists of following main cases:\n\n\n\n\nContainers with valid signature(s) are validated\n\n\nContainers with invalid signature(s) and no signature are validated\n\n\nContainers sizes near maximum are validated\n\n\n\n\nSpecific test cases and input files can be found in \nAppendix 5 - Test Case Descriptions\n\n\nWhat is not tested:\n\n\n\n\nVerification of different causes in container for invalid result is out of scope.\n\n\n\n\nSystem Test introduction\n\n\n\n\nDevelopment\n\n\nWill be covered before System Test start\n\n\n\n\nWhile Integration Tests were carried out automatically then System Testing will be done manually.\n\n\nSystem testing is carried out using two access points:\n\n\n\n\nTesting through SiVa Sample Application\n\n\nTesting through X-Road Security Server\n\n\n\n\nThe goal is to test the whole validation process.\n\n\nAdditional features\n\n\n\n\n\"Offline\" mode of SiVa web apllication\n\n\nConfiguration of validation policy\n\n\n\n\nSiVa Sample Application tests\n\n\nIn addition to testing the service as such, SiVa Sample Application itself is tested. The main cases are:\n\n\n\n\nCross browser usage (IE, Edge, Chrome, Firefox and Safari)\n\n\nFile upload (different sizes, suported and unsupported file types)\n\n\nDisplayment of Validation Report\n\n\n\n\nPerformance Test introduction\n\n\nPerformance testing will be carried out on following environments:\n\n\n\n\nLocal machine (processor: memory: )\n\n\nAmazon cloud? (processor: memory: )\n\n\nRIA test enviroment? (processor: memory: )\n\n\n\n\nJmeter v2.13 is used to carry out the testing.\n\n\nThe goal is to measure throughput-latency of the service with different file types and sizes. The performance testing is carried out on REST interface. SOAP interface is used only for one testrun for comparison between SOAP and REST interface. It is assessed that the interface itself does not have considerable impact on throughput or latency compared to the validation process.\n\n\nFollowing cases will be covered on all supported file types (BDOC, DDOC, ASICE, PDF) with steps of 5, 10, 20, 30, 50 and 60 requests per second:\n\n\n\n\nThe service is loaded with valid under 1MB containers\n\n\nThe service is loaded with valid around 5MB containers\n\n\nThe service is loaded with valid near 10MB containers\n\n\nThe service is loaded with valid containers with many (how many?) signatures\n\n\nThe service is loaded with invalid signature under 1MB containers\n\n\n\n\nIn addition, following case will be covered to simulate the real life enviroment with steps of 5, 10, 20, 30, 50 and 60 requests per second:\n\n\n\n\nThe service is loaded with mixture of different file types and valid/invalid signatures\n\n\n\n\nThese tests run for a X? hour/minutes each. The results are presented as throughput-latency graphs for each run.",
            "title": "Test Plan"
        },
        {
            "location": "/siva/test_plan/#siva-test-plan",
            "text": "This is living document and will be constantly updated as the project evolves. The aim of the document is to describe what is tested during SiVa Web Apllication development.",
            "title": "SiVa Test Plan"
        },
        {
            "location": "/siva/test_plan/#integration-test-introduction",
            "text": "Overview of the SiVa (Signature Validation) web service can be found in the  Overview  section of the document.  This section of the document gives overview of Integration Testing carried out on SiVa web service.  Integration testing is using RestAssured library v2.5.0 to implement automatic checks for REST/SOAP based tests.  The testing of the SiVa web service is divided into sections based on the software architecture and functionalities provided to the users. The sections are:   REST API  SOAP API  DDOC signature validation  BDOC signature validation  PDF signature validation  X-Road ASICE signature validation   The goal is to focus testing on functionalities implemented in SiVa application. Functionalities provided by  Validation libraries  are not explicitly tested.",
            "title": "Integration Test introduction"
        },
        {
            "location": "/siva/test_plan/#testing-of-rest-api",
            "text": "The goal of the REST API testing is to check that the API is accepting the requests based on the specification and the output result (Validation Report) is in correct format and has all the required elements.",
            "title": "Testing of REST API"
        },
        {
            "location": "/siva/test_plan/#validation-rest-api-tests",
            "text": "Following areas are tested on input:   Wrong (not accepted) values in input parameters  Empty values in input paramters  Too many parameters  Too few parameters  Inconsistencies on stated parameters and actual data (wrong document type)  Case insensitivity on parameter names  Empty request  Simultaneous validation requests   In all of the negative cases correctness of returned error message is checked.  Specific test cases and input files can be found in:   Appendix 5 - ValidationRequestTests.java  Appendix 5 - DocumentFormatTests.java",
            "title": "Validation REST API tests"
        },
        {
            "location": "/siva/test_plan/#validation-report-tests",
            "text": "SiVa web service returns uniform Validation Report on all the supported document types. This also includes correct document types without actual signature (for example PDF document without signature).  Following areas are tested on output (Validation Report):   JSON structure on DDOC, BDOC, PDF and ASICE document types  Presence of the mandatory elements on DDOC, BDOC, PDF and ASICE document types  Presence of optional elements on DDOC, BDOC, PDF and ASICE document types  JSON structure on containers without signatures   What is not tested:   Correctness of the values in the report is not in scope on these tests   Specific test cases and input files can be found in:   Appendix 5 - ValidationReportJsonStructureVerification.java",
            "title": "Validation Report tests"
        },
        {
            "location": "/siva/test_plan/#testing-of-soap-api",
            "text": "Development  Will be covered when SOAP API is implemented",
            "title": "Testing of SOAP API"
        },
        {
            "location": "/siva/test_plan/#testing-of-ddoc-signature-validation",
            "text": "The goal of the DDOC signature validation testing is to check that the validation results given by JDigiDoc library are properly presented in validation report.  The testing of DDOC signatures consists of following main cases:   Containers with valid signature(s) are validated.  Containers with invalid signature(s) or no signature are validated  Containers sizes near maximum are validated  Containers with DDOC v1.0 - 1.3 are validated   Specific test cases and input files can be found in:   Appendix 5 - DdocValidationFail.java  Appendix 5 - DdocValidationPass.java  Appendix 5 - LargeFileTests.java   What is not tested:   Verification of different causes in container for invalid result is out of scope.    Development  Insert links to JDOC repos where these were tested.",
            "title": "Testing of DDOC signature validation"
        },
        {
            "location": "/siva/test_plan/#testing-of-bdoc-signature-validation",
            "text": "The goal of the BDOC signature validation testing is to check that the validation results given by DigiDoc4J library are properly presented in validation report.  The testing of BDOC signatures consists of following main cases:   Containers with valid signature(s) are validated (how many signatures are acceptable?)  Containers with invalid signature(s) or no signature are validated  Containers sizes near maximum are validated   Specific test cases and input files can be found in:   Appendix 5 - BdocValidationFail.java  Appendix 5 - BdocValidationPass.java  Appendix 5 - LargeFileTests.java   What is not tested:   Verification of different causes in container for invalid result is out of scope.    Development  Insert links where Digidoc4J repos where these were tested.",
            "title": "Testing of BDOC signature validation"
        },
        {
            "location": "/siva/test_plan/#testing-of-pdf-signature-validation",
            "text": "Portion of the validation rules for PDF documents are implemented in SiVa web apllication itself. Therefor different test area selection is used for PDF compared to other containers.  The testing of PDF signatures consists of following main cases:   Containers with invalid signature(s) (different reasons for failure) are validated  Containers with no signature are validated  Containers sizes near maximum are validated  Containers with different baseline profiles are validated  Containers with serial and parallel signatures are validated  Containers with different signature cryptocaphic algorithms are validated  Containers with OCSP values inside and outside bounds are validated   Specific test cases and input files can be found in:   Appendix 5 - PdfBaselineProfileTests.java  Appendix 5 - PdfSignatureCryptographicAlgorithmTests.java  Appendix 5 - PdfValidationFail.java  Appendix 5 - PdfValidationPass.java  Appendix 5 - SignatureRevocationValueTests.java  Appendix 5 - LargeFileTests.java",
            "title": "Testing of PDF signature validation"
        },
        {
            "location": "/siva/test_plan/#testing-of-x-road-asice-signature-validation",
            "text": "The goal of the ASICE signature validation testing is to check that the validation results given by X-Road signature validation utility are properly presented in validation report.  It is possible to validate ASICE containers both via SOAP and REST interface. The same test cases are used for both interfaces.  The testing of ASICE signatures consists of following main cases:   Containers with valid signature(s) are validated  Containers with invalid signature(s) and no signature are validated  Containers sizes near maximum are validated   Specific test cases and input files can be found in  Appendix 5 - Test Case Descriptions  What is not tested:   Verification of different causes in container for invalid result is out of scope.",
            "title": "Testing of X-Road ASICE signature validation"
        },
        {
            "location": "/siva/test_plan/#system-test-introduction",
            "text": "Development  Will be covered before System Test start   While Integration Tests were carried out automatically then System Testing will be done manually.  System testing is carried out using two access points:   Testing through SiVa Sample Application  Testing through X-Road Security Server   The goal is to test the whole validation process.",
            "title": "System Test introduction"
        },
        {
            "location": "/siva/test_plan/#additional-features",
            "text": "\"Offline\" mode of SiVa web apllication  Configuration of validation policy",
            "title": "Additional features"
        },
        {
            "location": "/siva/test_plan/#siva-sample-application-tests",
            "text": "In addition to testing the service as such, SiVa Sample Application itself is tested. The main cases are:   Cross browser usage (IE, Edge, Chrome, Firefox and Safari)  File upload (different sizes, suported and unsupported file types)  Displayment of Validation Report",
            "title": "SiVa Sample Application tests"
        },
        {
            "location": "/siva/test_plan/#performance-test-introduction",
            "text": "Performance testing will be carried out on following environments:   Local machine (processor: memory: )  Amazon cloud? (processor: memory: )  RIA test enviroment? (processor: memory: )   Jmeter v2.13 is used to carry out the testing.  The goal is to measure throughput-latency of the service with different file types and sizes. The performance testing is carried out on REST interface. SOAP interface is used only for one testrun for comparison between SOAP and REST interface. It is assessed that the interface itself does not have considerable impact on throughput or latency compared to the validation process.  Following cases will be covered on all supported file types (BDOC, DDOC, ASICE, PDF) with steps of 5, 10, 20, 30, 50 and 60 requests per second:   The service is loaded with valid under 1MB containers  The service is loaded with valid around 5MB containers  The service is loaded with valid near 10MB containers  The service is loaded with valid containers with many (how many?) signatures  The service is loaded with invalid signature under 1MB containers   In addition, following case will be covered to simulate the real life enviroment with steps of 5, 10, 20, 30, 50 and 60 requests per second:   The service is loaded with mixture of different file types and valid/invalid signatures   These tests run for a X? hour/minutes each. The results are presented as throughput-latency graphs for each run.",
            "title": "Performance Test introduction"
        },
        {
            "location": "/siva/appendix/none_functional_requirements/",
            "text": "",
            "title": "Appendix 1 - Non-Functional Requirements"
        },
        {
            "location": "/siva/appendix/functional_requirements/",
            "text": "",
            "title": "Appendix 2 - Functional Requirements"
        },
        {
            "location": "/siva/appendix/validation_policy/",
            "text": "Validation policy\n\n\n\n\nNote\n\n\nInformation will be added after analysis has been completed and agreed \nupon",
            "title": "Appendix 3 - Validation Policy"
        },
        {
            "location": "/siva/appendix/validation_policy/#validation-policy",
            "text": "Note  Information will be added after analysis has been completed and agreed \nupon",
            "title": "Validation policy"
        },
        {
            "location": "/siva/appendix/validation_constraints/",
            "text": "",
            "title": "Appendix 4 - Validation Constraint Configuration"
        },
        {
            "location": "/siva/appendix/test_cases/",
            "text": "List of Test Cases\n\n\nBdocValidationFail.java\n\n\nTestCaseID: Bdoc-ValidationFail-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc with single invalid signature\n\n\nExpected Result: The document should fail the validation\n\n\nFile: IB-3960_bdoc2.1_TSA_SignatureValue_altered.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc with multiple invalid signatures\n\n\nExpected Result: The document should fail the validation\n\n\nFile: BdocMultipleSignaturesInvalid.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc with multiple signatures both valid and invalid\n\n\nExpected Result: The document should fail the validation\n\n\nFile: BdocMultipleSignaturesMixedWithValidAndInvalid.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc with no signatures\n\n\nExpected Result: The document should fail the validation\n\n\nFile: BdocContainerNoSignature.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc with invalid mimetype in manifest\n\n\nExpected Result: document malformed error should be returned\n\n\nFile: 23147_weak-warning-sha1-invalid-mimetype-in-manifest.bdoc\n\n\n\n\nBdocValidationPass.java\n\n\nTestCaseID: Bdoc-ValidationPass-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc with single valid signature\n\n\nExpected Result: The document should pass the validation\n\n\nFile: Valid_ID_sig.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationPass-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc with multiple valid signatures\n\n\nExpected Result: The document should pass the validation\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationPass-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc with warning on signature\n\n\nExpected Result: The document should pass the validation but warning should be returned\n\n\nFile: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc\n\n\n\n\nDdocValidationFail.java\n\n\nTestCaseID: Ddoc-ValidationFail-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc with single invalid signature\n\n\nExpected Result: The document should fail the validation\n\n\nFile: test1-ddoc-revoked.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationFail-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc with multiple invalid signatures\n\n\nExpected Result: The document should fail the validation\n\n\nFile: multipleInvalidSignatures.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationFail-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc with multiple signatures both valid and invalid\n\n\nExpected Result: The document should fail the validation\n\n\nFile: multipleValidAndInvalidSignatures.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationFail-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc with no signatures\n\n\nExpected Result: The document should fail the validation\n\n\nFile: DdocContainerNoSignature.bdoc\n\n\n\n\nDdocValidationPass.java\n\n\nTestCaseID: Ddoc-ValidationPass-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc with single valid signature\n\n\nExpected Result: The document should pass the validation\n\n\nFile: 23734-ddoc13-13basn1.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationPass-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc v1.0 with multiple valid signatures\n\n\nExpected Result: The document should pass the validation\n\n\nFile: DigiDoc_1.0_Tartu_ja_Tallinna_koostooleping.ddoc\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Ddoc-ValidationPass-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc v1.1 with multiple valid signatures v1.1\n\n\nExpected Result: The document should pass the validation\n\n\nFile: igasugust1.1.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationPass-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc v1.2 with multiple valid signatures\n\n\nExpected Result: The document should pass the validation\n\n\nFile: igasugust1.2.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationPass-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc v1.3 with multiple valid signatures\n\n\nExpected Result: The document should pass the validation\n\n\nFile: igasugust1.3.ddoc\n\n\n\n\nDocumentFormatTests.java\n\n\nTestCaseID: DocumentFormat-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n(TBD)\n\n\nTitle: Validation of pdf document acceptance\n\n\nExpected Result: Pdf is accepted and correct signature validation is given\n\n\nFile: hellopades-pades-lt-sha256-sign.pdf\n\n\n\n\nTestCaseID: DocumentFormat-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n(TBD)\n\n\nTitle: Validation of bdoc document acceptance\n\n\nExpected Result: Bdoc is accepted and correct signature validation is given\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: DocumentFormat-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n(TBD)\n\n\nTitle: Validation of txt document rejection\n\n\nExpected Result: Txt document is rejected and proper error message is given\n\n\nFile: hellopades-pades-lt-sha256-sign.txt\n\n\n\n\nTestCaseID: DocumentFormat-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n(TBD)\n\n\nTitle: Validation of p7s document rejection\n\n\nExpected Result: P7s document is rejected and proper error message is given\n\n\nFile: hellocades.p7s\n\n\n\n\nTestCaseID: DocumentFormat-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n(TBD)\n\n\nTitle: Validation of zip document rejection\n\n\nExpected Result: Zip document is rejected and proper error message is given\n\n\nFile: 42.zip\n\n\n\n\nTestCaseID: DocumentFormat-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n(TBD)\n\n\nTitle: Validation of doc document rejection\n\n\nExpected Result: Doc document is rejected and proper error message is given\n\n\nFile: hellopades-pades-lt-sha256-sign.doc\n\n\n\n\nTestCaseID: DocumentFormat-7\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n(TBD)\n\n\nTitle: Validation of XML document rejection\n\n\nExpected Result: XML document is rejected and proper error message is given\n\n\nFile: XML.xml\n\n\n\n\nTestCaseID: DocumentFormat-8\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n(TBD)\n\n\nTitle: Validation of png document rejection\n\n\nExpected Result: Png document is rejected and proper error message is given\n\n\nFile: Picture.png\n\n\n\n\nLargeFileTests.java\n\n\nTestCaseID: PDF-LargeFiles-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Larger signed PDF files (PAdES Baseline LT).\n\n\nExpected Result: Bigger documents with valid signature should pass\n\n\nFile: scout_x4-manual-signed_lt_9mb.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-LargeFiles-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Larger signed PDF files (PAdES Baseline LT).\n\n\nExpected Result: Bigger documents with valid signature should pass\n\n\nFile: scout_x4-manual-signed_lta_9mb.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-LargeFiles-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Larger signed PDF files (PAdES Baseline LT).\n\n\nExpected Result: Bigger documents with valid signature should pass\n\n\nFile: singlesignature_lt_1-2mb.pdf\n\n\n\n\nTestCaseID: PDF-LargeFiles-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Larger signed PDF files (PAdES Baseline LT).\n\n\nExpected Result: Bigger documents with valid signature should pass\n\n\nFile: digidocservice-signed-lta-1-2mb.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-LargeFiles-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Larger signed PDF files (PAdES Baseline LT).\n\n\nExpected Result: Bigger documents with valid signature should pass\n\n\nFile: singlesignature_lt_3-8mb.pdf\n\n\n\n\nTestCaseID: PDF-LargeFiles-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Larger signed PDF files (PAdES Baseline LT).\n\n\nExpected Result: Bigger documents with valid signature should pass\n\n\nFile: egovenrment-benchmark-lta-3-8mb.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nPdfBaselineProfileTests.java\n\n\nTestCaseID: PDF-BaselineProfile-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF has PAdES-B profile signature\n\n\nExpected Result: Document validation should fail\n\n\nFile: hellopades-pades-b-sha256-auth.pdf\n\n\n\n\nTestCaseID: PDF-BaselineProfile-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF has PAdES-T profile signature\n\n\nExpected Result: Document validation should fail\n\n\nFile: some_file.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-BaselineProfile-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF has PAdES-LT profile signature\n\n\nExpected Result: Document validation should pass\n\n\nFile: hellopades-pades-lt-sha256-sign.pdf\n\n\n\n\nTestCaseID: PDF-BaselineProfile-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF has PAdES-LTA profile signature\n\n\nExpected Result: Document validation should pass\n\n\nFile: some_file.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-BaselineProfile-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF has PAdES-LT and B profile signature\n\n\nExpected Result: Document validation should fail\n\n\nFile: hellopades-lt-b.pdf\n\n\n\n\nTestCaseID: PDF-BaselineProfile-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: PDF document message digest attribute value does not match calculate value\n\n\nExpected Result: Document validation should fail\n\n\nFile: hellopades-lt1-lt2-wrongDigestValue.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-BaselineProfile-7\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: PDF file with a serial signature\n\n\nExpected Result: Document signed with multiple signers with serial signatures should pass\n\n\nFile: hellopades-lt1-lt2-Serial.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-BaselineProfile-8\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: PDF document signed with multiple signers parallel signature\n\n\nExpected Result: Document with parallel signatures should pass\n\n\nFile: hellopades-lt1-lt2-parallel3.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-BaselineProfile-9\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: PDF document signed with multiple signers parallel signature without Sscd\n\n\nExpected Result: Document with no qualified and without SSCD should fail\n\n\nFile: hellopades-lt1-lt2-parallel3.pdf\n\n\n\n\nPdfSignatureCryptographicAlgorithmTests.java\n\n\nTestCaseID: PDF-SigCryptoAlg-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: SHA512 algorithms (PAdES Baseline LT)\n\n\nExpected Result: Document signed with SHA512 algorithm should pass\n\n\nFile: hellopades-lt-sha512.pdf\n\n\n\n\nTestCaseID: PDF-SigCryptoAlg-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: SHA1 algorithms (PAdES Baseline LT)\n\n\nExpected Result: Document signed with SHA1 algorithm should pass\n\n\nFile: hellopades-lt-sha1.pdf\n\n\n\n\nTestCaseID: PDF-SigCryptoAlg-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: ECDSA algorithms (PAdES Baseline LT)\n\n\nExpected Result: Document signed with ECDSA algorithm should pass\n\n\nFile: hellopades-ecdsa.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-SigCryptoAlg-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: ECDSA224 algorithms (PAdES Baseline LT)\n\n\nExpected Result: Document signed with ECDSA224 algorithm should pass\n\n\nFile: hellopades-lt-sha256-ec224.pdf\n\n\n\n\nTestCaseID: PDF-SigCryptoAlg-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: ECDSA256 algorithms (PAdES Baseline LT)\n\n\nExpected Result: Document signed with ECDSA256 algorithm should pass\n\n\nFile: hellopades-lt-sha256-ec256.pdf\n\n\n\n\nTestCaseID: PDF-SigCryptoAlg-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: RSA1024 algorithms (PAdES Baseline LT)\n\n\nExpected Result: Document signed with RSA1024 algorithm should pass\n\n\nFile: hellopades-lt-sha256-rsa1024.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-SigCryptoAlg-7\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: RSA1023 algorithms (PAdES Baseline LT)\n\n\nExpected Result: Document signed with RSA1023 algorithm should pass\n\n\nFile: hellopades-lt-sha256-rsa1023.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-SigCryptoAlg-8\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: RSA2047 algorithms (PAdES Baseline LT)\n\n\nExpected Result: Document signed with RSA2047 algorithm should pass\n\n\nFile: hellopades-lt-sha256-rsa2047.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-SigCryptoAlg-9\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: RSA2048 algorithms (PAdES Baseline LT)\n\n\nExpected Result: Document signed with RSA2048 algorithm should pass\n\n\nFile: PdfValidSingleSignature\n\n\n\n\nPdfValidationFail.java\n\n\nTestCaseID: PDF-ValidationFail-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF-file has been signed with certificate that is expired before signing (PAdES Baseline LT)\n\n\nExpected Result: Document signed with certificate that expired before signing should fail.\n\n\nFile: hellopades-lt-rsa1024-sha1-expired.pdf\n\n\n\n\nTestCaseID: PDF-ValidationFail-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF-file has been signed with expired certificate (PAdES Baseline LT)\n\n\nExpected Result: Document signed with certificate that is expired should fail.\n\n\nFile: IB-3691_bdoc21-TS-old-cert.bdoc\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-ValidationFail-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF-file has been signed with revoked certificate (PAdES Baseline LT)\n\n\nExpected Result: Document signed with certificate that is revoked should fail.\n\n\nFile: hellopades-lt-sha256-revoked.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-ValidationFail-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF-file has been signed with certificate that missing signed attribute (PAdES Baseline LT)\n\n\nExpected Result: PDF-file validation should fail\n\n\nFile: missing_signing_certificate_attribute.pdf\n\n\n\n\nTestCaseID: PDF-ValidationFail-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF-file has been signed with certificate which has no non repudiation key usage attribute (PAdES Baseline LT)\n\n\nExpected Result: The PDF-file validation should fail with error.\n\n\nFile: hellopades-pades-lt-sha256-auth.pdf\n\n\n\n\nTestCaseID: PDF-ValidationFail-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: hellopadess been signed with an expired certificate, where signing time is within the original validity\n\n\nExpected Result: Document signed with expired certificate should fail\n\n\nFile: hellopades-lt-sha256-rsa2048-expired.pdf\n\n\n\n\nTestCaseID: PDF-ValidationFail-7\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: hellopadess been signed with an expired certificate, where signing time is within the original validity\n\n\nExpected Result: Document signed with expired certificate should fail\n\n\nFile: hellopades-lt-sha256-rsa1024-expired2.pdf\n\n\n\n\nTestCaseID: PDF-ValidationFail-8\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: hellopadess been signed with an expired certificate, where signing time is within the original validity\n\n\nExpected Result: Document signed with expired certificate should fail\n\n\nFile: hellopades-lt-sha1-rsa1024-expired2.pdf\n\n\n\n\nPdfValidationPass.java\n\n\nTestCaseID: PDF-ValidationPass-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF-file has been signed with certificate that is expired after signing (PAdES Baseline LT)\n\n\nExpected Result: Document signed with certificate that expired after signing should pass.\n\n\nFile: hellopades-lt-sha256-rsa1024-not-expired.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-ValidationPass-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF-file has been signed with certificate that will expire in 7 days after signing (PAdES Baseline LT)\n\n\nExpected Result: Document signed with certificate that expired after signing should pass.\n\n\nFile: hellopades-lt-sha256-rsa2048-7d.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-ValidationPass-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Certificate contents are include in response (PAdES Baseline LT)\n\n\nExpected Result: The PDF-file validation should pass\n\n\nFile: hellopades-lt-sha256-ocsp-15min1s.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-ValidationPass-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Pdf with single valid signature\n\n\nExpected Result: Document should pass.\n\n\nFile: PdfValidSingleSignature.pdf\n\n\n\n\nSignatureRevocationValueTests.java\n\n\nTestCaseID: PDF-SigRevocVal-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF-file has PAdES-LT profile signature and an OCSP confirmation that is more than 15 minutes later than the signatures Time Stamp.\n\n\nExpected Result: Document with ocsp over 15 min delay should pass but warn\n\n\nFile: hellopades-lt-sha256-ocsp-15min1s.pdf\n\n\n\n\nTestCaseID: PDF-SigRevocVal-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF-file has PAdES-LT profile signature and an OCSP confirmation that is more than 15 minutes later than the signatures Time Stamp.\n\n\nExpected Result: Document with ocsp over 15 min delay should pass but warn\n\n\nFile: hellopades-lt-sha256-ocsp-15min1s.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-SigRevocVal-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF-file has PAdES-LT profile signature and an OCSP confirmation more than 24 hours later than the signatures Time Stamp.\n\n\nExpected Result: Document with over 24h delay should fail\n\n\nFile: hellopades-lt-sha256-ocsp-28h.pdf\n\n\n\n\nTestCaseID: PDF-SigRevocVal-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF-file has PAdES-LT profile signature and an OCSP confirmation more than 24 hours later than the signatures Time Stamp.\n\n\nExpected Result: Document with over 24h delay should fail\n\n\nFile: hellopades-lt-sha256-ocsp-28h.pdf\n\n\n\n\nTestCaseID: PDF-SigRevocVal-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF-file has been signed with PAdES Baseline LTA profile signature, the signature contains CRL.\n\n\nExpected Result: Document with no ocsp or crl in signature should fail\n\n\nFile: hellopades-lta-no-ocsp.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-SigRevocVal-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: PDF signature has OCSP confirmation before Time Stamp\n\n\nExpected Result: Document signed with ocsp time value before best signature time should fail\n\n\nFile: hellopades-lt-sha256-rsa2048-ocsp-before-ts.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nValidationReportJsonStructureVerification.java\n\n\nTestCaseID: Bdoc-ValidationReport-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: JSON structure has all elements (Bdoc valid single signature)\n\n\nExpected Result: All required elements are present according to BdocDocSimpleReportSchema.json\n\n\nFile: Valid_ID_sig.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationReport-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: JSON structure has all elements (Bdoc valid multiple signatures)\n\n\nExpected Result: All required elements are present according to SimpleReportSchema.json\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Bdoc-ValidationReport-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: JSON structure has all elements (Bdoc invalid single signature)\n\n\nExpected Result: All required elements are present according to BdocDocSimpleReportSchema.json\n\n\nFile: IB-3960_bdoc2.1_TSA_SignatureValue_altered.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationReport-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: JSON structure has all elements (Bdoc indeterminate status)\n\n\nExpected Result: All required elements are present according to BdocDocSimpleReportSchema.json\n\n\nFile: test1-bdoc-unknown.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationReport-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Check for optional subindication and error elements\n\n\nExpected Result: Error and subindication elements are present\n\n\nFile: IB-3960_bdoc2.1_TSA_SignatureValue_altered.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationReport-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Check for optional warning element\n\n\nExpected Result: Warning element is present\n\n\nFile: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationReport-7\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle:  Bdoc report with no signatures\n\n\nExpected Result: Report is returned with required elements\n\n\nFile:BdocContainerNoSignature.bdoc\n\n\n\n\nTestCaseID: Pdf-ValidationReport-8\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: JSON structure has all elements (Pdf valid single signature)\n\n\nExpected Result: All required elements are present according to SimpleReportSchema.json\n\n\nFile: hellopades-lt-sha256-ec256.pdf\n\n\n\n\nTestCaseID: Pdf-ValidationReport-9\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: JSON structure has all elements (Pdf valid Multiple signatures)\n\n\nExpected Result: All required elements are present according to SimpleReportSchema.json\n\n\nFile:\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Pdf-ValidationReport-10\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: JSON structure has all elements (Pdf invalid signature)\n\n\nExpected Result: All required elements are present according to SimpleReportSchema.json\n\n\nFile: hellopades-lt-b.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Pdf-ValidationReport-11\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: JSON structure has all elements (Pdf indeterminate status)\n\n\nExpected Result: All required elements are present according to SimpleReportSchema.json\n\n\nFile: hellopades-lt-rsa1024-sha1-expired.pdf\n\n\n\n\nTestCaseID: Pdf-ValidationReport-12\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle:  Pdf report with no signatures\n\n\nExpected Result: Report is returned with required elements\n\n\nFile: PdfNoSignature.pdf\n\n\n\n\nTestCaseID: Ddoc-ValidationReport-13\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: JSON structure has all elements (ddoc valid single signature)\n\n\nExpected Result: All required elements are present according to SimpleReportSchema.json\n\n\nFile: 18912.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationReport-14\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: JSON structure has all elements (ddoc valid Multiple signatures)\n\n\nExpected Result: All required elements are present according to SimpleReportSchema.json\n\n\nFile: igasugust1.1.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationReport-15\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: JSON structure has all elements (ddoc invalid signature)\n\n\nExpected Result: All required elements are present according to SimpleReportSchema.json\n\n\nFile: test1-ddoc-revoked.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationReport-16\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: JSON structure has all elements (ddoc indeterminate status)\n\n\nExpected Result: All required elements are present according to SimpleReportSchema.json\n\n\nFile: test1-ddoc-unknown.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationReport-17\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Check for optional subindication and error elements\n\n\nExpected Result: Error and subindication elements are present\n\n\nFile: test1-ddoc-unknown.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationReport-18\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Check for optional warning element\n\n\nExpected Result: Warning element is present\n\n\nFile:\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Ddoc-ValidationReport-19\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle:  Ddoc report with no signatures\n\n\nExpected Result: Report is returned with required elements\n\n\nFile: DdocContainerNoSignature.ddoc\n\n\n\n\nValidationReportValueVerification.java\n\n\nTestCaseID: Bdoc-ValidationReportValue-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report XAdES_BASELINE_LT_TM, QES, FullSignatureScope\n\n\nExpected Result: All required elements are present and meet the expected values.\n\n\nFile: Valid_ID_sig.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationReportValue-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report XAdES_BASELINE_LT, QES, FullSignatureScope\n\n\nExpected Result: All required elements are present and meet the expected values.\n\n\nFile: 23635_bdoc_ts_OCSP_random_nonce.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationReportValue-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report XAdES_BASELINE_LT, AdES, FullSignatureScope\n\n\nExpected Result: All required elements are present and meet the expected values.\n\n\nFile: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationReportValue-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report XAdES_BASELINE_LT_TM, AdESqc, FullSignatureScope\n\n\nExpected Result: All required elements are present and meet the expected values.\n\n\nFile: ICT_MoU_FI-EE_10dec2013OneSignature.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationReportValue-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report XAdES_BASELINE_LTA, QES, FullSignatureScope\n\n\nExpected Result: All required elements are present and meet the expected values.\n\n\nFile: EE_SER-AEX-B-LTA-V-24.pdf\n\n\n\n\nTestCaseID: Ddoc-ValidationReportValue-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report, xml v1.0, checks for missing info\n\n\nExpected Result: All required elements are present and meet the expected values and other values are empty as expected.\n\n\nFile: ICT_MoU_FI-EE_10dec2013OneSignature.bdoc\n\n\n\n\nTestCaseID: Ddoc-ValidationReportValue-7\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report, xml v1.1, checks for missing info\n\n\nExpected Result: All required elements are present and meet the expected values and other values are empty as expected.\n\n\nFile: Igasugust1.1.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationReportValue-8\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report, xml v1.2, checks for missing info\n\n\nExpected Result: All required elements are present and meet the expected values and other values are empty as expected.\n\n\nFile: Igasugust1.2.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationReportValue-9\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report, xml v1.3, checks for missing info\n\n\nExpected Result: All required elements are present and meet the expected values and other values are empty as expected.\n\n\nFile: Igasugust1.3.ddoc\n\n\n\n\nValidationRequestTests.java\n\n\nTestCaseID: ValidationRequest-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Input random base64 string as document with bdoc document type\n\n\nExpected Result: Error is returned stating problem in document\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: ValidationRequest-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Input random base64 string as document with pdf document type\n\n\nExpected Result: Error is returned stating problem in document\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: ValidationRequest-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Input random base64 string as document with ddoc document type\n\n\nExpected Result: Error is returned stating problem in document\n\n\nFile:\n\n\n\n\nTestCaseID: ValidationRequest-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Input a request with empty values\n\n\nExpected Result: Errors are returned stating the missing values\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: ValidationRequest-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Request with not base64 string as document\n\n\nExpected Result: Error is returned stating encoding problem\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: ValidationRequest-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of wrong report type as input\n\n\nExpected Result: Error is returned stating wrong report type\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: ValidationRequest-7\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of valid (but not simple) report type as input\n\n\nExpected Result: Correct report is returned (currently simple report is returned in all cases)\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: ValidationRequest-8\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of wrong document type as input\n\n\nExpected Result: Correct error code is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: ValidationRequest-9\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (bdoc and pdf)\n\n\nExpected Result: Error is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: ValidationRequest-10\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (asice and bdoc)\n\n\nExpected Result: Error is returned\n\n\nFile: TS-11_23634_TS_2_timestamps.asice\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: ValidationRequest-11\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of case insensitivity in document type\n\n\nExpected Result: Report is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: ValidationRequest-12\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of filename value (filename do not match the actual file)\n\n\nExpected Result: The same filename is returned as sent in the request\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: ValidationRequest-13\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Request has invalid character in filename\n\n\nExpected Result: Correct error code is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: ValidationRequest-14\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Request has invalid key on document position\n\n\nExpected Result: Error is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: ValidationRequest-15\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Request has wrong key on report type position\n\n\nExpected Result: Error is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: ValidationRequest-16\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Request has XML as document type (special case, XML is similar to ddoc and was a accepted document type in earlier versions)\n\n\nExpected Result: Error is given\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: ValidationRequest-17\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Request has long (38784 characters) in filename field\n\n\nExpected Result: Report is returned with the same filename\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: ValidationRequest-18\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Totally empty request body is sent\n\n\nExpected Result: Error is given\n\n\nFile: None\n\n\n\n\nTestCaseID: ValidationRequest-19\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Request with more parameters than expected is sent\n\n\nExpected Result: Error is given or extra parameters are ignored?\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: ValidationRequest-20\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Request with special chars is sent\n\n\nExpected Result: Validation report is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: ValidationRequest-21\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (ddoc and bdoc)\n\n\nExpected Result: Error is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: ValidationRequest-22\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (ddoc and pdf)\n\n\nExpected Result: Error is returned\n\n\nFile: PdfValidSingleSignature.pdf\n\n\n\n\nTestCaseID: ValidationRequest-23\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (bdoc and pdf)\n\n\nExpected Result: Error is returned\n\n\nFile: PdfValidSingleSignature.pdf\n\n\n\n\nTestCaseID: ValidationRequest-24\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (bdoc and ddoc)\n\n\nExpected Result: Error is returned\n\n\nFile: igasugust1.3.ddoc\n\n\n\n\nTestCaseID: ValidationRequest-25\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (pdf and ddoc)\n\n\nExpected Result: Error is returned\n\n\nFile: igasugust1.3.ddoc\n\n\n\n\nTestCaseID: ValidationRequest-26\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (pdf and bdoc)\n\n\nExpected Result: Error is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc",
            "title": "Appendix 5 - Test Case Descriptions"
        },
        {
            "location": "/siva/appendix/test_cases/#list-of-test-cases",
            "text": "",
            "title": "List of Test Cases"
        },
        {
            "location": "/siva/appendix/test_cases/#bdocvalidationfailjava",
            "text": "TestCaseID: Bdoc-ValidationFail-1   TestType: Automated  RequirementID:   Title: Bdoc with single invalid signature  Expected Result: The document should fail the validation  File: IB-3960_bdoc2.1_TSA_SignatureValue_altered.bdoc   TestCaseID: Bdoc-ValidationFail-2   TestType: Automated  RequirementID:   Title: Bdoc with multiple invalid signatures  Expected Result: The document should fail the validation  File: BdocMultipleSignaturesInvalid.bdoc   TestCaseID: Bdoc-ValidationFail-3   TestType: Automated  RequirementID:   Title: Bdoc with multiple signatures both valid and invalid  Expected Result: The document should fail the validation  File: BdocMultipleSignaturesMixedWithValidAndInvalid.bdoc   TestCaseID: Bdoc-ValidationFail-4   TestType: Automated  RequirementID:   Title: Bdoc with no signatures  Expected Result: The document should fail the validation  File: BdocContainerNoSignature.bdoc   TestCaseID: Bdoc-ValidationFail-5   TestType: Automated  RequirementID:   Title: Bdoc with invalid mimetype in manifest  Expected Result: document malformed error should be returned  File: 23147_weak-warning-sha1-invalid-mimetype-in-manifest.bdoc",
            "title": "BdocValidationFail.java"
        },
        {
            "location": "/siva/appendix/test_cases/#bdocvalidationpassjava",
            "text": "TestCaseID: Bdoc-ValidationPass-1   TestType: Automated  RequirementID:   Title: Bdoc with single valid signature  Expected Result: The document should pass the validation  File: Valid_ID_sig.bdoc   TestCaseID: Bdoc-ValidationPass-2   TestType: Automated  RequirementID:   Title: Bdoc with multiple valid signatures  Expected Result: The document should pass the validation  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Bdoc-ValidationPass-3   TestType: Automated  RequirementID:   Title: Bdoc with warning on signature  Expected Result: The document should pass the validation but warning should be returned  File: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc",
            "title": "BdocValidationPass.java"
        },
        {
            "location": "/siva/appendix/test_cases/#ddocvalidationfailjava",
            "text": "TestCaseID: Ddoc-ValidationFail-1   TestType: Automated  RequirementID:   Title: Ddoc with single invalid signature  Expected Result: The document should fail the validation  File: test1-ddoc-revoked.ddoc   TestCaseID: Ddoc-ValidationFail-2   TestType: Automated  RequirementID:   Title: Ddoc with multiple invalid signatures  Expected Result: The document should fail the validation  File: multipleInvalidSignatures.ddoc   TestCaseID: Ddoc-ValidationFail-3   TestType: Automated  RequirementID:   Title: Ddoc with multiple signatures both valid and invalid  Expected Result: The document should fail the validation  File: multipleValidAndInvalidSignatures.ddoc   TestCaseID: Ddoc-ValidationFail-4   TestType: Automated  RequirementID:   Title: Ddoc with no signatures  Expected Result: The document should fail the validation  File: DdocContainerNoSignature.bdoc",
            "title": "DdocValidationFail.java"
        },
        {
            "location": "/siva/appendix/test_cases/#ddocvalidationpassjava",
            "text": "TestCaseID: Ddoc-ValidationPass-1   TestType: Automated  RequirementID:   Title: Ddoc with single valid signature  Expected Result: The document should pass the validation  File: 23734-ddoc13-13basn1.ddoc   TestCaseID: Ddoc-ValidationPass-2   TestType: Automated  RequirementID:   Title: Ddoc v1.0 with multiple valid signatures  Expected Result: The document should pass the validation  File: DigiDoc_1.0_Tartu_ja_Tallinna_koostooleping.ddoc   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Ddoc-ValidationPass-3   TestType: Automated  RequirementID:   Title: Ddoc v1.1 with multiple valid signatures v1.1  Expected Result: The document should pass the validation  File: igasugust1.1.ddoc   TestCaseID: Ddoc-ValidationPass-4   TestType: Automated  RequirementID:   Title: Ddoc v1.2 with multiple valid signatures  Expected Result: The document should pass the validation  File: igasugust1.2.ddoc   TestCaseID: Ddoc-ValidationPass-5   TestType: Automated  RequirementID:   Title: Ddoc v1.3 with multiple valid signatures  Expected Result: The document should pass the validation  File: igasugust1.3.ddoc",
            "title": "DdocValidationPass.java"
        },
        {
            "location": "/siva/appendix/test_cases/#documentformattestsjava",
            "text": "TestCaseID: DocumentFormat-1   TestType: Automated  RequirementID:  (TBD)  Title: Validation of pdf document acceptance  Expected Result: Pdf is accepted and correct signature validation is given  File: hellopades-pades-lt-sha256-sign.pdf   TestCaseID: DocumentFormat-2   TestType: Automated  RequirementID:  (TBD)  Title: Validation of bdoc document acceptance  Expected Result: Bdoc is accepted and correct signature validation is given  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: DocumentFormat-3   TestType: Automated  RequirementID:  (TBD)  Title: Validation of txt document rejection  Expected Result: Txt document is rejected and proper error message is given  File: hellopades-pades-lt-sha256-sign.txt   TestCaseID: DocumentFormat-4   TestType: Automated  RequirementID:  (TBD)  Title: Validation of p7s document rejection  Expected Result: P7s document is rejected and proper error message is given  File: hellocades.p7s   TestCaseID: DocumentFormat-5   TestType: Automated  RequirementID:  (TBD)  Title: Validation of zip document rejection  Expected Result: Zip document is rejected and proper error message is given  File: 42.zip   TestCaseID: DocumentFormat-6   TestType: Automated  RequirementID:  (TBD)  Title: Validation of doc document rejection  Expected Result: Doc document is rejected and proper error message is given  File: hellopades-pades-lt-sha256-sign.doc   TestCaseID: DocumentFormat-7   TestType: Automated  RequirementID:  (TBD)  Title: Validation of XML document rejection  Expected Result: XML document is rejected and proper error message is given  File: XML.xml   TestCaseID: DocumentFormat-8   TestType: Automated  RequirementID:  (TBD)  Title: Validation of png document rejection  Expected Result: Png document is rejected and proper error message is given  File: Picture.png",
            "title": "DocumentFormatTests.java"
        },
        {
            "location": "/siva/appendix/test_cases/#largefiletestsjava",
            "text": "TestCaseID: PDF-LargeFiles-1   TestType: Automated  RequirementID:   Title: Larger signed PDF files (PAdES Baseline LT).  Expected Result: Bigger documents with valid signature should pass  File: scout_x4-manual-signed_lt_9mb.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-LargeFiles-2   TestType: Automated  RequirementID:   Title: Larger signed PDF files (PAdES Baseline LT).  Expected Result: Bigger documents with valid signature should pass  File: scout_x4-manual-signed_lta_9mb.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-LargeFiles-3   TestType: Automated  RequirementID:   Title: Larger signed PDF files (PAdES Baseline LT).  Expected Result: Bigger documents with valid signature should pass  File: singlesignature_lt_1-2mb.pdf   TestCaseID: PDF-LargeFiles-4   TestType: Automated  RequirementID:   Title: Larger signed PDF files (PAdES Baseline LT).  Expected Result: Bigger documents with valid signature should pass  File: digidocservice-signed-lta-1-2mb.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-LargeFiles-5   TestType: Automated  RequirementID:   Title: Larger signed PDF files (PAdES Baseline LT).  Expected Result: Bigger documents with valid signature should pass  File: singlesignature_lt_3-8mb.pdf   TestCaseID: PDF-LargeFiles-6   TestType: Automated  RequirementID:   Title: Larger signed PDF files (PAdES Baseline LT).  Expected Result: Bigger documents with valid signature should pass  File: egovenrment-benchmark-lta-3-8mb.pdf   Attention! This test is disabled, check  GitHub  for specifics",
            "title": "LargeFileTests.java"
        },
        {
            "location": "/siva/appendix/test_cases/#pdfbaselineprofiletestsjava",
            "text": "TestCaseID: PDF-BaselineProfile-1   TestType: Automated  RequirementID:   Title: The PDF has PAdES-B profile signature  Expected Result: Document validation should fail  File: hellopades-pades-b-sha256-auth.pdf   TestCaseID: PDF-BaselineProfile-2   TestType: Automated  RequirementID:   Title: The PDF has PAdES-T profile signature  Expected Result: Document validation should fail  File: some_file.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-BaselineProfile-3   TestType: Automated  RequirementID:   Title: The PDF has PAdES-LT profile signature  Expected Result: Document validation should pass  File: hellopades-pades-lt-sha256-sign.pdf   TestCaseID: PDF-BaselineProfile-4   TestType: Automated  RequirementID:   Title: The PDF has PAdES-LTA profile signature  Expected Result: Document validation should pass  File: some_file.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-BaselineProfile-5   TestType: Automated  RequirementID:   Title: The PDF has PAdES-LT and B profile signature  Expected Result: Document validation should fail  File: hellopades-lt-b.pdf   TestCaseID: PDF-BaselineProfile-6   TestType: Automated  RequirementID:   Title: PDF document message digest attribute value does not match calculate value  Expected Result: Document validation should fail  File: hellopades-lt1-lt2-wrongDigestValue.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-BaselineProfile-7   TestType: Automated  RequirementID:   Title: PDF file with a serial signature  Expected Result: Document signed with multiple signers with serial signatures should pass  File: hellopades-lt1-lt2-Serial.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-BaselineProfile-8   TestType: Automated  RequirementID:   Title: PDF document signed with multiple signers parallel signature  Expected Result: Document with parallel signatures should pass  File: hellopades-lt1-lt2-parallel3.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-BaselineProfile-9   TestType: Automated  RequirementID:   Title: PDF document signed with multiple signers parallel signature without Sscd  Expected Result: Document with no qualified and without SSCD should fail  File: hellopades-lt1-lt2-parallel3.pdf",
            "title": "PdfBaselineProfileTests.java"
        },
        {
            "location": "/siva/appendix/test_cases/#pdfsignaturecryptographicalgorithmtestsjava",
            "text": "TestCaseID: PDF-SigCryptoAlg-1   TestType: Automated  RequirementID:   Title: SHA512 algorithms (PAdES Baseline LT)  Expected Result: Document signed with SHA512 algorithm should pass  File: hellopades-lt-sha512.pdf   TestCaseID: PDF-SigCryptoAlg-2   TestType: Automated  RequirementID:   Title: SHA1 algorithms (PAdES Baseline LT)  Expected Result: Document signed with SHA1 algorithm should pass  File: hellopades-lt-sha1.pdf   TestCaseID: PDF-SigCryptoAlg-3   TestType: Automated  RequirementID:   Title: ECDSA algorithms (PAdES Baseline LT)  Expected Result: Document signed with ECDSA algorithm should pass  File: hellopades-ecdsa.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-SigCryptoAlg-4   TestType: Automated  RequirementID:   Title: ECDSA224 algorithms (PAdES Baseline LT)  Expected Result: Document signed with ECDSA224 algorithm should pass  File: hellopades-lt-sha256-ec224.pdf   TestCaseID: PDF-SigCryptoAlg-5   TestType: Automated  RequirementID:   Title: ECDSA256 algorithms (PAdES Baseline LT)  Expected Result: Document signed with ECDSA256 algorithm should pass  File: hellopades-lt-sha256-ec256.pdf   TestCaseID: PDF-SigCryptoAlg-6   TestType: Automated  RequirementID:   Title: RSA1024 algorithms (PAdES Baseline LT)  Expected Result: Document signed with RSA1024 algorithm should pass  File: hellopades-lt-sha256-rsa1024.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-SigCryptoAlg-7   TestType: Automated  RequirementID:   Title: RSA1023 algorithms (PAdES Baseline LT)  Expected Result: Document signed with RSA1023 algorithm should pass  File: hellopades-lt-sha256-rsa1023.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-SigCryptoAlg-8   TestType: Automated  RequirementID:   Title: RSA2047 algorithms (PAdES Baseline LT)  Expected Result: Document signed with RSA2047 algorithm should pass  File: hellopades-lt-sha256-rsa2047.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-SigCryptoAlg-9   TestType: Automated  RequirementID:   Title: RSA2048 algorithms (PAdES Baseline LT)  Expected Result: Document signed with RSA2048 algorithm should pass  File: PdfValidSingleSignature",
            "title": "PdfSignatureCryptographicAlgorithmTests.java"
        },
        {
            "location": "/siva/appendix/test_cases/#pdfvalidationfailjava",
            "text": "TestCaseID: PDF-ValidationFail-1   TestType: Automated  RequirementID:   Title: The PDF-file has been signed with certificate that is expired before signing (PAdES Baseline LT)  Expected Result: Document signed with certificate that expired before signing should fail.  File: hellopades-lt-rsa1024-sha1-expired.pdf   TestCaseID: PDF-ValidationFail-2   TestType: Automated  RequirementID:   Title: The PDF-file has been signed with expired certificate (PAdES Baseline LT)  Expected Result: Document signed with certificate that is expired should fail.  File: IB-3691_bdoc21-TS-old-cert.bdoc   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-ValidationFail-3   TestType: Automated  RequirementID:   Title: The PDF-file has been signed with revoked certificate (PAdES Baseline LT)  Expected Result: Document signed with certificate that is revoked should fail.  File: hellopades-lt-sha256-revoked.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-ValidationFail-4   TestType: Automated  RequirementID:   Title: The PDF-file has been signed with certificate that missing signed attribute (PAdES Baseline LT)  Expected Result: PDF-file validation should fail  File: missing_signing_certificate_attribute.pdf   TestCaseID: PDF-ValidationFail-5   TestType: Automated  RequirementID:   Title: The PDF-file has been signed with certificate which has no non repudiation key usage attribute (PAdES Baseline LT)  Expected Result: The PDF-file validation should fail with error.  File: hellopades-pades-lt-sha256-auth.pdf   TestCaseID: PDF-ValidationFail-6   TestType: Automated  RequirementID:   Title: hellopadess been signed with an expired certificate, where signing time is within the original validity  Expected Result: Document signed with expired certificate should fail  File: hellopades-lt-sha256-rsa2048-expired.pdf   TestCaseID: PDF-ValidationFail-7   TestType: Automated  RequirementID:   Title: hellopadess been signed with an expired certificate, where signing time is within the original validity  Expected Result: Document signed with expired certificate should fail  File: hellopades-lt-sha256-rsa1024-expired2.pdf   TestCaseID: PDF-ValidationFail-8   TestType: Automated  RequirementID:   Title: hellopadess been signed with an expired certificate, where signing time is within the original validity  Expected Result: Document signed with expired certificate should fail  File: hellopades-lt-sha1-rsa1024-expired2.pdf",
            "title": "PdfValidationFail.java"
        },
        {
            "location": "/siva/appendix/test_cases/#pdfvalidationpassjava",
            "text": "TestCaseID: PDF-ValidationPass-1   TestType: Automated  RequirementID:   Title: The PDF-file has been signed with certificate that is expired after signing (PAdES Baseline LT)  Expected Result: Document signed with certificate that expired after signing should pass.  File: hellopades-lt-sha256-rsa1024-not-expired.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-ValidationPass-2   TestType: Automated  RequirementID:   Title: The PDF-file has been signed with certificate that will expire in 7 days after signing (PAdES Baseline LT)  Expected Result: Document signed with certificate that expired after signing should pass.  File: hellopades-lt-sha256-rsa2048-7d.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-ValidationPass-3   TestType: Automated  RequirementID:   Title: Certificate contents are include in response (PAdES Baseline LT)  Expected Result: The PDF-file validation should pass  File: hellopades-lt-sha256-ocsp-15min1s.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-ValidationPass-4   TestType: Automated  RequirementID:   Title: Pdf with single valid signature  Expected Result: Document should pass.  File: PdfValidSingleSignature.pdf",
            "title": "PdfValidationPass.java"
        },
        {
            "location": "/siva/appendix/test_cases/#signaturerevocationvaluetestsjava",
            "text": "TestCaseID: PDF-SigRevocVal-1   TestType: Automated  RequirementID:   Title: The PDF-file has PAdES-LT profile signature and an OCSP confirmation that is more than 15 minutes later than the signatures Time Stamp.  Expected Result: Document with ocsp over 15 min delay should pass but warn  File: hellopades-lt-sha256-ocsp-15min1s.pdf   TestCaseID: PDF-SigRevocVal-2   TestType: Automated  RequirementID:   Title: The PDF-file has PAdES-LT profile signature and an OCSP confirmation that is more than 15 minutes later than the signatures Time Stamp.  Expected Result: Document with ocsp over 15 min delay should pass but warn  File: hellopades-lt-sha256-ocsp-15min1s.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-SigRevocVal-3   TestType: Automated  RequirementID:   Title: The PDF-file has PAdES-LT profile signature and an OCSP confirmation more than 24 hours later than the signatures Time Stamp.  Expected Result: Document with over 24h delay should fail  File: hellopades-lt-sha256-ocsp-28h.pdf   TestCaseID: PDF-SigRevocVal-4   TestType: Automated  RequirementID:   Title: The PDF-file has PAdES-LT profile signature and an OCSP confirmation more than 24 hours later than the signatures Time Stamp.  Expected Result: Document with over 24h delay should fail  File: hellopades-lt-sha256-ocsp-28h.pdf   TestCaseID: PDF-SigRevocVal-5   TestType: Automated  RequirementID:   Title: The PDF-file has been signed with PAdES Baseline LTA profile signature, the signature contains CRL.  Expected Result: Document with no ocsp or crl in signature should fail  File: hellopades-lta-no-ocsp.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-SigRevocVal-6   TestType: Automated  RequirementID:   Title: PDF signature has OCSP confirmation before Time Stamp  Expected Result: Document signed with ocsp time value before best signature time should fail  File: hellopades-lt-sha256-rsa2048-ocsp-before-ts.pdf   Attention! This test is disabled, check  GitHub  for specifics",
            "title": "SignatureRevocationValueTests.java"
        },
        {
            "location": "/siva/appendix/test_cases/#validationreportjsonstructureverificationjava",
            "text": "TestCaseID: Bdoc-ValidationReport-1   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: JSON structure has all elements (Bdoc valid single signature)  Expected Result: All required elements are present according to BdocDocSimpleReportSchema.json  File: Valid_ID_sig.bdoc   TestCaseID: Bdoc-ValidationReport-2   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: JSON structure has all elements (Bdoc valid multiple signatures)  Expected Result: All required elements are present according to SimpleReportSchema.json  File: Valid_IDCard_MobID_signatures.bdoc   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Bdoc-ValidationReport-3   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: JSON structure has all elements (Bdoc invalid single signature)  Expected Result: All required elements are present according to BdocDocSimpleReportSchema.json  File: IB-3960_bdoc2.1_TSA_SignatureValue_altered.bdoc   TestCaseID: Bdoc-ValidationReport-4   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: JSON structure has all elements (Bdoc indeterminate status)  Expected Result: All required elements are present according to BdocDocSimpleReportSchema.json  File: test1-bdoc-unknown.bdoc   TestCaseID: Bdoc-ValidationReport-5   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Check for optional subindication and error elements  Expected Result: Error and subindication elements are present  File: IB-3960_bdoc2.1_TSA_SignatureValue_altered.bdoc   TestCaseID: Bdoc-ValidationReport-6   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Check for optional warning element  Expected Result: Warning element is present  File: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc   TestCaseID: Bdoc-ValidationReport-7   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title:  Bdoc report with no signatures  Expected Result: Report is returned with required elements  File:BdocContainerNoSignature.bdoc   TestCaseID: Pdf-ValidationReport-8   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: JSON structure has all elements (Pdf valid single signature)  Expected Result: All required elements are present according to SimpleReportSchema.json  File: hellopades-lt-sha256-ec256.pdf   TestCaseID: Pdf-ValidationReport-9   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: JSON structure has all elements (Pdf valid Multiple signatures)  Expected Result: All required elements are present according to SimpleReportSchema.json  File:   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Pdf-ValidationReport-10   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: JSON structure has all elements (Pdf invalid signature)  Expected Result: All required elements are present according to SimpleReportSchema.json  File: hellopades-lt-b.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Pdf-ValidationReport-11   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: JSON structure has all elements (Pdf indeterminate status)  Expected Result: All required elements are present according to SimpleReportSchema.json  File: hellopades-lt-rsa1024-sha1-expired.pdf   TestCaseID: Pdf-ValidationReport-12   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title:  Pdf report with no signatures  Expected Result: Report is returned with required elements  File: PdfNoSignature.pdf   TestCaseID: Ddoc-ValidationReport-13   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: JSON structure has all elements (ddoc valid single signature)  Expected Result: All required elements are present according to SimpleReportSchema.json  File: 18912.ddoc   TestCaseID: Ddoc-ValidationReport-14   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: JSON structure has all elements (ddoc valid Multiple signatures)  Expected Result: All required elements are present according to SimpleReportSchema.json  File: igasugust1.1.ddoc   TestCaseID: Ddoc-ValidationReport-15   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: JSON structure has all elements (ddoc invalid signature)  Expected Result: All required elements are present according to SimpleReportSchema.json  File: test1-ddoc-revoked.ddoc   TestCaseID: Ddoc-ValidationReport-16   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: JSON structure has all elements (ddoc indeterminate status)  Expected Result: All required elements are present according to SimpleReportSchema.json  File: test1-ddoc-unknown.ddoc   TestCaseID: Ddoc-ValidationReport-17   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Check for optional subindication and error elements  Expected Result: Error and subindication elements are present  File: test1-ddoc-unknown.ddoc   TestCaseID: Ddoc-ValidationReport-18   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Check for optional warning element  Expected Result: Warning element is present  File:   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Ddoc-ValidationReport-19   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title:  Ddoc report with no signatures  Expected Result: Report is returned with required elements  File: DdocContainerNoSignature.ddoc",
            "title": "ValidationReportJsonStructureVerification.java"
        },
        {
            "location": "/siva/appendix/test_cases/#validationreportvalueverificationjava",
            "text": "TestCaseID: Bdoc-ValidationReportValue-1   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report XAdES_BASELINE_LT_TM, QES, FullSignatureScope  Expected Result: All required elements are present and meet the expected values.  File: Valid_ID_sig.bdoc   TestCaseID: Bdoc-ValidationReportValue-2   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report XAdES_BASELINE_LT, QES, FullSignatureScope  Expected Result: All required elements are present and meet the expected values.  File: 23635_bdoc_ts_OCSP_random_nonce.bdoc   TestCaseID: Bdoc-ValidationReportValue-3   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report XAdES_BASELINE_LT, AdES, FullSignatureScope  Expected Result: All required elements are present and meet the expected values.  File: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc   TestCaseID: Bdoc-ValidationReportValue-4   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report XAdES_BASELINE_LT_TM, AdESqc, FullSignatureScope  Expected Result: All required elements are present and meet the expected values.  File: ICT_MoU_FI-EE_10dec2013OneSignature.bdoc   TestCaseID: Bdoc-ValidationReportValue-5   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report XAdES_BASELINE_LTA, QES, FullSignatureScope  Expected Result: All required elements are present and meet the expected values.  File: EE_SER-AEX-B-LTA-V-24.pdf   TestCaseID: Ddoc-ValidationReportValue-6   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report, xml v1.0, checks for missing info  Expected Result: All required elements are present and meet the expected values and other values are empty as expected.  File: ICT_MoU_FI-EE_10dec2013OneSignature.bdoc   TestCaseID: Ddoc-ValidationReportValue-7   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report, xml v1.1, checks for missing info  Expected Result: All required elements are present and meet the expected values and other values are empty as expected.  File: Igasugust1.1.ddoc   TestCaseID: Ddoc-ValidationReportValue-8   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report, xml v1.2, checks for missing info  Expected Result: All required elements are present and meet the expected values and other values are empty as expected.  File: Igasugust1.2.ddoc   TestCaseID: Ddoc-ValidationReportValue-9   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report, xml v1.3, checks for missing info  Expected Result: All required elements are present and meet the expected values and other values are empty as expected.  File: Igasugust1.3.ddoc",
            "title": "ValidationReportValueVerification.java"
        },
        {
            "location": "/siva/appendix/test_cases/#validationrequesttestsjava",
            "text": "TestCaseID: ValidationRequest-1   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Input random base64 string as document with bdoc document type  Expected Result: Error is returned stating problem in document  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: ValidationRequest-2   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Input random base64 string as document with pdf document type  Expected Result: Error is returned stating problem in document  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: ValidationRequest-3   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Input random base64 string as document with ddoc document type  Expected Result: Error is returned stating problem in document  File:   TestCaseID: ValidationRequest-4   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Input a request with empty values  Expected Result: Errors are returned stating the missing values  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: ValidationRequest-5   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Request with not base64 string as document  Expected Result: Error is returned stating encoding problem  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: ValidationRequest-6   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of wrong report type as input  Expected Result: Error is returned stating wrong report type  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: ValidationRequest-7   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of valid (but not simple) report type as input  Expected Result: Correct report is returned (currently simple report is returned in all cases)  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: ValidationRequest-8   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of wrong document type as input  Expected Result: Correct error code is returned  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: ValidationRequest-9   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (bdoc and pdf)  Expected Result: Error is returned  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: ValidationRequest-10   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (asice and bdoc)  Expected Result: Error is returned  File: TS-11_23634_TS_2_timestamps.asice   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: ValidationRequest-11   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of case insensitivity in document type  Expected Result: Report is returned  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: ValidationRequest-12   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of filename value (filename do not match the actual file)  Expected Result: The same filename is returned as sent in the request  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: ValidationRequest-13   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Request has invalid character in filename  Expected Result: Correct error code is returned  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: ValidationRequest-14   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Request has invalid key on document position  Expected Result: Error is returned  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: ValidationRequest-15   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Request has wrong key on report type position  Expected Result: Error is returned  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: ValidationRequest-16   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Request has XML as document type (special case, XML is similar to ddoc and was a accepted document type in earlier versions)  Expected Result: Error is given  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: ValidationRequest-17   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Request has long (38784 characters) in filename field  Expected Result: Report is returned with the same filename  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: ValidationRequest-18   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Totally empty request body is sent  Expected Result: Error is given  File: None   TestCaseID: ValidationRequest-19   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Request with more parameters than expected is sent  Expected Result: Error is given or extra parameters are ignored?  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: ValidationRequest-20   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Request with special chars is sent  Expected Result: Validation report is returned  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: ValidationRequest-21   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (ddoc and bdoc)  Expected Result: Error is returned  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: ValidationRequest-22   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (ddoc and pdf)  Expected Result: Error is returned  File: PdfValidSingleSignature.pdf   TestCaseID: ValidationRequest-23   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (bdoc and pdf)  Expected Result: Error is returned  File: PdfValidSingleSignature.pdf   TestCaseID: ValidationRequest-24   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (bdoc and ddoc)  Expected Result: Error is returned  File: igasugust1.3.ddoc   TestCaseID: ValidationRequest-25   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (pdf and ddoc)  Expected Result: Error is returned  File: igasugust1.3.ddoc   TestCaseID: ValidationRequest-26   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (pdf and bdoc)  Expected Result: Error is returned  File: Valid_IDCard_MobID_signatures.bdoc",
            "title": "ValidationRequestTests.java"
        }
    ]
}