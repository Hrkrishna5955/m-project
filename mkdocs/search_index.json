{
    "docs": [
        {
            "location": "/",
            "text": "SiVa is digital signature validation web service that provides SOAP and JSON\nAPI to validate following file types:\n\n\n\n\nOlder Estonian digital signature files with DDOC extension\n\n\nBDOC containers with \nTimeMark\n and \nTimeStamp\n signatures\n\n\nDigitally signed PDF files\n\n\nX-Road security server ASiCE signature containers\n\n\n\n\nArchitecture document main purpose is to give overview what SiVa is.\nGive an overview of it's internal processes and provide information\nwhen deploying it to production environment.\n\n\nSiVa architecture document sections overview\n\n\nBelow list will give You an overview of what each section of the\nSiVa architecture document will cover:\n\n\n\n\nOverview\n - gives overview what SiVa is and\n  it's main features.\n\n\nRegulatory environment\n - legal analysis\n  and standards that are used when building SiVa application\n\n\nComponent diagram\n - gives overview of\n  main SiVa subsystems and and and base validation Java libraries\n  used for different validation services\n\n\nDeployment view\n - gives general overview of\n  servers required when deploying SiVa validation web service\n  into production\n\n\nInterfaces\n - Description of SiVa\n  SOAP and JSON API request and response\n\n\nUse cases\n - describes main processes in SiVa\n  validation web service\n\n\nDeploying\n - how to build, deploy and configure\n  SiVa web service\n\n\nLogging\n - how to configure and setup SiVa validation\n  service logging support\n\n\nQA Strategy\n - overview of quality assurance strategy\n\n\nTest Plan\n - overview of test planning\n\n\n\n\nDownload documentation\n\n\n\n\nDownload SiVa documentation as PDF",
            "title": "Introduction"
        },
        {
            "location": "/#siva-architecture-document-sections-overview",
            "text": "Below list will give You an overview of what each section of the\nSiVa architecture document will cover:   Overview  - gives overview what SiVa is and\n  it's main features.  Regulatory environment  - legal analysis\n  and standards that are used when building SiVa application  Component diagram  - gives overview of\n  main SiVa subsystems and and and base validation Java libraries\n  used for different validation services  Deployment view  - gives general overview of\n  servers required when deploying SiVa validation web service\n  into production  Interfaces  - Description of SiVa\n  SOAP and JSON API request and response  Use cases  - describes main processes in SiVa\n  validation web service  Deploying  - how to build, deploy and configure\n  SiVa web service  Logging  - how to configure and setup SiVa validation\n  service logging support  QA Strategy  - overview of quality assurance strategy  Test Plan  - overview of test planning",
            "title": "SiVa architecture document sections overview"
        },
        {
            "location": "/#download-documentation",
            "text": "Download SiVa documentation as PDF",
            "title": "Download documentation"
        },
        {
            "location": "/siva/version_info/",
            "text": "Version number\n\n\n\n\n\n\nChange date\n\n\n\n\n\n\nAuthor\n\n\n\n\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0.1\n\n\n\n\n\n\n\n06.05.2016\n\n\n\n\n\n\n\nMihkel Selgal\n\n\n\n\n\n\n\nInitial SiVa architecture\ndocument",
            "title": "Version info"
        },
        {
            "location": "/siva/definitions/",
            "text": "DSS\n\n\nDigital Signature Services is Java library to sign and validate European digital signature formats\n\n\nBDOC\n\n\nNot defined\n\n\nDDOC\n\n\nNot defined\n\n\nPDF\n\n\nPortable document format is a file format that provides an electronic image of text or text and graphics that\n  looks like a printed document and can be viewed, printed, and electronically transmitted.\n\n\nSiVa\n\n\nis RESTful web service providing digital signature validation services for BDOC, DDOC, PDF and X-Road\n  files\n\n\nJVM\n\n\nThe Java Virtual Machine is the runtime engine of the Java Platform, which\n  allows any program written in Java or other language compiled into Java bytecode to run on any\n  computer that has a native JVM.\n\n\nJAR\n\n\nJava Archive is a package file format typically used to aggregate many Java class files and associated metadata\n  and resources (text, images, etc.) into one file to distribute application software or libraries on the Java platform.\n\n\nFat JAR\n\n\nThe fat JAR is the JAR, which contains classes from all the libraries, on which your project depends and,\n  the classes of built project.\n\n\nSpring Boot\n\n\nis a framework from the team at Pivotal, designed to simplify the bootstrapping and development of a new\n  Spring application. The framework takes an opinionated approach to configuration, freeing developers from the\n  need to define boilerplate configuration\n\n\nLinux\n\n\nan operating system, based on UNIX, that runs on many different hardware platforms and whose source\n  code is available to the public.\n\n\nP\u00fcPKI\n\n\nNot defined\n\n\nPostgreSQL\n\n\nis an open source relational database management system ( DBMS ) developed by a worldwide team of volunteers.\n   PostgreSQL is not controlled by any corporation or other private entity and the source code is available\n   free of charge.",
            "title": "Definitions"
        },
        {
            "location": "/siva/overview/",
            "text": "SiVa (Signature Validation) web service\nis continued development of PDF Validation web service. Service provides\na JSON and SOAP based API web interface which purpose is to validate signatures\nin digitally signed BDOC, DDOC, PDF and X-Road ASiCE files according to\nvalidation policy (described in the \nValidation Policy\n\nsection).\n\n\nSiVa uses following Java libraries and command line utilities:\n\n\n\n\nEU DSS (Digital Signature Service) library is chosen for digitally signed\n  PDF file validation\n\n\nDigiDoc4J Java library to validate BDOC containers. Supported signature\n  types are \nTimeStamp\n and \nTimeMark\n\n\nJDigiDoc Java library is used to validate DDOC files starting from version\n\n\nX-Road ASiCE containers are validated using X-Road security server project\n  provided command line utility\n\n\n\n\nValidation libraries\n\n\nDigiDoc4j EU DSS fork\n\n\nDigiDoc4J EU DSS fork library for PDF files was chosen because it all the main\nvalidation constrains already provided and all new constraints can be added easily.\nFor more information on EU DSS, see:\n\nhttps://joinup.ec.europa.eu/asset/sd-dss/description\n.\n\n\nSiVa will use the following functionality of EU DSS library:\n\n\n\n\nPaDES Validation Functionality\n\n\nTSL loading functionality\n\n\n\n\nDigiDoc4J\n\n\nDigiDoc4J will be used to validate both \nTimeMark\n and \nTimeStamp\n based BDOC containers.\nDigiDoc4J was chosen because it's only Java library that can validate Estonian BDOC files\naccording to SiVa validation policy.\nFor more information on DigiDoc4J:\n\nhttps://github.com/open-eid/digidoc4j\n\n\nSiVa will use the following functionality of DigiDoc4J:\n\n\n\n\nBDOC validation functionality\n\n\n\n\nJDigiDoc\n\n\nJDigiDoc provides support for DDOC files the library was chosen because it provides most\ncomplete support for all required DDOC versions.\nRead more about JDigiDoc:\n\nhttps://github.com/open-eid/jdigidoc\n\n\nSiVa will use the following functionality of JDigiDoc:\n\n\n\n\nDDOC validation functionality\n\n\n\n\nX-Road signature validation utility\n\n\nX-Road signature validation utility is command line tool to validate X-Road Security server\ngenerated ASiCe files. The utility was chosen because it's only available packaged to tool\nto validate X-Road signature files.\n\n\nMain features of SiVa validation service:\n\n\n\n\nSiVa SOAP ETSI compliant API to validate all supported signatures.\n\n\nSiVa REST ETSI compliant API to validate all supported signatures.\n\n\nSiVa handles files in PDF-format version 1.7 and later,\n  signed with PadES-profile signatures.\n\n\nService handles DDOC files starting from version 1.0 or later\n\n\nService supports BDOC files starting from version 2.1 or later\n\n\nService supports X-Road 6 security server ASiCE containers\n\n\nSiVa uses European Commission\u2019s TSL (Trusted Service\n  Status List) for certificate chain validation for PDF and BDOC files.\n\n\nEuropean Commission\u2019s TSL contains references to TSLs of\n  European Union\u2019s member states and members of the European\n  Economic Area. This allows the PDF Validator to validate\n  signature that has been signed with certificates issued in any\n  of European Union\u2019s member states.\n\n\nDuring the validation process, a certificate chain is created\n  from signer\u2019s certificate up to the trust anchor (national trust\n  list referenced by the central European Commission's trust list)\n  for all certificates included in the signature (i.e. the\n  signer's certificate, OCSP service's certificate, time-stamping\n  Service's certificate).\n\n\n\n\n\n\nSiVas for DDOC and X-Road signature containers will use configured\n  list certificates.\n\n\nSignatures with PadES-LT and PadES-LTA profile are supported.\n\n\nBDOC signatures with type BDOC-TM and BDOC-TS are supported\n\n\n\n\nAt the time of creating the current documentation, it is expected that\nSiVa will be used by the following applications:\n\n\n\n\nDigiDoc3 Client application\n\n\nThird party document management applications",
            "title": "SiVa Service Overview"
        },
        {
            "location": "/siva/overview/#validation-libraries",
            "text": "",
            "title": "Validation libraries"
        },
        {
            "location": "/siva/overview/#digidoc4j-eu-dss-fork",
            "text": "DigiDoc4J EU DSS fork library for PDF files was chosen because it all the main\nvalidation constrains already provided and all new constraints can be added easily.\nFor more information on EU DSS, see: https://joinup.ec.europa.eu/asset/sd-dss/description .  SiVa will use the following functionality of EU DSS library:   PaDES Validation Functionality  TSL loading functionality",
            "title": "DigiDoc4j EU DSS fork"
        },
        {
            "location": "/siva/overview/#digidoc4j",
            "text": "DigiDoc4J will be used to validate both  TimeMark  and  TimeStamp  based BDOC containers.\nDigiDoc4J was chosen because it's only Java library that can validate Estonian BDOC files\naccording to SiVa validation policy.\nFor more information on DigiDoc4J: https://github.com/open-eid/digidoc4j  SiVa will use the following functionality of DigiDoc4J:   BDOC validation functionality",
            "title": "DigiDoc4J"
        },
        {
            "location": "/siva/overview/#jdigidoc",
            "text": "JDigiDoc provides support for DDOC files the library was chosen because it provides most\ncomplete support for all required DDOC versions.\nRead more about JDigiDoc: https://github.com/open-eid/jdigidoc  SiVa will use the following functionality of JDigiDoc:   DDOC validation functionality",
            "title": "JDigiDoc"
        },
        {
            "location": "/siva/overview/#x-road-signature-validation-utility",
            "text": "X-Road signature validation utility is command line tool to validate X-Road Security server\ngenerated ASiCe files. The utility was chosen because it's only available packaged to tool\nto validate X-Road signature files.",
            "title": "X-Road signature validation utility"
        },
        {
            "location": "/siva/overview/#main-features-of-siva-validation-service",
            "text": "SiVa SOAP ETSI compliant API to validate all supported signatures.  SiVa REST ETSI compliant API to validate all supported signatures.  SiVa handles files in PDF-format version 1.7 and later,\n  signed with PadES-profile signatures.  Service handles DDOC files starting from version 1.0 or later  Service supports BDOC files starting from version 2.1 or later  Service supports X-Road 6 security server ASiCE containers  SiVa uses European Commission\u2019s TSL (Trusted Service\n  Status List) for certificate chain validation for PDF and BDOC files.  European Commission\u2019s TSL contains references to TSLs of\n  European Union\u2019s member states and members of the European\n  Economic Area. This allows the PDF Validator to validate\n  signature that has been signed with certificates issued in any\n  of European Union\u2019s member states.  During the validation process, a certificate chain is created\n  from signer\u2019s certificate up to the trust anchor (national trust\n  list referenced by the central European Commission's trust list)\n  for all certificates included in the signature (i.e. the\n  signer's certificate, OCSP service's certificate, time-stamping\n  Service's certificate).    SiVas for DDOC and X-Road signature containers will use configured\n  list certificates.  Signatures with PadES-LT and PadES-LTA profile are supported.  BDOC signatures with type BDOC-TM and BDOC-TS are supported   At the time of creating the current documentation, it is expected that\nSiVa will be used by the following applications:   DigiDoc3 Client application  Third party document management applications",
            "title": "Main features of SiVa validation service:"
        },
        {
            "location": "/siva/regulatory_environment/",
            "text": "Note\n\n\nRegulatory environment section will be added when analysis will be completed",
            "title": "Regulatory environment"
        },
        {
            "location": "/siva/component_diagram/",
            "text": "Web API\n\n\nWeb API is standard Spring Boot Web application module inside SiVa webapp it will take in JSON or SOAP requests sent by\nsystems that are integrated with SiVa web service API. The incoming requests will be converted to \nSiVa Proxy Module\n\nJava request objects. Web API module also does basic validation of incoming requests. Checking that all the required\nfields are present and document type is correct.\n\n\nWhen validation has been completed by proxy selected validation service the returned qualified validation report Java object\nwill be marshalled based on incoming request to JSON or SOAP and returned to client that requested the validation.\n\n\nExternal configuration resources\n\n\n\n\nOptionally SiVa webapp can load in configuration file (i.e application.yml) at application startup time.\n  Configuration file can control Spring Boot configuration options in addition to SiVa application\n  specific options.\n\n\nOptionally SiVa webapp can also load in logging configuration options\n\n\n\n\nValidation proxy service\n\n\nValidation proxy service\n or validation service selector is Spring Boot module that will take the Web API sent\nrequest object and try to find matching validation service based on the \ndocumentType\ninside the request object.\nWhen matching validation service have been found the proxy request is converted to validation request and sent to matched\nvalidation service.\n\n\nWhen no matching validation service has not been found exception is raised and error object is\nreturned to Web API module. On successful validation the qualified validation report Java object sent from validation\nservice is returned to Web API module.\n\n\n\n\nNote\n\n\nValidation services can be added dynamically to SiVa by conforming to pattern \ndocumentType + \"ValidationService\"\n and new\nvalidation service module must be Maven dependency of \nsiva-validation-proxy\n. Example\nwould be \nBDOCValidationService\n.\n\n\n\n\nValidation reporting service\n\n\nValidation reporting service\n is optional module that can be turned on or off using configuration file. It's Spring Boot module and\nmain purpose is to collect data about: incoming request, validation reports and errors that have been reported during validation process.\n\n\nWhen HTTP authentication header have been set the reporting service will also collect its and adds to required statistics reports.\n\n\nAfter the report object have been created the data will be sent to configured reporting service. SiVa is preconfigured to work with\nGoogle Analytics.\n\n\nTSL Loader\n\n\nTSL loader loads in contents of TSL file from given URL in online mode or from directory when\nusing offline mode in predefined interval.\n\n\nValidation services\n\n\nAll validation services use different Java library to validate given document in request. The used validation\nlibrary is described in each of the validation service section.\n\n\nCommon process that all validation services do with proxy forwarded validation process is:\n\n\n\n\nConvert the Base64 encoded document into \nInputStream\n byte array\n\n\nCheck that given document is correct format (i.e valid BDOC). If not then error is thrown and\n  validation process is terminated.\n\n\nAfter validation of signatures has been completed the validation service starts to build\n  qualified validation report\n\n\nValidation report is created even validation \nFAILED\n or ended with \nINDETERMINATE\n result\n\n\n\n\nPDF Validation service\n\n\nPDF or PaDES as known in DSS validation service uses \nDigidoc4J DSS fork Java library\n PaDES validation\nfunctionality using the validation policy that complies with Estonian laws and regulations.\n\n\nConfigurable functionality:\n\n\n\n\nPossibility to add additional validation policies using SiVa \napplication.yml\n configuration section.\n\n\n\n\nBDOC validation service\n\n\nBDOC for ASiC compliant containers both TM and TS will latest Maven released \nDigiDoc4J\n library\n\n\nDDOC Validation service\n\n\nDDOC for previous generation digitally signed files will use latest Maven release of \nJDigiDoc\n\n\nX-Road validation service\n\n\nX-Road containers are similar to ASiCE containers but are \nnot\n valid ASiCE containers. There we could not use DSS nor DigiDoc4J provided\nASiCE validation functionality but need to X-Road developed \nasicverifier\n Java command line utility to validate these containers.\n\n\nSource code for \nasicverifier\n can be found in \nGitHub xroad-public repository\n*[]:\n\nAsicverfier\n has been integrated into SiVa as Java library. Making possible to use all the Java libraries packaged into \nasicverifier\n fat JAR.\n\n\nConfigurable functionality:\n\n\n\n\nIn SiVa configuration \napplication.yml\n file You can define alternative location for \nglobalconf\n directory to be loaded in using input stream",
            "title": "Component diagram"
        },
        {
            "location": "/siva/component_diagram/#web-api",
            "text": "Web API is standard Spring Boot Web application module inside SiVa webapp it will take in JSON or SOAP requests sent by\nsystems that are integrated with SiVa web service API. The incoming requests will be converted to  SiVa Proxy Module \nJava request objects. Web API module also does basic validation of incoming requests. Checking that all the required\nfields are present and document type is correct.  When validation has been completed by proxy selected validation service the returned qualified validation report Java object\nwill be marshalled based on incoming request to JSON or SOAP and returned to client that requested the validation.",
            "title": "Web API"
        },
        {
            "location": "/siva/component_diagram/#external-configuration-resources",
            "text": "Optionally SiVa webapp can load in configuration file (i.e application.yml) at application startup time.\n  Configuration file can control Spring Boot configuration options in addition to SiVa application\n  specific options.  Optionally SiVa webapp can also load in logging configuration options",
            "title": "External configuration resources"
        },
        {
            "location": "/siva/component_diagram/#validation-proxy-service",
            "text": "Validation proxy service  or validation service selector is Spring Boot module that will take the Web API sent\nrequest object and try to find matching validation service based on the  documentType inside the request object.\nWhen matching validation service have been found the proxy request is converted to validation request and sent to matched\nvalidation service.  When no matching validation service has not been found exception is raised and error object is\nreturned to Web API module. On successful validation the qualified validation report Java object sent from validation\nservice is returned to Web API module.   Note  Validation services can be added dynamically to SiVa by conforming to pattern  documentType + \"ValidationService\"  and new\nvalidation service module must be Maven dependency of  siva-validation-proxy . Example\nwould be  BDOCValidationService .",
            "title": "Validation proxy service"
        },
        {
            "location": "/siva/component_diagram/#validation-reporting-service",
            "text": "Validation reporting service  is optional module that can be turned on or off using configuration file. It's Spring Boot module and\nmain purpose is to collect data about: incoming request, validation reports and errors that have been reported during validation process.  When HTTP authentication header have been set the reporting service will also collect its and adds to required statistics reports.  After the report object have been created the data will be sent to configured reporting service. SiVa is preconfigured to work with\nGoogle Analytics.",
            "title": "Validation reporting service"
        },
        {
            "location": "/siva/component_diagram/#tsl-loader",
            "text": "TSL loader loads in contents of TSL file from given URL in online mode or from directory when\nusing offline mode in predefined interval.",
            "title": "TSL Loader"
        },
        {
            "location": "/siva/component_diagram/#validation-services",
            "text": "All validation services use different Java library to validate given document in request. The used validation\nlibrary is described in each of the validation service section.  Common process that all validation services do with proxy forwarded validation process is:   Convert the Base64 encoded document into  InputStream  byte array  Check that given document is correct format (i.e valid BDOC). If not then error is thrown and\n  validation process is terminated.  After validation of signatures has been completed the validation service starts to build\n  qualified validation report  Validation report is created even validation  FAILED  or ended with  INDETERMINATE  result",
            "title": "Validation services"
        },
        {
            "location": "/siva/component_diagram/#pdf-validation-service",
            "text": "PDF or PaDES as known in DSS validation service uses  Digidoc4J DSS fork Java library  PaDES validation\nfunctionality using the validation policy that complies with Estonian laws and regulations.  Configurable functionality:   Possibility to add additional validation policies using SiVa  application.yml  configuration section.",
            "title": "PDF Validation service"
        },
        {
            "location": "/siva/component_diagram/#bdoc-validation-service",
            "text": "BDOC for ASiC compliant containers both TM and TS will latest Maven released  DigiDoc4J  library",
            "title": "BDOC validation service"
        },
        {
            "location": "/siva/component_diagram/#ddoc-validation-service",
            "text": "DDOC for previous generation digitally signed files will use latest Maven release of  JDigiDoc",
            "title": "DDOC Validation service"
        },
        {
            "location": "/siva/component_diagram/#x-road-validation-service",
            "text": "X-Road containers are similar to ASiCE containers but are  not  valid ASiCE containers. There we could not use DSS nor DigiDoc4J provided\nASiCE validation functionality but need to X-Road developed  asicverifier  Java command line utility to validate these containers.  Source code for  asicverifier  can be found in  GitHub xroad-public repository *[]: Asicverfier  has been integrated into SiVa as Java library. Making possible to use all the Java libraries packaged into  asicverifier  fat JAR.  Configurable functionality:   In SiVa configuration  application.yml  file You can define alternative location for  globalconf  directory to be loaded in using input stream",
            "title": "X-Road validation service"
        },
        {
            "location": "/siva/deployment_view/",
            "text": "Load balancer\n\n\nLoad balancer can distribute traffic between SiVa nodes when there is more then one instance running.\nSiVa do not set any specific requirements for load balancer but in diagram the Nginx reverse proxy option is shown.\n\n\nSiVa application server\n\n\nSiVa validation service server that will provide the service needs to have JVM installed) both\nmore commonly known options Oracle or OpenJDK are supported. SiVa application is built as executable JAR and can be\nconfigured like system service on Linux operating system.\n\n\nRead more about running\n\nSpring Boot applications as Linux system service\n\n\nSiVa validation service can run in cluster because it does not keep or create any sessions with client application\nor service.\n\n\n\n\nNote\n\n\nThe single executable JAR option may change in the future because we are considering isolating\neach validation service and SiVa web application into separate JVM instance\n\n\n\n\nDatabase server\n\n\nSiVa database server requirements are dictated by P\u00fcPKI application and from these requirements needs to be\nPostgreSQL. Currently there are no special requirements for database server nor database setup.\n\n\n\n\nNote\n\n\nDatabase requirements section will be updated when analysis and development will begin on modification of\nP\u00fcPKI application\n\n\n\n\n\n\nDevelopment\n\n\nIt may be possible that we will build administration user interface as part of SiVa project so the database\nand type of database RDBMS or NoSQL may change in the future\n\n\n\n\nSiVa administration server\n\n\nSiVa administration will use P\u00fcPKI administration user interface to manage authorized service users and collect\n information about basic service usage by authorized clients.\n\n\nOnly requirement currently known is that Python programming language support must be present in the server.\n\n\n\n\nNote\n\n\nMore detailed information about SiVa administration server setup will be provided when development and\nanalysis will begin for administration service\n\n\n\n\n\n\nDevelopment\n\n\nThere is alternative option that we will build administration user interface from scratch using Java and\nSpring Boot",
            "title": "Deployment view"
        },
        {
            "location": "/siva/deployment_view/#load-balancer",
            "text": "Load balancer can distribute traffic between SiVa nodes when there is more then one instance running.\nSiVa do not set any specific requirements for load balancer but in diagram the Nginx reverse proxy option is shown.",
            "title": "Load balancer"
        },
        {
            "location": "/siva/deployment_view/#siva-application-server",
            "text": "SiVa validation service server that will provide the service needs to have JVM installed) both\nmore commonly known options Oracle or OpenJDK are supported. SiVa application is built as executable JAR and can be\nconfigured like system service on Linux operating system.  Read more about running Spring Boot applications as Linux system service  SiVa validation service can run in cluster because it does not keep or create any sessions with client application\nor service.   Note  The single executable JAR option may change in the future because we are considering isolating\neach validation service and SiVa web application into separate JVM instance",
            "title": "SiVa application server"
        },
        {
            "location": "/siva/deployment_view/#database-server",
            "text": "SiVa database server requirements are dictated by P\u00fcPKI application and from these requirements needs to be\nPostgreSQL. Currently there are no special requirements for database server nor database setup.   Note  Database requirements section will be updated when analysis and development will begin on modification of\nP\u00fcPKI application    Development  It may be possible that we will build administration user interface as part of SiVa project so the database\nand type of database RDBMS or NoSQL may change in the future",
            "title": "Database server"
        },
        {
            "location": "/siva/deployment_view/#siva-administration-server",
            "text": "SiVa administration will use P\u00fcPKI administration user interface to manage authorized service users and collect\n information about basic service usage by authorized clients.  Only requirement currently known is that Python programming language support must be present in the server.   Note  More detailed information about SiVa administration server setup will be provided when development and\nanalysis will begin for administration service    Development  There is alternative option that we will build administration user interface from scratch using Java and\nSpring Boot",
            "title": "SiVa administration server"
        },
        {
            "location": "/siva/interface_description/",
            "text": "REST JSON validation service\n\n\nREST JSON Endpoint\n\n\nPOST https://<server url>/validate\n\n\n\n\nJSON Request\n\n\n\n\n\n\n\n\n\n\nParameter\n\n\n\n\n\n\nType\n\n\n\n\n\n\nMandatory\n\n\n\n\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndocument\n\n\n\n\n\n\nString\n\n\n\n\n\n\n+\n\n\n\n\n\n\nBase64 encoded string of digitally signed document\n\n\n\n\n\n\n\n\n\n\nfilename\n\n\n\n\n\n\n\n\nString\n\n\n\n\n\n\n\n+\n\n\n\n\n\n\n\nFile name of the digitally signed document\n(i.e \nsample.bdoc\n)\n\n\n\n\n\n\n\n\n\n\ndocumentType\n\n\n\n\n\n\nString\n\n\n\n\n\n\n+\n\n\n\n\n\n\nValidation service to use for validation\n\n\n\n\n\n\n\n\n\n\nsignaturePolicy\n\n\n\n\n\n\n\n\nString\n\n\n\n\n\n\n\n-\n\n\n\n\n\n\n\nCan be used to change the default signature validation\npolicy that is used by the service\n\n\n\n\n\n\n\n\n\n\nSample request\n\n\n{\n  \"filename\":\"sample.ddoc\",\n  \"documentType\":\"DDOC\",\n  \"document\":\"PD94bWwgdmVyc2lvbj0iMS4....\",\n  \"signaturePolicy\": \"EU\"\n}\n\n\n\n\nJSON Response\n\n\n\n\n\n\n\n\n\n\nParameter\n\n\n\n\n\n\nType\n\n\n\n\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npolicy\n\n\n\n\n\n\n\n\nObject\n\n\n\n\n\n\n\nObject containing information of the SiVa signature\nvalidation policy that was used for validation\n\n\n\n\n\n\n\n\n\n\npolicy.policyVersion\n\n\n\n\n\n\nString\n\n\n\n\n\n\nVersion of the validation policy\n\n\n\n\n\n\n\n\n\n\npolicy.policyName\n\n\n\n\n\n\nString\n\n\n\n\n\n\nName of the validation policy\n\n\n\n\n\n\n\n\n\n\npolicy.policyDescription\n\n\n\n\n\n\nString\n\n\n\n\n\n\nShort description of the validation policy\n\n\n\n\n\n\n\n\n\n\npolicy.policyUrl\n\n\n\n\n\n\nString\n\n\n\n\n\n\nURL where the signature validation policy\ndocument can be downloaded.\n\n\nThe validation policy document shall include information\nabout validation of all the document formats, including\nthe different validation policies that are used in\ncase of different file formats and base libraries.\n\n\n\n\n\n\n\n\n\n\nsignaturesCount\n\n\n\n\n\n\nNumber\n\n\n\n\n\n\nNumber of signatures found inside digitally signed file\n\n\n\n\n\n\n\n\n\n\nvalidSignaturesCount\n\n\n\n\n\n\n\n\nNumber\n\n\n\n\n\n\n\nSignatures count that have validated to \nTOTAL-PASSED\n.\nSee also \nvalidSignaturesCount\n field.\n\n\n\n\n\n\n\n\n\n\nvalidationTime\n\n\n\n\n\n\nDate\n\n\n\n\n\n\nTime of validating the signature by the service\n\n\n\n\n\n\n\n\n\n\ndocumentName\n\n\n\n\n\n\nString\n\n\n\n\n\n\nDigitally signed document's file name\n\n\n\n\n\n\n\n\n\n\nsignatureForm\n\n\n\n\n\n\n\n\nString\n\n\n\n\n\n\n\nFormat (and optionally version) of the container\ncontaining the signature\n\n\n\n\n\n\n\n\n\n\nsignatures\n\n\n\n\n\n\nArray\n\n\n\n\n\n\nCollection of signatures found in digitally signed document\n\n\n\n\n\n\n\n\n\n\nsignatures[0]\n\n\n\n\n\n\nObject\n\n\n\n\n\n\nSignature information object\n\n\n\n\n\n\n\n\n\n\nsignatures[0].claimedSigningTime\n\n\n\n\n\n\n\n\nData\n\n\n\n\n\n\n\nClaimed signing time, i.e. signer's computer time during\nsignature creation\n\n\n\n\n\n\n\n\n\n\nsignatures[0].errors\n\n\n\n\n\n\nArray\n\n\n\n\n\n\nInformation about validation error(s).\n\n\nArray of error messages, as returned by the base library\nthat was used for signature validation.\n\n\n\n\n\n\n\n\n\n\nsignatures[0].id\n\n\n\n\n\n\nString\n\n\n\n\n\n\nSignature ID:\n\n\n\n\n\n\nIn case of XAdES signatures, the value of \n\n  XML element's Id attribute\n\n\n\n\n\n\nIn case of PAdES signatures, the value of\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsignatures[0].indication\n\n\n\n\n\n\nString\n\n\n\n\n\n\nOverall result of the signature's validation\nprocess, according to EN 319 102-1 \"Table 5: Status\nindications of the signature validation process\"\n\n\nThe validation results of different signatures in one\nsigned document (signature container) may vary.\nSee also \nvalidSignaturesCount\n and \nSignaturesCount\n\nfields.\n\n\n\n\n\n\n\n\n\n\nsignatures[0].info\n\n\n\n\n\n\nObject\n\n\n\n\n\n\n\n\n\n\n\n\nsignatures[0].info.bestSignatureTime\n\n\n\n\n\n\nDate\n\n\n\n\n\n\nTime value that is regarded as trusted signing time,\ndenoting the earliest time when it can be trusted by\nthe validation application (because proven by some POE\npresent in the signature) that a signature has existed:\n\n\n\n\nin case of signature with time-mark - the producedAt\n  value of the earliest valid time-mark (OCSP confirmation\n  of the signer's certificate) in the signature.\n\n\nin case of signature with time-stamp - the getTime\n  value of the earliest valid signature time-stamp\n  token in the signature.\n\n\n\n\n\n\n\n\n\n\n\n\nsignatures[0].signatureFormat\n\n\n\n\n\n\n\n\nString\n\n\n\n\n\n\n\nFormat and profile (according to Baseline Profile standard)\nof the signature\n\n\n\n\n\n\n\n\n\n\nsignatures[0].signatureLevel\n\n\n\n\n\n\nString\n\n\n\n\n\n\nIn case of BDOC and PAdES formats: indication whether\nthe signature is Advanced electronic Signature (AdES),\nAdES supported by a Qualified Certificate (AdES/QC) or a\nQualified electronic Signature (QES).\n\n\nIn case of DIGIDOC-XML 1.0..1.3 formats, empty value\nis used as the signature level is not checked by the\nJDigiDoc base library that is used for validation.\n\n\n\n\n\n\n\n\n\n\nsignatures[0].signatureScopes\n\n\n\n\n\n\n\n\nArray\n\n\n\n\n\n\n\nContains information of the original data that is\ncovered by the signature.\n\n\n\n\n\n\n\n\n\n\nsignatures[0].signedBy\n\n\n\n\n\n\n\n\nString\n\n\n\n\n\n\n\nSigners name and identification number, i.e. value of\nthe CN field of the signer's certificate\n\n\n\n\n\n\n\n\n\n\nsignatures[0].subIndication\n\n\n\n\n\n\nString\n\n\n\n\n\n\nAdditional subindication in case of failed or\nindeterminate validation result, according to EN 319 102-1\n\"Table 6: Validation Report Structure and Semantics\"\n\n\n\n\n\n\n\n\n\n\nsignatures[0].warnings\n\n\n\n\n\n\nArray\n\n\n\n\n\n\nBlock of validation warnings that do not affect\nthe overall validation result.\n\n\nKnown warning situations (according to\nhttp://id.ee/public/SK-JDD-PRG-GUIDE.pdf, chap. 5.2.4.1):\n\n\n\n\nBDOC (and PAdES?): Weaker digest method (SHA-1) has\n  been used than recommended when calculating either or\n  element\u2019s digest value.\n\n\nDIGIDOC-XML 1.0-1.3: \nDataFile\n element\u2019s \nxmlns\n\n  attribute is missing.\n\n\nDIGIDOC-XML 1.0-1.3: \n<IssuerSerial><X509IssuerName>\n\n  and/or \n<IssuerSerial><X509IssuerSerial>\n element\u2019s\n  \nxmlns\n attribute is missing.\n\n\n\n\n\n\n\n\n\n\n\n\nSample response\n\n\n{\n    \"policy\": {\n        \"policyVersion\": \"1.0\",\n        \"policyName\": \"SiVa validation policy\",\n        \"policyDescription\": \"SiVa validation policy\",\n        \"policyUrl\": \"http://open-eid.github.io/SiVa/siva/appendix/validation_policy/\"\n    },\n    \"signaturesCount\": 1,\n    \"validSignaturesCount\": 1,\n    \"validationTime\": \"2016-07-28T14:41:45Z\",\n    \"documentName\": \"sample.bdoc\",\n    \"signatures\": [\n        {\n            \"claimedSigningTime\": \"2016-05-11T10:17:57Z\",\n            \"errors\": [],\n            \"id\": \"S0\",\n            \"indication\": \"TOTAL-PASSED\",\n            \"info\": {\n                \"bestSignatureTime\": \"2016-05-11T10:18:06Z\"\n            },\n            \"signatureFormat\": \"XAdES_BASELINE_LT_TM\",\n            \"signatureLevel\": \"QES\",\n            \"signatureScopes\": [],\n            \"signedBy\": \"NURM,AARE,38211015222\",\n            \"subIndication\": \"\",\n            \"warnings\": []\n        }\n    ]\n}\n\n\n\n\nSOAP validation service\n\n\nSOAP Request\n\n\n\n\n\n\n\n\n\n\nParameter\n\n\n\n\n\n\nType\n\n\n\n\n\n\nMandatory\n\n\n\n\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDocument\n\n\n\n\n\n\nString\n\n\n\n\n\n\n+\n\n\n\n\n\n\nBase64 encoded string of digitally signed document\n\n\n\n\n\n\n\n\n\n\nFilename\n\n\n\n\n\n\n\n\nString\n\n\n\n\n\n\n\n+\n\n\n\n\n\n\n\nFilename of the digitally signed document\n(i.e \nsample.bdoc\n)\n\n\n\n\n\n\n\n\n\n\nDocumentType\n\n\n\n\n\n\nString\n\n\n\n\n\n\n+\n\n\n\n\n\n\nValidation service to use for validation\n\n\n\n\n\n\n\n\n\n\nSignaturePolicy\n\n\n\n\n\n\n\n\nString\n\n\n\n\n\n\n\n-\n\n\n\n\n\n\n\nCan be used to change the default signature validation\npolicy that is used by the service\n\n\n\n\n\n\n\n\n\n\nSOAP Response\n\n\n\n\nDevelopment\n\n\nNeed to add response description",
            "title": "Interfaces"
        },
        {
            "location": "/siva/interface_description/#rest-json-validation-service",
            "text": "",
            "title": "REST JSON validation service"
        },
        {
            "location": "/siva/interface_description/#rest-json-endpoint",
            "text": "POST https://<server url>/validate",
            "title": "REST JSON Endpoint"
        },
        {
            "location": "/siva/interface_description/#json-request",
            "text": "Parameter    Type    Mandatory    Description        document    String    +    Base64 encoded string of digitally signed document      filename     String    +    File name of the digitally signed document\n(i.e  sample.bdoc )      documentType    String    +    Validation service to use for validation      signaturePolicy     String    -    Can be used to change the default signature validation\npolicy that is used by the service",
            "title": "JSON Request"
        },
        {
            "location": "/siva/interface_description/#sample-request",
            "text": "{\n  \"filename\":\"sample.ddoc\",\n  \"documentType\":\"DDOC\",\n  \"document\":\"PD94bWwgdmVyc2lvbj0iMS4....\",\n  \"signaturePolicy\": \"EU\"\n}",
            "title": "Sample request"
        },
        {
            "location": "/siva/interface_description/#json-response",
            "text": "Parameter    Type    Description        policy     Object    Object containing information of the SiVa signature\nvalidation policy that was used for validation      policy.policyVersion    String    Version of the validation policy      policy.policyName    String    Name of the validation policy      policy.policyDescription    String    Short description of the validation policy      policy.policyUrl    String    URL where the signature validation policy\ndocument can be downloaded.  The validation policy document shall include information\nabout validation of all the document formats, including\nthe different validation policies that are used in\ncase of different file formats and base libraries.      signaturesCount    Number    Number of signatures found inside digitally signed file      validSignaturesCount     Number    Signatures count that have validated to  TOTAL-PASSED .\nSee also  validSignaturesCount  field.      validationTime    Date    Time of validating the signature by the service      documentName    String    Digitally signed document's file name      signatureForm     String    Format (and optionally version) of the container\ncontaining the signature      signatures    Array    Collection of signatures found in digitally signed document      signatures[0]    Object    Signature information object      signatures[0].claimedSigningTime     Data    Claimed signing time, i.e. signer's computer time during\nsignature creation      signatures[0].errors    Array    Information about validation error(s).  Array of error messages, as returned by the base library\nthat was used for signature validation.      signatures[0].id    String    Signature ID:    In case of XAdES signatures, the value of  \n  XML element's Id attribute    In case of PAdES signatures, the value of        signatures[0].indication    String    Overall result of the signature's validation\nprocess, according to EN 319 102-1 \"Table 5: Status\nindications of the signature validation process\"  The validation results of different signatures in one\nsigned document (signature container) may vary.\nSee also  validSignaturesCount  and  SignaturesCount \nfields.      signatures[0].info    Object       signatures[0].info.bestSignatureTime    Date    Time value that is regarded as trusted signing time,\ndenoting the earliest time when it can be trusted by\nthe validation application (because proven by some POE\npresent in the signature) that a signature has existed:   in case of signature with time-mark - the producedAt\n  value of the earliest valid time-mark (OCSP confirmation\n  of the signer's certificate) in the signature.  in case of signature with time-stamp - the getTime\n  value of the earliest valid signature time-stamp\n  token in the signature.       signatures[0].signatureFormat     String    Format and profile (according to Baseline Profile standard)\nof the signature      signatures[0].signatureLevel    String    In case of BDOC and PAdES formats: indication whether\nthe signature is Advanced electronic Signature (AdES),\nAdES supported by a Qualified Certificate (AdES/QC) or a\nQualified electronic Signature (QES).  In case of DIGIDOC-XML 1.0..1.3 formats, empty value\nis used as the signature level is not checked by the\nJDigiDoc base library that is used for validation.      signatures[0].signatureScopes     Array    Contains information of the original data that is\ncovered by the signature.      signatures[0].signedBy     String    Signers name and identification number, i.e. value of\nthe CN field of the signer's certificate      signatures[0].subIndication    String    Additional subindication in case of failed or\nindeterminate validation result, according to EN 319 102-1\n\"Table 6: Validation Report Structure and Semantics\"      signatures[0].warnings    Array    Block of validation warnings that do not affect\nthe overall validation result.  Known warning situations (according to\nhttp://id.ee/public/SK-JDD-PRG-GUIDE.pdf, chap. 5.2.4.1):   BDOC (and PAdES?): Weaker digest method (SHA-1) has\n  been used than recommended when calculating either or\n  element\u2019s digest value.  DIGIDOC-XML 1.0-1.3:  DataFile  element\u2019s  xmlns \n  attribute is missing.  DIGIDOC-XML 1.0-1.3:  <IssuerSerial><X509IssuerName> \n  and/or  <IssuerSerial><X509IssuerSerial>  element\u2019s\n   xmlns  attribute is missing.",
            "title": "JSON Response"
        },
        {
            "location": "/siva/interface_description/#sample-response",
            "text": "{\n    \"policy\": {\n        \"policyVersion\": \"1.0\",\n        \"policyName\": \"SiVa validation policy\",\n        \"policyDescription\": \"SiVa validation policy\",\n        \"policyUrl\": \"http://open-eid.github.io/SiVa/siva/appendix/validation_policy/\"\n    },\n    \"signaturesCount\": 1,\n    \"validSignaturesCount\": 1,\n    \"validationTime\": \"2016-07-28T14:41:45Z\",\n    \"documentName\": \"sample.bdoc\",\n    \"signatures\": [\n        {\n            \"claimedSigningTime\": \"2016-05-11T10:17:57Z\",\n            \"errors\": [],\n            \"id\": \"S0\",\n            \"indication\": \"TOTAL-PASSED\",\n            \"info\": {\n                \"bestSignatureTime\": \"2016-05-11T10:18:06Z\"\n            },\n            \"signatureFormat\": \"XAdES_BASELINE_LT_TM\",\n            \"signatureLevel\": \"QES\",\n            \"signatureScopes\": [],\n            \"signedBy\": \"NURM,AARE,38211015222\",\n            \"subIndication\": \"\",\n            \"warnings\": []\n        }\n    ]\n}",
            "title": "Sample response"
        },
        {
            "location": "/siva/interface_description/#soap-validation-service",
            "text": "",
            "title": "SOAP validation service"
        },
        {
            "location": "/siva/interface_description/#soap-request",
            "text": "Parameter    Type    Mandatory    Description        Document    String    +    Base64 encoded string of digitally signed document      Filename     String    +    Filename of the digitally signed document\n(i.e  sample.bdoc )      DocumentType    String    +    Validation service to use for validation      SignaturePolicy     String    -    Can be used to change the default signature validation\npolicy that is used by the service",
            "title": "SOAP Request"
        },
        {
            "location": "/siva/interface_description/#soap-response",
            "text": "Development  Need to add response description",
            "title": "SOAP Response"
        },
        {
            "location": "/siva/use_cases/",
            "text": "Digitally signed document validation process\n\n\nDigitally signed document validation process shows how SiVa chooses\nvalidation service and possible output of validation process.\n\n\n\n\nUser of SiVa system provides digitally signed document file in form of\nBase64 encoded string. The validation of file and validation policy\nis handled by validation services underlying libraries.\n\n\n\n\nIn case of PDF file it will be DSS\n\n\nFor BDOC and DDOC files we will use DigiDoc4J or when required jDigiDoc\n\n\nAnd for X-Road signatures we will use X-road signature validation utility\n\n\n\n\nWe will log following failure cases:\nWhen file upload fails (request started but was not completed successfully)\nWhen request validation (JSON or SOAP) fails\nWhen user authentication fails - \nnot shown in diagram above\n\nWhen signature validation fails \u2013 \nnot shown in diagram above\n\nWhen increasing of request count fails \u2013 \nnot shown in diagram above\n\n\nCertificate loading process\n\n\nAll validation services require certificates to validate digitally signed\ndocuments. Below process shows how certificates are loaded into\nvalidation service. Loading process is done separably for each validation\nservice.\n\n\n\n\nCertificate loading process is scheduled cron job inside each validation\nservice to update currently in memory loaded certificates.\n\n\nThis process should run after TSL loader has completed updating\nSiVa local copy of certificates.\n\n\nX-Road 6 security server SOAP request process\n\n\nX-Road validation process is brought out because we skip authentication\nprocess for X-Road security server interface and and use XML SOAP\nas input source.\n\n\n\n\nValidation of SOAP request XML is done in the SiVa web application module.\nDocument validation process is described in detail in \nDigitally signed document validation process\n\nValidation report output id described in \nInterface description\n\n\nAuthenticate JSON REST API user\n\n\n\n\nValidation of JSON request is done in  SiVA web application module\nDocument validation process is described in detail in \nDigitally signed document validation process\n\nValidation report output id described in \nInterface description\n\n\nTSL loading use case",
            "title": "Use cases"
        },
        {
            "location": "/siva/use_cases/#digitally-signed-document-validation-process",
            "text": "Digitally signed document validation process shows how SiVa chooses\nvalidation service and possible output of validation process.   User of SiVa system provides digitally signed document file in form of\nBase64 encoded string. The validation of file and validation policy\nis handled by validation services underlying libraries.   In case of PDF file it will be DSS  For BDOC and DDOC files we will use DigiDoc4J or when required jDigiDoc  And for X-Road signatures we will use X-road signature validation utility   We will log following failure cases:\nWhen file upload fails (request started but was not completed successfully)\nWhen request validation (JSON or SOAP) fails\nWhen user authentication fails -  not shown in diagram above \nWhen signature validation fails \u2013  not shown in diagram above \nWhen increasing of request count fails \u2013  not shown in diagram above",
            "title": "Digitally signed document validation process"
        },
        {
            "location": "/siva/use_cases/#certificate-loading-process",
            "text": "All validation services require certificates to validate digitally signed\ndocuments. Below process shows how certificates are loaded into\nvalidation service. Loading process is done separably for each validation\nservice.   Certificate loading process is scheduled cron job inside each validation\nservice to update currently in memory loaded certificates.  This process should run after TSL loader has completed updating\nSiVa local copy of certificates.",
            "title": "Certificate loading process"
        },
        {
            "location": "/siva/use_cases/#x-road-6-security-server-soap-request-process",
            "text": "X-Road validation process is brought out because we skip authentication\nprocess for X-Road security server interface and and use XML SOAP\nas input source.   Validation of SOAP request XML is done in the SiVa web application module.\nDocument validation process is described in detail in  Digitally signed document validation process \nValidation report output id described in  Interface description",
            "title": "X-Road 6 security server SOAP request process"
        },
        {
            "location": "/siva/use_cases/#authenticate-json-rest-api-user",
            "text": "Validation of JSON request is done in  SiVA web application module\nDocument validation process is described in detail in  Digitally signed document validation process \nValidation report output id described in  Interface description",
            "title": "Authenticate JSON REST API user"
        },
        {
            "location": "/siva/use_cases/#tsl-loading-use-case",
            "text": "",
            "title": "TSL loading use case"
        },
        {
            "location": "/siva/deployment/",
            "text": "System requirements\n\n\nFollowing are minimum requirements to build and deploy SiVa validation\nweb service:\n\n\n\n\nJava 8 or above Oracle JVM is supported\n\n\nGit version control system version 1.8 or above is recommended\n\n\nMinimum 2 GB of RAM. Recommended at least 4 GB of RAM\n\n\nMinimum 1 processor core\n\n\nOpen internet connection\n\n\n1GB of free disk space\n\n\nSupported operating system is Ubuntu 14.04 LTS\n\n\n\n\nBuilding SiVa validation web service on Ubuntu 16.04\n\n\nFirst we need to install Git and Java SDK 8 by issuing below commands:\n\n\nsudo apt-get update\nsudo apt-get install git -y\nsudo apt-get install default-jdk -y\n\n\n\n\nNext we need to clone the SiVa Github repository:\n\n\ngit clone https://github.com/open-eid/SiVa.git --branch develop\n\n\n\n\nFinal step is building the SiVa project using Maven Wrapper\n\n\ncd SiVa\n./mvnw install\n\n\n\n\n\n\nNote\n\n\nThe build can take up to \n30 minutes\n because there are lot of tests that will be run through and downloading of the\nrequired dependencies\n\n\n\n\nTo verify that SiVa project built successfully look for \nBUILD SUCCESS\n in build compilation output last lines.\nThe last lines of build output should look very similar to below image:\n\n\n[INFO] Reactor Summary:\n[INFO]\n[INFO] SiVa Digitally signed documents validation service . SUCCESS [ 25.258 s]\n[INFO] validation-services-parent ......................... SUCCESS [  0.479 s]\n[INFO] validation-commons ................................. SUCCESS [01:45 min]\n[INFO] tsl-loader ......................................... SUCCESS [ 16.507 s]\n[INFO] PDF Validation Service ............................. SUCCESS [ 42.263 s]\n[INFO] BDOC Validation Service ............................ SUCCESS [ 58.864 s]\n[INFO] DDOC Validation Service ............................ SUCCESS [  9.929 s]\n[INFO] xroad-validation-service ........................... SUCCESS [  5.664 s]\n[INFO] SIVa webapp and other core modules ................. SUCCESS [  0.315 s]\n[INFO] SiVa validation service proxy ...................... SUCCESS [ 43.098 s]\n[INFO] siva-webapp ........................................ SUCCESS [04:06 min]\n[INFO] SiVa Sample Web application ........................ SUCCESS [04:31 min]\n[INFO] SiVa Web Service integration tests ................. SUCCESS [03:41 min]\n[INFO] siva-distribution .................................. SUCCESS [ 56.941 s]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 18:30 min\n[INFO] Finished at: 2016-07-22T13:40:31+00:00\n[INFO] Final Memory: 80M/250M\n[INFO] ------------------------------------------------------------------------\n\n\n\n\nSetting up systemd service\n\n\nMaven build generates executable JAR files. This means web container and all its dependencies are package inside\nsingle JAR file. It makes a lot easier to deploy it into servers.\n\n\nEasiest option to setup SiVa is as \nsystemd\n service in Ubuntu servers.\n\n\nFor that we first need to create service file:\n\n\nvim siva-webapp.service\n\n\n\n\nInside it we need to paste below text. You need and can change few things in service setup file.\n\n\n\n\nFirst you \nmust not\n run service as \nroot\n. So it's strongly recommended to change line \nUser=root\n\n\nSecond You can change Java JVM options by modifying the \nJAVA_OPTS\n inside the \nsiva-webapp.service\n file.\n\n\nAlso You can change the SiVa application configuration options by modifying \nRUN_ARGS\n section in file\n\n\n\n\n[Unit]\nDescription=siva-webapp\nAfter=syslog.target\n\n[Service]\nUser=root\nExecStart=/var/apps/siva-webapp.jar\nEnvironment=JAVA_OPTS=-Xmx320m RUN_ARGS=--server.port=80\nSuccessExitStatus=143\n\n[Install]\nWantedBy=multi-user.target\n\n\n\n\nSave and close the \nsiva-webapp.service\n file.\nNext we need to move \nsiva-webapp-2.0.2-SNAPSHOT.jar\n into newly created \n/var/apps\n directory and rename to\nJAR file to \nsiva-webapp.jar\n. match\n\n\n\n\nNote\n\n\nThe copied JAR filename must match option \nExecStart\n in  \nsiva-webaapp.servcie\n file\n\n\n\n\nsudo mkdir /var/apps\nsudo cp siva-parent/siva-webapp/target/executable/siva-webapp-2.0.2-SNAPSHOT.jar /var/apps/siva-webapp.jar\n\n\n\n\nNext we need to copy the \nsiva-webapp.service\n file into \n/lib/systemd/system\n directory.\nThen we are ready to start the \nsiva-webapp\n service.\n\n\nsudo cp siva-webapp.service /lib/systemd/system\nsudo systemctl start siva-webapp\n\n\n\n\nFinal step of setting up the \nsiva-webapp\n service is to verify that service started correctly by issuing below\ncommand.\n\n\nsystemctl status siva-webapp\n\n\n\n\nIt should print out similar to below picture:\n\n\n\u25cf siva-webapp.service - siva-webapp\n   Loaded: loaded (/lib/systemd/system/siva-webapp.service; disabled; vendor preset: enabled)\n   Active: active (running) since Thu 2016-07-21 08:48:14 EDT; 1 day 2h ago\n Main PID: 15965 (siva-webapp.jar)\n    Tasks: 34\n   Memory: 429.6M\n      CPU: 2min 5.721s\n   CGroup: /system.slice/siva-webapp.service\n           \u251c\u250015965 /bin/bash /var/apps/stage/siva-webapp.jar\n           \u2514\u250015982 /usr/bin/java -Dsun.misc.URLClassPath.disableJarChecking=true -Xmx320m -jar /var/apps/stage/siva-webapp.jar\n\nJul 20 03:00:01 siva siva-webapp.jar[15965]:         at eu.europa.esig.dss.tsl.service.TSLParser.getTslModel(TSLParser.java:143)\nJul 20 03:00:01 siva siva-webapp.jar[15965]:         at eu.europa.esig.dss.tsl.service.TSLParser.call(TSLParser.java:129)\nJul 20 03:00:01 siva siva-webapp.jar[15965]:         ... 5 common frames omitted\nJul 20 03:00:01 siva siva-webapp.jar[15965]: 20.07.2016 03:00:01.450 INFO  [pool-3-thread-1] [e.e.e.dss.tsl.service.TSLRepository.sync\nJul 20 03:00:01 siva siva-webapp.jar[15965]: 20.07.2016 03:00:01.450 INFO  [pool-3-thread-1] [e.e.e.dss.tsl.service.TSLRepository.sync\n\n\n\n\nInstalling HTTPIE\n\n\nhttpie\n is more user friendly version of \ncurl\n and we will use to verify that SiVa was installed\nand started correctly on our server.\n\n\nUbuntu 16.04\n\n\nOn Ubuntu You can install it using \napt\n package manager:\n\n\nsudo apt-get install -y httpie\n\n\n\n\nMac OS X\n\n\nOn Mac it's strongly recommended to install it using package manager like Homebrew by issuing\nbelwo command:\n\n\nbrew install httpie\n\n\n\n\nWindows\n\n\nOn Windows there is no prebuilt package that can be installed but \nhttpie\n installation instruction in\n\nScott Hanselmans blog post\n\n\nCross platform\n\n\nAlternative option if You have Python and its package manager \npip\n installed. Then You can issue\nbelow command:\n\n\npip install httpie\n\n\n\n\nVerify digitally signed file\n\n\nAfter You have successfully installed HTTPIE. Then we need to download sample JSON request file with below\ncommand\n\n\nhttp --download https://raw.githubusercontent.com/open-eid/SiVa/develop/build-helpers/bdoc_pass.json\n\n\n\n\nAfter successful download issue below command in same directory where You downloaded the file using\nthe above command.\n\n\nhttp POST http://10.211.55.9:8080/validate < bdoc_pass.json\n\n\n\n\nOutput of this command should look like below screenshot. Look for \nsignatureCount\n and\n\nvalidSignatureCount\n they \nmust\n be equal.",
            "title": "Deployment"
        },
        {
            "location": "/siva/deployment/#system-requirements",
            "text": "Following are minimum requirements to build and deploy SiVa validation\nweb service:   Java 8 or above Oracle JVM is supported  Git version control system version 1.8 or above is recommended  Minimum 2 GB of RAM. Recommended at least 4 GB of RAM  Minimum 1 processor core  Open internet connection  1GB of free disk space  Supported operating system is Ubuntu 14.04 LTS",
            "title": "System requirements"
        },
        {
            "location": "/siva/deployment/#building-siva-validation-web-service-on-ubuntu-1604",
            "text": "First we need to install Git and Java SDK 8 by issuing below commands:  sudo apt-get update\nsudo apt-get install git -y\nsudo apt-get install default-jdk -y  Next we need to clone the SiVa Github repository:  git clone https://github.com/open-eid/SiVa.git --branch develop  Final step is building the SiVa project using Maven Wrapper  cd SiVa\n./mvnw install   Note  The build can take up to  30 minutes  because there are lot of tests that will be run through and downloading of the\nrequired dependencies   To verify that SiVa project built successfully look for  BUILD SUCCESS  in build compilation output last lines.\nThe last lines of build output should look very similar to below image:  [INFO] Reactor Summary:\n[INFO]\n[INFO] SiVa Digitally signed documents validation service . SUCCESS [ 25.258 s]\n[INFO] validation-services-parent ......................... SUCCESS [  0.479 s]\n[INFO] validation-commons ................................. SUCCESS [01:45 min]\n[INFO] tsl-loader ......................................... SUCCESS [ 16.507 s]\n[INFO] PDF Validation Service ............................. SUCCESS [ 42.263 s]\n[INFO] BDOC Validation Service ............................ SUCCESS [ 58.864 s]\n[INFO] DDOC Validation Service ............................ SUCCESS [  9.929 s]\n[INFO] xroad-validation-service ........................... SUCCESS [  5.664 s]\n[INFO] SIVa webapp and other core modules ................. SUCCESS [  0.315 s]\n[INFO] SiVa validation service proxy ...................... SUCCESS [ 43.098 s]\n[INFO] siva-webapp ........................................ SUCCESS [04:06 min]\n[INFO] SiVa Sample Web application ........................ SUCCESS [04:31 min]\n[INFO] SiVa Web Service integration tests ................. SUCCESS [03:41 min]\n[INFO] siva-distribution .................................. SUCCESS [ 56.941 s]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 18:30 min\n[INFO] Finished at: 2016-07-22T13:40:31+00:00\n[INFO] Final Memory: 80M/250M\n[INFO] ------------------------------------------------------------------------",
            "title": "Building SiVa validation web service on Ubuntu 16.04"
        },
        {
            "location": "/siva/deployment/#setting-up-systemd-service",
            "text": "Maven build generates executable JAR files. This means web container and all its dependencies are package inside\nsingle JAR file. It makes a lot easier to deploy it into servers.  Easiest option to setup SiVa is as  systemd  service in Ubuntu servers.  For that we first need to create service file:  vim siva-webapp.service  Inside it we need to paste below text. You need and can change few things in service setup file.   First you  must not  run service as  root . So it's strongly recommended to change line  User=root  Second You can change Java JVM options by modifying the  JAVA_OPTS  inside the  siva-webapp.service  file.  Also You can change the SiVa application configuration options by modifying  RUN_ARGS  section in file   [Unit]\nDescription=siva-webapp\nAfter=syslog.target\n\n[Service]\nUser=root\nExecStart=/var/apps/siva-webapp.jar\nEnvironment=JAVA_OPTS=-Xmx320m RUN_ARGS=--server.port=80\nSuccessExitStatus=143\n\n[Install]\nWantedBy=multi-user.target  Save and close the  siva-webapp.service  file.\nNext we need to move  siva-webapp-2.0.2-SNAPSHOT.jar  into newly created  /var/apps  directory and rename to\nJAR file to  siva-webapp.jar . match   Note  The copied JAR filename must match option  ExecStart  in   siva-webaapp.servcie  file   sudo mkdir /var/apps\nsudo cp siva-parent/siva-webapp/target/executable/siva-webapp-2.0.2-SNAPSHOT.jar /var/apps/siva-webapp.jar  Next we need to copy the  siva-webapp.service  file into  /lib/systemd/system  directory.\nThen we are ready to start the  siva-webapp  service.  sudo cp siva-webapp.service /lib/systemd/system\nsudo systemctl start siva-webapp  Final step of setting up the  siva-webapp  service is to verify that service started correctly by issuing below\ncommand.  systemctl status siva-webapp  It should print out similar to below picture:  \u25cf siva-webapp.service - siva-webapp\n   Loaded: loaded (/lib/systemd/system/siva-webapp.service; disabled; vendor preset: enabled)\n   Active: active (running) since Thu 2016-07-21 08:48:14 EDT; 1 day 2h ago\n Main PID: 15965 (siva-webapp.jar)\n    Tasks: 34\n   Memory: 429.6M\n      CPU: 2min 5.721s\n   CGroup: /system.slice/siva-webapp.service\n           \u251c\u250015965 /bin/bash /var/apps/stage/siva-webapp.jar\n           \u2514\u250015982 /usr/bin/java -Dsun.misc.URLClassPath.disableJarChecking=true -Xmx320m -jar /var/apps/stage/siva-webapp.jar\n\nJul 20 03:00:01 siva siva-webapp.jar[15965]:         at eu.europa.esig.dss.tsl.service.TSLParser.getTslModel(TSLParser.java:143)\nJul 20 03:00:01 siva siva-webapp.jar[15965]:         at eu.europa.esig.dss.tsl.service.TSLParser.call(TSLParser.java:129)\nJul 20 03:00:01 siva siva-webapp.jar[15965]:         ... 5 common frames omitted\nJul 20 03:00:01 siva siva-webapp.jar[15965]: 20.07.2016 03:00:01.450 INFO  [pool-3-thread-1] [e.e.e.dss.tsl.service.TSLRepository.sync\nJul 20 03:00:01 siva siva-webapp.jar[15965]: 20.07.2016 03:00:01.450 INFO  [pool-3-thread-1] [e.e.e.dss.tsl.service.TSLRepository.sync",
            "title": "Setting up systemd service"
        },
        {
            "location": "/siva/deployment/#installing-httpie",
            "text": "httpie  is more user friendly version of  curl  and we will use to verify that SiVa was installed\nand started correctly on our server.",
            "title": "Installing HTTPIE"
        },
        {
            "location": "/siva/deployment/#ubuntu-1604",
            "text": "On Ubuntu You can install it using  apt  package manager:  sudo apt-get install -y httpie",
            "title": "Ubuntu 16.04"
        },
        {
            "location": "/siva/deployment/#mac-os-x",
            "text": "On Mac it's strongly recommended to install it using package manager like Homebrew by issuing\nbelwo command:  brew install httpie",
            "title": "Mac OS X"
        },
        {
            "location": "/siva/deployment/#windows",
            "text": "On Windows there is no prebuilt package that can be installed but  httpie  installation instruction in Scott Hanselmans blog post",
            "title": "Windows"
        },
        {
            "location": "/siva/deployment/#cross-platform",
            "text": "Alternative option if You have Python and its package manager  pip  installed. Then You can issue\nbelow command:  pip install httpie",
            "title": "Cross platform"
        },
        {
            "location": "/siva/deployment/#verify-digitally-signed-file",
            "text": "After You have successfully installed HTTPIE. Then we need to download sample JSON request file with below\ncommand  http --download https://raw.githubusercontent.com/open-eid/SiVa/develop/build-helpers/bdoc_pass.json  After successful download issue below command in same directory where You downloaded the file using\nthe above command.  http POST http://10.211.55.9:8080/validate < bdoc_pass.json  Output of this command should look like below screenshot. Look for  signatureCount  and validSignatureCount  they  must  be equal.",
            "title": "Verify digitally signed file"
        },
        {
            "location": "/siva/logging/",
            "text": "Logging functionality is handled by the \nSLF4J\n logging facade and on top\nof it the \nLogback\n framework is used.\u00a0As a result, logging can be\nconfigured via the standard Logback configuration file.\u00a0By default,\nlogging works on the \nINFO\n level and logs are directed to the system\nconsole as well as a log file.\n\n\nThe logback xml configuration file can be found at:\n\n\npdfValidator/pdf-validator-webapp/src/main/resources/logback.xml\n\n\n\n\nand when compiled the file will reside at\u00a0\n\n\nWEB-INF/classes/logback.xml\n\n\n\n\nwithin the packaged war. There is also a possibility to set the location\nof the default configuration file with a system\nproperty\u00a0\nlogback.configurationFile\n as a JVM argument.\u00a0The value of\nthis property can be a URL, a resource on the class path or a path to a\nfile external to the application.\n\n\njava -Dlogback.configurationFile=/path/to/config.xml\n\n\n\n\nIn this configuration file there are three appenders: \nSTDOUT\n (logs to\nstandard output), \nFILE\n (logs to a file) and \nSYSLOG\n (logs to syslog\nserver over the network). To disable certain appender from logging,\ncommenting out its \nappender-ref\n is sufficient, but it is \nrecommended\n\nthat the appender itself should also be commented out. For example to\ndisable \nSYSLOG\n appender (which is the default configuration), then one\ncan use following configuration:\n\n\n<!--\n<appender name=\"SYSLOG\" class=\"ch.qos.logback.classic.net.SyslogAppender\">\n    <syslogHost>enter\\_ip\\_or\\_hostname\\_here</syslogHost>\n    <port>514</port>\n    <facility>USER</facility>\n    <filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\">\n        <level>INFO</level>\n    </filter>\n    <suffixPattern>%-5level %logger{0}:%L \\[%thread\\] - %msg</suffixPattern>\n</appender>\n-->\n\n<root level=\"DEBUG\">\n<appender-ref ref=\"STDOUT\"/>\n<appender-ref ref=\"FILE\"/>\n<!--<appender-ref ref=\"SYSLOG\"/>-->\n\n</root>\n\n\n\n\nLogback configuration manual:\u00a0\nhttp://logback.qos.ch/manual/\n\n\nSTDOUT appender\n\n\n\n\nDefault the log level is set to DEBUG\n\n\nAppender output pattern is:\u00a0\n%d{HH:mm:ss.SSS} %-5level %logger{0}:%L [%thread] - %msg%n\n\n\n\n\nFILE appender\n\n\n\n\nDefault log level is set to \nINFO\n\n\nuses\u00a0RollingFileAppender configured with\u00a0\nTimeBasedRollingPolicy\n.\n  Current configuration makes a seperate logfile for each day and each\n  file is kept for \n30 days\n.\n\n\n\n\nPS!\n keep in mind when using relative\n  destination file path, then the path is added at the end of the\n  currently working directory, i.e. where the application was started.\n  (Current day's logfile path:\u00a0\nlogs/pdf-validator-webapp.log\n,\n  prievious days pattern:\u00a0\n\n\n    logs/pdf-validator-webapp.%d{yyyy-MM-dd}.log)\n\n\n\n\n\n\nAppender output pattern is:\u00a0 \n%d{HH:mm:ss.SSS} %-5level %logger{0}:%L \\[%thread\\] - %msg%n\n-Dlogback.configurationFile=config.xml\n\n\n\n\n\n\n\n\nSYSLOG appender\n\n\n\n\nDefault log level is set to \nINFO\n\n\nTarget's ip/hostname and port are\u00a0configurable\n\n\nSyslog messsages' severity is\u00a0configurable\n\n\nSyslog messages' payload's timestamp and hostname part are created\n  implicitly and the suffixpattern is:\u00a0 \n%-5level %logger{0}:%L \\[%thread\\] - %msg",
            "title": "Logging"
        },
        {
            "location": "/siva/logging/#stdout-appender",
            "text": "Default the log level is set to DEBUG  Appender output pattern is:\u00a0 %d{HH:mm:ss.SSS} %-5level %logger{0}:%L [%thread] - %msg%n",
            "title": "STDOUT appender"
        },
        {
            "location": "/siva/logging/#file-appender",
            "text": "Default log level is set to  INFO  uses\u00a0RollingFileAppender configured with\u00a0 TimeBasedRollingPolicy .\n  Current configuration makes a seperate logfile for each day and each\n  file is kept for  30 days .   PS!  keep in mind when using relative\n  destination file path, then the path is added at the end of the\n  currently working directory, i.e. where the application was started.\n  (Current day's logfile path:\u00a0 logs/pdf-validator-webapp.log ,\n  prievious days pattern:\u00a0      logs/pdf-validator-webapp.%d{yyyy-MM-dd}.log)   Appender output pattern is:\u00a0  %d{HH:mm:ss.SSS} %-5level %logger{0}:%L \\[%thread\\] - %msg%n -Dlogback.configurationFile=config.xml",
            "title": "FILE appender"
        },
        {
            "location": "/siva/logging/#syslog-appender",
            "text": "Default log level is set to  INFO  Target's ip/hostname and port are\u00a0configurable  Syslog messsages' severity is\u00a0configurable  Syslog messages' payload's timestamp and hostname part are created\n  implicitly and the suffixpattern is:\u00a0  %-5level %logger{0}:%L \\[%thread\\] - %msg",
            "title": "SYSLOG appender"
        },
        {
            "location": "/siva/qa_strategy/",
            "text": "Introduction\n\n\nThe goal of this document is to give general overview of the used infrastructure, processes, schedule and actions to ensure good quality delivery. The document describes activities in the whole software development process. Analysis, development and testing are separated for the sake of structure and transparency although they are integral parts of the development cycle.\n\n\nEnvironments and infrastructure\n\n\n\n\nThere are different test environments for quality assurance, depending on the nature and aim.\n\n\n\n\nTravisCI environment for public - Platform: Linux\n\n\nTest environment for test and performance test - Platform: Linux\n\n\n\n\nInstructions how to set up test enviroment and run tests together with more info can be found in \nSiVa GitHub page\n\n\nSystem requirements:\n\n\n\n\nAt least 2GB of RAM on machine where the build is executed\n\n\nMinimum required Java version is Java 8\n\n\nSiVa project provided Maven Wrapper (./mvnw)\n\n\n\n\nTools used:\n\n\n\n\nTravisCI \u2013 is a continuous integration service used to build and test software projects hosted at GitHub\n\n\nJenkins \u2013 is an open source continuous integration tool written in Java.\n\n\nJMeter \u2013 tool for creating and running performance tests.\n\n\nIntelliJ IDEA \u2013 is a Java integrated development environment(IDE) for developing automated tests\n\n\nApache Tomcat - is an open source servlet container developed by the Apache Software Foundation.\n\n\nDocker \u2013 is an open-source project that automates the deployment of applications inside software containers, by providing an additional layer of abstraction and automation of operating-system-level virtualization on Linux.\n\n\nRest-Assured - is a Java DSL(Domain-specific language) for simplifying testing of REST based Services built on top of HTTP Builder.\n\n\n\n\nAnalysis\n\n\nAnalysis will be tagged with identificators to enable cross-reference between requirements and corresponding tests. This includes both functional and non-functional requirements. Analysis of specific tasks must be done before the sprint planning meeting. This will ensure that upcoming sprint is planned in common grounds.\n\n\nReference document [2]. and [3]. (see reference section)\n\n\nDevelopment\n\n\nDevelopment process\n\n\nCustomized iterative process similar to SCRUM is used in the development. The process consists of following elements:\n\n\n\n\nProduct backlog is maintained\n\n\nSprints are two weeks long\n\n\nSprint planning meetings are held\n\n\nTasks are maintained through JIRA SCRUM board\n\n\nDaily team stand-ups are held\n\n\nTasks marked done are developed, tested and ready to be shipped\n\n\nBi-weekly meetings are held to give status on progress and discuss open questions\n\n\nRetrospectives are held at least with two month intervals\n\n\n\n\n\n\nIssue lifecycle\n\n\nEach ticket (defect, task, ...) in JIRA SCRUM board goes through the following states that correspond the development procedure described in previous chapter.\n\n\n\n\nDescription of states:\n\n\n\n\nToDo - tickets to be dealt with in current sprint (Sprint backlog).\n\n\nAnalysis -ticket is being analysed. During this stage requirements are refined.\n\n\nDevelopment - ticket is being handled (feature coding, document writing, ...).\n\n\nIn Review - the work done in development stage is being reviewed.\n\n\nTest - ticket is being tested.\n\n\nDone - ticket has been tested and deemed sufficient for release (Ready features)\n\n\nClosed - ticket has been released.\n\n\n\n\nQA activities and quality criterias in the development\n\n\nProcess improvement\n\n\nThe development process is constantly monitored and adjusted to the changing situations. Retrospective meetings for process feedback are held.\n\n\nUnit tests\n\n\nIt is responsibility of developer to write, maintain and execute the unit tests on developed features. The code must compile and pass unit tests before it is allowed to be submitted to the code repository.  The code of the unit tests is integral part of the source code and is maintained on the same principles.\n\n\nUnit tests are also automatically executed on each build, if the unit tests do not pass further test execution is stopped.\n\n\nStatic testing/code reviews\n\n\nAll changes (including changes in unit test code) are reviewed by another development team member using GitHub. The code must pass review before it is submitted to testing.\n\n\nSonarLint is used to validate code automatically. It integrates both suggested tools mentioned in reference document [3]. (see reference section)\n\n\nTesting\n\n\nApproach and schedule\n\n\nTesting follows the principles described in reference document   [1]\n\n\nThe goal is to automate as much of the testing process as possible, however some aspects of the testing will be carried out manually.\n\n\nAs the development is carried out validation module by validation module, testing will follow the same principle. The tests will be developed in iterations for each validation module.\n\n\nAfter each iteration test cases, test automation code and test results will be available through GitHub.\n\n\nThe main focus on testing is on different type of input data, the tests themselves will be based on the same principle for all the modules.\n\n\nThe schedule of testing can be seen on the image below.\n\n\n\n\nTesting process\n\n\nAll automatic tests, except load tests will follow the same execution process. The tests are ran automatically and all the actions are triggered by Jenkins. The full set of tests (unit, integration and system) will be ran on every test execution.\n\n\n\n\nTest case management\n\n\nTest cases are handled as integral part of test automation code. The same applies on manual tests, in manual test cases some portion of automation may be used to execute the tests but the results are verified manually. All the test cases and test code will be maintained in the GitHub.\n\n\nTest cases are developed and maintained together with test automation code by the QA specialist for Integration and System Testing.\n\n\nFollowing elements will be present in test cases:\n\n\n\n\nTestCaseID: unique ID that makes possible to identify specific test case\n\n\nRequirementID: ID of the requirement that is tested\n\n\nTitle: Description of the test\n\n\nExpected Result: expected outcome of the test (pass criteria for the test)\n\n\nFile: input test file that is used\n\n\n\n\nTest case sample\n\n\nAutomatic and manual test cases will have the same description principles (shown below).\n\n\n/***\n *\n * TestCaseID: PDF-BaselineProfileTests-1\n *\n * TestType: Automated/Manual\n *\n * RequirementID: SiVa-I-8.1\n *\n * Title: The PDF-file has got signatures of two different profiles - Signing profiles PAdES Baseline-B and PAdES-LTA\n *\n * Expected Result: Signature profile Baseline - LTA should pass and signature baseline-b should fail\n *\n * File: hellopades-lt-b.pdf\n *\n ***/\n@Test\n\npublic void baselineProfileLTDocumentShouldPass(){\n    String filename = \"hellopades-lt-b.pdf\";\n    String encodeFile = Base64.encodeBase64String(readFile(filename));\n    String document = encodeFile;\n    ValidationRequest validationRequest = new ValidationRequest();\n    validationRequest.setDocumentType(parseFileExtension(filename.substring(filename.lastIndexOf(\".\") + 1)));\n    validationRequest.setDocument(document);\n    restTemplate.postForObject(sivaBaseUrl, validationRequest, String.class);\n}\n\n\n\n\nDefect management\n\n\nAll found defects will be reported and handled in Jira. The defect report will follow similar lifecycle in JIRA SCRUM board as tasks.\n\n\nThe report will have following elements:\n\n\n\n\nTitle: Short, precise description of the problem\n\n\nDetails: Type, Priority, Sprint, Epic Link, Fix Version/s\n\n\nDescription:\n\n\nSteps to reproduce bug\n - sequence for reproduction, link to test case if applicable.\n\n\nExpected behavior\n - expected outcome of the test sequence.\n\n\nActual behavior\n - actual result of the test sequence. The description should be thorough enough to enable the debugging of the problem and to give objective base for severity assessment.\n\n\nFile attachments\n - Test files, logs, images, ...\n\n\n\n\n\n\n\n\nTest levels\n\n\nIntegration testing\n\n\nThe scope of the tests is illustrated on the image below. The goal is to test the SiVA application API (both X-Road and REST/JSON) and to test the independent module capability for validation of specific type of file (DDOC, BDOC, PDF or X-Road signature). Both valid and invalid inputs are tested. More info about testing specifics can be found in Test Plan \nIntegration testing\n section.\n\n\n\n\nSystem testing\n\n\nThe scope of the tests is illustrated on the image below. The goal of the test is to test the entire length of signature validation process and to test supportive functions. In addition REST/JSON Demo application is tested. X-Road application is used to test the flow, but application itself is not tested. More info about testing specifics can be found in Test Plan \nSystem testing\n section.\n\n\n\n\nRegression testing\n\n\nRegression testing will consist of two parts:\nRunning all automated tests (unit, integration and system tests)\nManual testing of the areas that are not covered by automatic tests based on the regression test checklist\n\n\nAdditional testing activities\n\n\nPerformance testing\n\n\nPerformance testing will be carried out using JMeter on Test Environment. The testing will be carried out for each type of validation service.\n\n\nMore info about performance testing specifics can be found in Test Plan \nPerformance testing\n section.\n\n\nReferences\n\n\n\n\nDevelopment\n\n\nThis section will be moved to general reference page\n\n\n\n\n\n\n[1] Lisa_6_Osa_I_SiVa_Testimise_korraldus.pdf\n\n\n[2] Lisa_4_Osa_I_SiVa_Valideerimisteenuse_analuus MUUDETUD.pdf\n\n\n[3] Lisa_3_RIA_Mittefunktsionaalsed_nouded.pdf\n\n\n[4] OWASP Testing Guide 4.0",
            "title": "QA Strategy"
        },
        {
            "location": "/siva/qa_strategy/#introduction",
            "text": "The goal of this document is to give general overview of the used infrastructure, processes, schedule and actions to ensure good quality delivery. The document describes activities in the whole software development process. Analysis, development and testing are separated for the sake of structure and transparency although they are integral parts of the development cycle.",
            "title": "Introduction"
        },
        {
            "location": "/siva/qa_strategy/#environments-and-infrastructure",
            "text": "There are different test environments for quality assurance, depending on the nature and aim.   TravisCI environment for public - Platform: Linux  Test environment for test and performance test - Platform: Linux   Instructions how to set up test enviroment and run tests together with more info can be found in  SiVa GitHub page  System requirements:   At least 2GB of RAM on machine where the build is executed  Minimum required Java version is Java 8  SiVa project provided Maven Wrapper (./mvnw)   Tools used:   TravisCI \u2013 is a continuous integration service used to build and test software projects hosted at GitHub  Jenkins \u2013 is an open source continuous integration tool written in Java.  JMeter \u2013 tool for creating and running performance tests.  IntelliJ IDEA \u2013 is a Java integrated development environment(IDE) for developing automated tests  Apache Tomcat - is an open source servlet container developed by the Apache Software Foundation.  Docker \u2013 is an open-source project that automates the deployment of applications inside software containers, by providing an additional layer of abstraction and automation of operating-system-level virtualization on Linux.  Rest-Assured - is a Java DSL(Domain-specific language) for simplifying testing of REST based Services built on top of HTTP Builder.",
            "title": "Environments and infrastructure"
        },
        {
            "location": "/siva/qa_strategy/#analysis",
            "text": "Analysis will be tagged with identificators to enable cross-reference between requirements and corresponding tests. This includes both functional and non-functional requirements. Analysis of specific tasks must be done before the sprint planning meeting. This will ensure that upcoming sprint is planned in common grounds.  Reference document [2]. and [3]. (see reference section)",
            "title": "Analysis"
        },
        {
            "location": "/siva/qa_strategy/#development",
            "text": "",
            "title": "Development"
        },
        {
            "location": "/siva/qa_strategy/#development-process",
            "text": "Customized iterative process similar to SCRUM is used in the development. The process consists of following elements:   Product backlog is maintained  Sprints are two weeks long  Sprint planning meetings are held  Tasks are maintained through JIRA SCRUM board  Daily team stand-ups are held  Tasks marked done are developed, tested and ready to be shipped  Bi-weekly meetings are held to give status on progress and discuss open questions  Retrospectives are held at least with two month intervals",
            "title": "Development process"
        },
        {
            "location": "/siva/qa_strategy/#issue-lifecycle",
            "text": "Each ticket (defect, task, ...) in JIRA SCRUM board goes through the following states that correspond the development procedure described in previous chapter.   Description of states:   ToDo - tickets to be dealt with in current sprint (Sprint backlog).  Analysis -ticket is being analysed. During this stage requirements are refined.  Development - ticket is being handled (feature coding, document writing, ...).  In Review - the work done in development stage is being reviewed.  Test - ticket is being tested.  Done - ticket has been tested and deemed sufficient for release (Ready features)  Closed - ticket has been released.",
            "title": "Issue lifecycle"
        },
        {
            "location": "/siva/qa_strategy/#qa-activities-and-quality-criterias-in-the-development",
            "text": "Process improvement  The development process is constantly monitored and adjusted to the changing situations. Retrospective meetings for process feedback are held.  Unit tests  It is responsibility of developer to write, maintain and execute the unit tests on developed features. The code must compile and pass unit tests before it is allowed to be submitted to the code repository.  The code of the unit tests is integral part of the source code and is maintained on the same principles.  Unit tests are also automatically executed on each build, if the unit tests do not pass further test execution is stopped.  Static testing/code reviews  All changes (including changes in unit test code) are reviewed by another development team member using GitHub. The code must pass review before it is submitted to testing.  SonarLint is used to validate code automatically. It integrates both suggested tools mentioned in reference document [3]. (see reference section)",
            "title": "QA activities and quality criterias in the development"
        },
        {
            "location": "/siva/qa_strategy/#testing",
            "text": "",
            "title": "Testing"
        },
        {
            "location": "/siva/qa_strategy/#approach-and-schedule",
            "text": "Testing follows the principles described in reference document   [1]  The goal is to automate as much of the testing process as possible, however some aspects of the testing will be carried out manually.  As the development is carried out validation module by validation module, testing will follow the same principle. The tests will be developed in iterations for each validation module.  After each iteration test cases, test automation code and test results will be available through GitHub.  The main focus on testing is on different type of input data, the tests themselves will be based on the same principle for all the modules.  The schedule of testing can be seen on the image below.",
            "title": "Approach and schedule"
        },
        {
            "location": "/siva/qa_strategy/#testing-process",
            "text": "All automatic tests, except load tests will follow the same execution process. The tests are ran automatically and all the actions are triggered by Jenkins. The full set of tests (unit, integration and system) will be ran on every test execution.",
            "title": "Testing process"
        },
        {
            "location": "/siva/qa_strategy/#test-case-management",
            "text": "Test cases are handled as integral part of test automation code. The same applies on manual tests, in manual test cases some portion of automation may be used to execute the tests but the results are verified manually. All the test cases and test code will be maintained in the GitHub.  Test cases are developed and maintained together with test automation code by the QA specialist for Integration and System Testing.  Following elements will be present in test cases:   TestCaseID: unique ID that makes possible to identify specific test case  RequirementID: ID of the requirement that is tested  Title: Description of the test  Expected Result: expected outcome of the test (pass criteria for the test)  File: input test file that is used   Test case sample  Automatic and manual test cases will have the same description principles (shown below).  /***\n *\n * TestCaseID: PDF-BaselineProfileTests-1\n *\n * TestType: Automated/Manual\n *\n * RequirementID: SiVa-I-8.1\n *\n * Title: The PDF-file has got signatures of two different profiles - Signing profiles PAdES Baseline-B and PAdES-LTA\n *\n * Expected Result: Signature profile Baseline - LTA should pass and signature baseline-b should fail\n *\n * File: hellopades-lt-b.pdf\n *\n ***/\n@Test\n\npublic void baselineProfileLTDocumentShouldPass(){\n    String filename = \"hellopades-lt-b.pdf\";\n    String encodeFile = Base64.encodeBase64String(readFile(filename));\n    String document = encodeFile;\n    ValidationRequest validationRequest = new ValidationRequest();\n    validationRequest.setDocumentType(parseFileExtension(filename.substring(filename.lastIndexOf(\".\") + 1)));\n    validationRequest.setDocument(document);\n    restTemplate.postForObject(sivaBaseUrl, validationRequest, String.class);\n}",
            "title": "Test case management"
        },
        {
            "location": "/siva/qa_strategy/#defect-management",
            "text": "All found defects will be reported and handled in Jira. The defect report will follow similar lifecycle in JIRA SCRUM board as tasks.  The report will have following elements:   Title: Short, precise description of the problem  Details: Type, Priority, Sprint, Epic Link, Fix Version/s  Description:  Steps to reproduce bug  - sequence for reproduction, link to test case if applicable.  Expected behavior  - expected outcome of the test sequence.  Actual behavior  - actual result of the test sequence. The description should be thorough enough to enable the debugging of the problem and to give objective base for severity assessment.  File attachments  - Test files, logs, images, ...",
            "title": "Defect management"
        },
        {
            "location": "/siva/qa_strategy/#test-levels",
            "text": "Integration testing  The scope of the tests is illustrated on the image below. The goal is to test the SiVA application API (both X-Road and REST/JSON) and to test the independent module capability for validation of specific type of file (DDOC, BDOC, PDF or X-Road signature). Both valid and invalid inputs are tested. More info about testing specifics can be found in Test Plan  Integration testing  section.   System testing  The scope of the tests is illustrated on the image below. The goal of the test is to test the entire length of signature validation process and to test supportive functions. In addition REST/JSON Demo application is tested. X-Road application is used to test the flow, but application itself is not tested. More info about testing specifics can be found in Test Plan  System testing  section.   Regression testing  Regression testing will consist of two parts:\nRunning all automated tests (unit, integration and system tests)\nManual testing of the areas that are not covered by automatic tests based on the regression test checklist",
            "title": "Test levels"
        },
        {
            "location": "/siva/qa_strategy/#additional-testing-activities",
            "text": "Performance testing  Performance testing will be carried out using JMeter on Test Environment. The testing will be carried out for each type of validation service.  More info about performance testing specifics can be found in Test Plan  Performance testing  section.",
            "title": "Additional testing activities"
        },
        {
            "location": "/siva/qa_strategy/#references",
            "text": "Development  This section will be moved to general reference page    [1] Lisa_6_Osa_I_SiVa_Testimise_korraldus.pdf  [2] Lisa_4_Osa_I_SiVa_Valideerimisteenuse_analuus MUUDETUD.pdf  [3] Lisa_3_RIA_Mittefunktsionaalsed_nouded.pdf  [4] OWASP Testing Guide 4.0",
            "title": "References"
        },
        {
            "location": "/siva/test_plan/",
            "text": "Development\n\n\n Unclear items that are not yet present in the plan \n\n\n\n\nTesting of logs\n\n\nTesting of user statistics\n\n\nConfiguration/administration of the service\n\n\nSOAP API testing\n\n\nSystem Testing of X-Road service\n\n\n\n\n\n\nThis is living document and will be constantly updated as the project evolves. The aim of the document is to describe what is tested during SiVa Web Apllication development.\n\n\nIntegration Test introduction\n\n\nOverview of the SiVa (Signature Validation) web service can be found in the \nOverview\n section of the document.\n\n\nThis section of the document gives overview of Integration Testing carried out on SiVa web service.\n\n\nIntegration testing is using RestAssured library v2.5.0 to implement automatic checks for REST/SOAP based tests.\n\n\nThe testing of the SiVa web service is divided into sections based on the software architecture and functionalities provided to the users. The sections are:\n\n\n\n\nREST API\n\n\nSOAP API\n\n\nDDOC signature validation\n\n\nBDOC signature validation\n\n\nPDF signature validation\n\n\nX-Road ASICE signature validation\n\n\n\n\nThe goal is to focus testing on functionalities implemented in SiVa application. Functionalities provided by \nValidation libraries\n are not explicitly tested.\n\n\nTesting of REST API\n\n\nThe goal of the REST API testing is to check that the API is accepting the requests based on the specification and the output result (Validation Report) is in correct format and has all the required elements.\n\n\nValidation REST API tests\n\n\nFollowing areas are tested on input:\n\n\n\n\nWrong (not accepted) values in input parameters\n\n\nEmpty values in input paramters\n\n\nToo many parameters\n\n\nToo few parameters\n\n\nInconsistencies on stated parameters and actual data (wrong document type)\n\n\nCase insensitivity on parameter names\n\n\nEmpty request\n\n\nSimultaneous validation requests\n\n\n\n\nIn all of the negative cases correctness of returned error message is checked.\n\n\nSpecific test cases and input files can be found in:\n\n\n\n\nAppendix 5 - ValidationRequestTests.java\n\n\nAppendix 5 - DocumentFormatTests.java\n\n\n\n\nValidation Report tests\n\n\nSiVa web service returns uniform Validation Report on all the supported document types. This also includes correct document types without actual signature (for example PDF document without signature).\n\n\nFollowing areas are tested on output (Validation Report):\n\n\n\n\nJSON structure on DDOC, BDOC, PDF and ASICE document types\n\n\nPresence of the mandatory elements on DDOC, BDOC, PDF and ASICE document types\n\n\nPresence of optional elements on DDOC, BDOC, PDF and ASICE document types\n\n\nJSON structure on containers without signatures\n\n\n\n\nWhat is not tested:\n\n\n\n\nCorrectness of the values in the report is not in scope on these tests\n\n\n\n\nSpecific test cases and input files can be found in:\n\n\n\n\nAppendix 5 - ValidationReportJsonStructureVerification.java\n\n\n\n\nTesting of SOAP API\n\n\n\n\nDevelopment\n\n\nWill be covered when SOAP API is implemented\n\n\n\n\nTesting of DDOC signature validation\n\n\nThe goal of the DDOC signature validation testing is to check that the validation results given by JDigiDoc library are properly presented in validation report.\n\n\nThe testing of DDOC signatures consists of following main cases:\n\n\n\n\nContainers with valid signature(s) are validated.\n\n\nContainers with invalid signature(s) or no signature are validated\n\n\nContainers sizes near maximum are validated\n\n\nContainers with DDOC v1.0 - 1.3 are validated\n\n\n\n\nSpecific test cases and input files can be found in:\n\n\n\n\nAppendix 5 - DdocValidationFail.java\n\n\nAppendix 5 - DdocValidationPass.java\n\n\nAppendix 5 - LargeFileTests.java\n\n\n\n\nWhat is not tested:\n\n\n\n\nVerification of different causes in container for invalid result is out of scope.\n\n\n\n\n\n\nDevelopment\n\n\nInsert links to JDOC repos where these were tested.\n\n\n\n\nTesting of BDOC signature validation\n\n\nThe goal of the BDOC signature validation testing is to check that the validation results given by DigiDoc4J library are properly presented in validation report.\n\n\nThe testing of BDOC signatures consists of following main cases:\n\n\n\n\nContainers with valid signature(s) are validated (how many signatures are acceptable?)\n\n\nContainers with invalid signature(s) or no signature are validated\n\n\nContainers sizes near maximum are validated\n\n\n\n\nSpecific test cases and input files can be found in:\n\n\n\n\nAppendix 5 - BdocValidationFail.java\n\n\nAppendix 5 - BdocValidationPass.java\n\n\nAppendix 5 - LargeFileTests.java\n\n\n\n\nWhat is not tested:\n\n\n\n\nVerification of different causes in container for invalid result is out of scope.\n\n\n\n\n\n\nDevelopment\n\n\nInsert links where Digidoc4J repos where these were tested.\n\n\n\n\nTesting of PDF signature validation\n\n\nPortion of the validation rules for PDF documents are implemented in SiVa web apllication itself. Therefor different test area selection is used for PDF compared to other containers.\n\n\nThe testing of PDF signatures consists of following main cases:\n\n\n\n\nContainers with invalid signature(s) (different reasons for failure) are validated\n\n\nContainers with no signature are validated\n\n\nContainers sizes near maximum are validated\n\n\nContainers with different baseline profiles are validated\n\n\nContainers with serial and parallel signatures are validated\n\n\nContainers with different signature cryptocaphic algorithms are validated\n\n\nContainers with OCSP values inside and outside bounds are validated\n\n\n\n\nSpecific test cases and input files can be found in:\n\n\n\n\nAppendix 5 - PdfBaselineProfileTests.java\n\n\nAppendix 5 - PdfSignatureCryptographicAlgorithmTests.java\n\n\nAppendix 5 - PdfValidationFail.java\n\n\nAppendix 5 - PdfValidationPass.java\n\n\nAppendix 5 - SignatureRevocationValueTests.java\n\n\nAppendix 5 - LargeFileTests.java\n\n\n\n\nTesting of X-Road ASICE signature validation\n\n\nThe goal of the ASICE signature validation testing is to check that the validation results given by X-Road signature validation utility are properly presented in validation report.\n\n\nIt is possible to validate ASICE containers both via SOAP and REST interface. The same test cases are used for both interfaces.\n\n\nThe testing of ASICE signatures consists of following main cases:\n\n\n\n\nContainers with valid signature(s) are validated\n\n\nContainers with invalid signature(s) and no signature are validated\n\n\nContainers sizes near maximum are validated\n\n\n\n\nSpecific test cases and input files can be found in \nAppendix 5 - Test Case Descriptions\n\n\nWhat is not tested:\n\n\n\n\nVerification of different causes in container for invalid result is out of scope.\n\n\n\n\nSystem Test introduction\n\n\n\n\nDevelopment\n\n\nWill be covered before System Test start\n\n\n\n\nWhile Integration Tests were carried out automatically then System Testing will be done manually.\n\n\nSystem testing is carried out using two access points:\n\n\n\n\nTesting through SiVa Sample Application\n\n\nTesting through X-Road Security Server\n\n\n\n\nThe goal is to test the whole validation process.\n\n\nAdditional features\n\n\n\n\n\"Offline\" mode of SiVa web apllication\n\n\nConfiguration of validation policy\n\n\n\n\nSiVa Sample Application tests\n\n\nIn addition to testing the service as such, SiVa Sample Application itself is tested. The main cases are:\n\n\n\n\nCross browser usage (IE, Edge, Chrome, Firefox and Safari)\n\n\nFile upload (different sizes, suported and unsupported file types)\n\n\nDisplayment of Validation Report\n\n\n\n\nPerformance Test introduction\n\n\nPerformance testing will be carried out on following environments:\n\n\n\n\nNortal Load Test (processor: memory: )\n\n\n\n\nJmeter v2.13 is used to carry out the testing.\n\n\nThe goal is to measure throughput-latency of the service with different file types and sizes. The performance testing is carried out on REST interface. SOAP interface is used only for one testrun for comparison between SOAP and REST interface. It is assessed that the interface itself does not have considerable impact on throughput or latency compared to the validation process.\n\n\nFollowing cases will be covered on all supported file types (BDOC, DDOC, ASICE, PDF):\n\n\n\n\nThe service is loaded under 1MB containers with two valid signatures\n\n\nThe service is loaded around 5MB containers with two valid signatures\n\n\nThe service is loaded near 10MB containers with two valid signatures\n\n\nThe service is loaded under 1MB containers with ten valid signatures\n\n\n\n\nThe thread count will be increased from 5 to 60 with step of 5. The results are presented as throughput-latency graphs for each run.",
            "title": "Test Plan"
        },
        {
            "location": "/siva/test_plan/#integration-test-introduction",
            "text": "Overview of the SiVa (Signature Validation) web service can be found in the  Overview  section of the document.  This section of the document gives overview of Integration Testing carried out on SiVa web service.  Integration testing is using RestAssured library v2.5.0 to implement automatic checks for REST/SOAP based tests.  The testing of the SiVa web service is divided into sections based on the software architecture and functionalities provided to the users. The sections are:   REST API  SOAP API  DDOC signature validation  BDOC signature validation  PDF signature validation  X-Road ASICE signature validation   The goal is to focus testing on functionalities implemented in SiVa application. Functionalities provided by  Validation libraries  are not explicitly tested.",
            "title": "Integration Test introduction"
        },
        {
            "location": "/siva/test_plan/#testing-of-rest-api",
            "text": "The goal of the REST API testing is to check that the API is accepting the requests based on the specification and the output result (Validation Report) is in correct format and has all the required elements.",
            "title": "Testing of REST API"
        },
        {
            "location": "/siva/test_plan/#validation-rest-api-tests",
            "text": "Following areas are tested on input:   Wrong (not accepted) values in input parameters  Empty values in input paramters  Too many parameters  Too few parameters  Inconsistencies on stated parameters and actual data (wrong document type)  Case insensitivity on parameter names  Empty request  Simultaneous validation requests   In all of the negative cases correctness of returned error message is checked.  Specific test cases and input files can be found in:   Appendix 5 - ValidationRequestTests.java  Appendix 5 - DocumentFormatTests.java",
            "title": "Validation REST API tests"
        },
        {
            "location": "/siva/test_plan/#validation-report-tests",
            "text": "SiVa web service returns uniform Validation Report on all the supported document types. This also includes correct document types without actual signature (for example PDF document without signature).  Following areas are tested on output (Validation Report):   JSON structure on DDOC, BDOC, PDF and ASICE document types  Presence of the mandatory elements on DDOC, BDOC, PDF and ASICE document types  Presence of optional elements on DDOC, BDOC, PDF and ASICE document types  JSON structure on containers without signatures   What is not tested:   Correctness of the values in the report is not in scope on these tests   Specific test cases and input files can be found in:   Appendix 5 - ValidationReportJsonStructureVerification.java",
            "title": "Validation Report tests"
        },
        {
            "location": "/siva/test_plan/#testing-of-soap-api",
            "text": "Development  Will be covered when SOAP API is implemented",
            "title": "Testing of SOAP API"
        },
        {
            "location": "/siva/test_plan/#testing-of-ddoc-signature-validation",
            "text": "The goal of the DDOC signature validation testing is to check that the validation results given by JDigiDoc library are properly presented in validation report.  The testing of DDOC signatures consists of following main cases:   Containers with valid signature(s) are validated.  Containers with invalid signature(s) or no signature are validated  Containers sizes near maximum are validated  Containers with DDOC v1.0 - 1.3 are validated   Specific test cases and input files can be found in:   Appendix 5 - DdocValidationFail.java  Appendix 5 - DdocValidationPass.java  Appendix 5 - LargeFileTests.java   What is not tested:   Verification of different causes in container for invalid result is out of scope.    Development  Insert links to JDOC repos where these were tested.",
            "title": "Testing of DDOC signature validation"
        },
        {
            "location": "/siva/test_plan/#testing-of-bdoc-signature-validation",
            "text": "The goal of the BDOC signature validation testing is to check that the validation results given by DigiDoc4J library are properly presented in validation report.  The testing of BDOC signatures consists of following main cases:   Containers with valid signature(s) are validated (how many signatures are acceptable?)  Containers with invalid signature(s) or no signature are validated  Containers sizes near maximum are validated   Specific test cases and input files can be found in:   Appendix 5 - BdocValidationFail.java  Appendix 5 - BdocValidationPass.java  Appendix 5 - LargeFileTests.java   What is not tested:   Verification of different causes in container for invalid result is out of scope.    Development  Insert links where Digidoc4J repos where these were tested.",
            "title": "Testing of BDOC signature validation"
        },
        {
            "location": "/siva/test_plan/#testing-of-pdf-signature-validation",
            "text": "Portion of the validation rules for PDF documents are implemented in SiVa web apllication itself. Therefor different test area selection is used for PDF compared to other containers.  The testing of PDF signatures consists of following main cases:   Containers with invalid signature(s) (different reasons for failure) are validated  Containers with no signature are validated  Containers sizes near maximum are validated  Containers with different baseline profiles are validated  Containers with serial and parallel signatures are validated  Containers with different signature cryptocaphic algorithms are validated  Containers with OCSP values inside and outside bounds are validated   Specific test cases and input files can be found in:   Appendix 5 - PdfBaselineProfileTests.java  Appendix 5 - PdfSignatureCryptographicAlgorithmTests.java  Appendix 5 - PdfValidationFail.java  Appendix 5 - PdfValidationPass.java  Appendix 5 - SignatureRevocationValueTests.java  Appendix 5 - LargeFileTests.java",
            "title": "Testing of PDF signature validation"
        },
        {
            "location": "/siva/test_plan/#testing-of-x-road-asice-signature-validation",
            "text": "The goal of the ASICE signature validation testing is to check that the validation results given by X-Road signature validation utility are properly presented in validation report.  It is possible to validate ASICE containers both via SOAP and REST interface. The same test cases are used for both interfaces.  The testing of ASICE signatures consists of following main cases:   Containers with valid signature(s) are validated  Containers with invalid signature(s) and no signature are validated  Containers sizes near maximum are validated   Specific test cases and input files can be found in  Appendix 5 - Test Case Descriptions  What is not tested:   Verification of different causes in container for invalid result is out of scope.",
            "title": "Testing of X-Road ASICE signature validation"
        },
        {
            "location": "/siva/test_plan/#system-test-introduction",
            "text": "Development  Will be covered before System Test start   While Integration Tests were carried out automatically then System Testing will be done manually.  System testing is carried out using two access points:   Testing through SiVa Sample Application  Testing through X-Road Security Server   The goal is to test the whole validation process.",
            "title": "System Test introduction"
        },
        {
            "location": "/siva/test_plan/#additional-features",
            "text": "\"Offline\" mode of SiVa web apllication  Configuration of validation policy",
            "title": "Additional features"
        },
        {
            "location": "/siva/test_plan/#siva-sample-application-tests",
            "text": "In addition to testing the service as such, SiVa Sample Application itself is tested. The main cases are:   Cross browser usage (IE, Edge, Chrome, Firefox and Safari)  File upload (different sizes, suported and unsupported file types)  Displayment of Validation Report",
            "title": "SiVa Sample Application tests"
        },
        {
            "location": "/siva/test_plan/#performance-test-introduction",
            "text": "Performance testing will be carried out on following environments:   Nortal Load Test (processor: memory: )   Jmeter v2.13 is used to carry out the testing.  The goal is to measure throughput-latency of the service with different file types and sizes. The performance testing is carried out on REST interface. SOAP interface is used only for one testrun for comparison between SOAP and REST interface. It is assessed that the interface itself does not have considerable impact on throughput or latency compared to the validation process.  Following cases will be covered on all supported file types (BDOC, DDOC, ASICE, PDF):   The service is loaded under 1MB containers with two valid signatures  The service is loaded around 5MB containers with two valid signatures  The service is loaded near 10MB containers with two valid signatures  The service is loaded under 1MB containers with ten valid signatures   The thread count will be increased from 5 to 60 with step of 5. The results are presented as throughput-latency graphs for each run.",
            "title": "Performance Test introduction"
        },
        {
            "location": "/siva/references/",
            "text": "References",
            "title": "References"
        },
        {
            "location": "/siva/references/#references",
            "text": "",
            "title": "References"
        },
        {
            "location": "/siva/appendix/none_functional_requirements/",
            "text": "",
            "title": "Appendix 1 - Non-Functional Requirements"
        },
        {
            "location": "/siva/appendix/functional_requirements/",
            "text": "",
            "title": "Appendix 2 - Functional Requirements"
        },
        {
            "location": "/siva/appendix/validation_policy/",
            "text": "Validation policy\n\n\n\n\nNote\n\n\nInformation will be added after analysis has been completed and agreed \nupon",
            "title": "Appendix 3 - Validation Policy"
        },
        {
            "location": "/siva/appendix/validation_policy/#validation-policy",
            "text": "Note  Information will be added after analysis has been completed and agreed \nupon",
            "title": "Validation policy"
        },
        {
            "location": "/siva/appendix/validation_constraints/",
            "text": "",
            "title": "Appendix 4 - Validation Constraint Configuration"
        },
        {
            "location": "/siva/appendix/test_cases/",
            "text": "List of Test Cases\n\n\nBdocValidationFail.java\n\n\nTestCaseID: Bdoc-ValidationFail-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc with single invalid signature\n\n\nExpected Result: The document should fail the validation\n\n\nFile: IB-3960_bdoc2.1_TSA_SignatureValue_altered.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc with multiple invalid signatures\n\n\nExpected Result: The document should fail the validation\n\n\nFile: BdocMultipleSignaturesInvalid.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc with multiple signatures both valid and invalid\n\n\nExpected Result: The document should fail the validation\n\n\nFile: BdocMultipleSignaturesMixedWithValidAndInvalid.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc with no signatures\n\n\nExpected Result: The document should fail the validation\n\n\nFile: BdocContainerNoSignature.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc with invalid mimetype in manifest\n\n\nExpected Result: document malformed error should be returned\n\n\nFile: 23147_weak-warning-sha1-invalid-mimetype-in-manifest.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Asice with wrong slash character ('\\') in data file mime-type value\n\n\nExpected Result: The document should fail the validation\n\n\nFile: EE_SER-AEX-B-LT-V-33.asice\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-7\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Asice time-stamp does not correspond to the SignatureValue element\n\n\nExpected Result: The document should fail the validation\n\n\nFile: TS-02_23634_TS_wrong_SignatureValue.asice\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-8\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Asice No non-repudiation key usage value in the certificate\n\n\nExpected Result: The document should fail the validation\n\n\nFile: EE_SER-AEX-B-LT-I-43.asice\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-9\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Asice signers certificate does not have non-repudiation value in the certificates key usage field and it does not contain the QC and SSCD compliance information.\n\n\nExpected Result: The document should fail the validation\n\n\nFile: EE_SER-AEX-B-LT-I-26.asice\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-10\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc OCSP certificate is not trusted\n\n\nExpected Result: The document should fail the validation\n\n\nFile:  TM-01_bdoc21-unknown-resp.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-11\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Asice TSA certificate is not trusted\n\n\nExpected Result: The document should fail the validation\n\n\nFile: TS-05_23634_TS_unknown_TSA.asice\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-12\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Asice OCSP response status is revoked\n\n\nExpected Result: The document should fail the validation\n\n\nFile: EE_SER-AEX-B-LT-R-25.asice\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-13\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Asice difference between OCSP and time-stamp issuing times is more than 24 hours\n\n\nExpected Result: The document should fail the validation\n\n\nFile: EE_SER-AEX-B-LT-V-20.asice\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-14\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Asice unsigned data files in the container\n\n\nExpected Result: The document should fail the validation\n\n\nFile: EE_SER-AEX-B-LT-V-34.asice\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Bdoc-ValidationFail-15\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc different data file mime-type values in signatures.xml and manifest.xml files\n\n\nExpected Result: The document should fail the validation\n\n\nFile: 23613_TM_wrong-manifest-mimetype.bdoc\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Bdoc-ValidationFail-16\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc SignatureValue does not correspond to the SignedInfo block\n\n\nExpected Result: The document should fail the validation\n\n\nFile: REF-19_bdoc21-no-sig-asn1-pref.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-17\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc Baseline-BES file\n\n\nExpected Result: The document should fail the validation\n\n\nFile: TM-05_bdoc21-good-nonce-policy-bes.bdoc\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Bdoc-ValidationFail-18\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc Baseline-EPES file\n\n\nExpected Result: The document should fail the validation\n\n\nFile: TM-04_kehtivuskinnituset.4.asice\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-19\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc signers certificate is not trusted\n\n\nExpected Result: The document should fail the validation\n\n\nFile: SS-4_teadmataCA.4.asice\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-20\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc OCSP response status is revoked\n\n\nExpected Result: The document should fail the validation\n\n\nFile: TM-15_revoked.4.asice\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-21\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc OCSP response status is unknown\n\n\nExpected Result: The document should fail the validation\n\n\nFile: TM-16_unknown.4.asice\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Bdoc-ValidationFail-22\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc signed data file has been removed from the container\n\n\nExpected Result: The document should fail the validation\n\n\nFile: TM-16_unknown.4.asice\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-23\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc no files in container\n\n\nExpected Result: The document should fail the validation\n\n\nFile: KS-02_tyhi.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-24\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc signed data file has been removed from the container\n\n\nExpected Result: The document should fail the validation\n\n\nFile: TM-10_noncevale.4.asice\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-25\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc signed data file(s) don't match the hash values in reference elements\n\n\nExpected Result: The document should fail the validation\n\n\nFile: REF-14_filesisumuudetud.4.asice\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-26\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Asice Baseline-T signature\n\n\nExpected Result: The document should fail the validation\n\n\nFile: TS-06_23634_TS_missing_OCSP.asice\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-27\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc     OCSP response doesn't correspond to the signers certificate\n\n\nExpected Result: The document should fail the validation\n\n\nFile: NS28_WrongSignerCertInOCSPResp.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationFail-28\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc certificate's validity time is not in the period of OCSP producedAt time\n\n\nExpected Result: The document should fail the validation\n\n\nFile: 23154_test1-old-sig-sigat-OK-prodat-NOK-1.bdoc\n\n\n\n\nBdocValidationPass.java\n\n\nTestCaseID: Bdoc-ValidationPass-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc with single valid signature\n\n\nExpected Result: The document should pass the validation\n\n\nFile: Valid_ID_sig.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationPass-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc TM with multiple valid signatures\n\n\nExpected Result: The document should pass the validation\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationPass-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc with warning on signature\n\n\nExpected Result: The document should pass the validation but warning should be returned\n\n\nFile:\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Bdoc-ValidationPass-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Asice One LT signature with certificates from different countries\n\n\nExpected Result: The document should pass the validation\n\n\nFile: EE_SER-AEX-B-LT-V-30.asice\n\n\n\n\nTestCaseID: Bdoc-ValidationPass-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc signed with Mobile-ID, ECC-SHA256 signature with prime256v1 key\n\n\nExpected Result: The document should pass the validation\n\n\nFile: 24050_short_ecdsa_correct_file_mimetype.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationPass-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Asice Baseline-LT file\n\n\nExpected Result: The document should pass the validation\n\n\nFile: EE_SER-AEX-B-LT-V-49.asice\n\n\n\n\nTestCaseID: Bdoc-ValidationPass-7\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Asice QES file\n\n\nExpected Result: The document should pass the validation\n\n\nFile: bdoc21-TS.asice\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Bdoc-ValidationPass-8\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Asice Baseline-LTA file\n\n\nExpected Result: The document should pass the validation\n\n\nFile: EE_SER-AEX-B-LTA-V-24.asice\n\n\n\n\nTestCaseID: Bdoc-ValidationPass-9\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Asice file signed with Mobile-ID, ECC-SHA256 signature with prime256v1 key\n\n\nExpected Result: The document should pass the validation\n\n\nFile: EE_SER-AEX-B-LT-V-2.asice\n\n\n\n\nTestCaseID: Bdoc-ValidationPass-10\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Asice file with  ESTEID-SK 2015 certificate chain\n\n\nExpected Result: The document should pass the validation\n\n\nFile: IB-4270_TS_ESTEID-SK 2015  SK OCSP RESPONDER 2011.asice\n\n\n\n\nTestCaseID: Bdoc-ValidationPass-11\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Asice file with KLASS3-SK 2010 (EECCRCA) certificate chain\n\n\nExpected Result: The document should pass the validation\n\n\nFile: EE_SER-AEX-B-LT-V-28.asice\n\n\n\n\nTestCaseID: Bdoc-ValidationPass-12\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc with Baseline-LT_TM and QES signature level and ESTEID-SK 2011 certificate chain with valid signature\n\n\nExpected Result: The document should pass the validation\n\n\nFile: BDOC2.1.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationPass-13\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc TS with multiple valid signatures\n\n\nExpected Result: The document should pass the validation\n\n\nFile: BDOC-TS.bdoc\n\n\n\n\nDdocValidationFail.java\n\n\nTestCaseID: Ddoc-ValidationFail-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc with single invalid signature\n\n\nExpected Result: The document should fail the validation\n\n\nFile: test1-ddoc-revoked.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationFail-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc with multiple invalid signatures\n\n\nExpected Result: The document should fail the validation\n\n\nFile: multipleInvalidSignatures.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationFail-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc with multiple signatures both valid and invalid\n\n\nExpected Result: The document should fail the validation\n\n\nFile: multipleValidAndInvalidSignatures.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationFail-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc with no signatures\n\n\nExpected Result: The document should fail the validation\n\n\nFile: DdocContainerNoSignature.bdoc\n\n\n\n\nTestCaseID: Ddoc-ValidationFail-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc signature value has been changed (SignatureValue does not correspond to the SignedInfo block)\n\n\nExpected Result: The document should fail the validation\n\n\nFile: test-inv-sig-inf.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationFail-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc Data file(s) don't match the hash values in Reference elements\n\n\nExpected Result: The document should fail the validation\n\n\nFile: AndmefailiAtribuudidMuudetud.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationFail-7\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc Baseline-BES file, no OCSP response\n\n\nExpected Result: The document should fail the validation\n\n\nFile: ilma_kehtivuskinnituseta.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationFail-8\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc no non-repudiation key usage value in the certificate\n\n\nExpected Result: The document should fail the validation\n\n\nFile: test-non-repu1.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationFail-8\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc Signer's certificate is not trusted\n\n\nExpected Result: The document should fail the validation\n\n\nFile: Belgia_kandeavaldus_LIV.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationFail-9\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc OCSP certificate is not trusted\n\n\nExpected Result: The document should fail the validation\n\n\nFile: Tundmatu_OCSP_responder.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationFail-10\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc has unsigned data files in the container\n\n\nExpected Result: The document should fail the validation\n\n\nFile: lisatud_andmefail.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationFail-11\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc signed data file has been removed from the container\n\n\nExpected Result: The document should fail the validation\n\n\nFile: faileemald1.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationFail-12\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc signed data file has been removed from the container\n\n\nExpected Result: The document should fail the validation\n\n\nFile: OCSP nonce vale.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationFail-13\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc with XML Entity expansion attack\n\n\nExpected Result: The document should fail the validation with error\n\n\nFile: 2.denialOfServiceWithEntityExpansion.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationFail-14\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc with XML server side request forgery attack\n\n\nExpected Result: The document should fail the validation with error\n\n\nFile: 3.serverSideRequestForgeryViaDtd.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationFail-15\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc no files in container\n\n\nExpected Result: The document should fail the validation\n\n\nFile: KS-02_tyhi.ddoc\n\n\n\n\nDdocValidationPass.java\n\n\nTestCaseID: Ddoc-ValidationPass-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc v1.0 with valid signatures\n\n\nExpected Result: The document should pass the validation\n\n\nFile: SK-XML1.0.ddoc\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Ddoc-ValidationPass-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc v1.1 with valid signature\n\n\nExpected Result: The document should pass the validation\n\n\nFile: DIGIDOC-XML1.1.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationPass-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc v1.2 with valid signature\n\n\nExpected Result: The document should pass the validation\n\n\nFile: DIGIDOC-XML1.2.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationPass-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc v1.3 with valid signature with ESTEID-SK 2011 certificate chain\n\n\nExpected Result: The document should pass the validation\n\n\nFile: DIGIDOC-XML1.3.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationPass-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc v1.3 with valid signature, signed data file name has special characters and ESTEID-SK certificate chain\n\n\nExpected Result: The document should pass the validation\n\n\nFile: susisevad1_3.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationPass-7\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc v1.3 KLASS3-SK certificate chain with valid signature\n\n\nExpected Result: The document should pass the validation\n\n\nFile: KLASS3-SK _ KLASS3-SK OCSP RESPONDER uus.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationPass-8\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc v1.3 KLASS3-SK 2010 certificate chain with valid signature\n\n\nExpected Result: The document should pass the validation\n\n\nFile: KLASS3-SK 2010 _ KLASS3-SK 2010 OCSP RESPONDER.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationPass-9\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc v1.1 ESTEID-SK 2007 certificate chain with valid signature\n\n\nExpected Result: The document should pass the validation\n\n\nFile: vaikesed1.1.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationPass-10\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc v1.1 ESTEID-SK 2007 certificate chain with valid signature\n\n\nExpected Result: The document should pass the validation\n\n\nFile: IB-4270_ESTEID-SK 2015  SK OCSP RESPONDER 2011.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationPass-11\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc v1.1 ESTEID-SK certificate chain with valid signature\n\n\nExpected Result: The document should pass the validation\n\n\nFile: EID-SK _ EID-SK OCSP RESPONDER.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationPass-12\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc v1.1 ESTEID-SK 2007 and OCSP 2010 certificate chain with valid signature\n\n\nExpected Result: The document should pass the validation\n\n\nFile: EID-SK 2007 _ EID-SK 2007 OCSP RESPONDER 2010.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationPass-13\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc v1.3 ESTEID-SK 2007 and OCSP 2007 certificate chain with valid signature\n\n\nExpected Result: The document should pass the validation\n\n\nFile: EID-SK 2007 _ EID-SK 2007 OCSP RESPONDER.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationPass-14\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Ddoc v1.3 ESTEID-SK 2011 and OCSP 2011 certificate chain with valid signature\n\n\nExpected Result: The document should pass the validation\n\n\nFile: EID-SK 2011 _ SK OCSP RESPONDER 2011.ddoc\n\n\n\n\nDocumentFormatTests.java\n\n\nTestCaseID: DocumentFormat-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n(TBD)\n\n\nTitle: Validation of pdf document acceptance\n\n\nExpected Result: Pdf is accepted and correct signature validation is given\n\n\nFile: hellopades-pades-lt-sha256-sign.pdf\n\n\n\n\nTestCaseID: DocumentFormat-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n(TBD)\n\n\nTitle: Validation of bdoc document acceptance\n\n\nExpected Result: Bdoc is accepted and correct signature validation is given\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: DocumentFormat-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n(TBD)\n\n\nTitle: Validation of txt document rejection\n\n\nExpected Result: Txt document is rejected and proper error message is given\n\n\nFile: hellopades-pades-lt-sha256-sign.txt\n\n\n\n\nTestCaseID: DocumentFormat-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n(TBD)\n\n\nTitle: Validation of p7s document rejection\n\n\nExpected Result: P7s document is rejected and proper error message is given\n\n\nFile: hellocades.p7s\n\n\n\n\nTestCaseID: DocumentFormat-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n(TBD)\n\n\nTitle: Validation of zip document rejection\n\n\nExpected Result: Zip document is rejected and proper error message is given\n\n\nFile: 42.zip\n\n\n\n\nTestCaseID: DocumentFormat-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n(TBD)\n\n\nTitle: Validation of doc document rejection\n\n\nExpected Result: Doc document is rejected and proper error message is given\n\n\nFile: hellopades-pades-lt-sha256-sign.doc\n\n\n\n\nTestCaseID: DocumentFormat-7\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n(TBD)\n\n\nTitle: Validation of XML document rejection\n\n\nExpected Result: XML document is rejected and proper error message is given\n\n\nFile: XML.xml\n\n\n\n\nTestCaseID: DocumentFormat-8\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n(TBD)\n\n\nTitle: Validation of png document rejection\n\n\nExpected Result: Png document is rejected and proper error message is given\n\n\nFile: Picture.png\n\n\n\n\nLargeFileTests.java\n\n\nTestCaseID: PDF-LargeFiles-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Larger signed PDF files (PAdES Baseline LT).\n\n\nExpected Result: Bigger documents with valid signature should pass\n\n\nFile: scout_x4-manual-signed_lt_9mb.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-LargeFiles-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Larger signed PDF files (PAdES Baseline LT).\n\n\nExpected Result: Bigger documents with valid signature should pass\n\n\nFile: scout_x4-manual-signed_lta_9mb.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-LargeFiles-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Larger signed PDF files (PAdES Baseline LT).\n\n\nExpected Result: Bigger documents with valid signature should pass\n\n\nFile: singlesignature_lt_1-2mb.pdf\n\n\n\n\nTestCaseID: PDF-LargeFiles-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Larger signed PDF files (PAdES Baseline LT).\n\n\nExpected Result: Bigger documents with valid signature should pass\n\n\nFile: digidocservice-signed-lta-1-2mb.pdf\n\n\n\n\nTestCaseID: PDF-LargeFiles-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Larger signed PDF files (PAdES Baseline LT).\n\n\nExpected Result: Bigger documents with valid signature should pass\n\n\nFile: singlesignature_lt_3-8mb.pdf\n\n\n\n\nTestCaseID: PDF-LargeFiles-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Larger signed PDF files (PAdES Baseline LT).\n\n\nExpected Result: Bigger documents with valid signature should pass\n\n\nFile: egovenrment-benchmark-lta-3-8mb.pdf\n\n\n\n\nPdfBaselineProfileTests.java\n\n\nTestCaseID: PDF-BaselineProfile-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF has PAdES-B profile signature\n\n\nExpected Result: Document validation should fail\n\n\nFile: hellopades-pades-b-sha256-auth.pdf\n\n\n\n\nTestCaseID: PDF-BaselineProfile-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF has PAdES-T profile signature\n\n\nExpected Result: Document validation should fail\n\n\nFile:\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-BaselineProfile-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF has PAdES-LT profile signature\n\n\nExpected Result: Document validation should pass\n\n\nFile: hellopades-pades-lt-sha256-sign.pdf\n\n\n\n\nTestCaseID: PDF-BaselineProfile-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF has PAdES-LTA profile signature\n\n\nExpected Result: Document validation should pass\n\n\nFile:\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-BaselineProfile-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF has PAdES-LT and B profile signature\n\n\nExpected Result: Document validation should fail\n\n\nFile: hellopades-lt-b.pdf\n\n\n\n\nTestCaseID: PDF-BaselineProfile-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: PDF document message digest attribute value does not match calculate value\n\n\nExpected Result: Document validation should fail\n\n\nFile: hellopades-lt1-lt2-wrongDigestValue.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-BaselineProfile-7\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: PDF file with a serial signature\n\n\nExpected Result: Document signed with multiple signers with serial signatures should pass\n\n\nFile: hellopades-lt1-lt2-Serial.pdf\n\n\n\n\nTestCaseID: PDF-BaselineProfile-8\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: PDF document signed with multiple signers parallel signature\n\n\nExpected Result: Document with parallel signatures should pass\n\n\nFile: hellopades-lt1-lt2-parallel3.pdf\n\n\n\n\nTestCaseID: PDF-BaselineProfile-9\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: PDF document signed with multiple signers parallel signature without Sscd\n\n\nExpected Result: Document with no qualified and without SSCD should warn\n\n\nFile: hellopades-lt1-lt2-parallel3.pdf\n\n\n\n\nPdfSignatureCryptographicAlgorithmTests.java\n\n\nTestCaseID: PDF-SigCryptoAlg-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: SHA512 algorithms (PAdES Baseline LT)\n\n\nExpected Result: Document signed with SHA512 algorithm should pass\n\n\nFile: hellopades-lt-sha512.pdf\n\n\n\n\nTestCaseID: PDF-SigCryptoAlg-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: SHA1 algorithms (PAdES Baseline LT)\n\n\nExpected Result: Document signed with SHA1 algorithm should pass\n\n\nFile: hellopades-lt-sha1.pdf\n\n\n\n\nTestCaseID: PDF-SigCryptoAlg-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: ECDSA algorithms (PAdES Baseline LT)\n\n\nExpected Result: Document signed with ECDSA algorithm should pass\n\n\nFile: hellopades-ecdsa.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-SigCryptoAlg-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: ECDSA224 algorithms (PAdES Baseline LT)\n\n\nExpected Result: Document signed with ECDSA224 algorithm should pass\n\n\nFile: hellopades-lt-sha256-ec224.pdf\n\n\n\n\nTestCaseID: PDF-SigCryptoAlg-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: ECDSA256 algorithms (PAdES Baseline LT)\n\n\nExpected Result: Document signed with ECDSA256 algorithm should pass\n\n\nFile: hellopades-lt-sha256-ec256.pdf\n\n\n\n\nTestCaseID: PDF-SigCryptoAlg-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: RSA1024 algorithms (PAdES Baseline LT)\n\n\nExpected Result: Document signed with RSA1024 algorithm should pass\n\n\nFile: hellopades-lt-sha256-rsa1024.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-SigCryptoAlg-7\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: RSA1023 algorithms (PAdES Baseline LT)\n\n\nExpected Result: Document signed with RSA1023 algorithm should pass\n\n\nFile: hellopades-lt-sha256-rsa1023.pdf\n\n\n\n\nTestCaseID: PDF-SigCryptoAlg-8\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: RSA2047 algorithms (PAdES Baseline LT)\n\n\nExpected Result: Document signed with RSA2047 algorithm should pass\n\n\nFile: hellopades-lt-sha256-rsa2047.pdf\n\n\n\n\nTestCaseID: PDF-SigCryptoAlg-9\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: RSA2048 algorithms (PAdES Baseline LT)\n\n\nExpected Result: Document signed with RSA2048 algorithm should pass\n\n\nFile: PdfValidSingleSignature\n\n\n\n\nPdfValidationFail.java\n\n\nTestCaseID: PDF-ValidationFail-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF-file has been signed with expired certificate (PAdES Baseline LT)\n\n\nExpected Result: Document signed with certificate that is expired should fail.\n\n\nFile: hellopades-lt-rsa1024-sha1-expired.pdf\n\n\n\n\nTestCaseID: PDF-ValidationFail-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF-file has been signed with revoked certificate (PAdES Baseline LT)\n\n\nExpected Result: Document signed with certificate that is revoked should fail.\n\n\nFile: pades_lt_revoked.pdf\n\n\n\n\nTestCaseID: PDF-ValidationFail-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF-file has been signed with certificate that missing signed attribute (PAdES Baseline LT)\n\n\nExpected Result: PDF-file validation should fail\n\n\nFile: missing_signing_certificate_attribute.pdf\n\n\n\n\nTestCaseID: PDF-ValidationFail-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF-file has been signed with certificate which has no non repudiation key usage attribute (PAdES Baseline LT)\n\n\nExpected Result: The PDF-file validation should fail with error.\n\n\nFile: hellopades-pades-lt-sha256-auth.pdf\n\n\n\n\nTestCaseID: PDF-ValidationFail-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: hellopadess been signed with an expired certificate, where signing time is within the original validity\n\n\nExpected Result: Document signed with expired certificate should fail\n\n\nFile: hellopades-lt-sha256-rsa2048-expired.pdf\n\n\n\n\nTestCaseID: PDF-ValidationFail-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: hellopadess been signed with an expired certificate, where signing time is within the original validity\n\n\nExpected Result: Document signed with expired certificate should fail\n\n\nFile: hellopades-lt-sha256-rsa1024-expired2.pdf\n\n\n\n\nTestCaseID: PDF-ValidationFail-7\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: hellopadess been signed with an expired certificate, where signing time is within the original validity\n\n\nExpected Result: Document signed with expired certificate should fail\n\n\nFile: hellopades-lt-sha1-rsa1024-expired2.pdf\n\n\n\n\nPdfValidationPass.java\n\n\nTestCaseID: PDF-ValidationPass-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF-file has been signed with certificate that is expired after signing (PAdES Baseline LT)\n\n\nExpected Result: Document signed with certificate that expired after signing should pass.\n\n\nFile: hellopades-lt-sha256-rsa1024-not-expired.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-ValidationPass-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF-file has been signed with certificate that will expire in 7 days after signing (PAdES Baseline LT)\n\n\nExpected Result: Document signed with certificate that expired after signing should pass.\n\n\nFile: hellopades-lt-sha256-rsa2048-7d.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-ValidationPass-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Pdf with single valid signature\n\n\nExpected Result: Document should pass.\n\n\nFile: PdfValidSingleSignature.pdf\n\n\n\n\nSignaturePolicyTests.java\n\n\nTestCaseID: Signature-Policy-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF-file has PAdES-LT profile signature and an OCSP confirmation more than 24 hours later than the signatures Time Stamp.\n\n\nExpected Result: Document with over 24h delay should fail when signature policy is set to \"EE\"\n\n\nFile: hellopades-lt-sha256-ocsp-28h.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Signature-Policy-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF-file has PAdES-LT profile signature and an OCSP confirmation more than 24 hours later than the signatures Time Stamp.\n\n\nExpected Result: Document with over 24h delay should pass when signature policy is set to \"EU\"\n\n\nFile: hellopades-lt-sha256-ocsp-28h.pdf\n\n\n\n\nTestCaseID: Signature-Policy-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF-file has PAdES-LT profile signature and an OCSP confirmation more than 24 hours later than the signatures Time Stamp.\n\n\nExpected Result: Document with over 24h delay should fail when signature policy is not set or empty, because it defaults to \"EE\"\n\n\nFile: hellopades-lt-sha256-ocsp-28h.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Signature-Policy-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF has PAdES-LT and B profile signature\n\n\nExpected Result: 1 of 2 signatures' should pass when signature policy is set to \"EE\"\n\n\nFile: hellopades-lt-b.pdf\n\n\n\n\nTestCaseID: Signature-Policy-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF has PAdES-LT and B profile signature\n\n\nExpected Result: 2 of 2 signatures' validation should pass when signature policy is set to \"EU\"\n\n\nFile: hellopades-lt-b.pdf\n\n\n\n\nTestCaseID: Signature-Policy-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: Bdoc with conformant EE signature\n\n\nExpected Result: Document should pass when signature policy is set to \"EE\"\n\n\nFile: Valid_ID_sig.bdoc\n\n\n\n\nSignatureRevocationValueTests.java\n\n\nTestCaseID: PDF-SigRevocVal-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF-file has PAdES-LT profile signature and an OCSP confirmation that is more than 15 minutes later than the signatures Time Stamp.\n\n\nExpected Result: Document with ocsp over 15 min delay should pass but warn\n\n\nFile: hellopades-lt-sha256-ocsp-15min1s.pdf\n\n\n\n\nTestCaseID: PDF-SigRevocVal-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF-file has PAdES-LT profile signature and an OCSP confirmation that is more than 15 minutes later than the signatures Time Stamp.\n\n\nExpected Result: Document with ocsp over 15 min delay should pass but warn\n\n\nFile: hellopades-lt-sha256-ocsp-15min1s.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-SigRevocVal-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF-file has PAdES-LT profile signature and an OCSP confirmation more than 24 hours later than the signatures Time Stamp.\n\n\nExpected Result: Document with over 24h delay should fail\n\n\nFile: hellopades-lt-sha256-ocsp-28h.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-SigRevocVal-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: The PDF-file has been signed with PAdES Baseline LTA profile signature, the signature contains CRL.\n\n\nExpected Result: Document with no ocsp or crl in signature should fail\n\n\nFile: hellopades-lta-no-ocsp.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: PDF-SigRevocVal-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \n\n\nTitle: PDF signature has OCSP confirmation before Time Stamp\n\n\nExpected Result: Document signed with ocsp time value before best signature time should fail\n\n\nFile: hellopades-lt-sha256-rsa2048-ocsp-before-ts.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nValidationReportValueVerification.java\n\n\nTestCaseID: Bdoc-ValidationReportVerification-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report XAdES_BASELINE_LT_TM, QES, FullSignatureScope\n\n\nExpected Result: All required elements are present and meet the expected values.\n\n\nFile: Valid_ID_sig.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationReportVerification-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report XAdES_BASELINE_LT, QES, FullSignatureScope\n\n\nExpected Result: All required elements are present and meet the expected values.\n\n\nFile: 23635_bdoc_ts_OCSP_random_nonce.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationReportVerification-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report XAdES_BASELINE_LT, AdES, FullSignatureScope, warning\n\n\nExpected Result: All required elements are present and meet the expected values.\n\n\nFile: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationReportVerification-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report XAdES_BASELINE_LT-TM, AdESqc\n\n\nExpected Result: All required elements are present and meet the expected values.\n\n\nFile: 23200_weakdigest-wrong-nonce.asice\n\n\n\n\nTestCaseID: Bdoc-ValidationReportVerification-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: JSON structure has all elements (Bdoc valid multiple signatures)\n\n\nExpected Result: All required elements are present according to SimpleReportSchema.json\n\n\nFile: Baltic MoU digital signing_EST_LT_LV.bdoc\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Bdoc-ValidationReportVerification-7\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: JSON structure has all elements (Bdoc indeterminate status)\n\n\nExpected Result: All required elements are present according to BdocDocSimpleReportSchema.json\n\n\nFile: test1-bdoc-unknown.bdoc\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Bdoc-ValidationReportVerification-8\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle:  Bdoc report with no signatures\n\n\nExpected Result: Report is returned with required elements\n\n\nFile:BdocContainerNoSignature.bdoc\n\n\n\n\nTestCaseID: Pdf-ValidationReportVerification-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: JSON structure has all elements (Pdf valid single signature)\n\n\nExpected Result: All required elements are present according to SimpleReportSchema.json\n\n\nFile: hellopades-lt-sha256-ec256.pdf\n\n\n\n\nTestCaseID: Pdf-ValidationReportVerification-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: JSON structure has all elements (Pdf valid Multiple signatures)\n\n\nExpected Result: All required elements are present according to SimpleReportSchema.json\n\n\nFile:\n\n\n\n\nTestCaseID: Pdf-ValidationReportVerification-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: JSON structure has all elements (Pdf invalid signature)\n\n\nExpected Result: All required elements are present according to SimpleReportSchema.json\n\n\nFile: hellopades-lt-b.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Pdf-ValidationReportVerification-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: JSON structure has all elements (Pdf indeterminate status)\n\n\nExpected Result: All required elements are present according to SimpleReportSchema.json\n\n\nFile: hellopades-lt-rsa1024-sha1-expired.pdf\n\n\n\n\nTestCaseID: Pdf-ValidationReportVerification-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle:  Pdf report with no signatures\n\n\nExpected Result: Report is returned with required elements\n\n\nFile: PdfNoSignature.pdf\n\n\n\n\nTestCaseID: Ddoc-ValidationReportVerification-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: JSON structure has all elements (ddoc valid single signature)\n\n\nExpected Result: All required elements are present according to SimpleReportSchema.json\n\n\nFile: DIGIDOC-XML1.3.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationReportVerification-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: JSON structure has all elements (ddoc invalid signature)\n\n\nExpected Result: All required elements are present according to SimpleReportSchema.json\n\n\nFile: test1-ddoc-revoked.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationReportVerification-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: JSON structure has all elements (ddoc indeterminate status)\n\n\nExpected Result: All required elements are present according to SimpleReportSchema.json\n\n\nFile: test1-ddoc-unknown.ddoc\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Ddoc-ValidationReportVerification-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Check for optional warning element\n\n\nExpected Result: Warning element is present\n\n\nFile:\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Ddoc-ValidationReportVerification-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle:  Ddoc report with no signatures\n\n\nExpected Result: Report is returned with required elements\n\n\nFile: DdocContainerNoSignature.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationReportVerification-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report, xml v1.0, checks for missing info\n\n\nExpected Result: All required elements are present and meet the expected values and other values are empty as expected.\n\n\nFile: SK-XML1.0.ddoc\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Ddoc-ValidationReportVerification-7\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report, xml v1.1, checks for missing info\n\n\nExpected Result: All required elements are present and meet the expected values and other values are empty as expected.\n\n\nFile: Igasugust1.1.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationReportVerification-8\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report, xml v1.2, checks for missing info\n\n\nExpected Result: All required elements are present and meet the expected values and other values are empty as expected.\n\n\nFile: Igasugust1.2.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationReportVerification-9\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report, xml v1.3, checks for missing info\n\n\nExpected Result: All required elements are present and meet the expected values and other values are empty as expected.\n\n\nFile: Igasugust1.3.ddoc\n\n\n\n\nTestCaseID: Xroad-ValidationReportVerification-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle:\n\n\nExpected Result: Report is returned with required elements\n\n\nFile: xroad-simple.asice\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nValidationRequestTests.java\n\n\nTestCaseID: ValidationRequest-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Input empty values\n\n\nExpected Result: Errors are returned stating the missing values\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: ValidationRequest-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of wrong document type as input\n\n\nExpected Result: Correct error code is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: ValidationRequest-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Request has invalid key on document position\n\n\nExpected Result: Error is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: ValidationRequest-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Request has XML as document type (special case, XML is similar to ddoc and was a accepted document type in earlier versions)\n\n\nExpected Result: Error is given\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: ValidationRequest-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Request has long (38784 characters) in filename field\n\n\nExpected Result: Report is returned with the same filename\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: ValidationRequest-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Totally empty request body is sent\n\n\nExpected Result: Error is given\n\n\nFile: None\n\n\n\n\nTestCaseID: ValidationRequest-7\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Request with more parameters than expected is sent\n\n\nExpected Result: Error is given or extra parameters are ignored?\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: ValidationRequest-8\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Request with special chars is sent\n\n\nExpected Result: Validation report is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: ValidationRequest-9\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Request with not base64 string as document\n\n\nExpected Result: Error is returned stating encoding problem\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationRequest-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (bdoc and pdf)\n\n\nExpected Result: Error is returned\n\n\nFile: PdfValidSingleSignature.pdf\n\n\n\n\nTestCaseID: Bdoc-ValidationRequest-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (bdoc and ddoc)\n\n\nExpected Result: Error is returned\n\n\nFile: igasugust1.3.ddoc\n\n\n\n\nTestCaseID: Bdoc-ValidationRequest-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (bdoc and xroad)\n\n\nExpected Result: Error is returned\n\n\nFile: xroad-simple.asice\n\n\n\n\nTestCaseID: Bdoc-ValidationRequest-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Bdoc file, not existing value in signaturePolicy\n\n\nExpected Result: Error is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationRequest-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Bdoc file, policy fiels should be case insensitive\n\n\nExpected Result: Error is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Bdoc-ValidationRequest-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Request without optional signaturePolicy field\n\n\nExpected Result: Validation report is returned with default policy\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationRequest-7\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Input random base64 string as document with bdoc document type\n\n\nExpected Result: Error is returned stating problem in document\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationRequest-8\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Acceptance of ASICE as BDOC document type\n\n\nExpected Result: Asice files are handled the same as bdoc\n\n\nFile: bdoc21-TS.asice\n\n\n\n\nTestCaseID: Bdoc-ValidationRequest-9\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of case insensitivity in document type\n\n\nExpected Result: Report is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationRequest-10\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of filename value (filename do not match the actual file)\n\n\nExpected Result: The same filename is returned as sent in the request\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationRequest-11\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Request has invalid character in filename\n\n\nExpected Result: Correct error code is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Bdoc-ValidationRequest-12\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (bdoc and xroad)\n\n\nExpected Result: Error is returned\n\n\nFile: xroad-batchsignature\n\n\n\n\nTestCaseID: Bdoc-ValidationRequest-13\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (bdoc and xroad)\n\n\nExpected Result: Error is returned\n\n\nFile: xroad-attachment.asice\n\n\n\n\nTestCaseID: Pdf-ValidationRequest-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (pdf and ddoc)\n\n\nExpected Result: Error is returned\n\n\nFile: igasugust1.3.ddoc\n\n\n\n\nTestCaseID: Pdf-ValidationRequest-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (pdf and bdoc)\n\n\nExpected Result: Error is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Pdf-ValidationRequest-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (pdf and xroad)\n\n\nExpected Result: Error is returned\n\n\nFile: xroad-simple.asice\n\n\n\n\nTestCaseID: Pdf-ValidationRequest-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: PDF file, not existing value in signaturePolicy\n\n\nExpected Result: Error is returned\n\n\nFile: PdfValidSingleSignature.pdf\n\n\n\n\nTestCaseID: Pdf-ValidationRequest-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Input random base64 string as document with pdf document type\n\n\nExpected Result: Error is returned stating problem in document\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Pdf-ValidationRequest-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of filename value (filename do not match the actual file)\n\n\nExpected Result: The same filename is returned as sent in the request\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Pdf-ValidationRequest-7\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (pdf and xroad)\n\n\nExpected Result: Error is returned\n\n\nFile: xroad-batchsignature.asice\n\n\n\n\nTestCaseID: Pdf-ValidationRequest-8\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (pdf and xroad)\n\n\nExpected Result: Error is returned\n\n\nFile: xroad-attachment.asice\n\n\n\n\nTestCaseID: Ddoc-ValidationRequest-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (ddoc and bdoc)\n\n\nExpected Result: Error is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Ddoc-ValidationRequest-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (ddoc and pdf)\n\n\nExpected Result: Error is returned\n\n\nFile: PdfValidSingleSignature.pdf\n\n\n\n\nTestCaseID: Ddoc-ValidationRequest-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (ddoc and xroad)\n\n\nExpected Result: Error is returned\n\n\nFile: xroad-simple.asice\n\n\n\n\nTestCaseID: Ddoc-ValidationRequest-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Ddoc file, not existing value in signaturePolicy\n\n\nExpected Result: DDOC do not support signature policy selection, value is ignored\n\n\nFile: igasugust1.3.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationRequest-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Input random base64 string as document with ddoc document type\n\n\nExpected Result: Error is returned stating problem in document\n\n\nFile:\n\n\n\n\nTestCaseID: Ddoc-ValidationRequest-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of filename value (filename do not match the actual file)\n\n\nExpected Result: The same filename is returned as sent in the request\n\n\nFile: igasugust1.3.ddoc\n\n\n\n\nTestCaseID: Ddoc-ValidationRequest-7\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (ddoc and xroad)\n\n\nExpected Result: Error is returned\n\n\nFile: xroad-simple.asice\n\n\n\n\nTestCaseID: Ddoc-ValidationRequest-8\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (ddoc and xroad)\n\n\nExpected Result: Error is returned\n\n\nFile: xroad-simple.asice\n\n\n\n\nTestCaseID: Xroad-ValidationRequest-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (xroad and pdf)\n\n\nExpected Result: Error is returned\n\n\nFile: PdfValidSingleSignature.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Xroad-ValidationRequest-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (xroad and ddoc)\n\n\nExpected Result: Error is returned\n\n\nFile: igasugust1.3.ddoc\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Xroad-ValidationRequest-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (xroad and bdoc)\n\n\nExpected Result: Error is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Xroad-ValidationRequest-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: X-road file, not existing value in signaturePolicy\n\n\nExpected Result: X-Road do not support signature policy selection, value is ignored\n\n\nFile: xroad-simple.asice\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Xroad-ValidationRequest-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Input random base64 string as document with xroad document type\n\n\nExpected Result: Error is returned stating problem in document\n\n\nFile:\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Xroad-ValidationRequest-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of filename value (filename do not match the actual file)\n\n\nExpected Result: The same filename is returned as sent in the request\n\n\nFile: xroad-simple.asice\n\n\n\n\nSoapValidationReportValueTests.java\n\n\nTestCaseID: Bdoc-SoapValidationReportValue-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report XAdES_BASELINE_LT_TM, QES, FullSignatureScope\n\n\nExpected Result: All required elements are present and meet the expected values.\n\n\nFile: Valid_ID_sig.bdoc\n\n\n\n\nTestCaseID: Bdoc-SoapValidationReportValue-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report XAdES_BASELINE_LT, QES, FullSignatureScope\n\n\nExpected Result: All required elements are present and meet the expected values.\n\n\nFile: 23635_bdoc_ts_OCSP_random_nonce.bdoc\n\n\n\n\nTestCaseID: Bdoc-SoapValidationReportValue-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report XAdES_BASELINE_LT, AdES, FullSignatureScope\n\n\nExpected Result: All required elements are present and meet the expected values.\n\n\nFile: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc\n\n\n\n\nTestCaseID: Bdoc-SoapValidationReportValue-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report XAdES_BASELINE_LT_TM, AdESqc, FullSignatureScope\n\n\nExpected Result: All required elements are present and meet the expected values.\n\n\nFile: 23200_weakdigest-wrong-nonce.asice\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Bdoc-SoapValidationReportValue-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report XAdES_BASELINE_LTA, QES, FullSignatureScope\n\n\nExpected Result: All required elements are present and meet the expected values.\n\n\nFile: EE_SER-AEX-B-LTA-V-24.bdoc\n\n\n\n\nTestCaseID: Ddoc-SoapValidationReportValue-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report, xml v1.0, checks for missing info\n\n\nExpected Result: All required elements are present and meet the expected values and other values are empty as expected.\n\n\nFile: SK-XML1.0.ddoc\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Ddoc-SoapValidationReportValue-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report, xml v1.1, checks for missing info\n\n\nExpected Result: All required elements are present and meet the expected values and other values are empty as expected.\n\n\nFile: Igasugust1.1.ddoc\n\n\n\n\nTestCaseID: Ddoc-SoapValidationReportValue-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report, xml v1.2, checks for missing info\n\n\nExpected Result: All required elements are present and meet the expected values and other values are empty as expected.\n\n\nFile: Igasugust1.2.ddoc\n\n\n\n\nTestCaseID: Ddoc-SoapValidationReportValue-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report, xml v1.3, checks for missing info\n\n\nExpected Result: All required elements are present and meet the expected values and other values are empty as expected.\n\n\nFile: Igasugust1.3.ddoc\n\n\n\n\nTestCaseID: Pdf-SoapValidationReportValue-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report, PAdES_baseline_LT, checks for missing info\n\n\nExpected Result: All required elements are present and meet the expected values and other values are empty as expected.\n\n\nFile: pades_lt_two_valid_sig.pdf\n\n\n\n\nTestCaseID: Pdf-SoapValidationReportValue-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of values in Validation Report, PAdES_baseline_B, checks for missing info\n\n\nExpected Result: All required elements are present and meet the expected values and other values are empty as expected.\n\n\nFile: hellopades-pades-b-sha256-auth.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nSoapValidationRequestTests.java\n\n\nTestCaseID: Soap-ValidationRequest-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Empty request body\n\n\nExpected Result: Error is returned stating mismatch with required elements\n\n\nFile:\n\n\n\n\nTestCaseID: Soap-ValidationRequest-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Request with not base64 string as document\n\n\nExpected Result: Error is returned stating encoding problem\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Soap-ValidationRequest-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of wrong document type as input\n\n\nExpected Result: Correct error code is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Soap-ValidationRequest-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of case insensitivity in document type\n\n\nExpected Result: Report is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Soap-ValidationRequest-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Request has XML as document type (special case, XML is similar to ddoc and was a accepted document type in earlier versions)\n\n\nExpected Result: Error is given\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Soap-ValidationRequest-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Request has long (38784 characters) in filename field\n\n\nExpected Result: Report is returned with the same filename\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Soap-ValidationRequest-7\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Totally empty request body is sent\n\n\nExpected Result: Error is given\n\n\nFile: None\n\n\n\n\nTestCaseID: Soap-ValidationRequest-8\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Request with more parameters than expected is sent\n\n\nExpected Result: Error is given or extra parameters are ignored?\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Soap-ValidationRequest-9\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Request with more parameters than expected is sent\n\n\nExpected Result: Error is given or extra parameters are ignored?\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Soap-ValidationRequest-10\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Request with special chars is sent\n\n\nExpected Result: Validation report is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Soap-ValidationRequest-11\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Request with no optional SignaturePolicy field\n\n\nExpected Result: Validation report is returned using default policy\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Soap-BdocValidationRequest-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Input random base64 string as document with bdoc document type\n\n\nExpected Result: Error is returned stating problem in document\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Soap-BdocValidationRequest-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Verification of filename value (filename do not match the actual file)\n\n\nExpected Result: The same filename is returned as sent in the request\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Soap-BdocValidationRequest-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (bdoc and pdf)\n\n\nExpected Result: Error is returned\n\n\nFile: PdfValidSingleSignature.pdf\n\n\n\n\nTestCaseID: Soap-BdocValidationRequest-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (bdoc and ddoc)\n\n\nExpected Result: Error is returned\n\n\nFile: igasugust1.3.ddoc\n\n\n\n\nTestCaseID: Soap-BdocValidationRequest-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Bdoc file, not existing value in signaturePolicy\n\n\nExpected Result: Error is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Soap-BdocValidationRequest-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Bdoc file, policy fiels should be case insensitive\n\n\nExpected Result: Error is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Soap-DdocValidationRequest-7\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (bdoc and xroad)\n\n\nExpected Result: Error is returned\n\n\nFile: xroad-simple.asice\n\n\n\n\nTestCaseID: Soap-DdocValidationRequest-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Input random base64 string as document with ddoc document type\n\n\nExpected Result: Error is returned stating problem in document\n\n\nFile:\n\n\n\n\nTestCaseID: Soap-DdocValidationRequest-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (ddoc and bdoc)\n\n\nExpected Result: Error is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Soap-DdocValidationRequest-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (ddoc and bdoc)\n\n\nExpected Result: Error is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Soap-DdocValidationRequest-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (ddoc and pdf)\n\n\nExpected Result: Error is returned\n\n\nFile: PdfValidSingleSignature.pdf\n\n\n\n\nTestCaseID: Soap-DdocValidationRequest-5\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Ddoc file, not existing value in signaturePolicy\n\n\nExpected Result: DDOC do not support signature policy selection, value is ignored\n\n\nFile: igasugust1.3.ddoc\n\n\n\n\nTestCaseID: Soap-DdocValidationRequest-6\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (ddoc and xroad)\n\n\nExpected Result: Error is returned\n\n\nFile: xroad-attachment.asice\n\n\n\n\nTestCaseID: Soap-PdfValidationRequest-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Input random base64 string as document with pdf document type\n\n\nExpected Result: Error is returned stating problem in document\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Soap-PdfValidationRequest-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (pdf and bdoc)\n\n\nExpected Result: Error is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nTestCaseID: Soap-PdfValidationRequest-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (pdf and ddoc)\n\n\nExpected Result: Error is returned\n\n\nFile: igasugust1.3.ddoc\n\n\n\n\nTestCaseID: Soap-PdfValidationRequest-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (pdf and xroad)\n\n\nExpected Result: Error is returned\n\n\nFile: xroad-batchsignature.asice\n\n\n\n\nTestCaseID: Soap-PdfValidationRequest-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: PDF file, not existing value in signaturePolicy\n\n\nExpected Result: Error is returned\n\n\nFile: PdfValidSingleSignature.pdf\n\n\n\n\nTestCaseID: Soap-XroadValidationRequest-1\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: X-road file, not existing value in signaturePolicy\n\n\nExpected Result: X-Road do not support signature policy selection, value is ignored\n\n\nFile: xroad-simple.asice\n\n\n\n\nTestCaseID: Soap-XroadValidationRequest-2\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (xroad and ddoc)\n\n\nExpected Result: Error is returned\n\n\nFile: igasugust1.3.ddoc\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Soap-XroadValidationRequest-3\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (pdf and bdoc)\n\n\nExpected Result: Error is returned\n\n\nFile: Valid_IDCard_MobID_signatures.bdoc\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics\n \n\n\nTestCaseID: Soap-XroadValidationRequest-4\n\n\n\n\nTestType: Automated\n\n\nRequirementID: \nhttp://open-eid.github.io/SiVa/siva/interface_description/\n\n\nTitle: Mismatch in documentType and actual document (bdoc and pdf)\n\n\nExpected Result: Error is returned\n\n\nFile: PdfValidSingleSignature.pdf\n\n\n\n\nAttention! This test is disabled, check \nGitHub\n for specifics",
            "title": "Appendix 5 - Test Case Descriptions"
        },
        {
            "location": "/siva/appendix/test_cases/#list-of-test-cases",
            "text": "",
            "title": "List of Test Cases"
        },
        {
            "location": "/siva/appendix/test_cases/#bdocvalidationfailjava",
            "text": "TestCaseID: Bdoc-ValidationFail-1   TestType: Automated  RequirementID:   Title: Bdoc with single invalid signature  Expected Result: The document should fail the validation  File: IB-3960_bdoc2.1_TSA_SignatureValue_altered.bdoc   TestCaseID: Bdoc-ValidationFail-2   TestType: Automated  RequirementID:   Title: Bdoc with multiple invalid signatures  Expected Result: The document should fail the validation  File: BdocMultipleSignaturesInvalid.bdoc   TestCaseID: Bdoc-ValidationFail-3   TestType: Automated  RequirementID:   Title: Bdoc with multiple signatures both valid and invalid  Expected Result: The document should fail the validation  File: BdocMultipleSignaturesMixedWithValidAndInvalid.bdoc   TestCaseID: Bdoc-ValidationFail-4   TestType: Automated  RequirementID:   Title: Bdoc with no signatures  Expected Result: The document should fail the validation  File: BdocContainerNoSignature.bdoc   TestCaseID: Bdoc-ValidationFail-5   TestType: Automated  RequirementID:   Title: Bdoc with invalid mimetype in manifest  Expected Result: document malformed error should be returned  File: 23147_weak-warning-sha1-invalid-mimetype-in-manifest.bdoc   TestCaseID: Bdoc-ValidationFail-6   TestType: Automated  RequirementID:   Title: Asice with wrong slash character ('\\') in data file mime-type value  Expected Result: The document should fail the validation  File: EE_SER-AEX-B-LT-V-33.asice   TestCaseID: Bdoc-ValidationFail-7   TestType: Automated  RequirementID:   Title: Asice time-stamp does not correspond to the SignatureValue element  Expected Result: The document should fail the validation  File: TS-02_23634_TS_wrong_SignatureValue.asice   TestCaseID: Bdoc-ValidationFail-8   TestType: Automated  RequirementID:   Title: Asice No non-repudiation key usage value in the certificate  Expected Result: The document should fail the validation  File: EE_SER-AEX-B-LT-I-43.asice   TestCaseID: Bdoc-ValidationFail-9   TestType: Automated  RequirementID:   Title: Asice signers certificate does not have non-repudiation value in the certificates key usage field and it does not contain the QC and SSCD compliance information.  Expected Result: The document should fail the validation  File: EE_SER-AEX-B-LT-I-26.asice   TestCaseID: Bdoc-ValidationFail-10   TestType: Automated  RequirementID:   Title: Bdoc OCSP certificate is not trusted  Expected Result: The document should fail the validation  File:  TM-01_bdoc21-unknown-resp.bdoc   TestCaseID: Bdoc-ValidationFail-11   TestType: Automated  RequirementID:   Title: Asice TSA certificate is not trusted  Expected Result: The document should fail the validation  File: TS-05_23634_TS_unknown_TSA.asice   TestCaseID: Bdoc-ValidationFail-12   TestType: Automated  RequirementID:   Title: Asice OCSP response status is revoked  Expected Result: The document should fail the validation  File: EE_SER-AEX-B-LT-R-25.asice   TestCaseID: Bdoc-ValidationFail-13   TestType: Automated  RequirementID:   Title: Asice difference between OCSP and time-stamp issuing times is more than 24 hours  Expected Result: The document should fail the validation  File: EE_SER-AEX-B-LT-V-20.asice   TestCaseID: Bdoc-ValidationFail-14   TestType: Automated  RequirementID:   Title: Asice unsigned data files in the container  Expected Result: The document should fail the validation  File: EE_SER-AEX-B-LT-V-34.asice   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Bdoc-ValidationFail-15   TestType: Automated  RequirementID:   Title: Bdoc different data file mime-type values in signatures.xml and manifest.xml files  Expected Result: The document should fail the validation  File: 23613_TM_wrong-manifest-mimetype.bdoc   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Bdoc-ValidationFail-16   TestType: Automated  RequirementID:   Title: Bdoc SignatureValue does not correspond to the SignedInfo block  Expected Result: The document should fail the validation  File: REF-19_bdoc21-no-sig-asn1-pref.bdoc   TestCaseID: Bdoc-ValidationFail-17   TestType: Automated  RequirementID:   Title: Bdoc Baseline-BES file  Expected Result: The document should fail the validation  File: TM-05_bdoc21-good-nonce-policy-bes.bdoc   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Bdoc-ValidationFail-18   TestType: Automated  RequirementID:   Title: Bdoc Baseline-EPES file  Expected Result: The document should fail the validation  File: TM-04_kehtivuskinnituset.4.asice   TestCaseID: Bdoc-ValidationFail-19   TestType: Automated  RequirementID:   Title: Bdoc signers certificate is not trusted  Expected Result: The document should fail the validation  File: SS-4_teadmataCA.4.asice   TestCaseID: Bdoc-ValidationFail-20   TestType: Automated  RequirementID:   Title: Bdoc OCSP response status is revoked  Expected Result: The document should fail the validation  File: TM-15_revoked.4.asice   TestCaseID: Bdoc-ValidationFail-21   TestType: Automated  RequirementID:   Title: Bdoc OCSP response status is unknown  Expected Result: The document should fail the validation  File: TM-16_unknown.4.asice   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Bdoc-ValidationFail-22   TestType: Automated  RequirementID:   Title: Bdoc signed data file has been removed from the container  Expected Result: The document should fail the validation  File: TM-16_unknown.4.asice   TestCaseID: Bdoc-ValidationFail-23   TestType: Automated  RequirementID:   Title: Bdoc no files in container  Expected Result: The document should fail the validation  File: KS-02_tyhi.bdoc   TestCaseID: Bdoc-ValidationFail-24   TestType: Automated  RequirementID:   Title: Bdoc signed data file has been removed from the container  Expected Result: The document should fail the validation  File: TM-10_noncevale.4.asice   TestCaseID: Bdoc-ValidationFail-25   TestType: Automated  RequirementID:   Title: Bdoc signed data file(s) don't match the hash values in reference elements  Expected Result: The document should fail the validation  File: REF-14_filesisumuudetud.4.asice   TestCaseID: Bdoc-ValidationFail-26   TestType: Automated  RequirementID:   Title: Asice Baseline-T signature  Expected Result: The document should fail the validation  File: TS-06_23634_TS_missing_OCSP.asice   TestCaseID: Bdoc-ValidationFail-27   TestType: Automated  RequirementID:   Title: Bdoc     OCSP response doesn't correspond to the signers certificate  Expected Result: The document should fail the validation  File: NS28_WrongSignerCertInOCSPResp.bdoc   TestCaseID: Bdoc-ValidationFail-28   TestType: Automated  RequirementID:   Title: Bdoc certificate's validity time is not in the period of OCSP producedAt time  Expected Result: The document should fail the validation  File: 23154_test1-old-sig-sigat-OK-prodat-NOK-1.bdoc",
            "title": "BdocValidationFail.java"
        },
        {
            "location": "/siva/appendix/test_cases/#bdocvalidationpassjava",
            "text": "TestCaseID: Bdoc-ValidationPass-1   TestType: Automated  RequirementID:   Title: Bdoc with single valid signature  Expected Result: The document should pass the validation  File: Valid_ID_sig.bdoc   TestCaseID: Bdoc-ValidationPass-2   TestType: Automated  RequirementID:   Title: Bdoc TM with multiple valid signatures  Expected Result: The document should pass the validation  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Bdoc-ValidationPass-3   TestType: Automated  RequirementID:   Title: Bdoc with warning on signature  Expected Result: The document should pass the validation but warning should be returned  File:   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Bdoc-ValidationPass-4   TestType: Automated  RequirementID:   Title: Asice One LT signature with certificates from different countries  Expected Result: The document should pass the validation  File: EE_SER-AEX-B-LT-V-30.asice   TestCaseID: Bdoc-ValidationPass-5   TestType: Automated  RequirementID:   Title: Bdoc signed with Mobile-ID, ECC-SHA256 signature with prime256v1 key  Expected Result: The document should pass the validation  File: 24050_short_ecdsa_correct_file_mimetype.bdoc   TestCaseID: Bdoc-ValidationPass-6   TestType: Automated  RequirementID:   Title: Asice Baseline-LT file  Expected Result: The document should pass the validation  File: EE_SER-AEX-B-LT-V-49.asice   TestCaseID: Bdoc-ValidationPass-7   TestType: Automated  RequirementID:   Title: Asice QES file  Expected Result: The document should pass the validation  File: bdoc21-TS.asice   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Bdoc-ValidationPass-8   TestType: Automated  RequirementID:   Title: Asice Baseline-LTA file  Expected Result: The document should pass the validation  File: EE_SER-AEX-B-LTA-V-24.asice   TestCaseID: Bdoc-ValidationPass-9   TestType: Automated  RequirementID:   Title: Asice file signed with Mobile-ID, ECC-SHA256 signature with prime256v1 key  Expected Result: The document should pass the validation  File: EE_SER-AEX-B-LT-V-2.asice   TestCaseID: Bdoc-ValidationPass-10   TestType: Automated  RequirementID:   Title: Asice file with  ESTEID-SK 2015 certificate chain  Expected Result: The document should pass the validation  File: IB-4270_TS_ESTEID-SK 2015  SK OCSP RESPONDER 2011.asice   TestCaseID: Bdoc-ValidationPass-11   TestType: Automated  RequirementID:   Title: Asice file with KLASS3-SK 2010 (EECCRCA) certificate chain  Expected Result: The document should pass the validation  File: EE_SER-AEX-B-LT-V-28.asice   TestCaseID: Bdoc-ValidationPass-12   TestType: Automated  RequirementID:   Title: Bdoc with Baseline-LT_TM and QES signature level and ESTEID-SK 2011 certificate chain with valid signature  Expected Result: The document should pass the validation  File: BDOC2.1.bdoc   TestCaseID: Bdoc-ValidationPass-13   TestType: Automated  RequirementID:   Title: Bdoc TS with multiple valid signatures  Expected Result: The document should pass the validation  File: BDOC-TS.bdoc",
            "title": "BdocValidationPass.java"
        },
        {
            "location": "/siva/appendix/test_cases/#ddocvalidationfailjava",
            "text": "TestCaseID: Ddoc-ValidationFail-1   TestType: Automated  RequirementID:   Title: Ddoc with single invalid signature  Expected Result: The document should fail the validation  File: test1-ddoc-revoked.ddoc   TestCaseID: Ddoc-ValidationFail-2   TestType: Automated  RequirementID:   Title: Ddoc with multiple invalid signatures  Expected Result: The document should fail the validation  File: multipleInvalidSignatures.ddoc   TestCaseID: Ddoc-ValidationFail-3   TestType: Automated  RequirementID:   Title: Ddoc with multiple signatures both valid and invalid  Expected Result: The document should fail the validation  File: multipleValidAndInvalidSignatures.ddoc   TestCaseID: Ddoc-ValidationFail-4   TestType: Automated  RequirementID:   Title: Ddoc with no signatures  Expected Result: The document should fail the validation  File: DdocContainerNoSignature.bdoc   TestCaseID: Ddoc-ValidationFail-5   TestType: Automated  RequirementID:   Title: Ddoc signature value has been changed (SignatureValue does not correspond to the SignedInfo block)  Expected Result: The document should fail the validation  File: test-inv-sig-inf.ddoc   TestCaseID: Ddoc-ValidationFail-6   TestType: Automated  RequirementID:   Title: Ddoc Data file(s) don't match the hash values in Reference elements  Expected Result: The document should fail the validation  File: AndmefailiAtribuudidMuudetud.ddoc   TestCaseID: Ddoc-ValidationFail-7   TestType: Automated  RequirementID:   Title: Ddoc Baseline-BES file, no OCSP response  Expected Result: The document should fail the validation  File: ilma_kehtivuskinnituseta.ddoc   TestCaseID: Ddoc-ValidationFail-8   TestType: Automated  RequirementID:   Title: Ddoc no non-repudiation key usage value in the certificate  Expected Result: The document should fail the validation  File: test-non-repu1.ddoc   TestCaseID: Ddoc-ValidationFail-8   TestType: Automated  RequirementID:   Title: Ddoc Signer's certificate is not trusted  Expected Result: The document should fail the validation  File: Belgia_kandeavaldus_LIV.ddoc   TestCaseID: Ddoc-ValidationFail-9   TestType: Automated  RequirementID:   Title: Ddoc OCSP certificate is not trusted  Expected Result: The document should fail the validation  File: Tundmatu_OCSP_responder.ddoc   TestCaseID: Ddoc-ValidationFail-10   TestType: Automated  RequirementID:   Title: Ddoc has unsigned data files in the container  Expected Result: The document should fail the validation  File: lisatud_andmefail.ddoc   TestCaseID: Ddoc-ValidationFail-11   TestType: Automated  RequirementID:   Title: Ddoc signed data file has been removed from the container  Expected Result: The document should fail the validation  File: faileemald1.ddoc   TestCaseID: Ddoc-ValidationFail-12   TestType: Automated  RequirementID:   Title: Ddoc signed data file has been removed from the container  Expected Result: The document should fail the validation  File: OCSP nonce vale.ddoc   TestCaseID: Ddoc-ValidationFail-13   TestType: Automated  RequirementID:   Title: Ddoc with XML Entity expansion attack  Expected Result: The document should fail the validation with error  File: 2.denialOfServiceWithEntityExpansion.ddoc   TestCaseID: Ddoc-ValidationFail-14   TestType: Automated  RequirementID:   Title: Ddoc with XML server side request forgery attack  Expected Result: The document should fail the validation with error  File: 3.serverSideRequestForgeryViaDtd.ddoc   TestCaseID: Ddoc-ValidationFail-15   TestType: Automated  RequirementID:   Title: Ddoc no files in container  Expected Result: The document should fail the validation  File: KS-02_tyhi.ddoc",
            "title": "DdocValidationFail.java"
        },
        {
            "location": "/siva/appendix/test_cases/#ddocvalidationpassjava",
            "text": "TestCaseID: Ddoc-ValidationPass-2   TestType: Automated  RequirementID:   Title: Ddoc v1.0 with valid signatures  Expected Result: The document should pass the validation  File: SK-XML1.0.ddoc   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Ddoc-ValidationPass-3   TestType: Automated  RequirementID:   Title: Ddoc v1.1 with valid signature  Expected Result: The document should pass the validation  File: DIGIDOC-XML1.1.ddoc   TestCaseID: Ddoc-ValidationPass-4   TestType: Automated  RequirementID:   Title: Ddoc v1.2 with valid signature  Expected Result: The document should pass the validation  File: DIGIDOC-XML1.2.ddoc   TestCaseID: Ddoc-ValidationPass-5   TestType: Automated  RequirementID:   Title: Ddoc v1.3 with valid signature with ESTEID-SK 2011 certificate chain  Expected Result: The document should pass the validation  File: DIGIDOC-XML1.3.ddoc   TestCaseID: Ddoc-ValidationPass-6   TestType: Automated  RequirementID:   Title: Ddoc v1.3 with valid signature, signed data file name has special characters and ESTEID-SK certificate chain  Expected Result: The document should pass the validation  File: susisevad1_3.ddoc   TestCaseID: Ddoc-ValidationPass-7   TestType: Automated  RequirementID:   Title: Ddoc v1.3 KLASS3-SK certificate chain with valid signature  Expected Result: The document should pass the validation  File: KLASS3-SK _ KLASS3-SK OCSP RESPONDER uus.ddoc   TestCaseID: Ddoc-ValidationPass-8   TestType: Automated  RequirementID:   Title: Ddoc v1.3 KLASS3-SK 2010 certificate chain with valid signature  Expected Result: The document should pass the validation  File: KLASS3-SK 2010 _ KLASS3-SK 2010 OCSP RESPONDER.ddoc   TestCaseID: Ddoc-ValidationPass-9   TestType: Automated  RequirementID:   Title: Ddoc v1.1 ESTEID-SK 2007 certificate chain with valid signature  Expected Result: The document should pass the validation  File: vaikesed1.1.ddoc   TestCaseID: Ddoc-ValidationPass-10   TestType: Automated  RequirementID:   Title: Ddoc v1.1 ESTEID-SK 2007 certificate chain with valid signature  Expected Result: The document should pass the validation  File: IB-4270_ESTEID-SK 2015  SK OCSP RESPONDER 2011.ddoc   TestCaseID: Ddoc-ValidationPass-11   TestType: Automated  RequirementID:   Title: Ddoc v1.1 ESTEID-SK certificate chain with valid signature  Expected Result: The document should pass the validation  File: EID-SK _ EID-SK OCSP RESPONDER.ddoc   TestCaseID: Ddoc-ValidationPass-12   TestType: Automated  RequirementID:   Title: Ddoc v1.1 ESTEID-SK 2007 and OCSP 2010 certificate chain with valid signature  Expected Result: The document should pass the validation  File: EID-SK 2007 _ EID-SK 2007 OCSP RESPONDER 2010.ddoc   TestCaseID: Ddoc-ValidationPass-13   TestType: Automated  RequirementID:   Title: Ddoc v1.3 ESTEID-SK 2007 and OCSP 2007 certificate chain with valid signature  Expected Result: The document should pass the validation  File: EID-SK 2007 _ EID-SK 2007 OCSP RESPONDER.ddoc   TestCaseID: Ddoc-ValidationPass-14   TestType: Automated  RequirementID:   Title: Ddoc v1.3 ESTEID-SK 2011 and OCSP 2011 certificate chain with valid signature  Expected Result: The document should pass the validation  File: EID-SK 2011 _ SK OCSP RESPONDER 2011.ddoc",
            "title": "DdocValidationPass.java"
        },
        {
            "location": "/siva/appendix/test_cases/#documentformattestsjava",
            "text": "TestCaseID: DocumentFormat-1   TestType: Automated  RequirementID:  (TBD)  Title: Validation of pdf document acceptance  Expected Result: Pdf is accepted and correct signature validation is given  File: hellopades-pades-lt-sha256-sign.pdf   TestCaseID: DocumentFormat-2   TestType: Automated  RequirementID:  (TBD)  Title: Validation of bdoc document acceptance  Expected Result: Bdoc is accepted and correct signature validation is given  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: DocumentFormat-3   TestType: Automated  RequirementID:  (TBD)  Title: Validation of txt document rejection  Expected Result: Txt document is rejected and proper error message is given  File: hellopades-pades-lt-sha256-sign.txt   TestCaseID: DocumentFormat-4   TestType: Automated  RequirementID:  (TBD)  Title: Validation of p7s document rejection  Expected Result: P7s document is rejected and proper error message is given  File: hellocades.p7s   TestCaseID: DocumentFormat-5   TestType: Automated  RequirementID:  (TBD)  Title: Validation of zip document rejection  Expected Result: Zip document is rejected and proper error message is given  File: 42.zip   TestCaseID: DocumentFormat-6   TestType: Automated  RequirementID:  (TBD)  Title: Validation of doc document rejection  Expected Result: Doc document is rejected and proper error message is given  File: hellopades-pades-lt-sha256-sign.doc   TestCaseID: DocumentFormat-7   TestType: Automated  RequirementID:  (TBD)  Title: Validation of XML document rejection  Expected Result: XML document is rejected and proper error message is given  File: XML.xml   TestCaseID: DocumentFormat-8   TestType: Automated  RequirementID:  (TBD)  Title: Validation of png document rejection  Expected Result: Png document is rejected and proper error message is given  File: Picture.png",
            "title": "DocumentFormatTests.java"
        },
        {
            "location": "/siva/appendix/test_cases/#largefiletestsjava",
            "text": "TestCaseID: PDF-LargeFiles-1   TestType: Automated  RequirementID:   Title: Larger signed PDF files (PAdES Baseline LT).  Expected Result: Bigger documents with valid signature should pass  File: scout_x4-manual-signed_lt_9mb.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-LargeFiles-2   TestType: Automated  RequirementID:   Title: Larger signed PDF files (PAdES Baseline LT).  Expected Result: Bigger documents with valid signature should pass  File: scout_x4-manual-signed_lta_9mb.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-LargeFiles-3   TestType: Automated  RequirementID:   Title: Larger signed PDF files (PAdES Baseline LT).  Expected Result: Bigger documents with valid signature should pass  File: singlesignature_lt_1-2mb.pdf   TestCaseID: PDF-LargeFiles-4   TestType: Automated  RequirementID:   Title: Larger signed PDF files (PAdES Baseline LT).  Expected Result: Bigger documents with valid signature should pass  File: digidocservice-signed-lta-1-2mb.pdf   TestCaseID: PDF-LargeFiles-5   TestType: Automated  RequirementID:   Title: Larger signed PDF files (PAdES Baseline LT).  Expected Result: Bigger documents with valid signature should pass  File: singlesignature_lt_3-8mb.pdf   TestCaseID: PDF-LargeFiles-6   TestType: Automated  RequirementID:   Title: Larger signed PDF files (PAdES Baseline LT).  Expected Result: Bigger documents with valid signature should pass  File: egovenrment-benchmark-lta-3-8mb.pdf",
            "title": "LargeFileTests.java"
        },
        {
            "location": "/siva/appendix/test_cases/#pdfbaselineprofiletestsjava",
            "text": "TestCaseID: PDF-BaselineProfile-1   TestType: Automated  RequirementID:   Title: The PDF has PAdES-B profile signature  Expected Result: Document validation should fail  File: hellopades-pades-b-sha256-auth.pdf   TestCaseID: PDF-BaselineProfile-2   TestType: Automated  RequirementID:   Title: The PDF has PAdES-T profile signature  Expected Result: Document validation should fail  File:   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-BaselineProfile-3   TestType: Automated  RequirementID:   Title: The PDF has PAdES-LT profile signature  Expected Result: Document validation should pass  File: hellopades-pades-lt-sha256-sign.pdf   TestCaseID: PDF-BaselineProfile-4   TestType: Automated  RequirementID:   Title: The PDF has PAdES-LTA profile signature  Expected Result: Document validation should pass  File:   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-BaselineProfile-5   TestType: Automated  RequirementID:   Title: The PDF has PAdES-LT and B profile signature  Expected Result: Document validation should fail  File: hellopades-lt-b.pdf   TestCaseID: PDF-BaselineProfile-6   TestType: Automated  RequirementID:   Title: PDF document message digest attribute value does not match calculate value  Expected Result: Document validation should fail  File: hellopades-lt1-lt2-wrongDigestValue.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-BaselineProfile-7   TestType: Automated  RequirementID:   Title: PDF file with a serial signature  Expected Result: Document signed with multiple signers with serial signatures should pass  File: hellopades-lt1-lt2-Serial.pdf   TestCaseID: PDF-BaselineProfile-8   TestType: Automated  RequirementID:   Title: PDF document signed with multiple signers parallel signature  Expected Result: Document with parallel signatures should pass  File: hellopades-lt1-lt2-parallel3.pdf   TestCaseID: PDF-BaselineProfile-9   TestType: Automated  RequirementID:   Title: PDF document signed with multiple signers parallel signature without Sscd  Expected Result: Document with no qualified and without SSCD should warn  File: hellopades-lt1-lt2-parallel3.pdf",
            "title": "PdfBaselineProfileTests.java"
        },
        {
            "location": "/siva/appendix/test_cases/#pdfsignaturecryptographicalgorithmtestsjava",
            "text": "TestCaseID: PDF-SigCryptoAlg-1   TestType: Automated  RequirementID:   Title: SHA512 algorithms (PAdES Baseline LT)  Expected Result: Document signed with SHA512 algorithm should pass  File: hellopades-lt-sha512.pdf   TestCaseID: PDF-SigCryptoAlg-2   TestType: Automated  RequirementID:   Title: SHA1 algorithms (PAdES Baseline LT)  Expected Result: Document signed with SHA1 algorithm should pass  File: hellopades-lt-sha1.pdf   TestCaseID: PDF-SigCryptoAlg-3   TestType: Automated  RequirementID:   Title: ECDSA algorithms (PAdES Baseline LT)  Expected Result: Document signed with ECDSA algorithm should pass  File: hellopades-ecdsa.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-SigCryptoAlg-4   TestType: Automated  RequirementID:   Title: ECDSA224 algorithms (PAdES Baseline LT)  Expected Result: Document signed with ECDSA224 algorithm should pass  File: hellopades-lt-sha256-ec224.pdf   TestCaseID: PDF-SigCryptoAlg-5   TestType: Automated  RequirementID:   Title: ECDSA256 algorithms (PAdES Baseline LT)  Expected Result: Document signed with ECDSA256 algorithm should pass  File: hellopades-lt-sha256-ec256.pdf   TestCaseID: PDF-SigCryptoAlg-6   TestType: Automated  RequirementID:   Title: RSA1024 algorithms (PAdES Baseline LT)  Expected Result: Document signed with RSA1024 algorithm should pass  File: hellopades-lt-sha256-rsa1024.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-SigCryptoAlg-7   TestType: Automated  RequirementID:   Title: RSA1023 algorithms (PAdES Baseline LT)  Expected Result: Document signed with RSA1023 algorithm should pass  File: hellopades-lt-sha256-rsa1023.pdf   TestCaseID: PDF-SigCryptoAlg-8   TestType: Automated  RequirementID:   Title: RSA2047 algorithms (PAdES Baseline LT)  Expected Result: Document signed with RSA2047 algorithm should pass  File: hellopades-lt-sha256-rsa2047.pdf   TestCaseID: PDF-SigCryptoAlg-9   TestType: Automated  RequirementID:   Title: RSA2048 algorithms (PAdES Baseline LT)  Expected Result: Document signed with RSA2048 algorithm should pass  File: PdfValidSingleSignature",
            "title": "PdfSignatureCryptographicAlgorithmTests.java"
        },
        {
            "location": "/siva/appendix/test_cases/#pdfvalidationfailjava",
            "text": "TestCaseID: PDF-ValidationFail-1   TestType: Automated  RequirementID:   Title: The PDF-file has been signed with expired certificate (PAdES Baseline LT)  Expected Result: Document signed with certificate that is expired should fail.  File: hellopades-lt-rsa1024-sha1-expired.pdf   TestCaseID: PDF-ValidationFail-2   TestType: Automated  RequirementID:   Title: The PDF-file has been signed with revoked certificate (PAdES Baseline LT)  Expected Result: Document signed with certificate that is revoked should fail.  File: pades_lt_revoked.pdf   TestCaseID: PDF-ValidationFail-3   TestType: Automated  RequirementID:   Title: The PDF-file has been signed with certificate that missing signed attribute (PAdES Baseline LT)  Expected Result: PDF-file validation should fail  File: missing_signing_certificate_attribute.pdf   TestCaseID: PDF-ValidationFail-4   TestType: Automated  RequirementID:   Title: The PDF-file has been signed with certificate which has no non repudiation key usage attribute (PAdES Baseline LT)  Expected Result: The PDF-file validation should fail with error.  File: hellopades-pades-lt-sha256-auth.pdf   TestCaseID: PDF-ValidationFail-5   TestType: Automated  RequirementID:   Title: hellopadess been signed with an expired certificate, where signing time is within the original validity  Expected Result: Document signed with expired certificate should fail  File: hellopades-lt-sha256-rsa2048-expired.pdf   TestCaseID: PDF-ValidationFail-6   TestType: Automated  RequirementID:   Title: hellopadess been signed with an expired certificate, where signing time is within the original validity  Expected Result: Document signed with expired certificate should fail  File: hellopades-lt-sha256-rsa1024-expired2.pdf   TestCaseID: PDF-ValidationFail-7   TestType: Automated  RequirementID:   Title: hellopadess been signed with an expired certificate, where signing time is within the original validity  Expected Result: Document signed with expired certificate should fail  File: hellopades-lt-sha1-rsa1024-expired2.pdf",
            "title": "PdfValidationFail.java"
        },
        {
            "location": "/siva/appendix/test_cases/#pdfvalidationpassjava",
            "text": "TestCaseID: PDF-ValidationPass-1   TestType: Automated  RequirementID:   Title: The PDF-file has been signed with certificate that is expired after signing (PAdES Baseline LT)  Expected Result: Document signed with certificate that expired after signing should pass.  File: hellopades-lt-sha256-rsa1024-not-expired.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-ValidationPass-2   TestType: Automated  RequirementID:   Title: The PDF-file has been signed with certificate that will expire in 7 days after signing (PAdES Baseline LT)  Expected Result: Document signed with certificate that expired after signing should pass.  File: hellopades-lt-sha256-rsa2048-7d.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-ValidationPass-4   TestType: Automated  RequirementID:   Title: Pdf with single valid signature  Expected Result: Document should pass.  File: PdfValidSingleSignature.pdf",
            "title": "PdfValidationPass.java"
        },
        {
            "location": "/siva/appendix/test_cases/#signaturepolicytestsjava",
            "text": "TestCaseID: Signature-Policy-1   TestType: Automated  RequirementID:   Title: The PDF-file has PAdES-LT profile signature and an OCSP confirmation more than 24 hours later than the signatures Time Stamp.  Expected Result: Document with over 24h delay should fail when signature policy is set to \"EE\"  File: hellopades-lt-sha256-ocsp-28h.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Signature-Policy-2   TestType: Automated  RequirementID:   Title: The PDF-file has PAdES-LT profile signature and an OCSP confirmation more than 24 hours later than the signatures Time Stamp.  Expected Result: Document with over 24h delay should pass when signature policy is set to \"EU\"  File: hellopades-lt-sha256-ocsp-28h.pdf   TestCaseID: Signature-Policy-2   TestType: Automated  RequirementID:   Title: The PDF-file has PAdES-LT profile signature and an OCSP confirmation more than 24 hours later than the signatures Time Stamp.  Expected Result: Document with over 24h delay should fail when signature policy is not set or empty, because it defaults to \"EE\"  File: hellopades-lt-sha256-ocsp-28h.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Signature-Policy-3   TestType: Automated  RequirementID:   Title: The PDF has PAdES-LT and B profile signature  Expected Result: 1 of 2 signatures' should pass when signature policy is set to \"EE\"  File: hellopades-lt-b.pdf   TestCaseID: Signature-Policy-4   TestType: Automated  RequirementID:   Title: The PDF has PAdES-LT and B profile signature  Expected Result: 2 of 2 signatures' validation should pass when signature policy is set to \"EU\"  File: hellopades-lt-b.pdf   TestCaseID: Signature-Policy-5   TestType: Automated  RequirementID:   Title: Bdoc with conformant EE signature  Expected Result: Document should pass when signature policy is set to \"EE\"  File: Valid_ID_sig.bdoc",
            "title": "SignaturePolicyTests.java"
        },
        {
            "location": "/siva/appendix/test_cases/#signaturerevocationvaluetestsjava",
            "text": "TestCaseID: PDF-SigRevocVal-1   TestType: Automated  RequirementID:   Title: The PDF-file has PAdES-LT profile signature and an OCSP confirmation that is more than 15 minutes later than the signatures Time Stamp.  Expected Result: Document with ocsp over 15 min delay should pass but warn  File: hellopades-lt-sha256-ocsp-15min1s.pdf   TestCaseID: PDF-SigRevocVal-2   TestType: Automated  RequirementID:   Title: The PDF-file has PAdES-LT profile signature and an OCSP confirmation that is more than 15 minutes later than the signatures Time Stamp.  Expected Result: Document with ocsp over 15 min delay should pass but warn  File: hellopades-lt-sha256-ocsp-15min1s.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-SigRevocVal-3   TestType: Automated  RequirementID:   Title: The PDF-file has PAdES-LT profile signature and an OCSP confirmation more than 24 hours later than the signatures Time Stamp.  Expected Result: Document with over 24h delay should fail  File: hellopades-lt-sha256-ocsp-28h.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-SigRevocVal-4   TestType: Automated  RequirementID:   Title: The PDF-file has been signed with PAdES Baseline LTA profile signature, the signature contains CRL.  Expected Result: Document with no ocsp or crl in signature should fail  File: hellopades-lta-no-ocsp.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: PDF-SigRevocVal-5   TestType: Automated  RequirementID:   Title: PDF signature has OCSP confirmation before Time Stamp  Expected Result: Document signed with ocsp time value before best signature time should fail  File: hellopades-lt-sha256-rsa2048-ocsp-before-ts.pdf   Attention! This test is disabled, check  GitHub  for specifics",
            "title": "SignatureRevocationValueTests.java"
        },
        {
            "location": "/siva/appendix/test_cases/#validationreportvalueverificationjava",
            "text": "TestCaseID: Bdoc-ValidationReportVerification-1   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report XAdES_BASELINE_LT_TM, QES, FullSignatureScope  Expected Result: All required elements are present and meet the expected values.  File: Valid_ID_sig.bdoc   TestCaseID: Bdoc-ValidationReportVerification-2   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report XAdES_BASELINE_LT, QES, FullSignatureScope  Expected Result: All required elements are present and meet the expected values.  File: 23635_bdoc_ts_OCSP_random_nonce.bdoc   TestCaseID: Bdoc-ValidationReportVerification-3   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report XAdES_BASELINE_LT, AdES, FullSignatureScope, warning  Expected Result: All required elements are present and meet the expected values.  File: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc   TestCaseID: Bdoc-ValidationReportVerification-5   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report XAdES_BASELINE_LT-TM, AdESqc  Expected Result: All required elements are present and meet the expected values.  File: 23200_weakdigest-wrong-nonce.asice   TestCaseID: Bdoc-ValidationReportVerification-6   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: JSON structure has all elements (Bdoc valid multiple signatures)  Expected Result: All required elements are present according to SimpleReportSchema.json  File: Baltic MoU digital signing_EST_LT_LV.bdoc   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Bdoc-ValidationReportVerification-7   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: JSON structure has all elements (Bdoc indeterminate status)  Expected Result: All required elements are present according to BdocDocSimpleReportSchema.json  File: test1-bdoc-unknown.bdoc   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Bdoc-ValidationReportVerification-8   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title:  Bdoc report with no signatures  Expected Result: Report is returned with required elements  File:BdocContainerNoSignature.bdoc   TestCaseID: Pdf-ValidationReportVerification-1   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: JSON structure has all elements (Pdf valid single signature)  Expected Result: All required elements are present according to SimpleReportSchema.json  File: hellopades-lt-sha256-ec256.pdf   TestCaseID: Pdf-ValidationReportVerification-2   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: JSON structure has all elements (Pdf valid Multiple signatures)  Expected Result: All required elements are present according to SimpleReportSchema.json  File:   TestCaseID: Pdf-ValidationReportVerification-3   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: JSON structure has all elements (Pdf invalid signature)  Expected Result: All required elements are present according to SimpleReportSchema.json  File: hellopades-lt-b.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Pdf-ValidationReportVerification-4   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: JSON structure has all elements (Pdf indeterminate status)  Expected Result: All required elements are present according to SimpleReportSchema.json  File: hellopades-lt-rsa1024-sha1-expired.pdf   TestCaseID: Pdf-ValidationReportVerification-5   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title:  Pdf report with no signatures  Expected Result: Report is returned with required elements  File: PdfNoSignature.pdf   TestCaseID: Ddoc-ValidationReportVerification-1   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: JSON structure has all elements (ddoc valid single signature)  Expected Result: All required elements are present according to SimpleReportSchema.json  File: DIGIDOC-XML1.3.ddoc   TestCaseID: Ddoc-ValidationReportVerification-2   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: JSON structure has all elements (ddoc invalid signature)  Expected Result: All required elements are present according to SimpleReportSchema.json  File: test1-ddoc-revoked.ddoc   TestCaseID: Ddoc-ValidationReportVerification-3   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: JSON structure has all elements (ddoc indeterminate status)  Expected Result: All required elements are present according to SimpleReportSchema.json  File: test1-ddoc-unknown.ddoc   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Ddoc-ValidationReportVerification-4   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Check for optional warning element  Expected Result: Warning element is present  File:   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Ddoc-ValidationReportVerification-5   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title:  Ddoc report with no signatures  Expected Result: Report is returned with required elements  File: DdocContainerNoSignature.ddoc   TestCaseID: Ddoc-ValidationReportVerification-6   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report, xml v1.0, checks for missing info  Expected Result: All required elements are present and meet the expected values and other values are empty as expected.  File: SK-XML1.0.ddoc   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Ddoc-ValidationReportVerification-7   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report, xml v1.1, checks for missing info  Expected Result: All required elements are present and meet the expected values and other values are empty as expected.  File: Igasugust1.1.ddoc   TestCaseID: Ddoc-ValidationReportVerification-8   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report, xml v1.2, checks for missing info  Expected Result: All required elements are present and meet the expected values and other values are empty as expected.  File: Igasugust1.2.ddoc   TestCaseID: Ddoc-ValidationReportVerification-9   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report, xml v1.3, checks for missing info  Expected Result: All required elements are present and meet the expected values and other values are empty as expected.  File: Igasugust1.3.ddoc   TestCaseID: Xroad-ValidationReportVerification-1   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title:  Expected Result: Report is returned with required elements  File: xroad-simple.asice   Attention! This test is disabled, check  GitHub  for specifics",
            "title": "ValidationReportValueVerification.java"
        },
        {
            "location": "/siva/appendix/test_cases/#validationrequesttestsjava",
            "text": "TestCaseID: ValidationRequest-1   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Input empty values  Expected Result: Errors are returned stating the missing values  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: ValidationRequest-2   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of wrong document type as input  Expected Result: Correct error code is returned  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: ValidationRequest-3   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Request has invalid key on document position  Expected Result: Error is returned  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: ValidationRequest-4   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Request has XML as document type (special case, XML is similar to ddoc and was a accepted document type in earlier versions)  Expected Result: Error is given  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: ValidationRequest-5   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Request has long (38784 characters) in filename field  Expected Result: Report is returned with the same filename  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: ValidationRequest-6   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Totally empty request body is sent  Expected Result: Error is given  File: None   TestCaseID: ValidationRequest-7   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Request with more parameters than expected is sent  Expected Result: Error is given or extra parameters are ignored?  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: ValidationRequest-8   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Request with special chars is sent  Expected Result: Validation report is returned  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: ValidationRequest-9   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Request with not base64 string as document  Expected Result: Error is returned stating encoding problem  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Bdoc-ValidationRequest-1   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (bdoc and pdf)  Expected Result: Error is returned  File: PdfValidSingleSignature.pdf   TestCaseID: Bdoc-ValidationRequest-2   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (bdoc and ddoc)  Expected Result: Error is returned  File: igasugust1.3.ddoc   TestCaseID: Bdoc-ValidationRequest-3   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (bdoc and xroad)  Expected Result: Error is returned  File: xroad-simple.asice   TestCaseID: Bdoc-ValidationRequest-4   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Bdoc file, not existing value in signaturePolicy  Expected Result: Error is returned  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Bdoc-ValidationRequest-5   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Bdoc file, policy fiels should be case insensitive  Expected Result: Error is returned  File: Valid_IDCard_MobID_signatures.bdoc   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Bdoc-ValidationRequest-6   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Request without optional signaturePolicy field  Expected Result: Validation report is returned with default policy  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Bdoc-ValidationRequest-7   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Input random base64 string as document with bdoc document type  Expected Result: Error is returned stating problem in document  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Bdoc-ValidationRequest-8   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Acceptance of ASICE as BDOC document type  Expected Result: Asice files are handled the same as bdoc  File: bdoc21-TS.asice   TestCaseID: Bdoc-ValidationRequest-9   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of case insensitivity in document type  Expected Result: Report is returned  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Bdoc-ValidationRequest-10   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of filename value (filename do not match the actual file)  Expected Result: The same filename is returned as sent in the request  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Bdoc-ValidationRequest-11   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Request has invalid character in filename  Expected Result: Correct error code is returned  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Bdoc-ValidationRequest-12   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (bdoc and xroad)  Expected Result: Error is returned  File: xroad-batchsignature   TestCaseID: Bdoc-ValidationRequest-13   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (bdoc and xroad)  Expected Result: Error is returned  File: xroad-attachment.asice   TestCaseID: Pdf-ValidationRequest-1   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (pdf and ddoc)  Expected Result: Error is returned  File: igasugust1.3.ddoc   TestCaseID: Pdf-ValidationRequest-2   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (pdf and bdoc)  Expected Result: Error is returned  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Pdf-ValidationRequest-3   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (pdf and xroad)  Expected Result: Error is returned  File: xroad-simple.asice   TestCaseID: Pdf-ValidationRequest-4   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: PDF file, not existing value in signaturePolicy  Expected Result: Error is returned  File: PdfValidSingleSignature.pdf   TestCaseID: Pdf-ValidationRequest-5   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Input random base64 string as document with pdf document type  Expected Result: Error is returned stating problem in document  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Pdf-ValidationRequest-6   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of filename value (filename do not match the actual file)  Expected Result: The same filename is returned as sent in the request  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Pdf-ValidationRequest-7   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (pdf and xroad)  Expected Result: Error is returned  File: xroad-batchsignature.asice   TestCaseID: Pdf-ValidationRequest-8   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (pdf and xroad)  Expected Result: Error is returned  File: xroad-attachment.asice   TestCaseID: Ddoc-ValidationRequest-1   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (ddoc and bdoc)  Expected Result: Error is returned  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Ddoc-ValidationRequest-2   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (ddoc and pdf)  Expected Result: Error is returned  File: PdfValidSingleSignature.pdf   TestCaseID: Ddoc-ValidationRequest-3   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (ddoc and xroad)  Expected Result: Error is returned  File: xroad-simple.asice   TestCaseID: Ddoc-ValidationRequest-4   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Ddoc file, not existing value in signaturePolicy  Expected Result: DDOC do not support signature policy selection, value is ignored  File: igasugust1.3.ddoc   TestCaseID: Ddoc-ValidationRequest-5   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Input random base64 string as document with ddoc document type  Expected Result: Error is returned stating problem in document  File:   TestCaseID: Ddoc-ValidationRequest-6   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of filename value (filename do not match the actual file)  Expected Result: The same filename is returned as sent in the request  File: igasugust1.3.ddoc   TestCaseID: Ddoc-ValidationRequest-7   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (ddoc and xroad)  Expected Result: Error is returned  File: xroad-simple.asice   TestCaseID: Ddoc-ValidationRequest-8   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (ddoc and xroad)  Expected Result: Error is returned  File: xroad-simple.asice   TestCaseID: Xroad-ValidationRequest-1   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (xroad and pdf)  Expected Result: Error is returned  File: PdfValidSingleSignature.pdf   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Xroad-ValidationRequest-2   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (xroad and ddoc)  Expected Result: Error is returned  File: igasugust1.3.ddoc   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Xroad-ValidationRequest-3   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (xroad and bdoc)  Expected Result: Error is returned  File: Valid_IDCard_MobID_signatures.bdoc   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Xroad-ValidationRequest-4   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: X-road file, not existing value in signaturePolicy  Expected Result: X-Road do not support signature policy selection, value is ignored  File: xroad-simple.asice   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Xroad-ValidationRequest-5   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Input random base64 string as document with xroad document type  Expected Result: Error is returned stating problem in document  File:   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Xroad-ValidationRequest-6   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of filename value (filename do not match the actual file)  Expected Result: The same filename is returned as sent in the request  File: xroad-simple.asice",
            "title": "ValidationRequestTests.java"
        },
        {
            "location": "/siva/appendix/test_cases/#soapvalidationreportvaluetestsjava",
            "text": "TestCaseID: Bdoc-SoapValidationReportValue-1   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report XAdES_BASELINE_LT_TM, QES, FullSignatureScope  Expected Result: All required elements are present and meet the expected values.  File: Valid_ID_sig.bdoc   TestCaseID: Bdoc-SoapValidationReportValue-2   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report XAdES_BASELINE_LT, QES, FullSignatureScope  Expected Result: All required elements are present and meet the expected values.  File: 23635_bdoc_ts_OCSP_random_nonce.bdoc   TestCaseID: Bdoc-SoapValidationReportValue-3   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report XAdES_BASELINE_LT, AdES, FullSignatureScope  Expected Result: All required elements are present and meet the expected values.  File: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc   TestCaseID: Bdoc-SoapValidationReportValue-4   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report XAdES_BASELINE_LT_TM, AdESqc, FullSignatureScope  Expected Result: All required elements are present and meet the expected values.  File: 23200_weakdigest-wrong-nonce.asice   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Bdoc-SoapValidationReportValue-5   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report XAdES_BASELINE_LTA, QES, FullSignatureScope  Expected Result: All required elements are present and meet the expected values.  File: EE_SER-AEX-B-LTA-V-24.bdoc   TestCaseID: Ddoc-SoapValidationReportValue-1   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report, xml v1.0, checks for missing info  Expected Result: All required elements are present and meet the expected values and other values are empty as expected.  File: SK-XML1.0.ddoc   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Ddoc-SoapValidationReportValue-2   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report, xml v1.1, checks for missing info  Expected Result: All required elements are present and meet the expected values and other values are empty as expected.  File: Igasugust1.1.ddoc   TestCaseID: Ddoc-SoapValidationReportValue-3   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report, xml v1.2, checks for missing info  Expected Result: All required elements are present and meet the expected values and other values are empty as expected.  File: Igasugust1.2.ddoc   TestCaseID: Ddoc-SoapValidationReportValue-4   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report, xml v1.3, checks for missing info  Expected Result: All required elements are present and meet the expected values and other values are empty as expected.  File: Igasugust1.3.ddoc   TestCaseID: Pdf-SoapValidationReportValue-1   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report, PAdES_baseline_LT, checks for missing info  Expected Result: All required elements are present and meet the expected values and other values are empty as expected.  File: pades_lt_two_valid_sig.pdf   TestCaseID: Pdf-SoapValidationReportValue-2   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of values in Validation Report, PAdES_baseline_B, checks for missing info  Expected Result: All required elements are present and meet the expected values and other values are empty as expected.  File: hellopades-pades-b-sha256-auth.pdf   Attention! This test is disabled, check  GitHub  for specifics",
            "title": "SoapValidationReportValueTests.java"
        },
        {
            "location": "/siva/appendix/test_cases/#soapvalidationrequesttestsjava",
            "text": "TestCaseID: Soap-ValidationRequest-1   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Empty request body  Expected Result: Error is returned stating mismatch with required elements  File:   TestCaseID: Soap-ValidationRequest-2   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Request with not base64 string as document  Expected Result: Error is returned stating encoding problem  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Soap-ValidationRequest-3   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of wrong document type as input  Expected Result: Correct error code is returned  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Soap-ValidationRequest-4   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of case insensitivity in document type  Expected Result: Report is returned  File: Valid_IDCard_MobID_signatures.bdoc   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Soap-ValidationRequest-5   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Request has XML as document type (special case, XML is similar to ddoc and was a accepted document type in earlier versions)  Expected Result: Error is given  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Soap-ValidationRequest-6   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Request has long (38784 characters) in filename field  Expected Result: Report is returned with the same filename  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Soap-ValidationRequest-7   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Totally empty request body is sent  Expected Result: Error is given  File: None   TestCaseID: Soap-ValidationRequest-8   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Request with more parameters than expected is sent  Expected Result: Error is given or extra parameters are ignored?  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Soap-ValidationRequest-9   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Request with more parameters than expected is sent  Expected Result: Error is given or extra parameters are ignored?  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Soap-ValidationRequest-10   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Request with special chars is sent  Expected Result: Validation report is returned  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Soap-ValidationRequest-11   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Request with no optional SignaturePolicy field  Expected Result: Validation report is returned using default policy  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Soap-BdocValidationRequest-1   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Input random base64 string as document with bdoc document type  Expected Result: Error is returned stating problem in document  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Soap-BdocValidationRequest-2   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Verification of filename value (filename do not match the actual file)  Expected Result: The same filename is returned as sent in the request  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Soap-BdocValidationRequest-3   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (bdoc and pdf)  Expected Result: Error is returned  File: PdfValidSingleSignature.pdf   TestCaseID: Soap-BdocValidationRequest-4   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (bdoc and ddoc)  Expected Result: Error is returned  File: igasugust1.3.ddoc   TestCaseID: Soap-BdocValidationRequest-5   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Bdoc file, not existing value in signaturePolicy  Expected Result: Error is returned  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Soap-BdocValidationRequest-6   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Bdoc file, policy fiels should be case insensitive  Expected Result: Error is returned  File: Valid_IDCard_MobID_signatures.bdoc   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Soap-DdocValidationRequest-7   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (bdoc and xroad)  Expected Result: Error is returned  File: xroad-simple.asice   TestCaseID: Soap-DdocValidationRequest-1   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Input random base64 string as document with ddoc document type  Expected Result: Error is returned stating problem in document  File:   TestCaseID: Soap-DdocValidationRequest-2   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (ddoc and bdoc)  Expected Result: Error is returned  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Soap-DdocValidationRequest-3   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (ddoc and bdoc)  Expected Result: Error is returned  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Soap-DdocValidationRequest-4   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (ddoc and pdf)  Expected Result: Error is returned  File: PdfValidSingleSignature.pdf   TestCaseID: Soap-DdocValidationRequest-5   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Ddoc file, not existing value in signaturePolicy  Expected Result: DDOC do not support signature policy selection, value is ignored  File: igasugust1.3.ddoc   TestCaseID: Soap-DdocValidationRequest-6   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (ddoc and xroad)  Expected Result: Error is returned  File: xroad-attachment.asice   TestCaseID: Soap-PdfValidationRequest-1   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Input random base64 string as document with pdf document type  Expected Result: Error is returned stating problem in document  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Soap-PdfValidationRequest-2   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (pdf and bdoc)  Expected Result: Error is returned  File: Valid_IDCard_MobID_signatures.bdoc   TestCaseID: Soap-PdfValidationRequest-3   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (pdf and ddoc)  Expected Result: Error is returned  File: igasugust1.3.ddoc   TestCaseID: Soap-PdfValidationRequest-4   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (pdf and xroad)  Expected Result: Error is returned  File: xroad-batchsignature.asice   TestCaseID: Soap-PdfValidationRequest-4   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: PDF file, not existing value in signaturePolicy  Expected Result: Error is returned  File: PdfValidSingleSignature.pdf   TestCaseID: Soap-XroadValidationRequest-1   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: X-road file, not existing value in signaturePolicy  Expected Result: X-Road do not support signature policy selection, value is ignored  File: xroad-simple.asice   TestCaseID: Soap-XroadValidationRequest-2   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (xroad and ddoc)  Expected Result: Error is returned  File: igasugust1.3.ddoc   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Soap-XroadValidationRequest-3   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (pdf and bdoc)  Expected Result: Error is returned  File: Valid_IDCard_MobID_signatures.bdoc   Attention! This test is disabled, check  GitHub  for specifics    TestCaseID: Soap-XroadValidationRequest-4   TestType: Automated  RequirementID:  http://open-eid.github.io/SiVa/siva/interface_description/  Title: Mismatch in documentType and actual document (bdoc and pdf)  Expected Result: Error is returned  File: PdfValidSingleSignature.pdf   Attention! This test is disabled, check  GitHub  for specifics",
            "title": "SoapValidationRequestTests.java"
        }
    ]
}