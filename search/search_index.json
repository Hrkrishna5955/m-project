{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"SiVa is digital signature validation web service that provides SOAP and JSON API to validate following file types: Estonian DDOC containers Estonian BDOC containers with TimeMark and TimeStamp signatures Estonian X-Road security server ASiCE signature containers Estonian ASiCS containers with time stamp tokens ETSI standard based ASiCE and ASiCS containers ETSI standard based XAdES, CAdES and PAdES signatures ETSI standard based XAdES signatures with datafiles in hashcode form Main purpose of this documentation is to give overview what SiVa is, how it is built and provide information for deploying the service and integrating with the service. SiVa architecture document sections overview Below list will give You an overview of what each section of the SiVa architecture document will cover: Definitions - defines and explines most common concepts used in SiVa documentation Overview - gives overview what SiVa is and it's main features. Structure and activities - gives overview of main SiVa subsystems and and and base validation Java libraries used for different validation services Interfaces - Description of SiVa SOAP and JSON API request and response Deployment - gives general overview of servers required when deploying SiVa validation web service into production Quality Assurance - overview of quality assurance strategy and testing","title":"INTRODUCTION"},{"location":"#siva-architecture-document-sections-overview","text":"Below list will give You an overview of what each section of the SiVa architecture document will cover: Definitions - defines and explines most common concepts used in SiVa documentation Overview - gives overview what SiVa is and it's main features. Structure and activities - gives overview of main SiVa subsystems and and and base validation Java libraries used for different validation services Interfaces - Description of SiVa SOAP and JSON API request and response Deployment - gives general overview of servers required when deploying SiVa validation web service into production Quality Assurance - overview of quality assurance strategy and testing","title":"SiVa architecture document sections overview"},{"location":"version_info/","text":"Version number Change date Author Description 0.1 06.05.2016 Mihkel Selgal Initial SiVa architecture 1.0 26.10.2016 Priit Reiser, Aare Nurm Documentation updates 1.1 04.05.2017 Vadim Pudov, Allan Juhanson, Julia Solovei, Aare Nurm Documentation updates 1.2 01.11.2017 Aare Nurm Update to new version of mkdocs. Addition of SIVA 2.0 documentation structure 1.3 20.12.2017 Aare Nurm, Siim Suu, Madis Piigli Documentation updates 1.4 29.01.2019 Aare Nurm Addition of SIVA 3.0 document structure 1.5 21.03.2019 Jorgen Heinsoo SIVA 3.2 documentation additions with diagnostic data report description 1.6 04.04.2019 Aare Nurm Finalizing the documentation for release 1.7 12.06.2020 Aare Nurm, Priit \u00dcksk\u00fcla SIVA 3.3 documentation additions 1.8 01.03.2021 Markus Kivisalu SIVA 3.4 documentation additions","title":"VERSION HISTORY"},{"location":"siva/component_diagram/","text":"Web API Web API is standard Spring Boot Web application module inside SiVa webapp it will take in JSON or SOAP requests sent by systems that are integrated with SiVa web service API. The incoming requests will be converted to SiVa Proxy Module Java request objects. Web API module also does basic validation of incoming requests. Checking that all the required fields are present and document type is correct. When validation has been completed by proxy selected validation service the returned qualified validation report Java object will be marshalled based on incoming request to JSON or SOAP and returned to client that requested the validation. External configuration resources Optionally SiVa webapp can load in configuration file (i.e application.yml) at application startup time. Configuration file can control Spring Boot configuration options in addition to SiVa application specific options. Optionally SiVa webapp can also load in logging configuration options Validation proxy service Validation proxy service or validation service selector is Spring Boot module that will take the Web API sent request object and try to find matching validation service based on the documentType inside the request object. When matching validation service have been found the proxy request is converted to validation request and sent to matched validation service. When no matching validation service has not been found exception is raised and error object is returned to Web API module. On successful validation the qualified validation report Java object sent from validation service is returned to Web API module. Note Validation services can be added dynamically to SiVa by conforming to pattern documentType + \"ValidationService\" and new validation service module must be Maven dependency of siva-validation-proxy . Example would be BDOCValidationService . Validation reporting service Validation reporting service is optional module that can be turned on or off using configuration file. It's Spring Boot module and main purpose is to collect data about: incoming request, validation reports and errors that have been reported during validation process. When HTTP authentication header have been set the reporting service will also collect its and adds to required statistics reports. After the report object have been created the data will be sent to configured reporting service. SiVa is preconfigured to work with Google Analytics. TSL Loader TSL loader loads in contents of TSL file from given URL in online mode or from directory when using offline mode in predefined interval. Validation services All validation services use different Java library to validate given document in request. The used validation library is described in each of the validation service section. Common process that all validation services do with proxy forwarded validation process is: Convert the Base64 encoded document into InputStream byte array Check that given document is correct format (i.e valid BDOC). If not then error is thrown and validation process is terminated. After validation of signatures has been completed the validation service starts to build qualified validation report Validation report is created even validation FAILED or ended with INDETERMINATE result PDF Validation service PDF or PaDES as known in DSS validation service uses Digidoc4J DSS fork Java library PaDES validation functionality using the validation policy that complies with Estonian laws and regulations. Configurable functionality: Possibility to add additional validation policies using SiVa application.yml configuration section. BDOC validation service BDOC for ASiC compliant containers both TM and TS will latest Maven released DigiDoc4J library DDOC Validation service DDOC for previous generation digitally signed files will use latest Maven release of JDigiDoc X-Road validation service X-Road containers are similar to ASiCE containers but are not valid ASiCE containers. There we could not use DSS nor DigiDoc4J provided ASiCE validation functionality but need to X-Road developed asicverifier Java command line utility to validate these containers. Source code for asicverifier can be found in GitHub xroad-public repository *[]: Asicverfier has been integrated into SiVa as Java library. Making possible to use all the Java libraries packaged into asicverifier fat JAR. Configurable functionality: In SiVa configuration application.yml file You can define alternative location for globalconf directory to be loaded in using input stream","title":"Component diagram"},{"location":"siva/component_diagram/#web-api","text":"Web API is standard Spring Boot Web application module inside SiVa webapp it will take in JSON or SOAP requests sent by systems that are integrated with SiVa web service API. The incoming requests will be converted to SiVa Proxy Module Java request objects. Web API module also does basic validation of incoming requests. Checking that all the required fields are present and document type is correct. When validation has been completed by proxy selected validation service the returned qualified validation report Java object will be marshalled based on incoming request to JSON or SOAP and returned to client that requested the validation.","title":"Web API"},{"location":"siva/component_diagram/#external-configuration-resources","text":"Optionally SiVa webapp can load in configuration file (i.e application.yml) at application startup time. Configuration file can control Spring Boot configuration options in addition to SiVa application specific options. Optionally SiVa webapp can also load in logging configuration options","title":"External configuration resources"},{"location":"siva/component_diagram/#validation-proxy-service","text":"Validation proxy service or validation service selector is Spring Boot module that will take the Web API sent request object and try to find matching validation service based on the documentType inside the request object. When matching validation service have been found the proxy request is converted to validation request and sent to matched validation service. When no matching validation service has not been found exception is raised and error object is returned to Web API module. On successful validation the qualified validation report Java object sent from validation service is returned to Web API module. Note Validation services can be added dynamically to SiVa by conforming to pattern documentType + \"ValidationService\" and new validation service module must be Maven dependency of siva-validation-proxy . Example would be BDOCValidationService .","title":"Validation proxy service"},{"location":"siva/component_diagram/#validation-reporting-service","text":"Validation reporting service is optional module that can be turned on or off using configuration file. It's Spring Boot module and main purpose is to collect data about: incoming request, validation reports and errors that have been reported during validation process. When HTTP authentication header have been set the reporting service will also collect its and adds to required statistics reports. After the report object have been created the data will be sent to configured reporting service. SiVa is preconfigured to work with Google Analytics.","title":"Validation reporting service"},{"location":"siva/component_diagram/#tsl-loader","text":"TSL loader loads in contents of TSL file from given URL in online mode or from directory when using offline mode in predefined interval.","title":"TSL Loader"},{"location":"siva/component_diagram/#validation-services","text":"All validation services use different Java library to validate given document in request. The used validation library is described in each of the validation service section. Common process that all validation services do with proxy forwarded validation process is: Convert the Base64 encoded document into InputStream byte array Check that given document is correct format (i.e valid BDOC). If not then error is thrown and validation process is terminated. After validation of signatures has been completed the validation service starts to build qualified validation report Validation report is created even validation FAILED or ended with INDETERMINATE result","title":"Validation services"},{"location":"siva/component_diagram/#pdf-validation-service","text":"PDF or PaDES as known in DSS validation service uses Digidoc4J DSS fork Java library PaDES validation functionality using the validation policy that complies with Estonian laws and regulations. Configurable functionality: Possibility to add additional validation policies using SiVa application.yml configuration section.","title":"PDF Validation service"},{"location":"siva/component_diagram/#bdoc-validation-service","text":"BDOC for ASiC compliant containers both TM and TS will latest Maven released DigiDoc4J library","title":"BDOC validation service"},{"location":"siva/component_diagram/#ddoc-validation-service","text":"DDOC for previous generation digitally signed files will use latest Maven release of JDigiDoc","title":"DDOC Validation service"},{"location":"siva/component_diagram/#x-road-validation-service","text":"X-Road containers are similar to ASiCE containers but are not valid ASiCE containers. There we could not use DSS nor DigiDoc4J provided ASiCE validation functionality but need to X-Road developed asicverifier Java command line utility to validate these containers. Source code for asicverifier can be found in GitHub xroad-public repository *[]: Asicverfier has been integrated into SiVa as Java library. Making possible to use all the Java libraries packaged into asicverifier fat JAR. Configurable functionality: In SiVa configuration application.yml file You can define alternative location for globalconf directory to be loaded in using input stream","title":"X-Road validation service"},{"location":"siva/definitions/","text":"BDOC A digital signature format that was created in order to replace the DDOC (DigiDoc) digital signature format that is specific to Estonia. DDOC A format of digitally signed files based on the ETSI TS 101 903 Standard that is called \u2018XML Advanced Electronic Signatures (XAdES)\u2019. The standard describes the structure of digitally signed documents on various levels of incorporation of additional validity verification information. DigiDoc corresponds to the XAdES profile \u2018XAdES-X-L\u2019. DSS Digital Signature Services is Java library to sign and validate European digital signature formats Fat JAR The fat JAR is the JAR, which contains classes from all the libraries, on which your project depends and, the classes of built project. JAR Java Archive is a package file format typically used to aggregate many Java class files and associated metadata and resources (text, images, etc.) into one file to distribute application software or libraries on the Java platform. JVM The Java Virtual Machine is the runtime engine of the Java Platform, which allows any program written in Java or other language compiled into Java bytecode to run on any computer that has a native JVM. Linux an operating system, based on UNIX, that runs on many different hardware platforms and whose source code is available to the public. PDF Portable document format is a file format that provides an electronic image of text or text and graphics that looks like a printed document and can be viewed, printed, and electronically transmitted. SiVa is RESTful web service providing digital signature validation services for BDOC, DDOC, PDF and X-Road files Spring Boot is a framework from the team at Pivotal, designed to simplify the bootstrapping and development of a new Spring application. The framework takes an opinionated approach to configuration, freeing developers from the need to define boilerplate configuration X-Road X-Road, the data exchange layer for information systems, is a technological and organizational environment enabling a secure Internet-based data exchange between information systems.","title":"10.1. DEFINITIONS"},{"location":"siva/deployment_view/","text":"Load balancer Load balancer can distribute traffic between SiVa nodes when there is more then one instance running. SiVa do not set any specific requirements for load balancer but in diagram the Nginx reverse proxy option is used. SiVa web application SiVa web appliction is executable Spring Boot JAR file. This means all the dependencies and servlet containers are packaged inside single JAR file. The JAR file can be placed anywhere in server and the JAR must be marked executable if its not already. There also should be separate user created to run executalbe JAR as Linux service. Read more about running Spring Boot applications as Linux system service SiVa X-Road validation service SiVa X-Road validation service is also Spring Boot executable JAR application and also should be installed as Linux service. X-Road validation service communicates with SiVa web application over HTTP and default port is 8081 X-Road separate installation is required to avoid BouncyCastle libraries version conflicts and class loader issues. Security server Into XRoad v6 security server the SiVa validation service will be registered to provide service to other organisations using XRoad infrastructure. Setting up XRoad Security server is out of scope for SiVa documentaiton.","title":"Deployment view"},{"location":"siva/deployment_view/#load-balancer","text":"Load balancer can distribute traffic between SiVa nodes when there is more then one instance running. SiVa do not set any specific requirements for load balancer but in diagram the Nginx reverse proxy option is used.","title":"Load balancer"},{"location":"siva/deployment_view/#siva-web-application","text":"SiVa web appliction is executable Spring Boot JAR file. This means all the dependencies and servlet containers are packaged inside single JAR file. The JAR file can be placed anywhere in server and the JAR must be marked executable if its not already. There also should be separate user created to run executalbe JAR as Linux service. Read more about running Spring Boot applications as Linux system service","title":"SiVa web application"},{"location":"siva/deployment_view/#siva-x-road-validation-service","text":"SiVa X-Road validation service is also Spring Boot executable JAR application and also should be installed as Linux service. X-Road validation service communicates with SiVa web application over HTTP and default port is 8081 X-Road separate installation is required to avoid BouncyCastle libraries version conflicts and class loader issues.","title":"SiVa X-Road validation service"},{"location":"siva/deployment_view/#security-server","text":"Into XRoad v6 security server the SiVa validation service will be registered to provide service to other organisations using XRoad infrastructure. Setting up XRoad Security server is out of scope for SiVa documentaiton.","title":"Security server"},{"location":"siva/introduction/","text":"SiVa is digital signature validation web service that provides SOAP and JSON API to validate following file types: Older Estonian digital signature files with DDOC extension BDOC containers with TimeMark and TimeStamp signatures Digitally signed PDF files X-Road security server ASiCE signature containers Architecture document main purpose is to give overview what SiVa is. Give an overview of it's internal processes and provide information when deploying it to production environment. SiVa architecture document sections overview Below list will give You an overview of what each section of the SiVa architecture document will cover: Overview - gives overview what SiVa is and it's main features. Regulatory environment - legal analysis and standards that are used when building SiVa application Component diagram - gives overview of main SiVa subsystems and and and base validation Java libraries used for different validation services Deployment view - gives general overview of servers required when deploying SiVa validation web service into production Interfaces - Description of SiVa SOAP and JSON API request and response Database schema - description of SiVa validation administration service database Use cases - describes main processes in SiVa validation web service Deploying - how to build, deploy and configure SiVa web service Logging - how to configure and setup SiVa validation service logging support Download documentation Download documentation in PDF format","title":"Introduction"},{"location":"siva/introduction/#siva-architecture-document-sections-overview","text":"Below list will give You an overview of what each section of the SiVa architecture document will cover: Overview - gives overview what SiVa is and it's main features. Regulatory environment - legal analysis and standards that are used when building SiVa application Component diagram - gives overview of main SiVa subsystems and and and base validation Java libraries used for different validation services Deployment view - gives general overview of servers required when deploying SiVa validation web service into production Interfaces - Description of SiVa SOAP and JSON API request and response Database schema - description of SiVa validation administration service database Use cases - describes main processes in SiVa validation web service Deploying - how to build, deploy and configure SiVa web service Logging - how to configure and setup SiVa validation service logging support","title":"SiVa architecture document sections overview"},{"location":"siva/introduction/#download-documentation","text":"Download documentation in PDF format","title":"Download documentation"},{"location":"siva/logging/","text":"Logging functionality is handled by the SLF4J logging facade and on top of it the Logback framework is used. As a result, logging can be configured via the standard Logback configuration file. By default, logging works on the INFO level and logs are directed to the system console as well as a log file. The logback xml configuration file can be found at: pdfValidator/pdf-validator-webapp/src/main/resources/logback.xml and when compiled the file will reside at WEB-INF/classes/logback.xml within the packaged war. There is also a possibility to set the location of the default configuration file with a system property logback.configurationFile as a JVM argument. The value of this property can be a URL, a resource on the class path or a path to a file external to the application. java -Dlogback.configurationFile = /path/to/config.xml In this configuration file there are three appenders: STDOUT (logs to standard output), FILE (logs to a file) and SYSLOG (logs to syslog server over the network). To disable certain appender from logging, commenting out its appender-ref is sufficient, but it is recommended that the appender itself should also be commented out. For example to disable SYSLOG appender (which is the default configuration), then one can use following configuration: <!-- <appender name=\"SYSLOG\" class=\"ch.qos.logback.classic.net.SyslogAppender\"> <syslogHost>enter\\_ip\\_or\\_hostname\\_here</syslogHost> <port>514</port> <facility>USER</facility> <filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\"> <level>INFO</level> </filter> <suffixPattern>%-5level %logger{0}:%L \\[%thread\\] - %msg</suffixPattern> </appender> --> <root level= \"DEBUG\" > <appender-ref ref= \"STDOUT\" /> <appender-ref ref= \"FILE\" /> <!--<appender-ref ref=\"SYSLOG\"/>--> </root> Logback configuration manual: http://logback.qos.ch/manual/ STDOUT appender Default the log level is set to DEBUG Appender output pattern is: %d{HH:mm:ss.SSS} %-5level %logger{0}:%L [%thread] - %msg%n FILE appender Default log level is set to INFO uses RollingFileAppender configured with TimeBasedRollingPolicy . Current configuration makes a seperate logfile for each day and each file is kept for 30 days . PS! keep in mind when using relative destination file path, then the path is added at the end of the currently working directory, i.e. where the application was started. (Current day's logfile path: logs/pdf-validator-webapp.log , prievious days pattern: logs/pdf-validator-webapp.%d{yyyy-MM-dd}.log) Appender output pattern is: %d{HH:mm:ss.SSS} %-5level %logger{0}:%L \\[%thread\\] - %msg%n -Dlogback.configurationFile=config.xml SYSLOG appender Default log level is set to INFO Target's ip/hostname and port are configurable Syslog messsages' severity is configurable Syslog messages' payload's timestamp and hostname part are created implicitly and the suffixpattern is: %-5level %logger{0}:%L \\[%thread\\] - %msg","title":"Logging"},{"location":"siva/logging/#stdout-appender","text":"Default the log level is set to DEBUG Appender output pattern is: %d{HH:mm:ss.SSS} %-5level %logger{0}:%L [%thread] - %msg%n","title":"STDOUT appender"},{"location":"siva/logging/#file-appender","text":"Default log level is set to INFO uses RollingFileAppender configured with TimeBasedRollingPolicy . Current configuration makes a seperate logfile for each day and each file is kept for 30 days . PS! keep in mind when using relative destination file path, then the path is added at the end of the currently working directory, i.e. where the application was started. (Current day's logfile path: logs/pdf-validator-webapp.log , prievious days pattern: logs/pdf-validator-webapp.%d{yyyy-MM-dd}.log) Appender output pattern is: %d{HH:mm:ss.SSS} %-5level %logger{0}:%L \\[%thread\\] - %msg%n -Dlogback.configurationFile=config.xml","title":"FILE appender"},{"location":"siva/logging/#syslog-appender","text":"Default log level is set to INFO Target's ip/hostname and port are configurable Syslog messsages' severity is configurable Syslog messages' payload's timestamp and hostname part are created implicitly and the suffixpattern is: %-5level %logger{0}:%L \\[%thread\\] - %msg","title":"SYSLOG appender"},{"location":"siva/overview/","text":"What is SiVa? SiVa (Signature Validation) web service is continued development of PDF Validation web service. Service provides a JSON and SOAP based API web interface which purpose is to validate signatures in digitally signed BDOC, DDOC, PDF and X-Road ASiCE files according to validation policy (described in the Validation Policy section). SiVa uses following Java libraries and command line utilities: EU DSS (Digital Signature Service) library is chosen for digitally signed PDF file validation DigiDoc4J Java library to validate BDOC containers. Supported signature types are TimeStamp and TimeMark JDigiDoc Java library is used to validate DDOC files starting from version X-Road ASiCE containers are validated using X-Road security server project provided command line utility Validation libraries DigiDoc4j EU DSS fork DigiDoc4J EU DSS fork library for PDF files was chosen because it all the main validation constrains already provided and all new constraints can be added easily. For more information on EU DSS, see: https://joinup.ec.europa.eu/asset/sd-dss/description . SiVa will use the following functionality of EU DSS library: PaDES Validation Functionality TSL loading functionality DigiDoc4J DigiDoc4J will be used to validate both TimeMark and TimeStamp based BDOC containers. DigiDoc4J was chosen because it's only Java library that can validate Estonian BDOC files according to SiVa validation policy. For more information on DigiDoc4J: https://github.com/open-eid/digidoc4j SiVa will use the following functionality of DigiDoc4J: BDOC validation functionality JDigiDoc JDigiDoc provides support for DDOC files the library was chosen because it provides most complete support for all required DDOC versions. Read more about JDigiDoc: https://github.com/open-eid/jdigidoc SiVa will use the following functionality of JDigiDoc: DDOC validation functionality X-Road signature validation utility X-Road signature validation utility is command line tool to validate X-Road Security server generated ASiCe files. The utility was chosen because it's only available packaged to tool to validate X-Road signature files. Main features of SiVa validation service: SiVa SOAP ETSI compliant API to validate all supported signatures. SiVa REST ETSI compliant API to validate all supported signatures. SiVa handles files in PDF-format version 1.7 and later, signed with PadES-profile signatures. Service handles DDOC files starting from version 1.0 or later Service supports BDOC files starting from version 2.1 or later Service supports X-Road 6 security server ASiCE containers Service supports up to 10MB file size upload SiVa uses European Commission\u2019s TSL (Trusted Service Status List) for certificate chain validation for PDF and BDOC files. European Commission\u2019s TSL contains references to TSLs of European Union\u2019s member states and members of the European Economic Area. This allows the PDF Validator to validate signature that has been signed with certificates issued in any of European Union\u2019s member states. During the validation process, a certificate chain is created from signer\u2019s certificate up to the trust anchor (national trust list referenced by the central European Commission's trust list) for all certificates included in the signature (i.e. the signer's certificate, OCSP service's certificate, time-stamping Service's certificate). SiVas for DDOC and X-Road signature containers will use configured list certificates. Signatures with PadES-LT and PadES-LTA profile are supported. BDOC signatures with type BDOC-TM and BDOC-TS are supported SiVa extracts data files from DDOC containers. At the time of creating the current documentation, it is expected that SiVa will be used by the following applications: DigiDoc3 Client application Third party document management applications","title":"10.2. BACKGROUND"},{"location":"siva/overview/#what-is-siva","text":"SiVa (Signature Validation) web service is continued development of PDF Validation web service. Service provides a JSON and SOAP based API web interface which purpose is to validate signatures in digitally signed BDOC, DDOC, PDF and X-Road ASiCE files according to validation policy (described in the Validation Policy section). SiVa uses following Java libraries and command line utilities: EU DSS (Digital Signature Service) library is chosen for digitally signed PDF file validation DigiDoc4J Java library to validate BDOC containers. Supported signature types are TimeStamp and TimeMark JDigiDoc Java library is used to validate DDOC files starting from version X-Road ASiCE containers are validated using X-Road security server project provided command line utility","title":"What is SiVa?"},{"location":"siva/overview/#validation-libraries","text":"","title":"Validation libraries"},{"location":"siva/overview/#digidoc4j-eu-dss-fork","text":"DigiDoc4J EU DSS fork library for PDF files was chosen because it all the main validation constrains already provided and all new constraints can be added easily. For more information on EU DSS, see: https://joinup.ec.europa.eu/asset/sd-dss/description . SiVa will use the following functionality of EU DSS library: PaDES Validation Functionality TSL loading functionality","title":"DigiDoc4j EU DSS fork"},{"location":"siva/overview/#digidoc4j","text":"DigiDoc4J will be used to validate both TimeMark and TimeStamp based BDOC containers. DigiDoc4J was chosen because it's only Java library that can validate Estonian BDOC files according to SiVa validation policy. For more information on DigiDoc4J: https://github.com/open-eid/digidoc4j SiVa will use the following functionality of DigiDoc4J: BDOC validation functionality","title":"DigiDoc4J"},{"location":"siva/overview/#jdigidoc","text":"JDigiDoc provides support for DDOC files the library was chosen because it provides most complete support for all required DDOC versions. Read more about JDigiDoc: https://github.com/open-eid/jdigidoc SiVa will use the following functionality of JDigiDoc: DDOC validation functionality","title":"JDigiDoc"},{"location":"siva/overview/#x-road-signature-validation-utility","text":"X-Road signature validation utility is command line tool to validate X-Road Security server generated ASiCe files. The utility was chosen because it's only available packaged to tool to validate X-Road signature files.","title":"X-Road signature validation utility"},{"location":"siva/overview/#main-features-of-siva-validation-service","text":"SiVa SOAP ETSI compliant API to validate all supported signatures. SiVa REST ETSI compliant API to validate all supported signatures. SiVa handles files in PDF-format version 1.7 and later, signed with PadES-profile signatures. Service handles DDOC files starting from version 1.0 or later Service supports BDOC files starting from version 2.1 or later Service supports X-Road 6 security server ASiCE containers Service supports up to 10MB file size upload SiVa uses European Commission\u2019s TSL (Trusted Service Status List) for certificate chain validation for PDF and BDOC files. European Commission\u2019s TSL contains references to TSLs of European Union\u2019s member states and members of the European Economic Area. This allows the PDF Validator to validate signature that has been signed with certificates issued in any of European Union\u2019s member states. During the validation process, a certificate chain is created from signer\u2019s certificate up to the trust anchor (national trust list referenced by the central European Commission's trust list) for all certificates included in the signature (i.e. the signer's certificate, OCSP service's certificate, time-stamping Service's certificate). SiVas for DDOC and X-Road signature containers will use configured list certificates. Signatures with PadES-LT and PadES-LTA profile are supported. BDOC signatures with type BDOC-TM and BDOC-TS are supported SiVa extracts data files from DDOC containers. At the time of creating the current documentation, it is expected that SiVa will be used by the following applications: DigiDoc3 Client application Third party document management applications","title":"Main features of SiVa validation service:"},{"location":"siva/qa_strategy/","text":"Introduction The goal of this document is to give general overview of the used infrastructure, processes, schedule and actions to ensure good quality delivery. The document describes activities in the whole software development process. Analysis, development and testing are separated for the sake of structure and transparency although they are integral parts of the development cycle. This is living document and will be constantly updated as the project evolves. Environments and infrastructure There are different test environments for quality assurance, depending on the nature and aim. TravisCI environment for public CI - Platform: Linux Test environment for local test and load test - Platform: Linux Instructions how to set up test enviroment and run tests together with more info can be found in SiVa GitHub page System requirements: At least 2GB of RAM on machine where the build is executed Minimum required Java version is Java 8 SiVa project provided Maven Wrapper (./mvnw) Tools used: TravisCI \u2013 is a continuous integration service used to build and test software projects hosted at GitHub Jenkins \u2013 is an open source continuous integration tool written in Java. JMeter \u2013 tool for creating and running load tests. IntelliJ IDEA \u2013 is a Java integrated development environment(IDE) for developing and executing automated tests locally Apache Tomcat - is an open source servlet container developed by the Apache Software Foundation. Docker \u2013 is an open-source project that automates the deployment of applications inside software containers, by providing an additional layer of abstraction and automation of operating-system-level virtualization on Linux. Rest-Assured - is a Java DSL(Domain-specific language) for simplifying testing of REST based Services built on top of HTTP Builder. Analysis Analysis will be tagged with identificators to enable cross-reference between requirements and corresponding tests. This includes both functional and non-functional requirements. Analysis of specific tasks must be done before the sprint planning meeting. This will ensure that upcoming sprint is planned in common grounds. See documents (2) and (3) in References Development Development process Customized iterative process similar to SCRUM is used in the development. The process consists of following elements: Product backlog is maintained Sprints are two weeks long Sprint planning meetings are held Tasks are maintained through JIRA SCRUM board Daily team stand-ups are held Tasks marked done are developed, tested and ready to be shipped Bi-weekly meetings are held to give status on progress and discuss open questions Retrospectives are held at least with two month intervals Issue lifecycle Each ticket (defect, task, ...) in JIRA SCRUM board goes through the following states that correspond the development procedure described in previous chapter. Description of states: ToDo - tickets to be dealt with in current sprint (Sprint backlog). Analysis -ticket is being analysed. During this stage requirements are refined. Development - ticket is being handled (feature coding, document writing, ...). In Review - the work done in development stage is being reviewed. Test - ticket is being tested. Done - ticket has been tested and deemed sufficient for release (Ready features) Closed - ticket has been released. QA activities and quality criterias in the development Process improvement The development process is constantly monitored and adjusted to the changing situations. Retrospective meetings for process feedback are held. Unit tests It is responsibility of developer to write, maintain and execute the unit tests on developed features. The code must compile and pass unit tests before it is allowed to be submitted to the code repository. The code of the unit tests is integral part of the source code and is maintained on the same principles. Unit tests are also automatically executed on each build, if the unit tests do not pass further test execution is stopped. Static testing/code reviews All changes (including changes in unit test code) are reviewed by another development team member using GitHub. The code must pass review before it is submitted to testing. SonarLint is used to validate code automatically. It integrates both suggested tools mentioned in reference document (3) References Testing Approach and schedule Testing follows the principles described in reference document (1) in References The goal is to automate as much of the testing process as possible, however some aspects of the testing will be carried out manually. As the development is carried out validation module by validation module, testing will follow the same principle. The tests will be developed in iterations for each validation module. After each iteration test cases, test automation code and test results will be available through GitHub. The main focus on testing is on different type of input data, the tests themselves will be based on the same principle for all the modules. The schedule of testing can be seen on the image below. Testing process All automatic tests, except load tests will follow the same execution process. The tests are ran automatically during the project build process by Travis CI after each code change push in GitHub. Test case management Test cases are handled as integral part of test automation code. The same applies on manual tests, in manual test cases some portion of automation may be used to execute the tests but the results are verified manually. All the test cases and test code will be maintained in the GitHub. Test cases are developed and maintained together with test automation code by the QA specialist for Integration and System Testing. Following elements will be present in test cases: TestCaseID: unique ID that makes possible to identify specific test case TestType: Automated, Automated SoapUI or Manual Requirement: Reference to the requirement that is tested Title: Description of the test Expected Result: expected outcome of the test (pass criteria for the test) File: input test file that is used Test case sample Automatic and manual test cases will have the same description principles (shown below). /** * TestCaseID: Bdoc-ValidationFail-27 * * TestType: Automated * * Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 * * Title: Bdoc OCSP response doesn ' t correspond to the signers certificate * * Expected Result: The document should fail the validation * * File: NS28_WrongSignerCertInOCSPResp.bdoc */ @Test public void bdocWrongSignersCertInOcspResponse () { setTestFilesDirectory ( \"bdoc/live/timemark/\" ) ; post ( validationRequestFor ( \"NS28_WrongSignerCertInOCSPResp.bdoc\" )) .then () .body ( \"signatures[0].indication\" , Matchers.is ( \"TOTAL-FAILED\" )) .body ( \"signatures[0].subIndication\" , Matchers.is ( \"TRY_LATER\" )) .body ( \"signatures[0].errors.content\" , Matchers.hasItem ( \"No revocation data for the certificate\" )) .body ( \"validSignaturesCount\" , Matchers.is ( 0 )) ; } Defect management All found defects will be reported and handled in Jira. The defect report will follow similar lifecycle in JIRA SCRUM board as tasks. The report will have following elements: Title: Short, precise description of the problem Details: Type, Priority, Sprint, Epic Link, Fix Version/s Description: Steps to reproduce bug - sequence for reproduction, link to test case if applicable. Expected behavior - expected outcome of the test sequence. Actual behavior - actual result of the test sequence. The description should be thorough enough to enable the debugging of the problem and to give objective base for severity assessment. File attachments - Test files, logs, images, ... Test levels Integration testing The scope of the tests is illustrated on the image below. The goal is to test the SiVA application API (both X-Road and REST/JSON) and to test the independent module capability for validation of specific type of file (DDOC, BDOC, PDF or X-Road signature). Both valid and invalid inputs are tested. More info about testing specifics can be found in Test Plan Integration testing section. System testing The scope of the tests is illustrated on the image below. The goal of the test is to test the entire length of signature validation process and to test supportive functions. In addition Demo application is tested. More info about testing specifics can be found in Test Plan System testing section. Regression testing Regression testing will consist of two parts: Running all automated tests (unit, integration and system tests) Manual testing of the areas that are not covered by automatic tests based on the regression test checklist","title":"10.6.1 QA Strategy"},{"location":"siva/qa_strategy/#introduction","text":"The goal of this document is to give general overview of the used infrastructure, processes, schedule and actions to ensure good quality delivery. The document describes activities in the whole software development process. Analysis, development and testing are separated for the sake of structure and transparency although they are integral parts of the development cycle. This is living document and will be constantly updated as the project evolves.","title":"Introduction"},{"location":"siva/qa_strategy/#environments-and-infrastructure","text":"There are different test environments for quality assurance, depending on the nature and aim. TravisCI environment for public CI - Platform: Linux Test environment for local test and load test - Platform: Linux Instructions how to set up test enviroment and run tests together with more info can be found in SiVa GitHub page System requirements: At least 2GB of RAM on machine where the build is executed Minimum required Java version is Java 8 SiVa project provided Maven Wrapper (./mvnw) Tools used: TravisCI \u2013 is a continuous integration service used to build and test software projects hosted at GitHub Jenkins \u2013 is an open source continuous integration tool written in Java. JMeter \u2013 tool for creating and running load tests. IntelliJ IDEA \u2013 is a Java integrated development environment(IDE) for developing and executing automated tests locally Apache Tomcat - is an open source servlet container developed by the Apache Software Foundation. Docker \u2013 is an open-source project that automates the deployment of applications inside software containers, by providing an additional layer of abstraction and automation of operating-system-level virtualization on Linux. Rest-Assured - is a Java DSL(Domain-specific language) for simplifying testing of REST based Services built on top of HTTP Builder.","title":"Environments and infrastructure"},{"location":"siva/qa_strategy/#analysis","text":"Analysis will be tagged with identificators to enable cross-reference between requirements and corresponding tests. This includes both functional and non-functional requirements. Analysis of specific tasks must be done before the sprint planning meeting. This will ensure that upcoming sprint is planned in common grounds. See documents (2) and (3) in References","title":"Analysis"},{"location":"siva/qa_strategy/#development","text":"","title":"Development"},{"location":"siva/qa_strategy/#development-process","text":"Customized iterative process similar to SCRUM is used in the development. The process consists of following elements: Product backlog is maintained Sprints are two weeks long Sprint planning meetings are held Tasks are maintained through JIRA SCRUM board Daily team stand-ups are held Tasks marked done are developed, tested and ready to be shipped Bi-weekly meetings are held to give status on progress and discuss open questions Retrospectives are held at least with two month intervals","title":"Development process"},{"location":"siva/qa_strategy/#issue-lifecycle","text":"Each ticket (defect, task, ...) in JIRA SCRUM board goes through the following states that correspond the development procedure described in previous chapter. Description of states: ToDo - tickets to be dealt with in current sprint (Sprint backlog). Analysis -ticket is being analysed. During this stage requirements are refined. Development - ticket is being handled (feature coding, document writing, ...). In Review - the work done in development stage is being reviewed. Test - ticket is being tested. Done - ticket has been tested and deemed sufficient for release (Ready features) Closed - ticket has been released.","title":"Issue lifecycle"},{"location":"siva/qa_strategy/#qa-activities-and-quality-criterias-in-the-development","text":"Process improvement The development process is constantly monitored and adjusted to the changing situations. Retrospective meetings for process feedback are held. Unit tests It is responsibility of developer to write, maintain and execute the unit tests on developed features. The code must compile and pass unit tests before it is allowed to be submitted to the code repository. The code of the unit tests is integral part of the source code and is maintained on the same principles. Unit tests are also automatically executed on each build, if the unit tests do not pass further test execution is stopped. Static testing/code reviews All changes (including changes in unit test code) are reviewed by another development team member using GitHub. The code must pass review before it is submitted to testing. SonarLint is used to validate code automatically. It integrates both suggested tools mentioned in reference document (3) References","title":"QA activities and quality criterias in the development"},{"location":"siva/qa_strategy/#testing","text":"","title":"Testing"},{"location":"siva/qa_strategy/#approach-and-schedule","text":"Testing follows the principles described in reference document (1) in References The goal is to automate as much of the testing process as possible, however some aspects of the testing will be carried out manually. As the development is carried out validation module by validation module, testing will follow the same principle. The tests will be developed in iterations for each validation module. After each iteration test cases, test automation code and test results will be available through GitHub. The main focus on testing is on different type of input data, the tests themselves will be based on the same principle for all the modules. The schedule of testing can be seen on the image below.","title":"Approach and schedule"},{"location":"siva/qa_strategy/#testing-process","text":"All automatic tests, except load tests will follow the same execution process. The tests are ran automatically during the project build process by Travis CI after each code change push in GitHub.","title":"Testing process"},{"location":"siva/qa_strategy/#test-case-management","text":"Test cases are handled as integral part of test automation code. The same applies on manual tests, in manual test cases some portion of automation may be used to execute the tests but the results are verified manually. All the test cases and test code will be maintained in the GitHub. Test cases are developed and maintained together with test automation code by the QA specialist for Integration and System Testing. Following elements will be present in test cases: TestCaseID: unique ID that makes possible to identify specific test case TestType: Automated, Automated SoapUI or Manual Requirement: Reference to the requirement that is tested Title: Description of the test Expected Result: expected outcome of the test (pass criteria for the test) File: input test file that is used Test case sample Automatic and manual test cases will have the same description principles (shown below). /** * TestCaseID: Bdoc-ValidationFail-27 * * TestType: Automated * * Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 * * Title: Bdoc OCSP response doesn ' t correspond to the signers certificate * * Expected Result: The document should fail the validation * * File: NS28_WrongSignerCertInOCSPResp.bdoc */ @Test public void bdocWrongSignersCertInOcspResponse () { setTestFilesDirectory ( \"bdoc/live/timemark/\" ) ; post ( validationRequestFor ( \"NS28_WrongSignerCertInOCSPResp.bdoc\" )) .then () .body ( \"signatures[0].indication\" , Matchers.is ( \"TOTAL-FAILED\" )) .body ( \"signatures[0].subIndication\" , Matchers.is ( \"TRY_LATER\" )) .body ( \"signatures[0].errors.content\" , Matchers.hasItem ( \"No revocation data for the certificate\" )) .body ( \"validSignaturesCount\" , Matchers.is ( 0 )) ; }","title":"Test case management"},{"location":"siva/qa_strategy/#defect-management","text":"All found defects will be reported and handled in Jira. The defect report will follow similar lifecycle in JIRA SCRUM board as tasks. The report will have following elements: Title: Short, precise description of the problem Details: Type, Priority, Sprint, Epic Link, Fix Version/s Description: Steps to reproduce bug - sequence for reproduction, link to test case if applicable. Expected behavior - expected outcome of the test sequence. Actual behavior - actual result of the test sequence. The description should be thorough enough to enable the debugging of the problem and to give objective base for severity assessment. File attachments - Test files, logs, images, ...","title":"Defect management"},{"location":"siva/qa_strategy/#test-levels","text":"Integration testing The scope of the tests is illustrated on the image below. The goal is to test the SiVA application API (both X-Road and REST/JSON) and to test the independent module capability for validation of specific type of file (DDOC, BDOC, PDF or X-Road signature). Both valid and invalid inputs are tested. More info about testing specifics can be found in Test Plan Integration testing section. System testing The scope of the tests is illustrated on the image below. The goal of the test is to test the entire length of signature validation process and to test supportive functions. In addition Demo application is tested. More info about testing specifics can be found in Test Plan System testing section. Regression testing Regression testing will consist of two parts: Running all automated tests (unit, integration and system tests) Manual testing of the areas that are not covered by automatic tests based on the regression test checklist","title":"Test levels"},{"location":"siva/references/","text":"References (1) Lisa_6_Osa_I_SiVa_Testimise_korraldus.pdf (2) Lisa_4_Osa_I_SiVa_Valideerimisteenuse_analuus MUUDETUD.pdf (3) Lisa_3_RIA_Mittefunktsionaalsed_nouded.pdf","title":"10.7. REFERENCES"},{"location":"siva/references/#references","text":"(1) Lisa_6_Osa_I_SiVa_Testimise_korraldus.pdf (2) Lisa_4_Osa_I_SiVa_Valideerimisteenuse_analuus MUUDETUD.pdf (3) Lisa_3_RIA_Mittefunktsionaalsed_nouded.pdf","title":"References"},{"location":"siva/test_plan/","text":"Test execution Execution of tests in SiVa is divided in three categories: Automated, Automated SoapUI, Manual. The method is also indicated in test case description with TestType field. Execution of Automated type of tests These tests are run automatically by Maven every time SiVa project is built. These tests must pass for the build to be successful. Its also possible to execute the tests separately with Maven wrapper using the command: ./mvnw verify These tests are part of SiVa project and can also be executed using IntellJ IDEA. To do that, SiVa project must be loaded into IDEA. Tests are located in following packages: ee.openeid.siva.integrationtest ee.openeid.siva.resttest ee.openeid.siva.soaptest To run the tests in IDEA right click on package name and select \"Run tests in\". Its also possible to run individual tests by right clicking on specific test code and selecting \"Run\". Execution of Automated SoapUI type of tests The description how to execute the tests together with SoapUI project file to be used can be found in SiVa GitHub Execution of Manual type of tests Most of the manual tests require that SiVa service is set up together with SiVa Sample application. The instructions how to set up SiVa are given in System integrator's guide Execution of manual tests depends on testable area. These tests can be divided into following categories: Statistics tests - test data can be prepeared with exectuting ee.openeid.siva.manualtest package. It can be also generated by uploading files into SiVa Sample application. Results have to be verified in logs and Google Analytics. Configuration tests - SiVa configuration files have to be modified by hand and service must be set up. Correct behavior of the service must be checked. Other tests - tests are executed by loading files into SiVa Sample application and validating the results shown in the SiVa Sample application. Files to use in manual tests can be found in SiVa GitHub Integration Test introduction This section of the document gives overview of Integration Testing carried out on SiVa web service and SiVa Sample application. SiVa web service Integration Testing is using RestAssured library v2.5.0 to implement automatic checks for REST/SOAP based tests. The testing of the SiVa web service is divided into sections based on the software architecture and functionalities provided to the users. The sections are: REST API SOAP API DDOC signature validation BDOC signature validation PDF signature validation X-Road ASICE signature validation The goal is to focus testing on functionalities implemented in SiVa web service application. Functionalities provided by Validation libraries are not explicitly tested. In addition SiVa Sample Application is tested. These tests are carried out manually. Testing of REST API The goal of the REST API testing is to check that the API is accepting the requests based on the specification and the output result is in correct format and has all the required elements. Validation request tests Following areas are tested on input: Wrong (not accepted) values in input parameters Empty values in input paramters Too many parameters Too few parameters Inconsistencies on stated parameters and actual data (wrong document type) Case insensitivity on parameter names Empty request In all of the negative cases correctness of returned error message is checked. Specific test cases and input files can be found in: ValidationRequestIT.java DocumentFormatIT.java Get Data Files request tests Following areas are tested on input: Empty request Empty values in input parameters Too many parameters Too few parameters Changed order of parameters Case insensitivity on parameter names Inconsistencies on stated parameters and actual data In all of the negative cases correctness of returned error message is checked. Specific test cases and input files can be found in: GetDataFileRequestIT.java Validation report tests SiVa web service returns uniform Validation Report on all the supported document types. This also includes correct document types without actual signature (for example PDF document without signature). However not all values may be present for all the document types. Following areas are tested on output (Validation Report): JSON structure on DDOC, BDOC, PDF, ASIC-E and ASICE-E X-Road document types Presence of the mandatory elements on DDOC, BDOC, PDF, ASIC-E and ASICE-E X-Road document types Presence of optional elements on DDOC, BDOC, PDF, ASIC-E and ASICE-E X-Road document types Verification of expected values JSON structure on containers without signatures Specific test cases and input files can be found in: ValidationReportValueVerificationIT.java Testing of SOAP API The goal of the SOAP API testing is to check that the API is accepting the requests based on the specification and the output result (Validation Report) is in correct format and has all the required elements. In general the tests follow the same principles as with REST API. Compatibility with X-Road security server is out of scope for these tests and will be covered in X-Road System Test plan. Validation request tests Following areas are tested on input: Wrong (not accepted) values in input parameters Empty values in input paramters Too many parameters Too few parameters Inconsistencies on stated parameters and actual data (wrong document type) Case insensitivity on parameter names Empty request In all of the negative cases correctness of returned error message is checked. Specific test cases and input files can be found in: SoapValidationRequestIT.java Get Data Files request tests Following areas are tested on input: Empty request Empty values in input parameters Too many parameters Too few parameters Changed order of parameters Case insensitivity on parameter names Inconsistencies on stated parameters and actual data In all of the negative cases correctness of returned error message is checked. Specific test cases and input files can be found in: SoapGetDataFileRequestIT.java Validation report tests SiVa web service returns uniform Validation Report on all the supported document types. This also includes correct document types without actual signature (for example PDF document without signature). However not all values may be present for all the document types. Following areas are tested on output (Validation Report): Presence of the mandatory elements on DDOC, BDOC, PDF, ASIC-E and ASICE-E X-Road document types Presence of optional elements on DDOC, BDOC, PDF, ASIC-E and ASICE-E X-Road document types Verification of expected values Specific test cases and input files can be found in: SoapValidationReportValueIT.java Get Data Files report tests Following areas are tested on output: Presence of the mandatory elements Verification of expected values Extraction of all data files Specific test cases and input files can be found in: SoapGetDataFileReportIT.java Testing of DDOC signature validation The goal of the DDOC signature validation testing is to check that the validation results given by JDigiDoc library are properly presented in validation report. The testing of DDOC signatures consists of following main cases: Containers with valid signature(s) are validated. Containers with invalid signature(s) or no signature are validated Containers sizes near maximum are validated Containers with DDOC v1.0 - 1.3 are validated Specific test cases and input files can be found in: DdocValidationFailIT.java DdocValidationPassIT.java LargeFileIT.java What is not tested: Verification of different causes in container for invalid result is out of scope. Testing of BDOC signature validation The goal of the BDOC signature validation testing is to check that the validation results given by DigiDoc4J library are properly presented in validation report. The testing of BDOC signatures consists of following main cases: Containers with valid signature(s) are validated Containers with invalid signature(s) or no signature are validated Containers sizes near maximum are validated Specific test cases and input files can be found in: BdocValidationFailIT.java BdocValidationPassIT.java LargeFileIT.java What is not tested: Verification of different causes in container for invalid result is out of scope. Testing of PDF signature validation Portion of the validation rules for PDF documents are implemented in SiVa web apllication itself. Therefor different test area selection is used for PDF compared to other containers. The testing of PDF signatures consists of following main cases: Containers with invalid signature(s) (different reasons for failure) are validated Containers with no signature are validated Containers sizes near maximum are validated Containers with different baseline profiles are validated Containers with serial and parallel signatures are validated Containers with different signature cryptocaphic algorithms are validated Containers with OCSP values inside and outside bounds are validated Specific test cases and input files can be found in: PdfBaselineProfileIT.java PdfSignatureCryptographicAlgorithmIT.java PdfValidationFailIT.java PdfValidationPassIT.java LargeFileIT.java Testing of X-Road ASICE signature validation The goal of the ASICE signature validation testing is to check that the validation results given by X-Road signature validation utility are properly presented in validation report. The testing of ASICE signatures consists of following main cases: Containers with valid signature(s) are validated Containers with invalid signature(s) are validated Specific test cases and input files can be found in: XroadValidationPassIT.java XroadValidationFailIT.java What is not tested: Verification of different causes in container for invalid result is out of scope. Testing of Data Files Extraction The goal of the Data Files Extraction testing is to check if right data files returned for DDOC container and error messages for other types of containers. The testing of Data Files Extraction consists of following main cases: Extracting the data files from valid DDOC container Extracting the data files from Hashcoded DDOC returns null for Base64 encoded String Extracting the data files from DDOC container with 12 different types of files Extracting the data files from not DDOC container Extracting the data files from DDOC container with wrong Document Type Specific test cases and input files can be found in: DdocGetDataFilesIT.java Testing of user statistics Testing of user statistics is carried out in combination of automatic data preparation and generation by integration tests and manual verification of the results. SiVa supports two parallel ways of gathering user statistics: Validation results are printed to system log and can be gathered by any suitable means Validation results are sent to Google Analytics using Google Measurement Protocol API Note Testing of Google Analytics requires creation and configuration of Google Analytics account and configuring SiVa service to send statistics to this account. Configuration of SiVa service is explained in SiVa system deployment. As both systems use the same data the testing follows the same principles for both. Following areas are covered: Statistics values are checked in log and Google Analytics for all container types (this also includes parameters not present in validation report) Valid and invalid signatures are validated Error situations on signature validation (instead of validation report, error message is returned) Specific test cases and input files can be found in: StatisticsToGAManualIT.java StatisticsToLogsManualIT.java What is not tested: Configuring Google Analytics reports is out of scope. Only verification of data presence is done. SiVa Sample Application tests Testing of SiVa Sample Application is done manually. The main cases are: Cross browser usage (IE, Edge, Chrome, Firefox and Safari) File upload (different sizes, suported and unsupported file types) Displayment of Validation Report both for REST and SOAP Layout of the page Error representation Sample test cases with input files can be found in: Sample Application Integration Test System Test introduction While Integration Tests were mostly carried out automatically then System Testing is mostly depending on manual testing. System testing is carried out using two access points: Testing through SiVa Sample Application Testing through X-Road security server using SoapUI Note Testing through X-Road security server requires presence and configuration of X-Road security server to use SiVa service. Tests are run using SoapUI that simulates request to X-Road security server. Testing through X-Road security server Following areas are covered for document validation: Validation of valid signature Validation of invalid signatur Validation that returns Soap error All of the above test cases are run with BDOC, DDOC, PDF and X-Road ASiC-E containers. Following areas are covered for file extraction: Extraction of data files from valid ddoc Extraction of data files from invalid ddoc Error response from data file extraction Tests along with test case descriptions are available for rerun in github . Specific test cases and input files can be found in: X-Road Soap System Test Configuration/administration testing Following areas are covered: SiVa Web Application configuration X-Road validation service configuration Sample application configuration Specific test cases can be found in: Configuration System Test Load Test introduction The goals of the load test was to: Determine the throughput capabilities of a single Siva node and how it handles requests under increasing load. Test whether the SiVa service throughput is horizontally scalable up to 50 requests per second. Each container type was load-tested separately since the business logic and underlying mechanics for validating specific container types are vastly different. Load tests were run in three stages \u2013 firstly a single Siva service node was tested to determine the baseline performance metrics. Second and third stage involved adding additional service node to previous setup and testing the horizontal scalability performance. All three target Siva service nodes had identical virtual machine set-up. Virtual machines were installed on separate physical hardware. Siva web service nodes on a target Linux virtual machine were packaged inside a Docker container (along with Java with 4 GB allocated for Heap). The test runner (JMeter plugin used by Maven) resided on a separate machine on local area network. Simple reverse proxy was used as a load balancer to distribute the load between nodes (using round robin algorithm). Load testing is carried out on following environments: System under test enviroment (processor: Intel(R) Xeon(R) CPU E5-2620 v3 @ 2.40GHz memory: 10GB (4GB allocated for Java heap)) Load balancer enviroment (processor: Intel(R) Xeon(R) CPU E5-2620 v3 @ 2.40GHz memory: 13GB) Jmeter executer enviroment (processor: Intel(R) Xeon(R) CPU E5-2620 v2 @ 2.10GHz memory: 6GB) Following test data is used in load test: BDOC-TS file with two valid signatures (~100KB and 5MB) BDOC-TM file with two valid signatures (~100KB and 5MB) PDF file with two valid signatures (~200KB and 5MB) DDOC file with two valid signatures (~300KB and 5MB) ASIC-E X-Road container with one valid signature (~10KB) Each of the files are validated through REST interface. SOAP interface is used with small files for a comparison. It is evaluated that the interface (REST or SOAP) do not play noticeable effect on overall results. Each of the tested files follow the same test plan: Five concurrent requests are made per second This load is held for period of time Concurrent requests are increased by five until 50 concurrent requests per second is achieved Latency and throughput is measured on each concurrent request steps","title":"10.6.2 Test Plan"},{"location":"siva/test_plan/#test-execution","text":"Execution of tests in SiVa is divided in three categories: Automated, Automated SoapUI, Manual. The method is also indicated in test case description with TestType field.","title":"Test execution"},{"location":"siva/test_plan/#execution-of-automated-type-of-tests","text":"These tests are run automatically by Maven every time SiVa project is built. These tests must pass for the build to be successful. Its also possible to execute the tests separately with Maven wrapper using the command: ./mvnw verify These tests are part of SiVa project and can also be executed using IntellJ IDEA. To do that, SiVa project must be loaded into IDEA. Tests are located in following packages: ee.openeid.siva.integrationtest ee.openeid.siva.resttest ee.openeid.siva.soaptest To run the tests in IDEA right click on package name and select \"Run tests in\". Its also possible to run individual tests by right clicking on specific test code and selecting \"Run\".","title":"Execution of Automated type of tests"},{"location":"siva/test_plan/#execution-of-automated-soapui-type-of-tests","text":"The description how to execute the tests together with SoapUI project file to be used can be found in SiVa GitHub","title":"Execution of Automated SoapUI type of tests"},{"location":"siva/test_plan/#execution-of-manual-type-of-tests","text":"Most of the manual tests require that SiVa service is set up together with SiVa Sample application. The instructions how to set up SiVa are given in System integrator's guide Execution of manual tests depends on testable area. These tests can be divided into following categories: Statistics tests - test data can be prepeared with exectuting ee.openeid.siva.manualtest package. It can be also generated by uploading files into SiVa Sample application. Results have to be verified in logs and Google Analytics. Configuration tests - SiVa configuration files have to be modified by hand and service must be set up. Correct behavior of the service must be checked. Other tests - tests are executed by loading files into SiVa Sample application and validating the results shown in the SiVa Sample application. Files to use in manual tests can be found in SiVa GitHub","title":"Execution of Manual type of tests"},{"location":"siva/test_plan/#integration-test-introduction","text":"This section of the document gives overview of Integration Testing carried out on SiVa web service and SiVa Sample application. SiVa web service Integration Testing is using RestAssured library v2.5.0 to implement automatic checks for REST/SOAP based tests. The testing of the SiVa web service is divided into sections based on the software architecture and functionalities provided to the users. The sections are: REST API SOAP API DDOC signature validation BDOC signature validation PDF signature validation X-Road ASICE signature validation The goal is to focus testing on functionalities implemented in SiVa web service application. Functionalities provided by Validation libraries are not explicitly tested. In addition SiVa Sample Application is tested. These tests are carried out manually.","title":"Integration Test introduction"},{"location":"siva/test_plan/#testing-of-rest-api","text":"The goal of the REST API testing is to check that the API is accepting the requests based on the specification and the output result is in correct format and has all the required elements.","title":"Testing of REST API"},{"location":"siva/test_plan/#validation-request-tests","text":"Following areas are tested on input: Wrong (not accepted) values in input parameters Empty values in input paramters Too many parameters Too few parameters Inconsistencies on stated parameters and actual data (wrong document type) Case insensitivity on parameter names Empty request In all of the negative cases correctness of returned error message is checked. Specific test cases and input files can be found in: ValidationRequestIT.java DocumentFormatIT.java","title":"Validation request tests"},{"location":"siva/test_plan/#get-data-files-request-tests","text":"Following areas are tested on input: Empty request Empty values in input parameters Too many parameters Too few parameters Changed order of parameters Case insensitivity on parameter names Inconsistencies on stated parameters and actual data In all of the negative cases correctness of returned error message is checked. Specific test cases and input files can be found in: GetDataFileRequestIT.java","title":"Get Data Files request tests"},{"location":"siva/test_plan/#validation-report-tests","text":"SiVa web service returns uniform Validation Report on all the supported document types. This also includes correct document types without actual signature (for example PDF document without signature). However not all values may be present for all the document types. Following areas are tested on output (Validation Report): JSON structure on DDOC, BDOC, PDF, ASIC-E and ASICE-E X-Road document types Presence of the mandatory elements on DDOC, BDOC, PDF, ASIC-E and ASICE-E X-Road document types Presence of optional elements on DDOC, BDOC, PDF, ASIC-E and ASICE-E X-Road document types Verification of expected values JSON structure on containers without signatures Specific test cases and input files can be found in: ValidationReportValueVerificationIT.java","title":"Validation report tests"},{"location":"siva/test_plan/#testing-of-soap-api","text":"The goal of the SOAP API testing is to check that the API is accepting the requests based on the specification and the output result (Validation Report) is in correct format and has all the required elements. In general the tests follow the same principles as with REST API. Compatibility with X-Road security server is out of scope for these tests and will be covered in X-Road System Test plan.","title":"Testing of SOAP API"},{"location":"siva/test_plan/#validation-request-tests_1","text":"Following areas are tested on input: Wrong (not accepted) values in input parameters Empty values in input paramters Too many parameters Too few parameters Inconsistencies on stated parameters and actual data (wrong document type) Case insensitivity on parameter names Empty request In all of the negative cases correctness of returned error message is checked. Specific test cases and input files can be found in: SoapValidationRequestIT.java","title":"Validation request tests"},{"location":"siva/test_plan/#get-data-files-request-tests_1","text":"Following areas are tested on input: Empty request Empty values in input parameters Too many parameters Too few parameters Changed order of parameters Case insensitivity on parameter names Inconsistencies on stated parameters and actual data In all of the negative cases correctness of returned error message is checked. Specific test cases and input files can be found in: SoapGetDataFileRequestIT.java","title":"Get Data Files request tests"},{"location":"siva/test_plan/#validation-report-tests_1","text":"SiVa web service returns uniform Validation Report on all the supported document types. This also includes correct document types without actual signature (for example PDF document without signature). However not all values may be present for all the document types. Following areas are tested on output (Validation Report): Presence of the mandatory elements on DDOC, BDOC, PDF, ASIC-E and ASICE-E X-Road document types Presence of optional elements on DDOC, BDOC, PDF, ASIC-E and ASICE-E X-Road document types Verification of expected values Specific test cases and input files can be found in: SoapValidationReportValueIT.java","title":"Validation report tests"},{"location":"siva/test_plan/#get-data-files-report-tests","text":"Following areas are tested on output: Presence of the mandatory elements Verification of expected values Extraction of all data files Specific test cases and input files can be found in: SoapGetDataFileReportIT.java","title":"Get Data Files report tests"},{"location":"siva/test_plan/#testing-of-ddoc-signature-validation","text":"The goal of the DDOC signature validation testing is to check that the validation results given by JDigiDoc library are properly presented in validation report. The testing of DDOC signatures consists of following main cases: Containers with valid signature(s) are validated. Containers with invalid signature(s) or no signature are validated Containers sizes near maximum are validated Containers with DDOC v1.0 - 1.3 are validated Specific test cases and input files can be found in: DdocValidationFailIT.java DdocValidationPassIT.java LargeFileIT.java What is not tested: Verification of different causes in container for invalid result is out of scope.","title":"Testing of DDOC signature validation"},{"location":"siva/test_plan/#testing-of-bdoc-signature-validation","text":"The goal of the BDOC signature validation testing is to check that the validation results given by DigiDoc4J library are properly presented in validation report. The testing of BDOC signatures consists of following main cases: Containers with valid signature(s) are validated Containers with invalid signature(s) or no signature are validated Containers sizes near maximum are validated Specific test cases and input files can be found in: BdocValidationFailIT.java BdocValidationPassIT.java LargeFileIT.java What is not tested: Verification of different causes in container for invalid result is out of scope.","title":"Testing of BDOC signature validation"},{"location":"siva/test_plan/#testing-of-pdf-signature-validation","text":"Portion of the validation rules for PDF documents are implemented in SiVa web apllication itself. Therefor different test area selection is used for PDF compared to other containers. The testing of PDF signatures consists of following main cases: Containers with invalid signature(s) (different reasons for failure) are validated Containers with no signature are validated Containers sizes near maximum are validated Containers with different baseline profiles are validated Containers with serial and parallel signatures are validated Containers with different signature cryptocaphic algorithms are validated Containers with OCSP values inside and outside bounds are validated Specific test cases and input files can be found in: PdfBaselineProfileIT.java PdfSignatureCryptographicAlgorithmIT.java PdfValidationFailIT.java PdfValidationPassIT.java LargeFileIT.java","title":"Testing of PDF signature validation"},{"location":"siva/test_plan/#testing-of-x-road-asice-signature-validation","text":"The goal of the ASICE signature validation testing is to check that the validation results given by X-Road signature validation utility are properly presented in validation report. The testing of ASICE signatures consists of following main cases: Containers with valid signature(s) are validated Containers with invalid signature(s) are validated Specific test cases and input files can be found in: XroadValidationPassIT.java XroadValidationFailIT.java What is not tested: Verification of different causes in container for invalid result is out of scope.","title":"Testing of X-Road ASICE signature validation"},{"location":"siva/test_plan/#testing-of-data-files-extraction","text":"The goal of the Data Files Extraction testing is to check if right data files returned for DDOC container and error messages for other types of containers. The testing of Data Files Extraction consists of following main cases: Extracting the data files from valid DDOC container Extracting the data files from Hashcoded DDOC returns null for Base64 encoded String Extracting the data files from DDOC container with 12 different types of files Extracting the data files from not DDOC container Extracting the data files from DDOC container with wrong Document Type Specific test cases and input files can be found in: DdocGetDataFilesIT.java","title":"Testing of Data Files Extraction"},{"location":"siva/test_plan/#testing-of-user-statistics","text":"Testing of user statistics is carried out in combination of automatic data preparation and generation by integration tests and manual verification of the results. SiVa supports two parallel ways of gathering user statistics: Validation results are printed to system log and can be gathered by any suitable means Validation results are sent to Google Analytics using Google Measurement Protocol API Note Testing of Google Analytics requires creation and configuration of Google Analytics account and configuring SiVa service to send statistics to this account. Configuration of SiVa service is explained in SiVa system deployment. As both systems use the same data the testing follows the same principles for both. Following areas are covered: Statistics values are checked in log and Google Analytics for all container types (this also includes parameters not present in validation report) Valid and invalid signatures are validated Error situations on signature validation (instead of validation report, error message is returned) Specific test cases and input files can be found in: StatisticsToGAManualIT.java StatisticsToLogsManualIT.java What is not tested: Configuring Google Analytics reports is out of scope. Only verification of data presence is done.","title":"Testing of user statistics"},{"location":"siva/test_plan/#siva-sample-application-tests","text":"Testing of SiVa Sample Application is done manually. The main cases are: Cross browser usage (IE, Edge, Chrome, Firefox and Safari) File upload (different sizes, suported and unsupported file types) Displayment of Validation Report both for REST and SOAP Layout of the page Error representation Sample test cases with input files can be found in: Sample Application Integration Test","title":"SiVa Sample Application tests"},{"location":"siva/test_plan/#system-test-introduction","text":"While Integration Tests were mostly carried out automatically then System Testing is mostly depending on manual testing. System testing is carried out using two access points: Testing through SiVa Sample Application Testing through X-Road security server using SoapUI Note Testing through X-Road security server requires presence and configuration of X-Road security server to use SiVa service. Tests are run using SoapUI that simulates request to X-Road security server.","title":"System Test introduction"},{"location":"siva/test_plan/#testing-through-x-road-security-server","text":"Following areas are covered for document validation: Validation of valid signature Validation of invalid signatur Validation that returns Soap error All of the above test cases are run with BDOC, DDOC, PDF and X-Road ASiC-E containers. Following areas are covered for file extraction: Extraction of data files from valid ddoc Extraction of data files from invalid ddoc Error response from data file extraction Tests along with test case descriptions are available for rerun in github . Specific test cases and input files can be found in: X-Road Soap System Test","title":"Testing through X-Road security server"},{"location":"siva/test_plan/#configurationadministration-testing","text":"Following areas are covered: SiVa Web Application configuration X-Road validation service configuration Sample application configuration Specific test cases can be found in: Configuration System Test","title":"Configuration/administration testing"},{"location":"siva/test_plan/#load-test-introduction","text":"The goals of the load test was to: Determine the throughput capabilities of a single Siva node and how it handles requests under increasing load. Test whether the SiVa service throughput is horizontally scalable up to 50 requests per second. Each container type was load-tested separately since the business logic and underlying mechanics for validating specific container types are vastly different. Load tests were run in three stages \u2013 firstly a single Siva service node was tested to determine the baseline performance metrics. Second and third stage involved adding additional service node to previous setup and testing the horizontal scalability performance. All three target Siva service nodes had identical virtual machine set-up. Virtual machines were installed on separate physical hardware. Siva web service nodes on a target Linux virtual machine were packaged inside a Docker container (along with Java with 4 GB allocated for Heap). The test runner (JMeter plugin used by Maven) resided on a separate machine on local area network. Simple reverse proxy was used as a load balancer to distribute the load between nodes (using round robin algorithm). Load testing is carried out on following environments: System under test enviroment (processor: Intel(R) Xeon(R) CPU E5-2620 v3 @ 2.40GHz memory: 10GB (4GB allocated for Java heap)) Load balancer enviroment (processor: Intel(R) Xeon(R) CPU E5-2620 v3 @ 2.40GHz memory: 13GB) Jmeter executer enviroment (processor: Intel(R) Xeon(R) CPU E5-2620 v2 @ 2.10GHz memory: 6GB) Following test data is used in load test: BDOC-TS file with two valid signatures (~100KB and 5MB) BDOC-TM file with two valid signatures (~100KB and 5MB) PDF file with two valid signatures (~200KB and 5MB) DDOC file with two valid signatures (~300KB and 5MB) ASIC-E X-Road container with one valid signature (~10KB) Each of the files are validated through REST interface. SOAP interface is used with small files for a comparison. It is evaluated that the interface (REST or SOAP) do not play noticeable effect on overall results. Each of the tested files follow the same test plan: Five concurrent requests are made per second This load is held for period of time Concurrent requests are increased by five until 50 concurrent requests per second is achieved Latency and throughput is measured on each concurrent request steps","title":"Load Test introduction"},{"location":"siva/version_info/","text":"Version number Change date Author Description 0.1 06.05.2016 Mihkel Selgal Initial SiVa architecture 1.0 26.10.2016 Priit Reiser, Aare Nurm Documentation updates 1.1 04.05.2017 Vadim Pudov, Allan Juhanson, Julia Solovei, Aare Nurm Documentation updates 1.2 01.11.2017 Aare Nurm Update to new version of mkdocs. Addition of SIVA 2.0 documentation structure","title":"Version info"},{"location":"siva/appendix/known_issues/","text":"Known issues All known issues should be reported and managed under GitHub project issues section","title":"Appendix 4 - Known Issues"},{"location":"siva/appendix/known_issues/#known-issues","text":"All known issues should be reported and managed under GitHub project issues section","title":"Known issues"},{"location":"siva/appendix/test_cases/","text":"Test Case Descriptions Introduction This document gives overview of the test cases. This page is partially generated using a script, more info about the script can be found in SiVa GitHub . The structure and elements of test case is described in QA Strategy document. All the files used in the tests can be found in SiVa GitHub . BdocValidationFailIT.java Open file TestCaseID: Bdoc-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with single invalid signature Expected Result: The document should fail the validation File: IB-3960_bdoc2.1_TSA_SignatureValue_altered.bdoc TestCaseID: Bdoc-ValidationFail-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with multiple invalid signatures Expected Result: The document should fail the validation File: BdocMultipleSignaturesInvalid.bdoc TestCaseID: Bdoc-ValidationFail-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with multiple signatures both valid and invalid Expected Result: The document should fail the validation File: BdocMultipleSignaturesMixedWithValidAndInvalid.bdoc TestCaseID: Bdoc-ValidationFail-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with no signatures Expected Result: The document should fail the validation File: BdocContainerNoSignature.bdoc TestCaseID: Bdoc-ValidationFail-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with invalid mimetype in manifest Expected Result: document malformed error should be returned File: 23147_weak-warning-sha1-invalid-mimetype-in-manifest.bdoc TestCaseID: Bdoc-ValidationFail-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Asice with wrong slash character ('\\') in data file mime-type value Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-V-33.asice TestCaseID: Bdoc-ValidationFail-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Wrong signature timestamp Expected Result: The document should fail the validation File: TS-02_23634_TS_wrong_SignatureValue.asice TestCaseID: Bdoc-ValidationFail-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Asice No non-repudiation key usage value in the certificate, verification of AdES signature level Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-I-43.asice TestCaseID: Bdoc-ValidationFail-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Asice signers certificate does not have non-repudiation value in the certificates key usage field and it does not contain the QC and SSCD compliance information. Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-I-26.asice TestCaseID: Bdoc-ValidationFail-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc OCSP certificate is not trusted Expected Result: The document should fail the validation File: TM-01_bdoc21-unknown-resp.bdoc TestCaseID: Bdoc-ValidationFail-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Asice TSA certificate is not trusted Expected Result: The document should fail the validation File: TS-05_23634_TS_unknown_TSA.asice TestCaseID: Bdoc-ValidationFail-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Asice OCSP response status is revoked Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-R-25.asice TestCaseID: Bdoc-ValidationFail-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Asice difference between OCSP and time-stamp issuing times is more than 24 hours Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-V-20.asice TestCaseID: Bdoc-ValidationFail-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Asice unsigned data files in the container Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-V-34.asice **Attention! This test is disabled: https://github.com/open-eid/SiVa/issues/18 TestCaseID: Bdoc-ValidationFail-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc different data file mime-type values in signatures.xml and manifest.xml files Expected Result: The document should fail the validation File: 23613_TM_wrong-manifest-mimetype.bdoc **Attention! This test is disabled: https://github.com/open-eid/SiVa/issues/18 TestCaseID: Bdoc-ValidationFail-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc SignatureValue does not correspond to the SignedInfo block Expected Result: The document should fail the validation File: REF-19_bdoc21-no-sig-asn1-pref.bdoc TestCaseID: Bdoc-ValidationFail-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc Baseline-BES file Expected Result: The document should fail the validation File: signWithIdCard_d4j_1.0.4_BES.asice TestCaseID: Bdoc-ValidationFail-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc Baseline-EPES file Expected Result: The document should fail the validation File: TM-04_kehtivuskinnituset.4.asice TestCaseID: Bdoc-ValidationFail-19 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc signers certificate is not trusted Expected Result: The document should fail the validation File: SS-4_teadmataCA.4.asice TestCaseID: Bdoc-ValidationFail-20 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc OCSP response status is revoked Expected Result: The document should fail the validation File: TM-15_revoked.4.asice TestCaseID: Bdoc-ValidationFail-21 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc OCSP response status is unknown Expected Result: The document should fail the validation File: TM-16_unknown.4.asice TestCaseID: Bdoc-ValidationFail-22 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc signed data file has been removed from the container Expected Result: The document should fail the validation File: KS-21_fileeemaldatud.4.asice TestCaseID: Bdoc-ValidationFail-23 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc no files in container Expected Result: The document should fail the validation File: KS-02_tyhi.bdoc TestCaseID: Bdoc-ValidationFail-24 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc wrong nonce Expected Result: The document should fail the validation File: TM-10_noncevale.4.asice TestCaseID: Bdoc-ValidationFail-25 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc signed data file(s) don't match the hash values in reference elements Expected Result: The document should fail the validation File: REF-14_filesisumuudetud.4.asice TestCaseID: Bdoc-ValidationFail-26 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Asice Baseline-T signature Expected Result: The document should fail the validation File: TS-06_23634_TS_missing_OCSP.asice TestCaseID: Bdoc-ValidationFail-27 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc OCSP response is not the one expected Expected Result: The document should fail the validation File: 23608-bdoc21-TM-ocsp-bad-nonce.bdoc TestCaseID: Bdoc-ValidationFail-28 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc certificate's validity time is not in the period of OCSP producedAt time Expected Result: The document should fail the validation File: 23154_test1-old-sig-sigat-OK-prodat-NOK-1.bdoc TestCaseID: Bdoc-ValidationFail-29 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc BDOC-1.0 version container Expected Result: The document should fail the validation File: BDOC-1.0.bdoc BdocValidationPassIT.java Open file TestCaseID: Bdoc-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Bdoc with single valid signature Expected Result: The document should pass the validation File: Valid_ID_sig.bdoc TestCaseID: Bdoc-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Bdoc TM with multiple valid signatures Expected Result: The document should pass the validation File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Bdoc-ValidationPass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Bdoc with warning on signature Expected Result: The document should pass the validation but warning should be returned File: bdoc_weak_warning_sha1.bdoc **Attention! This test is disabled: https://github.com/open-eid/SiVa/issues/20 TestCaseID: Bdoc-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Asice One LT signature with certificates from different countries Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-30.asice TestCaseID: Bdoc-ValidationPass-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Bdoc signed with Mobile-ID, ECC-SHA256 signature with prime256v1 key Expected Result: The document should pass the validation File: 24050_short_ecdsa_correct_file_mimetype.bdoc TestCaseID: Bdoc-ValidationPass-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Asice Baseline-LT file Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-49.asice TestCaseID: Bdoc-ValidationPass-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Asice QES file Expected Result: The document should pass the validation File: ValidLiveSignature.asice TestCaseID: Bdoc-ValidationPass-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Asice Baseline-LTA file Expected Result: The document should pass the validation File: EE_SER-AEX-B-LTA-V-24.asice TestCaseID: Bdoc-ValidationPass-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Asice file signed with Mobile-ID, ECC-SHA256 signature with prime256v1 key Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-2.asice TestCaseID: Bdoc-ValidationPass-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Asice file with ESTEID-SK 2015 certificate chain Expected Result: The document should pass the validation File: IB-4270_TS_ESTEID-SK 2015 SK OCSP RESPONDER 2011.asice TestCaseID: Bdoc-ValidationPass-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Asice file with KLASS3-SK 2010 (EECCRCA) certificate chain Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-28.asice TestCaseID: Bdoc-ValidationPass-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Bdoc with Baseline-LT_TM and QES signature level and ESTEID-SK 2011 certificate chain with valid signature Expected Result: The document should pass the validation File: BDOC2.1.bdoc TestCaseID: Bdoc-ValidationPass-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Bdoc TS with multiple valid signatures Expected Result: The document should pass the validation File: Test_id_aa.asice TestCaseID: Bdoc-ValidationPass-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Bdoc-TM with special characters in data file Expected Result: The document should pass the validation File: \u0160u\u017elikud s\u00f5id \u00fche \u00f5una \u00e4ra.bdoc TestCaseID: Bdoc-ValidationPass-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: *.sce file with TimeMark Expected Result: The document should pass the validation File: BDOC2.1_content_as_sce.sce TestCaseID: Bdoc-ValidationPass-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: *.sce file with TimeStamp Expected Result: The document should pass the validation File: ASICE_TS_LTA_content_as_sce.sce TestCaseID: Bdoc-ValidationPass-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc-TS with special characters in data file Expected Result: The document should pass the validation with correct signature scope File: Nonconventionalcharacters.asice DdocGetDataFilesIT.java Open file TestCaseID: Ddoc-Get-Data-Files-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/use_cases/#ddoc-data-file-extraction-process Title: Valid DDOC with data file used Expected Result: The data file should be returned File: 18912.ddoc TestCaseID: Ddoc-Get-Data-Files-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/use_cases/#ddoc-data-file-extraction-process Title: Invalid DDOC with data file used Expected Result: The data file should be returned File: OCSP nonce vale.ddoc TestCaseID: Ddoc-Get-Data-Files-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/use_cases/#ddoc-data-file-extraction-process Title:DDOC with xml v1.1 is used Expected Result: The data file is returned File: DIGIDOC-XML1.1.ddoc TestCaseID: Ddoc-Get-Data-Files-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/use_cases/#ddoc-data-file-extraction-process Title: DDOC with xml v1.2 is used Expected Result: The data file is returned File: DIGIDOC-XML1.2.ddoc TestCaseID: Ddoc-Get-Data-Files-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/use_cases/#ddoc-data-file-extraction-process Title: DDOC with xml v1.3 is used Expected Result: The data file is returned File: DIGIDOC-XML1.3.ddoc TestCaseID: Ddoc-Get-Data-Files-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/use_cases/#ddoc-data-file-extraction-process Title: Hashcoded DDOC is used Expected Result: Null is returned File: DIGIDOC-XML1.3_hashcode.ddoc TestCaseID: Ddoc-Get-Data-Files-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/use_cases/#ddoc-data-file-extraction-process Title: DDOC with 12 different files of different types is used Expected Result: Data file returned for each file correctly File: igasugust1.3.ddoc TestCaseID: Ddoc-Get-Data-Files-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/use_cases/#ddoc-data-file-extraction-process Title: BDOC with data file used Expected Result: The error message should be returned File: BDOC-TS.bdoc TestCaseID: Ddoc-Get-Data-Files-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/use_cases/#ddoc-data-file-extraction-process Title: PDF file used Expected Result: The error message should be returned File: hellopades-lt-b.pdf DdocValidationFailIT.java Open file TestCaseID: Ddoc-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc with single invalid signature Expected Result: The document should fail the validation File: test1-ddoc-revoked.ddoc TestCaseID: Ddoc-ValidationFail-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc with multiple invalid signatures Expected Result: The document should fail the validation File: multipleInvalidSignatures.ddoc TestCaseID: Ddoc-ValidationFail-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc with multiple signatures both valid and invalid Expected Result: The document should fail the validation File: multipleValidAndInvalidSignatures.ddoc TestCaseID: Ddoc-ValidationFail-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc with no signatures Expected Result: The document should fail the validation File: DdocContainerNoSignature.bdoc TestCaseID: Ddoc-ValidationFail-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc signature value has been changed (SignatureValue does not correspond to the SignedInfo block) Expected Result: The document should fail the validation File: test-inv-sig-inf.ddoc TestCaseID: Ddoc-ValidationFail-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc Data file(s) don't match the hash values in Reference elements Expected Result: The document should fail the validation File: AndmefailiAtribuudidMuudetud.ddoc TestCaseID: Ddoc-ValidationFail-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc Baseline-BES file, no OCSP response Expected Result: The document should fail the validation File: ilma_kehtivuskinnituseta.ddoc TestCaseID: Ddoc-ValidationFail-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc no non-repudiation key usage value in the certificate Expected Result: The document should fail the validation File: test-non-repu1.ddoc TestCaseID: Ddoc-ValidationFail-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc Signer's certificate is not trusted Expected Result: The document should fail the validation File: Belgia_kandeavaldus_LIV.ddoc TestCaseID: Ddoc-ValidationFail-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc OCSP certificate is not trusted Expected Result: The document should fail the validation File: Tundmatu_OCSP_responder.ddoc TestCaseID: Ddoc-ValidationFail-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc has unsigned data files in the container Expected Result: The document should fail the validation File: lisatud_andmefail.ddoc TestCaseID: Ddoc-ValidationFail-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc signed data file has been removed from the container Expected Result: The document should fail the validation File: faileemald1.ddoc TestCaseID: Ddoc-ValidationFail-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc wrong nonce Expected Result: The document should fail the validation File: OCSP nonce vale.ddoc TestCaseID: Ddoc-ValidationFail-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Ddoc with XML Entity expansion attack Expected Result: The document should fail the validation with error File: xml_expansion.ddoc TestCaseID: Ddoc-ValidationFail-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Ddoc with XML server side request forgery attack Expected Result: The document should fail the validation with error File: xml_entity.ddoc TestCaseID: Ddoc-ValidationFail-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc no files in container Expected Result: The document should fail the validation File: KS-02_tyhi.ddoc TestCaseID: Ddoc-ValidationFail-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc XML namespace error in container Expected Result: The document should pass with warning File: ns6t3cp7.ddoc DdocValidationPassIT.java Open file TestCaseID: Ddoc-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Ddoc v1.0 with valid signatures Expected Result: The document should pass the validation File: SK-XML1.0.ddoc **Attention! This test is disabled: https://github.com/open-eid/SiVa/issues/11 TestCaseID: Ddoc-ValidationPass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Ddoc v1.1 with valid signature Expected Result: The document should pass the validation File: DIGIDOC-XML1.1.ddoc TestCaseID: Ddoc-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Ddoc v1.2 with valid signature Expected Result: The document should pass the validation File: DIGIDOC-XML1.2.ddoc TestCaseID: Ddoc-ValidationPass-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Ddoc v1.3 with valid signature with ESTEID-SK 2011 certificate chain Expected Result: The document should pass the validation File: DIGIDOC-XML1.3.ddoc TestCaseID: Ddoc-ValidationPass-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Ddoc v1.3 with valid signature, signed data file name has special characters and ESTEID-SK certificate chain Expected Result: The document should pass the validation File: susisevad1_3.ddoc TestCaseID: Ddoc-ValidationPass-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Ddoc v1.3 KLASS3-SK certificate chain with valid signature Expected Result: The document should pass the validation File: KLASS3-SK _ KLASS3-SK OCSP RESPONDER uus.ddoc TestCaseID: Ddoc-ValidationPass-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Ddoc v1.3 KLASS3-SK 2010 certificate chain with valid signature Expected Result: The document should pass the validation File: KLASS3-SK 2010 _ KLASS3-SK 2010 OCSP RESPONDER.ddoc TestCaseID: Ddoc-ValidationPass-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Ddoc v1.1 ESTEID-SK 2007 certificate chain with valid signature Expected Result: The document should pass the validation File: vaikesed1.1.ddoc TestCaseID: Ddoc-ValidationPass-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Ddoc v1.1 ESTEID-SK 2007 certificate chain with valid signature Expected Result: The document should pass the validation File: IB-4270_ESTEID-SK 2015 SK OCSP RESPONDER 2011.ddoc TestCaseID: Ddoc-ValidationPass-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Ddoc v1.1 ESTEID-SK certificate chain with valid signature Expected Result: The document should pass the validation File: EID-SK _ EID-SK OCSP RESPONDER.ddoc TestCaseID: Ddoc-ValidationPass-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Ddoc v1.1 ESTEID-SK 2007 and OCSP 2010 certificate chain with valid signature Expected Result: The document should pass the validation File: EID-SK 2007 _ EID-SK 2007 OCSP RESPONDER 2010.ddoc TestCaseID: Ddoc-ValidationPass-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Ddoc v1.3 ESTEID-SK 2007 and OCSP 2007 certificate chain with valid signature Expected Result: The document should pass the validation File: EID-SK 2007 _ EID-SK 2007 OCSP RESPONDER.ddoc TestCaseID: Ddoc-ValidationPass-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Ddoc v1.3 ESTEID-SK 2011 and OCSP 2011 certificate chain with valid signature Expected Result: The document should pass the validation File: EID-SK 2011 _ SK OCSP RESPONDER 2011.ddoc TestCaseID: Ddoc-ValidationPass-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc with warning should pass Expected Result: Document passes the validation File: 18912.ddoc TestCaseID: DdocHashcode-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Validation of DDOC Hashcode v1.0 Expected Result: Document passes the validation File: SK-XML1.0_hashcode.ddoc **Attention! This test is disabled: https://github.com/open-eid/SiVa/issues/11 TestCaseID: DdocHashcode-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Validation of DDOC Hashcode v1.1 Expected Result: Document passes the validation File: DIGIDOC-XML1.1_hashcode.ddoc **Attention! This test is disabled: This tests fails in Travis. Has been executed locally TestCaseID: DdocHashcode-ValidationPass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Validation of DDOC Hashcode v1.2 Expected Result: Document passes the validation File: DIGIDOC-XML1.2_hashcode.ddoc **Attention! This test is disabled: This tests fails in Travis. Has been executed locally TestCaseID: DdocHashcode-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Validation of DDOC Hashcode v1.3 Expected Result: Document passes the validation File: DIGIDOC-XML1.3_hashcode.ddoc **Attention! This test is disabled: This tests fails in Travis. Has been executed locally DocumentFormatIT.java Open file TestCaseID: DocumentFormat-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Validation of pdf document acceptance Expected Result: Pdf is accepted and correct signature validation is given File: hellopades-pades-lt-sha256-sign.pdf TestCaseID: DocumentFormat-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Validation of bdoc document acceptance Expected Result: Bdoc is accepted and correct signature validation is given File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: DocumentFormat-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Validation of txt document rejection Expected Result: Txt document is rejected and proper error message is given File: hellopades-pades-lt-sha256-sign.txt TestCaseID: DocumentFormat-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Validation of p7s document rejection Expected Result: P7s document is rejected and proper error message is given File: hellocades.p7s TestCaseID: DocumentFormat-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Validation of zip document rejection Expected Result: Zip document is rejected and proper error message is given File: 42.zip TestCaseID: DocumentFormat-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Validation of doc document rejection Expected Result: Doc document is rejected and proper error message is given File: hellopades-pades-lt-sha256-sign.doc TestCaseID: DocumentFormat-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Validation of XML document rejection Expected Result: XML document is rejected and proper error message is given File: XML.xml TestCaseID: DocumentFormat-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Validation of png document rejection Expected Result: Png document is rejected and proper error message is given File: Picture.png DocumentValidationIT.java Open file TestCaseID: Document-Validation-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title:Bdoc with two signatures and one unsigned document. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2s_1f_unsigned.bdoc TestCaseID: Document-Validation-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with two signatures and one document signed by only one signature. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2s_1partly_signed.bdoc TestCaseID: Document-Validation-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with two signatures and two documents signed by only one signature. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2s_2partly_signed.bdoc TestCaseID: Document-Validation-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with two signatures, one unsigned and two partly signed documents. Expected Result: The document should fail the validation and warnings should be displayed. File:4f_2s_all_combinations.bdoc TestCaseID: Document-Validation-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with three unsigned documents. Expected Result: The document should pass the validation and warnings should be displayed. File:6f_2s_3unsigned.bdoc TestCaseID: Document-Validation-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with deleted document, named in manifest. Expected Result: The document should fail the validation and warning should be displayed. File:2f_2signed_1f_deleted.bdoc TestCaseID: Document-Validation-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with deleted document, also removed from manifest. Expected Result: The document should fail the validation without warning. File:2f_2signed_1f_totally_removed.bdoc TestCaseID: Document-Validation-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with one unsigned document, named in manifest. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2signed_1unsigned_all_in_manifest.bdoc TestCaseID: Document-Validation-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with one unsigned document, NOT named in manifest. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2signed_1unsigned_2in_manifest.bdoc TestCaseID: Document-Validation-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with signed documents. Expected Result: The document should pass the validation without warning. File:2f_all_signed.bdoc LargeFileIT.java Open file TestCaseID: PDF-LargeFiles-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/overview/#main-features-of-siva-validation-service Title: 9MB PDF files (PAdES Baseline LT). Expected Result: Validation report is returned File: 9MB_PDF.pdf TestCaseID: Bdoc-LargeFiles-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/overview/#main-features-of-siva-validation-service Title: 9MB ASIC-E file Expected Result: Validation report is returned File: 9MB_BDOC-TS.bdoc TestCaseID: Bdoc-LargeFiles-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/overview/#main-features-of-siva-validation-service Title: 9MB BDOC-TM Expected Result: Validation report is returned File: 9MB_BDOC-TM.bdoc TestCaseID: Ddoc-LargeFiles-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/overview/#main-features-of-siva-validation-service Title: 9MB DDOC Expected Result: Validation report is returned File: 9MB_DDOC.ddoc MonitoringIT.java Open file TestCaseID: WebApp-Monitoring-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#service-health-monitoring Title: Health monitor response structure Expected Result: response matches the expected structure of JSON File: not relevant PdfBaselineProfileIT.java Open file TestCaseID: PDF-BaselineProfile-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: The PDF has PAdES-B profile signature POLv1 Expected Result: Document validation should fail as the profile is not supported with any policy File: hellopades-pades-b-sha256-auth.pdf TestCaseID: PDF-BaselineProfile-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: The PDF has PAdES-B profile signature POLv2 Expected Result: Document validation should fail as the profile is supported with any policy File: hellopades-pades-b-sha256-auth.pdf TestCaseID: PDF-BaselineProfile-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: The PDF has PAdES-T profile signature POLv1 Expected Result: Document validation should fail with any policy File: pades-baseline-t-live-aj.pdf TestCaseID: PDF-BaselineProfile-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: The PDF has PAdES-T profile signature POLv2 Expected Result: Document validation should fail with any policy File: pades-baseline-t-live-aj.pdf TestCaseID: PDF-BaselineProfile-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: The PDF has PAdES-LT profile signature POLv1 Expected Result: Document validation should pass with any policy File: hellopades-pades-lt-sha256-sign.pdf TestCaseID: PDF-BaselineProfile-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: The PDF has PAdES-LT profile signature POLv2 Expected Result: Document validation should pass with any policy File: hellopades-pades-lt-sha256-sign.pdf TestCaseID: PDF-BaselineProfile-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: The PDF has PAdES-LTA profile signature POLv1 Expected Result: Document validation should pass with any policy File: pades-baseline-lta-live-aj.pdf TestCaseID: PDF-BaselineProfile-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: The PDF has PAdES-LTA profile signature POLv2 Expected Result: Document validation should pass with any policy File: pades-baseline-lta-live-aj.pdf TestCaseID: PDF-BaselineProfile-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: The PDF has PAdES-LT and B profile signature Expected Result: Document validation should fail File: hellopades-lt-b.pdf TestCaseID: PDF-BaselineProfile-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: PDF document message digest attribute value does not match calculate value Expected Result: Document validation should fail File: hellopades-lt1-lt2-wrongDigestValue.pdf TestCaseID: PDF-BaselineProfile-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: PDF file with a serial signature Expected Result: Document signed with multiple signers with serial signatures should pass File: hellopades-lt1-lt2-Serial.pdf PdfSignatureCryptographicAlgorithmIT.java Open file TestCaseID: PDF-SigCryptoAlg-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: SHA512 algorithms (PAdES Baseline LT) Expected Result: Document signed with SHA512 algorithm should pass File: hellopades-lt-sha512.pdf TestCaseID: PDF-SigCryptoAlg-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: SHA1 algorithms (PAdES Baseline LT) Expected Result: Document signed with SHA1 algorithm should pass File: hellopades-lt-sha1.pdf TestCaseID: PDF-SigCryptoAlg-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: ECDSA224 algorithms (PAdES Baseline LT) Expected Result: Document signed with ECDSA224 algorithm should pass File: hellopades-lt-sha256-ec224.pdf TestCaseID: PDF-SigCryptoAlg-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: ECDSA256 algorithms (PAdES Baseline LT) Expected Result: Document signed with ECDSA256 algorithm should pass File: hellopades-lt-sha256-ec256.pdf TestCaseID: PDF-SigCryptoAlg-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: RSA1024 algorithms (PAdES Baseline LT) Expected Result: Document signed with RSA1024 algorithm should pass File: hellopades-lt-sha256-rsa1024.pdf TestCaseID: PDF-SigCryptoAlg-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: RSA1023 algorithms (PAdES Baseline LT) Expected Result: Document signed with RSA1023 algorithm should fail File: hellopades-lt-sha256-rsa1023.pdf **Attention! This test is disabled: Bug fixed in DSS version 5.1. https://ec.europa.eu/cefdigital/tracker/browse/DSS-1145 TestCaseID: PDF-SigCryptoAlg-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: RSA2047 algorithms (PAdES Baseline LT) Expected Result: Document signed with RSA2047 algorithm should pass File: hellopades-lt-sha256-rsa2047.pdf TestCaseID: PDF-SigCryptoAlg-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: RSA2048 algorithms (PAdES Baseline LT) Expected Result: Document signed with RSA2048 algorithm should pass File: PdfValidSingleSignature PdfValidationFailIT.java Open file TestCaseID: PDF-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: The PDF-file has been signed with expired certificate (PAdES Baseline LT) Expected Result: Document signed with certificate that is expired should fail. File: hellopades-lt-rsa1024-sha1-expired.pdf TestCaseID: PDF-ValidationFail-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: The PDF-file has been signed with revoked certificate (PAdES Baseline LT) Expected Result: Document signed with certificate that is revoked should fail. File: pades_lt_revoked.pdf TestCaseID: PDF-ValidationFail-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: The PDF-file has been signed with certificate which has no non repudiation key usage attribute (PAdES Baseline LT) Expected Result: The PDF-file validation should fail with error. File: hellopades-pades-lt-sha256-auth.pdf TestCaseID: PDF-ValidationFail-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: hellopadess been signed with an expired certificate, where signing time is within the original validity Expected Result: Document signed with expired certificate should fail File: hellopades-lt-sha256-rsa2048-expired.pdf **Attention! This test is disabled: https://jira.nortal.com/browse/SIVARIA-17 TestCaseID: PDF-ValidationFail-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: hellopadess been signed with an expired certificate, where signing time is within the original validity Expected Result: Document signed with expired certificate should fail File: hellopades-lt-sha256-rsa1024-expired2.pdf **Attention! This test is disabled: https://jira.nortal.com/browse/SIVARIA-17 TestCaseID: PDF-ValidationFail-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: hellopadess been signed with an expired certificate, where signing time is within the original validity Expected Result: Document signed with expired certificate should fail File: hellopades-lt-sha1-rsa1024-expired2.pdf **Attention! This test is disabled: https://jira.nortal.com/browse/SIVARIA-17 PdfValidationPassIT.java Open file TestCaseID: PDF-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: The PDF-file has been signed with certificate that is expired after signing (PAdES Baseline LT) Expected Result: Document signed with certificate that expired after signing should pass. File: hellopades-lt-sha256-rsa1024-not-expired.pdf TestCaseID: PDF-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: The PDF-file has been signed with certificate that will expire in 7 days after signing (PAdES Baseline LT) Expected Result: Document signed with certificate that expired after signing should pass. File: hellopades-lt-sha256-rsa2048-7d.pdf TestCaseID: PDF-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Pdf with single valid signature Expected Result: Document should pass. File: PdfValidSingleSignature.pdf SignaturePolicyIT.java Open file TestCaseID: Pdf-Signature-Policy-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-1-polv1 Title: The PDF-file is not QES level and misses SSCD/QSCD compliance Expected Result: Signatures are valid according to policy File: soft-cert-signature.pdf TestCaseID: Pdf-Signature-Policy-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-1-polv1 Title: The PDF-file is not QES level and misses SSCD/QSCD compliance Expected Result: Signatures are not valid according to policy File: soft-cert-signature.pdf **Attention! This test is disabled: New test file is needed TestCaseID: Pdf-Signature-Policy-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-1-polv1 Title: The PDF-file is QES level and has SSCD/QSCD compliance Expected Result: Signatures are valid according to policy (\"weaker\" policy is used) File: pades_lt_two_valid_sig.pdf TestCaseID: Pdf-Signature-Policy-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-1-polv1 Title: The PDF-file is QES level and has SSCD/QSCD compliance Expected Result: Signatures are valid according to policy File: pades_lt_two_valid_sig.pdf TestCaseID: Bdoc-Signature-Policy-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-1-polv1 Title: The bdoc is not QES level and misses SSCD/QSCD compliance Expected Result: Signatures are valid according to policy File: allkiri_ades.asice TestCaseID: Bdoc-Signature-Policy-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-1-polv1 Title: The bdoc is not QES level and misses SSCD/QSCD compliance Expected Result: Signatures are not valid according to policy File: allkiri_ades.asice TestCaseID: Bdoc-Signature-Policy-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-1-polv1 Title: The bdoc is QES level and has SSCD/QSCD compliance Expected Result: Signatures are valid according to policy (\"non-strict\" policy is used) File: Valid_ID_sig.bdoc TestCaseID: Bdoc-Signature-Policy-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-1-polv1 Title: The bdoc is QES level and has SSCD/QSCD compliance Expected Result: Signatures are valid according to policy File: Valid_ID_sig.bdoc XRoadValidationFailIT.java Open file TestCaseID: Xroad-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Simple xroad document with container fault Expected Result: Document should fail validation File: invalid-digest.asice XRoadValidationPassIT.java Open file TestCaseID: Xroad-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Simple xroad document Expected Result: Document should pass File: xroad-simple.asice TestCaseID: Xroad-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Batchsignature xroad document Expected Result: Document should pass File: xroad-batchsignature.asice TestCaseID: Xroad-ValidationPass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Attachment xroad document Expected Result: Document should pass File: xroad-attachment.asice StatisticsToGAManualIT.java Note All tests in this class expect manual configuration of Google Analytics before executing the tests. The test are made to prepare test data and ease the test execution, all results must be checked manually in GA! Check all the fields presence and correctness even though tests prepare data for specific cases. TestCaseID: Xauth-Statistics-GA-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf valid container is validated with x-authenticated-user set in header Expected Result: x-authenticated-user value is shown in GA File: pades_lt_two_valid_sig.pdf TestCaseID: Xauth-Statistics-GA-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf valid container is validated with x-authenticated-user set in header Expected Result: x-authenticated-user value is shown as N/A in GA File: pades_lt_two_valid_sig.pdf TestCaseID: Xauth-Statistics-GA-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf valid container is validated with x-authenticated-user set in header Expected Result: x-authenticated-user value is shown as N/A in GA File: pades_lt_two_valid_sig.pdf TestCaseID: Bdoc-Statistics-GA-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Bdoc with certificates from different countries. Expected Result: LT, EE and LV country codes are present in GA, Signature container type is ASIC-E TM File: Baltic MoU digital signing_EST_LT_LV.bdoc TestCaseID: Bdoc-Statistics-GA-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Asice-E TS is validated Expected Result: GA shows Signature container type as ASIC-E TS File: BDOC-TS.bdoc TestCaseID: Xroad-Statistics-GA-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Xroad valid container is validated Expected Result: Country code XX is sent to GA (GA shows ZZ as the XX is unknown code), Signature container type is ASiC-E (BatchSignature) File: xroad-batchsignature.asice TestCaseID: Ddoc-Statistics-GA-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Ddoc not supported file is inserted Expected Result: Not shown in GA statistics as the container is not validated File: xroad-simple.asice TestCaseID: Ddoc-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Ddoc invalid container is validated Expected Result: GA shows Signature container type as XAdES, TOTAL-FAILED indication File: ilma_kehtivuskinnituseta.ddoc StatisticsToLogsManualIT.java Note All tests in this class expect manual verification of responses in log! The tests are made to prepare test data and ease the test execution. TestCaseID: Bdoc-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Bdoc valid container is validated Expected Result: Correct data is shown in the log with correct structure File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Bdoc-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Bdoc invalid container is validated Expected Result: Correct data is shown in the log with correct structure File: SS-4_teadmataCA.4.asice TestCaseID: Bdoc-Statistics-Log-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Bdoc not supported file is inserted Expected Result: No message in statistics as the container is not validated File: xroad-simple.asice TestCaseID: Bdoc-Statistics-Log-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Bdoc with certificates from different countries. Expected Result: Correct data is shown in the log with correct structure File: Baltic MoU digital signing_EST_LT_LV.bdoc TestCaseID: Ddoc-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Ddoc valid container is validated Expected Result: Correct data is shown in the log with correct structure File: igasugust1.3.ddoc TestCaseID: Ddoc-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Ddoc invalid container is validated Expected Result: Correct data is shown in the log with correct structure File: ilma_kehtivuskinnituseta.ddoc TestCaseID: Ddoc-Statistics-Log-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Ddoc not supported file is inserted Expected Result: No message in statistics as the container is not validated File: xroad-simple.asice TestCaseID: Ddoc-Statistics-Log-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Ddoc with certificates from different countries. Expected Result: Correct data is shown in the log with correct structure File: Belgia_kandeavaldus_LIV.ddoc TestCaseID: Pdf-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf valid container is validated Expected Result: Correct data is shown in the log with correct structure File: pades_lt_two_valid_sig.pdf TestCaseID: Pdf-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf invalid container is validated Expected Result: Correct data is shown in the log with correct structure File: hellopades-lt1-lt2-wrongDigestValue.pdf TestCaseID: Pdf-Statistics-Log-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf not supported file is inserted Expected Result: No message in statistics as the container is not validated File: xroad-simple.asice TestCaseID: Pdf-Statistics-Log-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf with certificates from non Estonian countries. Expected Result: Correct data is shown in the log with correct structure File: Regulatione-signedbyco-legislators.pdf TestCaseID: Xroad-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Xroad valid container is validated Expected Result: Correct data is shown in the log with correct structure File: xroad-batchsignature.asice TestCaseID: Xroad-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Xroad invalid container is validated Expected Result: Correct data is shown in the log with correct structure File: invalid-digest.asice TestCaseID: Xroad-Statistics-Log-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Xroad not supported file is inserted Expected Result: No message in statistics as the container is not validated File: BDOC-TS.bdoc GetDataFileRequestIT.java Open file TestCaseID: Get-Data-Files-Request-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Input empty values Expected Result: Errors are returned stating the missing values File: not relevant TestCaseID: Get-Data-Files-Request-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Totally empty request body is sent Expected Result: Errors are given File: not relevant TestCaseID: Get-Data-Files-Request-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Order of elements is changed in request Expected Result: Order of elements is ignored, no error messages in response File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Additional elements are added Expected Result: Added elements ignored, no error messages and additional elements in response File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Mandatory element 'documentType' is duplicated, duplicated element with bdoc value Expected Result: Error message is returned File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Mandatory element 'document' is deleted Expected Result: Errors returned stating the missing element File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Mandatory element 'documentType' is deleted Expected Result: Errors returned stating the missing element File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Low case for document type is used Expected Result: Data file is returned, no error messages File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Document Type is changed in request to BDOC, actual is DDOC Expected Result: Error is returned File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Document Type is changed in request to PDF, actual is DDOC Expected Result: Error is returned File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Document Type is changed in request to unsupported format (JPG), actual is DDOC Expected Result: Error is returned File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Document Type is changed in request to XROAD format, actual is DDOC Expected Result: Error is returned File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Document Type is changed in request to DDOC format, actual is BDOC Expected Result: Error is returned File: BDOC-TS.bdoc TestCaseID: Get-Data-Files-Request-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Document Type is changed in request to DDOC format, actual is PDF Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Get-Data-Files-Request-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: For Unsupported format Document Type is changed in request to DDOC format, actual is PNG Expected Result: Error is returned File: Picture.png ValidationReportValueVerificationIT.java Open file TestCaseID: Bdoc-ValidationReportVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface#validation-request-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT_TM, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: Valid_ID_sig.bdoc TestCaseID: Bdoc-ValidationReportVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: 23635_bdoc_ts_OCSP_random_nonce.bdoc TestCaseID: Bdoc-ValidationReportVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc TestCaseID: Bdoc-ValidationReportVerification-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT-TM, AdESqc Expected Result: All required elements are present and meet the expected values. File: 23200_weakdigest-wrong-nonce.asice **Attention! This test is disabled: https://github.com/open-eid/SiVa/issues/24 TestCaseID: Bdoc-ValidationReportVerification-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: JSON structure has all elements (Bdoc valid multiple signatures) Expected Result: All required elements are present according to SimpleReportSchema.json File: Baltic MoU digital signing_EST_LT_LV.bdoc TestCaseID: Bdoc-ValidationReportVerification-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: JSON structure has all elements (Bdoc indeterminate status) Expected Result: All required elements are present according to BdocDocSimpleReportSchema.json File: SS-4_teadmataCA.4.asice TestCaseID: Bdoc-ValidationReportVerification-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Bdoc report with no signatures Expected Result: Report is returned with required elements File:BdocContainerNoSignature.bdoc TestCaseID: Pdf-ValidationReportVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: JSON structure has all elements (Pdf valid single signature) Expected Result: All required elements are present according to SimpleReportSchema.json File: hellopades-lt-sha256-ec256.pdf TestCaseID: Pdf-ValidationReportVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: JSON structure has all elements (Pdf valid Multiple signatures) Expected Result: All required elements are present according to SimpleReportSchema.json File: pades_lt_two_valid_sig.pdf TestCaseID: Pdf-ValidationReportVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: JSON structure has all elements (Pdf invalid signature) Expected Result: All required elements are present according to SimpleReportSchema.json File: hellopades-lt-b.pdf TestCaseID: Pdf-ValidationReportVerification-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: JSON structure has all elements (Pdf indeterminate status) Expected Result: All required elements are present according to SimpleReportSchema.json File: hellopades-lt-rsa1024-sha1-expired.pdf TestCaseID: Pdf-ValidationReportVerification-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Pdf report with no signatures Expected Result: Report is returned with required elements File: PdfNoSignature.pdf TestCaseID: Ddoc-ValidationReportVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: JSON structure has all elements (ddoc valid single signature) Expected Result: All required elements are present according to SimpleReportSchema.json File: DIGIDOC-XML1.3.ddoc TestCaseID: Ddoc-ValidationReportVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: JSON structure has all elements (ddoc invalid signature) Expected Result: All required elements are present according to SimpleReportSchema.json File: test1-ddoc-revoked.ddoc TestCaseID: Ddoc-ValidationReportVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: JSON structure has all elements (ddoc indeterminate status) Expected Result: All required elements are present according to SimpleReportSchema.json File: test1-ddoc-unknown.ddoc **Attention! This test is disabled: https://github.com/open-eid/SiVa/issues/15 TestCaseID: Ddoc-ValidationReportVerification-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Check for optional warning element Expected Result: Warning element is present File: ns6t3cp7.ddoc TestCaseID: Ddoc-ValidationReportVerification-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Ddoc report with no signatures Expected Result: Report is returned with required elements File: DdocContainerNoSignature.ddoc TestCaseID: Ddoc-ValidationReportVerification-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.0, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: SK-XML1.0.ddoc **Attention! This test is disabled: https://github.com/open-eid/SiVa/issues/11 TestCaseID: Ddoc-ValidationReportVerification-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.1, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.1.ddoc TestCaseID: Ddoc-ValidationReportVerification-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.2, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.2.ddoc TestCaseID: Ddoc-ValidationReportVerification-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.3, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.3.ddoc TestCaseID: Xroad-ValidationReportVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-simple container Expected Result: Report is returned with required elements File: xroad-simple.asice TestCaseID: Xroad-ValidationReportVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-batchsignature container Expected Result: Report is returned with required elements File: xroad-batchsignature.asice TestCaseID: Xroad-ValidationReportVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-attachment container Expected Result: Report is returned with required elements File: xroad-attachment.asice TestCaseID: Xroad-ValidationReportVerification-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report with invalid xroad container Expected Result: Report is returned with required elements File: xroad-attachment.asice ValidationRequestIT.java Open file TestCaseID: ValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Input empty values Expected Result: Errors are returned stating the missing values File: not relevant TestCaseID: ValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Verification of wrong document type as input Expected Result: Correct error code is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request has invalid key on document position Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request has XML as document type (special case, XML is similar to ddoc and was a accepted document type in earlier versions) Expected Result: Error is given File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request has long (38784 characters) in filename field Expected Result: Report is returned with the same filename File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Totally empty request body is sent Expected Result: Error is given File: not relevant TestCaseID: ValidationRequest-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request with more parameters than expected is sent Expected Result: Error is given or extra parameters are ignored? File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request with special chars is sent Expected Result: Validation report is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request with not base64 string as document Expected Result: Error is returned stating encoding problem File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Bdoc-ValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Bdoc-ValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and ddoc) Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: Bdoc-ValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and xroad) Expected Result: Error is returned File: xroad-simple.asice TestCaseID: Bdoc-ValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Bdoc file, not existing value in signaturePolicy Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Bdoc-ValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Bdoc file, policy fiels should be case insensitive Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Bdoc-ValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request without optional signaturePolicy field Expected Result: Validation report is returned with default policy File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Bdoc-ValidationRequest-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Input random base64 string as document with bdoc document type Expected Result: Error is returned stating problem in document File: not relevant TestCaseID: Bdoc-ValidationRequest-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Acceptance of ASICE as BDOC document type Expected Result: Asice files are handled the same as bdoc File: bdoc21-TS.asice TestCaseID: Bdoc-ValidationRequest-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Verification of case insensitivity in document type Expected Result: Report is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Bdoc-ValidationRequest-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Verification of filename value (filename do not match the actual file) Expected Result: The same filename is returned as sent in the request File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Bdoc-ValidationRequest-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request has invalid character in filename Expected Result: Correct error code is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Bdoc-ValidationRequest-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and xroad) Expected Result: Error is returned File: xroad-batchsignature TestCaseID: Bdoc-ValidationRequest-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and xroad) Expected Result: Error is returned File: xroad-attachment.asice TestCaseID: Pdf-ValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (pdf and ddoc) Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: Pdf-ValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (pdf and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Pdf-ValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (pdf and xroad) Expected Result: Error is returned File: xroad-simple.asice TestCaseID: Pdf-ValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: PDF file, not existing value in signaturePolicy Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Pdf-ValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Input random base64 string as document with pdf document type Expected Result: Error is returned stating problem in document File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Pdf-ValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Verification of filename value (filename do not match the actual file) Expected Result: The same filename is returned as sent in the request File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Pdf-ValidationRequest-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (pdf and xroad) Expected Result: Error is returned File: xroad-batchsignature.asice TestCaseID: Pdf-ValidationRequest-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (pdf and xroad) Expected Result: Error is returned File: xroad-attachment.asice TestCaseID: Ddoc-ValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Ddoc-ValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Ddoc-ValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and xroad) Expected Result: Error is returned File: xroad-simple.asice TestCaseID: Ddoc-ValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Ddoc file, not existing value in signaturePolicy Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: Ddoc-ValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Input random base64 string as document with ddoc document type Expected Result: Error is returned stating problem in document File: not relevant TestCaseID: Ddoc-ValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Verification of filename value (filename do not match the actual file) Expected Result: The same filename is returned as sent in the request File: igasugust1.3.ddoc TestCaseID: Ddoc-ValidationRequest-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and xroad) Expected Result: Error is returned File: xroad-simple.asice TestCaseID: Ddoc-ValidationRequest-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and xroad) Expected Result: Error is returned File: xroad-simple.asice TestCaseID: Xroad-ValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (xroad and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Xroad-ValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (xroad and ddoc) Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: Xroad-ValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (xroad and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Xroad-ValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: X-road file, not existing value in signaturePolicy Expected Result: Error is returned File: xroad-simple.asice TestCaseID: Xroad-ValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Input random base64 string as document with xroad document type Expected Result: Error is returned stating problem in document File: not relevant TestCaseID: Xroad-ValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Verification of filename value (filename do not match the actual file) Expected Result: The same filename is returned as sent in the request File: xroad-simple.asice SoapGetDataFileReportIT.java Open file TestCaseID: SoapGetDataFile-Report-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-response-interface Title: Verification of values in Validation Report, checks for File name, Base64, Mimetype and Size Expected Result: All required elements are present and meet the expected values File: ddoc_1_3.xml.ddoc TestCaseID: SoapGetDataFile-Report-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-response-interface Title: Verification of values in Validation Report xml v1.1, checks for File name, Base64, Mimetype and Size Expected Result: All required elements are present and meet the expected values File: DIGIDOC-XML1.1.ddoc TestCaseID: SoapGetDataFile-Report-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-response-interface Title: Verification of values in Validation Report xml v1.2, checks for File name, Base64, Mimetype and Size Expected Result: All required elements are present and meet the expected values File: DIGIDOC-XML1.2.ddoc TestCaseID: SoapGetDataFile-Report-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-response-interface Title: Verification of values in Validation Report for container with a number of files, checks for File name, Base64, Mimetype and Size for each file Expected Result: All required elements are present and meet the expected values File: igasugust1.3.ddoc SoapGetDataFileRequestIT.java Open file TestCaseID: Soap-Validation-Request-For-Data-Files-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Input empty values Expected Result: Error is returned File: not relevant TestCaseID: Soap-Validation-Request-For-Data-Files-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Input empty body Expected Result: Error is returned File: not relevant TestCaseID: Soap-Validation-Request-For-Data-Files-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Element DocumentType is removed from the body Expected Result: Error is returned File: ddoc_1_3.xml.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Element Document is removed from the body Expected Result: Error is returned File: ddoc_1_3.xml.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Element DocumentType is duplicated in the body with different value Expected Result: Error is returned File: ddoc_1_3.xml.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Additional element FileName is added to the body Expected Result: Error is returned File: ddoc_1_3.xml.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Value for element Document was changed Expected Result: Error is returned File: ddoc_1_3.xml.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Low case for Document Type was used Expected Result: Error is returned File: 18912.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: DocumentType was changed to BDOC when actual is DDOC Expected Result: Error is returned File: 18912.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: DocumentType was changed to PDF when actual is DDOC Expected Result: Error is returned File: 18912.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: DocumentType was changed to XROAD when actual is DDOC Expected Result: Error is returned File: 18912.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: DocumentType was changed to unsupported format JPG when actual is DDOC Expected Result: Error is returned File: 18912.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: DocumentType was changed to DDOC when actual is PDF Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Soap-Validation-Request-For-Data-Files-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: DocumentType was changed to DDOC when actual is BDOC Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc SoapValidationReportValueIT.java Open file TestCaseID: Bdoc-SoapValidationReportValue-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT_TM, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: Valid_ID_sig.bdoc TestCaseID: Bdoc-SoapValidationReportValue-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: 23635_bdoc_ts_OCSP_random_nonce.bdoc TestCaseID: Bdoc-SoapValidationReportValue-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT, AdES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc TestCaseID: Bdoc-SoapValidationReportValue-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT_TM, AdESqc, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: 23200_weakdigest-wrong-nonce.asice TestCaseID: Bdoc-SoapValidationReportValue-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LTA, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: EE_SER-AEX-B-LTA-V-24.bdoc TestCaseID: Ddoc-SoapValidationReportValue-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.0, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: SK-XML1.0.ddoc **Attention! This test is disabled: https://github.com/open-eid/SiVa/issues/11 TestCaseID: Ddoc-SoapValidationReportValue-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.1, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.1.ddoc TestCaseID: Ddoc-SoapValidationReportValue-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.2, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.2.ddoc TestCaseID: Ddoc-SoapValidationReportValue-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.3, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.3.ddoc TestCaseID: Pdf-SoapValidationReportValue-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, PAdES_baseline_LT, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: pades_lt_two_valid_sig.pdf TestCaseID: Pdf-SoapValidationReportValue-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, PAdES_baseline_B, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: hellopades-pades-b-sha256-auth.pdf TestCaseID: Xroad-SoapValidationReportValue-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-simple container Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: xroad-simple.asice TestCaseID: Xroad-SoapValidationReportValue-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-simple invalid container Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: invalid-digest.asice SoapValidationRequestIT.java Open file TestCaseID: Soap-ValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Empty request body Expected Result: Error is returned stating mismatch with required elements File: not relevant TestCaseID: Soap-ValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request with not base64 string as document Expected Result: Error is returned stating encoding problem File: not relevant TestCaseID: Soap-ValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Verification of wrong document type as input Expected Result: Correct error code is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Verification of case sensitivity in document type Expected Result: Error is returned as WSDL defines the allowed values File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request has XML as document type (special case, XML is similar to ddoc and was a accepted document type in earlier versions) Expected Result: Error is given File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request has long filename field Expected Result: Report is returned with the same filename File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Totally empty request body is sent Expected Result: Error is given File: not relevant TestCaseID: Soap-ValidationRequest-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request with more parameters than expected is sent Expected Result: Error is given or extra parameters are ignored? File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request with more parameters than expected is sent Expected Result: Error is given or extra parameters are ignored? File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request with special chars is sent Expected Result: Validation report is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request with no optional SignaturePolicy field Expected Result: Validation report is returned using default policy File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request with XML expansion Expected Result: Error is returned and Entity is not handled File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request XML external entity attack Expected Result: Error message is returned and Doctype field is not handled File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request with empty document Expected Result: Error is returned File: not relevant TestCaseID: Soap-ValidationRequest-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request with empty filename Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request with not allowed signature policy characters Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-BdocValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Input random base64 string as document with bdoc document type Expected Result: Error is returned stating problem in document File: not relevant TestCaseID: Soap-BdocValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Verification of filename value (filename do not match the actual file) Expected Result: The same filename is returned as sent in the request File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-BdocValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Soap-BdocValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and ddoc) Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: Soap-BdocValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Bdoc file, not existing value in signaturePolicy Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-BdocValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Bdoc file, policy fiels should be case insensitive Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-DdocValidationRequest-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and xroad) Expected Result: Error is returned File: xroad-simple.asice TestCaseID: Soap-DdocValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Input random base64 string as document with ddoc document type Expected Result: Error is returned stating problem in document File: TestCaseID: Soap-DdocValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-DdocValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-DdocValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Soap-DdocValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Ddoc file, not existing value in signaturePolicy Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: Soap-DdocValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and xroad) Expected Result: Error is returned File: xroad-attachment.asice TestCaseID: Soap-PdfValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Input random base64 string as document with pdf document type Expected Result: Error is returned stating problem in document File: not relevant TestCaseID: Soap-PdfValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (pdf and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-PdfValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (pdf and ddoc) Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: Soap-PdfValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (pdf and xroad) Expected Result: Error is returned File: xroad-batchsignature.asice TestCaseID: Soap-PdfValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: PDF file, not existing value in signaturePolicy Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Soap-XroadValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: X-road file, not existing value in signaturePolicy Expected Result: Error is returned File: xroad-simple.asice TestCaseID: Soap-XroadValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (xroad and ddoc) Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: Soap-XroadValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (pdf and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-XroadValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf SoapXRoadRequestHeaderIT.java Open file TestCaseID: XroadSoap-RequestVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/interface_description/#validation-request-interface Title: Soap headers are returned in response Expected Result: Same headers are in response as in request File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: XroadSoap-RequestVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/interface_description/#validation-request-interface Title: Soap headers are returned in correct order Expected Result: Same headers are in response as in request File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: XroadSoap-RequestVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/interface_description/#validation-request-interface Title: Soap headers are returned in error response Expected Result: Same headers are in response as in request File: not relevant TestCaseID: XroadSoap-GetDataFiles-RequestVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Soap headers are returned in response for Get Data Files Expected Result: Same headers are in response as in request File: susisevad1_3.ddoc TestCaseID: XroadSoap-GetDataFiles-RequestVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Soap headers are returned in correct order for Get Data Files Expected Result: Same headers are in response as in request File: susisevad1_3.ddoc TestCaseID: XroadSoap-GetDataFiles-RequestVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Soap headers are returned in error response for Get Data Files Expected Result: Same headers are in response as in request File: not relevant Sample Application Integration Test TestCaseID: Sample-Application-Elements-1 TestType: Manual Requirement: Title: Upload of correct file type Expected Result: Its possible to upload the file by dropping in download area or by browsing a file File: \u0160u\u017elikud s\u00f5id \u00fche \u00f5una \u00e4ra.bdoc TestCaseID: Sample-Application-Elements-2 TestType: Manual Requirement: Title: Upload of invalid file type Expected Result: File is not validated, corresponding errors are returned File: XML.xml TestCaseID: Sample-Application-Elements-3 TestType: Manual Requirement: Title: Upload file larger than 10MB Expected Result: File is not validated File: hellopades-lta-no-ocsp.pdf TestCaseID: Sample-Application-Elements-4 TestType: Manual Requirement: Title: Page layout Expected Result: All elements are properly displayed and can be used with different window sizes File: not relevant TestCaseID: Sample-Application-Validation-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Validate container with valid signatures Expected Result: Validation report is displayed correctly both for JSON and SOAP File: \u0160u\u017elikud s\u00f5id \u00fche \u00f5una \u00e4ra.bdoc TestCaseID: Sample-Application-Validation-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Validate container with valid signatures Expected Result: Validation report is displayed correctly both for JSON and SOAP File: \u0160u\u017elikud s\u00f5id \u00fche \u00f5una \u00e4ra.bdoc TestCaseID: Sample-Application-Validation-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Validate container with invalid signatures Expected Result: Validation report is displayed correctly both for JSON and SOAP File: IB-3960_bdoc2.1_TSA_SignatureValue_altered.bdoc TestCaseID: Sample-Application-Validation-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Validate container with not passing policy (POLv2) Expected Result: Validation report is displayed correctly (correct policy is returned) both for JSON and SOAP File: soft-cert-signature.pdf X-Road Soap System Test TestCaseID: Xroad-Validate-Ddoc-1 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate valid Ddoc Expected Result: The document should return validation report with one valid signature File: DIGIDOC-XML1.3.ddoc TestCaseID: Xroad-Validate-Ddoc-2 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate invalid Ddoc Expected Result: The document should return validation report with no valid signature File: test-non-repu1.ddoc TestCaseID: Xroad-Validate-Ddoc-3 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Invalid Request Expected Result: Soap error should be returned File: not relevant TestCaseID: Xroad-Validate-Bdoc-1 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate valid Bdoc Expected Result: The document should return validation report with one valid signature File: \u0160u\u017elikud s\u00f5id \u00fche \u00f5una \u00e4ra.bdoc TestCaseID: Xroad-Validate-Bdoc-2 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate invalid Bdoc Expected Result: The document should return validation report with no valid signature File: TM-15_revoked.4.asice TestCaseID: Xroad-Validate-Bdoc-3 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Invalid Request Expected Result: Soap error should be returned File: not relevant TestCaseID: Xroad-Validate-Pdf-1 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate valid Pdf Expected Result: The document should return validation report with one valid signature File: pades-baseline-lta-live-aj.pdf TestCaseID: Xroad-Validate-Pdf-2 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate invalid Pdf Expected Result: The document should return validation report with no valid signature File: pades-baseline-t-live-aj.pdf TestCaseID: Xroad-Validate-Pdf-3 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Invalid Request Expected Result: Soap error should be returned File: not relevant TestCaseID: Xroad-Validate-Xroad-1 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate valid Xroad Expected Result: The document should return validation report with one valid signature File: xroad-batchsignature.asice TestCaseID: Xroad-Validate-Xroad-2 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate invalid Xroad Expected Result: The document should return validation report with no valid signature File: invalid-digest.asice TestCaseID: Xroad-Validate-Xroad-3 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Invalid Request Expected Result: Soap error should be returned File: not relevant TestCaseID: Xroad-GetDataFiles-DDOC-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Get data files from valid DDOC Expected Result: Data files should be returned File: DIGIDOC-XML1.3.ddoc TestCaseID: Xroad-GetDataFiles-DDOC-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Get data files from invalid DDOC Expected Result: Data files should be returned even if the signatures are not valid File: test-non-repu1.ddoc TestCaseID: Xroad-GetDataFiles-DDOC-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Invalid request Expected Result: Error is returned as the document type is not supported File: test-non-repu1.ddoc Configuration System Test TestCaseID: Configuration-Webapp-TSL-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: TSL update over network Expected Result: TSL is updated from configured path File: not relevant TestCaseID: Configuration-Webapp-TSL-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: TSL update disabled Expected Result: Local cashe is used File: not relevant TestCaseID: Configuration-Webapp-Keystore-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: Keystore change Expected Result: configured keystore is used File: not relevant TestCaseID: Configuration-Webapp-Scheduler-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: Update time is configured Expected Result: configured time is used File: not relevant TestCaseID: Configuration-Webapp-Xroad-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: X-Road validator service address is changed Expected Result: correct address is used File: not relevant TestCaseID: Configuration-Webapp-GA-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: Google Analytics is configured Expected Result: Data is transfered to GA File: not relevant TestCaseID: Configuration-Webapp-Policy-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: Configure policy for bdoc Expected Result: Configuration is used File: not relevant TestCaseID: Configuration-Webapp-Policy-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: Configure policy for pdf Expected Result: Configuration is used File: not relevant TestCaseID: Configuration-Webapp-Monitoring-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: Monitoring is enabled for webapp only Expected Result: Its possible to get \"heartbeat\" status with correct info File: not relevant TestCaseID: Configuration-Webapp-Monitoring-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: Monitoring is enabled for webapp and Xroad Service Expected Result: Its possible to get \"heartbeat\" status with correct info File: not relevant TestCaseID: Configuration-Webapp-Monitoring-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: Monitoring is enabled and custom links are configured Expected Result: Its possible to get \"heartbeat\" status with correct info File: not relevant TestCaseID: Configuration-XroadService-Monitoring-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: Monitoring is enabled Expected Result: Its possible to get \"heartbeat\" status with correct info for Xroad Service File: not relevant TestCaseID: Configuration-SampleApplication-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: Configuration of SiVa Web Service access Expected Result: Correct web service is used File: not relevant TestCaseID: Configuration-SampleApplication-Monitoring-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: Monitoring is enabled Expected Result: Its possible to get \"heartbeat\" status with correct info using basic authentication File: not relevant","title":"Appendix 2 - Test Case Descriptions"},{"location":"siva/appendix/test_cases/#test-case-descriptions","text":"","title":"Test Case Descriptions"},{"location":"siva/appendix/test_cases/#introduction","text":"This document gives overview of the test cases. This page is partially generated using a script, more info about the script can be found in SiVa GitHub . The structure and elements of test case is described in QA Strategy document. All the files used in the tests can be found in SiVa GitHub .","title":"Introduction"},{"location":"siva/appendix/test_cases/#bdocvalidationfailitjava","text":"Open file TestCaseID: Bdoc-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with single invalid signature Expected Result: The document should fail the validation File: IB-3960_bdoc2.1_TSA_SignatureValue_altered.bdoc TestCaseID: Bdoc-ValidationFail-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with multiple invalid signatures Expected Result: The document should fail the validation File: BdocMultipleSignaturesInvalid.bdoc TestCaseID: Bdoc-ValidationFail-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with multiple signatures both valid and invalid Expected Result: The document should fail the validation File: BdocMultipleSignaturesMixedWithValidAndInvalid.bdoc TestCaseID: Bdoc-ValidationFail-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with no signatures Expected Result: The document should fail the validation File: BdocContainerNoSignature.bdoc TestCaseID: Bdoc-ValidationFail-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with invalid mimetype in manifest Expected Result: document malformed error should be returned File: 23147_weak-warning-sha1-invalid-mimetype-in-manifest.bdoc TestCaseID: Bdoc-ValidationFail-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Asice with wrong slash character ('\\') in data file mime-type value Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-V-33.asice TestCaseID: Bdoc-ValidationFail-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Wrong signature timestamp Expected Result: The document should fail the validation File: TS-02_23634_TS_wrong_SignatureValue.asice TestCaseID: Bdoc-ValidationFail-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Asice No non-repudiation key usage value in the certificate, verification of AdES signature level Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-I-43.asice TestCaseID: Bdoc-ValidationFail-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Asice signers certificate does not have non-repudiation value in the certificates key usage field and it does not contain the QC and SSCD compliance information. Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-I-26.asice TestCaseID: Bdoc-ValidationFail-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc OCSP certificate is not trusted Expected Result: The document should fail the validation File: TM-01_bdoc21-unknown-resp.bdoc TestCaseID: Bdoc-ValidationFail-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Asice TSA certificate is not trusted Expected Result: The document should fail the validation File: TS-05_23634_TS_unknown_TSA.asice TestCaseID: Bdoc-ValidationFail-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Asice OCSP response status is revoked Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-R-25.asice TestCaseID: Bdoc-ValidationFail-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Asice difference between OCSP and time-stamp issuing times is more than 24 hours Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-V-20.asice TestCaseID: Bdoc-ValidationFail-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Asice unsigned data files in the container Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-V-34.asice **Attention! This test is disabled: https://github.com/open-eid/SiVa/issues/18 TestCaseID: Bdoc-ValidationFail-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc different data file mime-type values in signatures.xml and manifest.xml files Expected Result: The document should fail the validation File: 23613_TM_wrong-manifest-mimetype.bdoc **Attention! This test is disabled: https://github.com/open-eid/SiVa/issues/18 TestCaseID: Bdoc-ValidationFail-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc SignatureValue does not correspond to the SignedInfo block Expected Result: The document should fail the validation File: REF-19_bdoc21-no-sig-asn1-pref.bdoc TestCaseID: Bdoc-ValidationFail-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc Baseline-BES file Expected Result: The document should fail the validation File: signWithIdCard_d4j_1.0.4_BES.asice TestCaseID: Bdoc-ValidationFail-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc Baseline-EPES file Expected Result: The document should fail the validation File: TM-04_kehtivuskinnituset.4.asice TestCaseID: Bdoc-ValidationFail-19 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc signers certificate is not trusted Expected Result: The document should fail the validation File: SS-4_teadmataCA.4.asice TestCaseID: Bdoc-ValidationFail-20 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc OCSP response status is revoked Expected Result: The document should fail the validation File: TM-15_revoked.4.asice TestCaseID: Bdoc-ValidationFail-21 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc OCSP response status is unknown Expected Result: The document should fail the validation File: TM-16_unknown.4.asice TestCaseID: Bdoc-ValidationFail-22 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc signed data file has been removed from the container Expected Result: The document should fail the validation File: KS-21_fileeemaldatud.4.asice TestCaseID: Bdoc-ValidationFail-23 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc no files in container Expected Result: The document should fail the validation File: KS-02_tyhi.bdoc TestCaseID: Bdoc-ValidationFail-24 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc wrong nonce Expected Result: The document should fail the validation File: TM-10_noncevale.4.asice TestCaseID: Bdoc-ValidationFail-25 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc signed data file(s) don't match the hash values in reference elements Expected Result: The document should fail the validation File: REF-14_filesisumuudetud.4.asice TestCaseID: Bdoc-ValidationFail-26 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Asice Baseline-T signature Expected Result: The document should fail the validation File: TS-06_23634_TS_missing_OCSP.asice TestCaseID: Bdoc-ValidationFail-27 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc OCSP response is not the one expected Expected Result: The document should fail the validation File: 23608-bdoc21-TM-ocsp-bad-nonce.bdoc TestCaseID: Bdoc-ValidationFail-28 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc certificate's validity time is not in the period of OCSP producedAt time Expected Result: The document should fail the validation File: 23154_test1-old-sig-sigat-OK-prodat-NOK-1.bdoc TestCaseID: Bdoc-ValidationFail-29 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc BDOC-1.0 version container Expected Result: The document should fail the validation File: BDOC-1.0.bdoc","title":"BdocValidationFailIT.java"},{"location":"siva/appendix/test_cases/#bdocvalidationpassitjava","text":"Open file TestCaseID: Bdoc-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Bdoc with single valid signature Expected Result: The document should pass the validation File: Valid_ID_sig.bdoc TestCaseID: Bdoc-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Bdoc TM with multiple valid signatures Expected Result: The document should pass the validation File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Bdoc-ValidationPass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Bdoc with warning on signature Expected Result: The document should pass the validation but warning should be returned File: bdoc_weak_warning_sha1.bdoc **Attention! This test is disabled: https://github.com/open-eid/SiVa/issues/20 TestCaseID: Bdoc-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Asice One LT signature with certificates from different countries Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-30.asice TestCaseID: Bdoc-ValidationPass-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Bdoc signed with Mobile-ID, ECC-SHA256 signature with prime256v1 key Expected Result: The document should pass the validation File: 24050_short_ecdsa_correct_file_mimetype.bdoc TestCaseID: Bdoc-ValidationPass-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Asice Baseline-LT file Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-49.asice TestCaseID: Bdoc-ValidationPass-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Asice QES file Expected Result: The document should pass the validation File: ValidLiveSignature.asice TestCaseID: Bdoc-ValidationPass-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Asice Baseline-LTA file Expected Result: The document should pass the validation File: EE_SER-AEX-B-LTA-V-24.asice TestCaseID: Bdoc-ValidationPass-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Asice file signed with Mobile-ID, ECC-SHA256 signature with prime256v1 key Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-2.asice TestCaseID: Bdoc-ValidationPass-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Asice file with ESTEID-SK 2015 certificate chain Expected Result: The document should pass the validation File: IB-4270_TS_ESTEID-SK 2015 SK OCSP RESPONDER 2011.asice TestCaseID: Bdoc-ValidationPass-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Asice file with KLASS3-SK 2010 (EECCRCA) certificate chain Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-28.asice TestCaseID: Bdoc-ValidationPass-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Bdoc with Baseline-LT_TM and QES signature level and ESTEID-SK 2011 certificate chain with valid signature Expected Result: The document should pass the validation File: BDOC2.1.bdoc TestCaseID: Bdoc-ValidationPass-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Bdoc TS with multiple valid signatures Expected Result: The document should pass the validation File: Test_id_aa.asice TestCaseID: Bdoc-ValidationPass-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Bdoc-TM with special characters in data file Expected Result: The document should pass the validation File: \u0160u\u017elikud s\u00f5id \u00fche \u00f5una \u00e4ra.bdoc TestCaseID: Bdoc-ValidationPass-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: *.sce file with TimeMark Expected Result: The document should pass the validation File: BDOC2.1_content_as_sce.sce TestCaseID: Bdoc-ValidationPass-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: *.sce file with TimeStamp Expected Result: The document should pass the validation File: ASICE_TS_LTA_content_as_sce.sce TestCaseID: Bdoc-ValidationPass-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc-TS with special characters in data file Expected Result: The document should pass the validation with correct signature scope File: Nonconventionalcharacters.asice","title":"BdocValidationPassIT.java"},{"location":"siva/appendix/test_cases/#ddocgetdatafilesitjava","text":"Open file TestCaseID: Ddoc-Get-Data-Files-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/use_cases/#ddoc-data-file-extraction-process Title: Valid DDOC with data file used Expected Result: The data file should be returned File: 18912.ddoc TestCaseID: Ddoc-Get-Data-Files-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/use_cases/#ddoc-data-file-extraction-process Title: Invalid DDOC with data file used Expected Result: The data file should be returned File: OCSP nonce vale.ddoc TestCaseID: Ddoc-Get-Data-Files-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/use_cases/#ddoc-data-file-extraction-process Title:DDOC with xml v1.1 is used Expected Result: The data file is returned File: DIGIDOC-XML1.1.ddoc TestCaseID: Ddoc-Get-Data-Files-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/use_cases/#ddoc-data-file-extraction-process Title: DDOC with xml v1.2 is used Expected Result: The data file is returned File: DIGIDOC-XML1.2.ddoc TestCaseID: Ddoc-Get-Data-Files-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/use_cases/#ddoc-data-file-extraction-process Title: DDOC with xml v1.3 is used Expected Result: The data file is returned File: DIGIDOC-XML1.3.ddoc TestCaseID: Ddoc-Get-Data-Files-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/use_cases/#ddoc-data-file-extraction-process Title: Hashcoded DDOC is used Expected Result: Null is returned File: DIGIDOC-XML1.3_hashcode.ddoc TestCaseID: Ddoc-Get-Data-Files-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/use_cases/#ddoc-data-file-extraction-process Title: DDOC with 12 different files of different types is used Expected Result: Data file returned for each file correctly File: igasugust1.3.ddoc TestCaseID: Ddoc-Get-Data-Files-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/use_cases/#ddoc-data-file-extraction-process Title: BDOC with data file used Expected Result: The error message should be returned File: BDOC-TS.bdoc TestCaseID: Ddoc-Get-Data-Files-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/use_cases/#ddoc-data-file-extraction-process Title: PDF file used Expected Result: The error message should be returned File: hellopades-lt-b.pdf","title":"DdocGetDataFilesIT.java"},{"location":"siva/appendix/test_cases/#ddocvalidationfailitjava","text":"Open file TestCaseID: Ddoc-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc with single invalid signature Expected Result: The document should fail the validation File: test1-ddoc-revoked.ddoc TestCaseID: Ddoc-ValidationFail-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc with multiple invalid signatures Expected Result: The document should fail the validation File: multipleInvalidSignatures.ddoc TestCaseID: Ddoc-ValidationFail-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc with multiple signatures both valid and invalid Expected Result: The document should fail the validation File: multipleValidAndInvalidSignatures.ddoc TestCaseID: Ddoc-ValidationFail-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc with no signatures Expected Result: The document should fail the validation File: DdocContainerNoSignature.bdoc TestCaseID: Ddoc-ValidationFail-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc signature value has been changed (SignatureValue does not correspond to the SignedInfo block) Expected Result: The document should fail the validation File: test-inv-sig-inf.ddoc TestCaseID: Ddoc-ValidationFail-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc Data file(s) don't match the hash values in Reference elements Expected Result: The document should fail the validation File: AndmefailiAtribuudidMuudetud.ddoc TestCaseID: Ddoc-ValidationFail-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc Baseline-BES file, no OCSP response Expected Result: The document should fail the validation File: ilma_kehtivuskinnituseta.ddoc TestCaseID: Ddoc-ValidationFail-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc no non-repudiation key usage value in the certificate Expected Result: The document should fail the validation File: test-non-repu1.ddoc TestCaseID: Ddoc-ValidationFail-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc Signer's certificate is not trusted Expected Result: The document should fail the validation File: Belgia_kandeavaldus_LIV.ddoc TestCaseID: Ddoc-ValidationFail-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc OCSP certificate is not trusted Expected Result: The document should fail the validation File: Tundmatu_OCSP_responder.ddoc TestCaseID: Ddoc-ValidationFail-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc has unsigned data files in the container Expected Result: The document should fail the validation File: lisatud_andmefail.ddoc TestCaseID: Ddoc-ValidationFail-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc signed data file has been removed from the container Expected Result: The document should fail the validation File: faileemald1.ddoc TestCaseID: Ddoc-ValidationFail-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc wrong nonce Expected Result: The document should fail the validation File: OCSP nonce vale.ddoc TestCaseID: Ddoc-ValidationFail-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Ddoc with XML Entity expansion attack Expected Result: The document should fail the validation with error File: xml_expansion.ddoc TestCaseID: Ddoc-ValidationFail-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Ddoc with XML server side request forgery attack Expected Result: The document should fail the validation with error File: xml_entity.ddoc TestCaseID: Ddoc-ValidationFail-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc no files in container Expected Result: The document should fail the validation File: KS-02_tyhi.ddoc TestCaseID: Ddoc-ValidationFail-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc XML namespace error in container Expected Result: The document should pass with warning File: ns6t3cp7.ddoc","title":"DdocValidationFailIT.java"},{"location":"siva/appendix/test_cases/#ddocvalidationpassitjava","text":"Open file TestCaseID: Ddoc-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Ddoc v1.0 with valid signatures Expected Result: The document should pass the validation File: SK-XML1.0.ddoc **Attention! This test is disabled: https://github.com/open-eid/SiVa/issues/11 TestCaseID: Ddoc-ValidationPass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Ddoc v1.1 with valid signature Expected Result: The document should pass the validation File: DIGIDOC-XML1.1.ddoc TestCaseID: Ddoc-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Ddoc v1.2 with valid signature Expected Result: The document should pass the validation File: DIGIDOC-XML1.2.ddoc TestCaseID: Ddoc-ValidationPass-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Ddoc v1.3 with valid signature with ESTEID-SK 2011 certificate chain Expected Result: The document should pass the validation File: DIGIDOC-XML1.3.ddoc TestCaseID: Ddoc-ValidationPass-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Ddoc v1.3 with valid signature, signed data file name has special characters and ESTEID-SK certificate chain Expected Result: The document should pass the validation File: susisevad1_3.ddoc TestCaseID: Ddoc-ValidationPass-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Ddoc v1.3 KLASS3-SK certificate chain with valid signature Expected Result: The document should pass the validation File: KLASS3-SK _ KLASS3-SK OCSP RESPONDER uus.ddoc TestCaseID: Ddoc-ValidationPass-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Ddoc v1.3 KLASS3-SK 2010 certificate chain with valid signature Expected Result: The document should pass the validation File: KLASS3-SK 2010 _ KLASS3-SK 2010 OCSP RESPONDER.ddoc TestCaseID: Ddoc-ValidationPass-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Ddoc v1.1 ESTEID-SK 2007 certificate chain with valid signature Expected Result: The document should pass the validation File: vaikesed1.1.ddoc TestCaseID: Ddoc-ValidationPass-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Ddoc v1.1 ESTEID-SK 2007 certificate chain with valid signature Expected Result: The document should pass the validation File: IB-4270_ESTEID-SK 2015 SK OCSP RESPONDER 2011.ddoc TestCaseID: Ddoc-ValidationPass-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Ddoc v1.1 ESTEID-SK certificate chain with valid signature Expected Result: The document should pass the validation File: EID-SK _ EID-SK OCSP RESPONDER.ddoc TestCaseID: Ddoc-ValidationPass-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Ddoc v1.1 ESTEID-SK 2007 and OCSP 2010 certificate chain with valid signature Expected Result: The document should pass the validation File: EID-SK 2007 _ EID-SK 2007 OCSP RESPONDER 2010.ddoc TestCaseID: Ddoc-ValidationPass-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Ddoc v1.3 ESTEID-SK 2007 and OCSP 2007 certificate chain with valid signature Expected Result: The document should pass the validation File: EID-SK 2007 _ EID-SK 2007 OCSP RESPONDER.ddoc TestCaseID: Ddoc-ValidationPass-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Ddoc v1.3 ESTEID-SK 2011 and OCSP 2011 certificate chain with valid signature Expected Result: The document should pass the validation File: EID-SK 2011 _ SK OCSP RESPONDER 2011.ddoc TestCaseID: Ddoc-ValidationPass-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Ddoc with warning should pass Expected Result: Document passes the validation File: 18912.ddoc TestCaseID: DdocHashcode-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Validation of DDOC Hashcode v1.0 Expected Result: Document passes the validation File: SK-XML1.0_hashcode.ddoc **Attention! This test is disabled: https://github.com/open-eid/SiVa/issues/11 TestCaseID: DdocHashcode-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Validation of DDOC Hashcode v1.1 Expected Result: Document passes the validation File: DIGIDOC-XML1.1_hashcode.ddoc **Attention! This test is disabled: This tests fails in Travis. Has been executed locally TestCaseID: DdocHashcode-ValidationPass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Validation of DDOC Hashcode v1.2 Expected Result: Document passes the validation File: DIGIDOC-XML1.2_hashcode.ddoc **Attention! This test is disabled: This tests fails in Travis. Has been executed locally TestCaseID: DdocHashcode-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Validation of DDOC Hashcode v1.3 Expected Result: Document passes the validation File: DIGIDOC-XML1.3_hashcode.ddoc **Attention! This test is disabled: This tests fails in Travis. Has been executed locally","title":"DdocValidationPassIT.java"},{"location":"siva/appendix/test_cases/#documentformatitjava","text":"Open file TestCaseID: DocumentFormat-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Validation of pdf document acceptance Expected Result: Pdf is accepted and correct signature validation is given File: hellopades-pades-lt-sha256-sign.pdf TestCaseID: DocumentFormat-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Validation of bdoc document acceptance Expected Result: Bdoc is accepted and correct signature validation is given File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: DocumentFormat-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Validation of txt document rejection Expected Result: Txt document is rejected and proper error message is given File: hellopades-pades-lt-sha256-sign.txt TestCaseID: DocumentFormat-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Validation of p7s document rejection Expected Result: P7s document is rejected and proper error message is given File: hellocades.p7s TestCaseID: DocumentFormat-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Validation of zip document rejection Expected Result: Zip document is rejected and proper error message is given File: 42.zip TestCaseID: DocumentFormat-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Validation of doc document rejection Expected Result: Doc document is rejected and proper error message is given File: hellopades-pades-lt-sha256-sign.doc TestCaseID: DocumentFormat-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Validation of XML document rejection Expected Result: XML document is rejected and proper error message is given File: XML.xml TestCaseID: DocumentFormat-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Validation of png document rejection Expected Result: Png document is rejected and proper error message is given File: Picture.png","title":"DocumentFormatIT.java"},{"location":"siva/appendix/test_cases/#documentvalidationitjava","text":"Open file TestCaseID: Document-Validation-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title:Bdoc with two signatures and one unsigned document. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2s_1f_unsigned.bdoc TestCaseID: Document-Validation-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with two signatures and one document signed by only one signature. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2s_1partly_signed.bdoc TestCaseID: Document-Validation-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with two signatures and two documents signed by only one signature. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2s_2partly_signed.bdoc TestCaseID: Document-Validation-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with two signatures, one unsigned and two partly signed documents. Expected Result: The document should fail the validation and warnings should be displayed. File:4f_2s_all_combinations.bdoc TestCaseID: Document-Validation-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with three unsigned documents. Expected Result: The document should pass the validation and warnings should be displayed. File:6f_2s_3unsigned.bdoc TestCaseID: Document-Validation-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with deleted document, named in manifest. Expected Result: The document should fail the validation and warning should be displayed. File:2f_2signed_1f_deleted.bdoc TestCaseID: Document-Validation-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with deleted document, also removed from manifest. Expected Result: The document should fail the validation without warning. File:2f_2signed_1f_totally_removed.bdoc TestCaseID: Document-Validation-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with one unsigned document, named in manifest. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2signed_1unsigned_all_in_manifest.bdoc TestCaseID: Document-Validation-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with one unsigned document, NOT named in manifest. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2signed_1unsigned_2in_manifest.bdoc TestCaseID: Document-Validation-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Bdoc with signed documents. Expected Result: The document should pass the validation without warning. File:2f_all_signed.bdoc","title":"DocumentValidationIT.java"},{"location":"siva/appendix/test_cases/#largefileitjava","text":"Open file TestCaseID: PDF-LargeFiles-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/overview/#main-features-of-siva-validation-service Title: 9MB PDF files (PAdES Baseline LT). Expected Result: Validation report is returned File: 9MB_PDF.pdf TestCaseID: Bdoc-LargeFiles-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/overview/#main-features-of-siva-validation-service Title: 9MB ASIC-E file Expected Result: Validation report is returned File: 9MB_BDOC-TS.bdoc TestCaseID: Bdoc-LargeFiles-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/overview/#main-features-of-siva-validation-service Title: 9MB BDOC-TM Expected Result: Validation report is returned File: 9MB_BDOC-TM.bdoc TestCaseID: Ddoc-LargeFiles-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/overview/#main-features-of-siva-validation-service Title: 9MB DDOC Expected Result: Validation report is returned File: 9MB_DDOC.ddoc","title":"LargeFileIT.java"},{"location":"siva/appendix/test_cases/#monitoringitjava","text":"Open file TestCaseID: WebApp-Monitoring-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#service-health-monitoring Title: Health monitor response structure Expected Result: response matches the expected structure of JSON File: not relevant","title":"MonitoringIT.java"},{"location":"siva/appendix/test_cases/#pdfbaselineprofileitjava","text":"Open file TestCaseID: PDF-BaselineProfile-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: The PDF has PAdES-B profile signature POLv1 Expected Result: Document validation should fail as the profile is not supported with any policy File: hellopades-pades-b-sha256-auth.pdf TestCaseID: PDF-BaselineProfile-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: The PDF has PAdES-B profile signature POLv2 Expected Result: Document validation should fail as the profile is supported with any policy File: hellopades-pades-b-sha256-auth.pdf TestCaseID: PDF-BaselineProfile-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: The PDF has PAdES-T profile signature POLv1 Expected Result: Document validation should fail with any policy File: pades-baseline-t-live-aj.pdf TestCaseID: PDF-BaselineProfile-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: The PDF has PAdES-T profile signature POLv2 Expected Result: Document validation should fail with any policy File: pades-baseline-t-live-aj.pdf TestCaseID: PDF-BaselineProfile-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: The PDF has PAdES-LT profile signature POLv1 Expected Result: Document validation should pass with any policy File: hellopades-pades-lt-sha256-sign.pdf TestCaseID: PDF-BaselineProfile-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: The PDF has PAdES-LT profile signature POLv2 Expected Result: Document validation should pass with any policy File: hellopades-pades-lt-sha256-sign.pdf TestCaseID: PDF-BaselineProfile-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: The PDF has PAdES-LTA profile signature POLv1 Expected Result: Document validation should pass with any policy File: pades-baseline-lta-live-aj.pdf TestCaseID: PDF-BaselineProfile-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: The PDF has PAdES-LTA profile signature POLv2 Expected Result: Document validation should pass with any policy File: pades-baseline-lta-live-aj.pdf TestCaseID: PDF-BaselineProfile-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: The PDF has PAdES-LT and B profile signature Expected Result: Document validation should fail File: hellopades-lt-b.pdf TestCaseID: PDF-BaselineProfile-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: PDF document message digest attribute value does not match calculate value Expected Result: Document validation should fail File: hellopades-lt1-lt2-wrongDigestValue.pdf TestCaseID: PDF-BaselineProfile-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: PDF file with a serial signature Expected Result: Document signed with multiple signers with serial signatures should pass File: hellopades-lt1-lt2-Serial.pdf","title":"PdfBaselineProfileIT.java"},{"location":"siva/appendix/test_cases/#pdfsignaturecryptographicalgorithmitjava","text":"Open file TestCaseID: PDF-SigCryptoAlg-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: SHA512 algorithms (PAdES Baseline LT) Expected Result: Document signed with SHA512 algorithm should pass File: hellopades-lt-sha512.pdf TestCaseID: PDF-SigCryptoAlg-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: SHA1 algorithms (PAdES Baseline LT) Expected Result: Document signed with SHA1 algorithm should pass File: hellopades-lt-sha1.pdf TestCaseID: PDF-SigCryptoAlg-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: ECDSA224 algorithms (PAdES Baseline LT) Expected Result: Document signed with ECDSA224 algorithm should pass File: hellopades-lt-sha256-ec224.pdf TestCaseID: PDF-SigCryptoAlg-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: ECDSA256 algorithms (PAdES Baseline LT) Expected Result: Document signed with ECDSA256 algorithm should pass File: hellopades-lt-sha256-ec256.pdf TestCaseID: PDF-SigCryptoAlg-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: RSA1024 algorithms (PAdES Baseline LT) Expected Result: Document signed with RSA1024 algorithm should pass File: hellopades-lt-sha256-rsa1024.pdf TestCaseID: PDF-SigCryptoAlg-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: RSA1023 algorithms (PAdES Baseline LT) Expected Result: Document signed with RSA1023 algorithm should fail File: hellopades-lt-sha256-rsa1023.pdf **Attention! This test is disabled: Bug fixed in DSS version 5.1. https://ec.europa.eu/cefdigital/tracker/browse/DSS-1145 TestCaseID: PDF-SigCryptoAlg-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: RSA2047 algorithms (PAdES Baseline LT) Expected Result: Document signed with RSA2047 algorithm should pass File: hellopades-lt-sha256-rsa2047.pdf TestCaseID: PDF-SigCryptoAlg-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: RSA2048 algorithms (PAdES Baseline LT) Expected Result: Document signed with RSA2048 algorithm should pass File: PdfValidSingleSignature","title":"PdfSignatureCryptographicAlgorithmIT.java"},{"location":"siva/appendix/test_cases/#pdfvalidationfailitjava","text":"Open file TestCaseID: PDF-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: The PDF-file has been signed with expired certificate (PAdES Baseline LT) Expected Result: Document signed with certificate that is expired should fail. File: hellopades-lt-rsa1024-sha1-expired.pdf TestCaseID: PDF-ValidationFail-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: The PDF-file has been signed with revoked certificate (PAdES Baseline LT) Expected Result: Document signed with certificate that is revoked should fail. File: pades_lt_revoked.pdf TestCaseID: PDF-ValidationFail-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: The PDF-file has been signed with certificate which has no non repudiation key usage attribute (PAdES Baseline LT) Expected Result: The PDF-file validation should fail with error. File: hellopades-pades-lt-sha256-auth.pdf TestCaseID: PDF-ValidationFail-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: hellopadess been signed with an expired certificate, where signing time is within the original validity Expected Result: Document signed with expired certificate should fail File: hellopades-lt-sha256-rsa2048-expired.pdf **Attention! This test is disabled: https://jira.nortal.com/browse/SIVARIA-17 TestCaseID: PDF-ValidationFail-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: hellopadess been signed with an expired certificate, where signing time is within the original validity Expected Result: Document signed with expired certificate should fail File: hellopades-lt-sha256-rsa1024-expired2.pdf **Attention! This test is disabled: https://jira.nortal.com/browse/SIVARIA-17 TestCaseID: PDF-ValidationFail-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: hellopadess been signed with an expired certificate, where signing time is within the original validity Expected Result: Document signed with expired certificate should fail File: hellopades-lt-sha1-rsa1024-expired2.pdf **Attention! This test is disabled: https://jira.nortal.com/browse/SIVARIA-17","title":"PdfValidationFailIT.java"},{"location":"siva/appendix/test_cases/#pdfvalidationpassitjava","text":"Open file TestCaseID: PDF-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: The PDF-file has been signed with certificate that is expired after signing (PAdES Baseline LT) Expected Result: Document signed with certificate that expired after signing should pass. File: hellopades-lt-sha256-rsa1024-not-expired.pdf TestCaseID: PDF-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: The PDF-file has been signed with certificate that will expire in 7 days after signing (PAdES Baseline LT) Expected Result: Document signed with certificate that expired after signing should pass. File: hellopades-lt-sha256-rsa2048-7d.pdf TestCaseID: PDF-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2 Title: Pdf with single valid signature Expected Result: Document should pass. File: PdfValidSingleSignature.pdf","title":"PdfValidationPassIT.java"},{"location":"siva/appendix/test_cases/#signaturepolicyitjava","text":"Open file TestCaseID: Pdf-Signature-Policy-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-1-polv1 Title: The PDF-file is not QES level and misses SSCD/QSCD compliance Expected Result: Signatures are valid according to policy File: soft-cert-signature.pdf TestCaseID: Pdf-Signature-Policy-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-1-polv1 Title: The PDF-file is not QES level and misses SSCD/QSCD compliance Expected Result: Signatures are not valid according to policy File: soft-cert-signature.pdf **Attention! This test is disabled: New test file is needed TestCaseID: Pdf-Signature-Policy-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-1-polv1 Title: The PDF-file is QES level and has SSCD/QSCD compliance Expected Result: Signatures are valid according to policy (\"weaker\" policy is used) File: pades_lt_two_valid_sig.pdf TestCaseID: Pdf-Signature-Policy-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-1-polv1 Title: The PDF-file is QES level and has SSCD/QSCD compliance Expected Result: Signatures are valid according to policy File: pades_lt_two_valid_sig.pdf TestCaseID: Bdoc-Signature-Policy-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-1-polv1 Title: The bdoc is not QES level and misses SSCD/QSCD compliance Expected Result: Signatures are valid according to policy File: allkiri_ades.asice TestCaseID: Bdoc-Signature-Policy-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-1-polv1 Title: The bdoc is not QES level and misses SSCD/QSCD compliance Expected Result: Signatures are not valid according to policy File: allkiri_ades.asice TestCaseID: Bdoc-Signature-Policy-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-1-polv1 Title: The bdoc is QES level and has SSCD/QSCD compliance Expected Result: Signatures are valid according to policy (\"non-strict\" policy is used) File: Valid_ID_sig.bdoc TestCaseID: Bdoc-Signature-Policy-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#siva-signature-validation-policy-version-1-polv1 Title: The bdoc is QES level and has SSCD/QSCD compliance Expected Result: Signatures are valid according to policy File: Valid_ID_sig.bdoc","title":"SignaturePolicyIT.java"},{"location":"siva/appendix/test_cases/#xroadvalidationfailitjava","text":"Open file TestCaseID: Xroad-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Simple xroad document with container fault Expected Result: Document should fail validation File: invalid-digest.asice","title":"XRoadValidationFailIT.java"},{"location":"siva/appendix/test_cases/#xroadvalidationpassitjava","text":"Open file TestCaseID: Xroad-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Simple xroad document Expected Result: Document should pass File: xroad-simple.asice TestCaseID: Xroad-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Batchsignature xroad document Expected Result: Document should pass File: xroad-batchsignature.asice TestCaseID: Xroad-ValidationPass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 Title: Attachment xroad document Expected Result: Document should pass File: xroad-attachment.asice","title":"XRoadValidationPassIT.java"},{"location":"siva/appendix/test_cases/#statisticstogamanualitjava","text":"Note All tests in this class expect manual configuration of Google Analytics before executing the tests. The test are made to prepare test data and ease the test execution, all results must be checked manually in GA! Check all the fields presence and correctness even though tests prepare data for specific cases. TestCaseID: Xauth-Statistics-GA-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf valid container is validated with x-authenticated-user set in header Expected Result: x-authenticated-user value is shown in GA File: pades_lt_two_valid_sig.pdf TestCaseID: Xauth-Statistics-GA-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf valid container is validated with x-authenticated-user set in header Expected Result: x-authenticated-user value is shown as N/A in GA File: pades_lt_two_valid_sig.pdf TestCaseID: Xauth-Statistics-GA-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf valid container is validated with x-authenticated-user set in header Expected Result: x-authenticated-user value is shown as N/A in GA File: pades_lt_two_valid_sig.pdf TestCaseID: Bdoc-Statistics-GA-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Bdoc with certificates from different countries. Expected Result: LT, EE and LV country codes are present in GA, Signature container type is ASIC-E TM File: Baltic MoU digital signing_EST_LT_LV.bdoc TestCaseID: Bdoc-Statistics-GA-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Asice-E TS is validated Expected Result: GA shows Signature container type as ASIC-E TS File: BDOC-TS.bdoc TestCaseID: Xroad-Statistics-GA-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Xroad valid container is validated Expected Result: Country code XX is sent to GA (GA shows ZZ as the XX is unknown code), Signature container type is ASiC-E (BatchSignature) File: xroad-batchsignature.asice TestCaseID: Ddoc-Statistics-GA-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Ddoc not supported file is inserted Expected Result: Not shown in GA statistics as the container is not validated File: xroad-simple.asice TestCaseID: Ddoc-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Ddoc invalid container is validated Expected Result: GA shows Signature container type as XAdES, TOTAL-FAILED indication File: ilma_kehtivuskinnituseta.ddoc","title":"StatisticsToGAManualIT.java"},{"location":"siva/appendix/test_cases/#statisticstologsmanualitjava","text":"Note All tests in this class expect manual verification of responses in log! The tests are made to prepare test data and ease the test execution. TestCaseID: Bdoc-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Bdoc valid container is validated Expected Result: Correct data is shown in the log with correct structure File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Bdoc-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Bdoc invalid container is validated Expected Result: Correct data is shown in the log with correct structure File: SS-4_teadmataCA.4.asice TestCaseID: Bdoc-Statistics-Log-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Bdoc not supported file is inserted Expected Result: No message in statistics as the container is not validated File: xroad-simple.asice TestCaseID: Bdoc-Statistics-Log-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Bdoc with certificates from different countries. Expected Result: Correct data is shown in the log with correct structure File: Baltic MoU digital signing_EST_LT_LV.bdoc TestCaseID: Ddoc-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Ddoc valid container is validated Expected Result: Correct data is shown in the log with correct structure File: igasugust1.3.ddoc TestCaseID: Ddoc-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Ddoc invalid container is validated Expected Result: Correct data is shown in the log with correct structure File: ilma_kehtivuskinnituseta.ddoc TestCaseID: Ddoc-Statistics-Log-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Ddoc not supported file is inserted Expected Result: No message in statistics as the container is not validated File: xroad-simple.asice TestCaseID: Ddoc-Statistics-Log-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Ddoc with certificates from different countries. Expected Result: Correct data is shown in the log with correct structure File: Belgia_kandeavaldus_LIV.ddoc TestCaseID: Pdf-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf valid container is validated Expected Result: Correct data is shown in the log with correct structure File: pades_lt_two_valid_sig.pdf TestCaseID: Pdf-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf invalid container is validated Expected Result: Correct data is shown in the log with correct structure File: hellopades-lt1-lt2-wrongDigestValue.pdf TestCaseID: Pdf-Statistics-Log-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf not supported file is inserted Expected Result: No message in statistics as the container is not validated File: xroad-simple.asice TestCaseID: Pdf-Statistics-Log-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf with certificates from non Estonian countries. Expected Result: Correct data is shown in the log with correct structure File: Regulatione-signedbyco-legislators.pdf TestCaseID: Xroad-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Xroad valid container is validated Expected Result: Correct data is shown in the log with correct structure File: xroad-batchsignature.asice TestCaseID: Xroad-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Xroad invalid container is validated Expected Result: Correct data is shown in the log with correct structure File: invalid-digest.asice TestCaseID: Xroad-Statistics-Log-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Xroad not supported file is inserted Expected Result: No message in statistics as the container is not validated File: BDOC-TS.bdoc","title":"StatisticsToLogsManualIT.java"},{"location":"siva/appendix/test_cases/#getdatafilerequestitjava","text":"Open file TestCaseID: Get-Data-Files-Request-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Input empty values Expected Result: Errors are returned stating the missing values File: not relevant TestCaseID: Get-Data-Files-Request-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Totally empty request body is sent Expected Result: Errors are given File: not relevant TestCaseID: Get-Data-Files-Request-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Order of elements is changed in request Expected Result: Order of elements is ignored, no error messages in response File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Additional elements are added Expected Result: Added elements ignored, no error messages and additional elements in response File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Mandatory element 'documentType' is duplicated, duplicated element with bdoc value Expected Result: Error message is returned File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Mandatory element 'document' is deleted Expected Result: Errors returned stating the missing element File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Mandatory element 'documentType' is deleted Expected Result: Errors returned stating the missing element File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Low case for document type is used Expected Result: Data file is returned, no error messages File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Document Type is changed in request to BDOC, actual is DDOC Expected Result: Error is returned File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Document Type is changed in request to PDF, actual is DDOC Expected Result: Error is returned File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Document Type is changed in request to unsupported format (JPG), actual is DDOC Expected Result: Error is returned File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Document Type is changed in request to XROAD format, actual is DDOC Expected Result: Error is returned File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Document Type is changed in request to DDOC format, actual is BDOC Expected Result: Error is returned File: BDOC-TS.bdoc TestCaseID: Get-Data-Files-Request-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Document Type is changed in request to DDOC format, actual is PDF Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Get-Data-Files-Request-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: For Unsupported format Document Type is changed in request to DDOC format, actual is PNG Expected Result: Error is returned File: Picture.png","title":"GetDataFileRequestIT.java"},{"location":"siva/appendix/test_cases/#validationreportvalueverificationitjava","text":"Open file TestCaseID: Bdoc-ValidationReportVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface#validation-request-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT_TM, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: Valid_ID_sig.bdoc TestCaseID: Bdoc-ValidationReportVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: 23635_bdoc_ts_OCSP_random_nonce.bdoc TestCaseID: Bdoc-ValidationReportVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc TestCaseID: Bdoc-ValidationReportVerification-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT-TM, AdESqc Expected Result: All required elements are present and meet the expected values. File: 23200_weakdigest-wrong-nonce.asice **Attention! This test is disabled: https://github.com/open-eid/SiVa/issues/24 TestCaseID: Bdoc-ValidationReportVerification-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: JSON structure has all elements (Bdoc valid multiple signatures) Expected Result: All required elements are present according to SimpleReportSchema.json File: Baltic MoU digital signing_EST_LT_LV.bdoc TestCaseID: Bdoc-ValidationReportVerification-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: JSON structure has all elements (Bdoc indeterminate status) Expected Result: All required elements are present according to BdocDocSimpleReportSchema.json File: SS-4_teadmataCA.4.asice TestCaseID: Bdoc-ValidationReportVerification-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Bdoc report with no signatures Expected Result: Report is returned with required elements File:BdocContainerNoSignature.bdoc TestCaseID: Pdf-ValidationReportVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: JSON structure has all elements (Pdf valid single signature) Expected Result: All required elements are present according to SimpleReportSchema.json File: hellopades-lt-sha256-ec256.pdf TestCaseID: Pdf-ValidationReportVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: JSON structure has all elements (Pdf valid Multiple signatures) Expected Result: All required elements are present according to SimpleReportSchema.json File: pades_lt_two_valid_sig.pdf TestCaseID: Pdf-ValidationReportVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: JSON structure has all elements (Pdf invalid signature) Expected Result: All required elements are present according to SimpleReportSchema.json File: hellopades-lt-b.pdf TestCaseID: Pdf-ValidationReportVerification-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: JSON structure has all elements (Pdf indeterminate status) Expected Result: All required elements are present according to SimpleReportSchema.json File: hellopades-lt-rsa1024-sha1-expired.pdf TestCaseID: Pdf-ValidationReportVerification-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Pdf report with no signatures Expected Result: Report is returned with required elements File: PdfNoSignature.pdf TestCaseID: Ddoc-ValidationReportVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: JSON structure has all elements (ddoc valid single signature) Expected Result: All required elements are present according to SimpleReportSchema.json File: DIGIDOC-XML1.3.ddoc TestCaseID: Ddoc-ValidationReportVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: JSON structure has all elements (ddoc invalid signature) Expected Result: All required elements are present according to SimpleReportSchema.json File: test1-ddoc-revoked.ddoc TestCaseID: Ddoc-ValidationReportVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: JSON structure has all elements (ddoc indeterminate status) Expected Result: All required elements are present according to SimpleReportSchema.json File: test1-ddoc-unknown.ddoc **Attention! This test is disabled: https://github.com/open-eid/SiVa/issues/15 TestCaseID: Ddoc-ValidationReportVerification-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Check for optional warning element Expected Result: Warning element is present File: ns6t3cp7.ddoc TestCaseID: Ddoc-ValidationReportVerification-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Ddoc report with no signatures Expected Result: Report is returned with required elements File: DdocContainerNoSignature.ddoc TestCaseID: Ddoc-ValidationReportVerification-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.0, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: SK-XML1.0.ddoc **Attention! This test is disabled: https://github.com/open-eid/SiVa/issues/11 TestCaseID: Ddoc-ValidationReportVerification-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.1, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.1.ddoc TestCaseID: Ddoc-ValidationReportVerification-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.2, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.2.ddoc TestCaseID: Ddoc-ValidationReportVerification-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.3, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.3.ddoc TestCaseID: Xroad-ValidationReportVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-simple container Expected Result: Report is returned with required elements File: xroad-simple.asice TestCaseID: Xroad-ValidationReportVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-batchsignature container Expected Result: Report is returned with required elements File: xroad-batchsignature.asice TestCaseID: Xroad-ValidationReportVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-attachment container Expected Result: Report is returned with required elements File: xroad-attachment.asice TestCaseID: Xroad-ValidationReportVerification-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report with invalid xroad container Expected Result: Report is returned with required elements File: xroad-attachment.asice","title":"ValidationReportValueVerificationIT.java"},{"location":"siva/appendix/test_cases/#validationrequestitjava","text":"Open file TestCaseID: ValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Input empty values Expected Result: Errors are returned stating the missing values File: not relevant TestCaseID: ValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Verification of wrong document type as input Expected Result: Correct error code is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request has invalid key on document position Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request has XML as document type (special case, XML is similar to ddoc and was a accepted document type in earlier versions) Expected Result: Error is given File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request has long (38784 characters) in filename field Expected Result: Report is returned with the same filename File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Totally empty request body is sent Expected Result: Error is given File: not relevant TestCaseID: ValidationRequest-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request with more parameters than expected is sent Expected Result: Error is given or extra parameters are ignored? File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request with special chars is sent Expected Result: Validation report is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request with not base64 string as document Expected Result: Error is returned stating encoding problem File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Bdoc-ValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Bdoc-ValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and ddoc) Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: Bdoc-ValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and xroad) Expected Result: Error is returned File: xroad-simple.asice TestCaseID: Bdoc-ValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Bdoc file, not existing value in signaturePolicy Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Bdoc-ValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Bdoc file, policy fiels should be case insensitive Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Bdoc-ValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request without optional signaturePolicy field Expected Result: Validation report is returned with default policy File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Bdoc-ValidationRequest-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Input random base64 string as document with bdoc document type Expected Result: Error is returned stating problem in document File: not relevant TestCaseID: Bdoc-ValidationRequest-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Acceptance of ASICE as BDOC document type Expected Result: Asice files are handled the same as bdoc File: bdoc21-TS.asice TestCaseID: Bdoc-ValidationRequest-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Verification of case insensitivity in document type Expected Result: Report is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Bdoc-ValidationRequest-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Verification of filename value (filename do not match the actual file) Expected Result: The same filename is returned as sent in the request File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Bdoc-ValidationRequest-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request has invalid character in filename Expected Result: Correct error code is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Bdoc-ValidationRequest-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and xroad) Expected Result: Error is returned File: xroad-batchsignature TestCaseID: Bdoc-ValidationRequest-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and xroad) Expected Result: Error is returned File: xroad-attachment.asice TestCaseID: Pdf-ValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (pdf and ddoc) Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: Pdf-ValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (pdf and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Pdf-ValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (pdf and xroad) Expected Result: Error is returned File: xroad-simple.asice TestCaseID: Pdf-ValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: PDF file, not existing value in signaturePolicy Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Pdf-ValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Input random base64 string as document with pdf document type Expected Result: Error is returned stating problem in document File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Pdf-ValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Verification of filename value (filename do not match the actual file) Expected Result: The same filename is returned as sent in the request File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Pdf-ValidationRequest-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (pdf and xroad) Expected Result: Error is returned File: xroad-batchsignature.asice TestCaseID: Pdf-ValidationRequest-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (pdf and xroad) Expected Result: Error is returned File: xroad-attachment.asice TestCaseID: Ddoc-ValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Ddoc-ValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Ddoc-ValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and xroad) Expected Result: Error is returned File: xroad-simple.asice TestCaseID: Ddoc-ValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Ddoc file, not existing value in signaturePolicy Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: Ddoc-ValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Input random base64 string as document with ddoc document type Expected Result: Error is returned stating problem in document File: not relevant TestCaseID: Ddoc-ValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Verification of filename value (filename do not match the actual file) Expected Result: The same filename is returned as sent in the request File: igasugust1.3.ddoc TestCaseID: Ddoc-ValidationRequest-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and xroad) Expected Result: Error is returned File: xroad-simple.asice TestCaseID: Ddoc-ValidationRequest-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and xroad) Expected Result: Error is returned File: xroad-simple.asice TestCaseID: Xroad-ValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (xroad and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Xroad-ValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (xroad and ddoc) Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: Xroad-ValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (xroad and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Xroad-ValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: X-road file, not existing value in signaturePolicy Expected Result: Error is returned File: xroad-simple.asice TestCaseID: Xroad-ValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Input random base64 string as document with xroad document type Expected Result: Error is returned stating problem in document File: not relevant TestCaseID: Xroad-ValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Verification of filename value (filename do not match the actual file) Expected Result: The same filename is returned as sent in the request File: xroad-simple.asice","title":"ValidationRequestIT.java"},{"location":"siva/appendix/test_cases/#soapgetdatafilereportitjava","text":"Open file TestCaseID: SoapGetDataFile-Report-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-response-interface Title: Verification of values in Validation Report, checks for File name, Base64, Mimetype and Size Expected Result: All required elements are present and meet the expected values File: ddoc_1_3.xml.ddoc TestCaseID: SoapGetDataFile-Report-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-response-interface Title: Verification of values in Validation Report xml v1.1, checks for File name, Base64, Mimetype and Size Expected Result: All required elements are present and meet the expected values File: DIGIDOC-XML1.1.ddoc TestCaseID: SoapGetDataFile-Report-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-response-interface Title: Verification of values in Validation Report xml v1.2, checks for File name, Base64, Mimetype and Size Expected Result: All required elements are present and meet the expected values File: DIGIDOC-XML1.2.ddoc TestCaseID: SoapGetDataFile-Report-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-response-interface Title: Verification of values in Validation Report for container with a number of files, checks for File name, Base64, Mimetype and Size for each file Expected Result: All required elements are present and meet the expected values File: igasugust1.3.ddoc","title":"SoapGetDataFileReportIT.java"},{"location":"siva/appendix/test_cases/#soapgetdatafilerequestitjava","text":"Open file TestCaseID: Soap-Validation-Request-For-Data-Files-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Input empty values Expected Result: Error is returned File: not relevant TestCaseID: Soap-Validation-Request-For-Data-Files-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Input empty body Expected Result: Error is returned File: not relevant TestCaseID: Soap-Validation-Request-For-Data-Files-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Element DocumentType is removed from the body Expected Result: Error is returned File: ddoc_1_3.xml.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Element Document is removed from the body Expected Result: Error is returned File: ddoc_1_3.xml.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Element DocumentType is duplicated in the body with different value Expected Result: Error is returned File: ddoc_1_3.xml.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Additional element FileName is added to the body Expected Result: Error is returned File: ddoc_1_3.xml.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Value for element Document was changed Expected Result: Error is returned File: ddoc_1_3.xml.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Low case for Document Type was used Expected Result: Error is returned File: 18912.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: DocumentType was changed to BDOC when actual is DDOC Expected Result: Error is returned File: 18912.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: DocumentType was changed to PDF when actual is DDOC Expected Result: Error is returned File: 18912.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: DocumentType was changed to XROAD when actual is DDOC Expected Result: Error is returned File: 18912.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: DocumentType was changed to unsupported format JPG when actual is DDOC Expected Result: Error is returned File: 18912.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: DocumentType was changed to DDOC when actual is PDF Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Soap-Validation-Request-For-Data-Files-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: DocumentType was changed to DDOC when actual is BDOC Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc","title":"SoapGetDataFileRequestIT.java"},{"location":"siva/appendix/test_cases/#soapvalidationreportvalueitjava","text":"Open file TestCaseID: Bdoc-SoapValidationReportValue-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT_TM, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: Valid_ID_sig.bdoc TestCaseID: Bdoc-SoapValidationReportValue-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: 23635_bdoc_ts_OCSP_random_nonce.bdoc TestCaseID: Bdoc-SoapValidationReportValue-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT, AdES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc TestCaseID: Bdoc-SoapValidationReportValue-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT_TM, AdESqc, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: 23200_weakdigest-wrong-nonce.asice TestCaseID: Bdoc-SoapValidationReportValue-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LTA, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: EE_SER-AEX-B-LTA-V-24.bdoc TestCaseID: Ddoc-SoapValidationReportValue-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.0, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: SK-XML1.0.ddoc **Attention! This test is disabled: https://github.com/open-eid/SiVa/issues/11 TestCaseID: Ddoc-SoapValidationReportValue-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.1, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.1.ddoc TestCaseID: Ddoc-SoapValidationReportValue-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.2, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.2.ddoc TestCaseID: Ddoc-SoapValidationReportValue-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.3, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.3.ddoc TestCaseID: Pdf-SoapValidationReportValue-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, PAdES_baseline_LT, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: pades_lt_two_valid_sig.pdf TestCaseID: Pdf-SoapValidationReportValue-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, PAdES_baseline_B, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: hellopades-pades-b-sha256-auth.pdf TestCaseID: Xroad-SoapValidationReportValue-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-simple container Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: xroad-simple.asice TestCaseID: Xroad-SoapValidationReportValue-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-simple invalid container Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: invalid-digest.asice","title":"SoapValidationReportValueIT.java"},{"location":"siva/appendix/test_cases/#soapvalidationrequestitjava","text":"Open file TestCaseID: Soap-ValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Empty request body Expected Result: Error is returned stating mismatch with required elements File: not relevant TestCaseID: Soap-ValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request with not base64 string as document Expected Result: Error is returned stating encoding problem File: not relevant TestCaseID: Soap-ValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Verification of wrong document type as input Expected Result: Correct error code is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Verification of case sensitivity in document type Expected Result: Error is returned as WSDL defines the allowed values File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request has XML as document type (special case, XML is similar to ddoc and was a accepted document type in earlier versions) Expected Result: Error is given File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request has long filename field Expected Result: Report is returned with the same filename File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Totally empty request body is sent Expected Result: Error is given File: not relevant TestCaseID: Soap-ValidationRequest-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request with more parameters than expected is sent Expected Result: Error is given or extra parameters are ignored? File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request with more parameters than expected is sent Expected Result: Error is given or extra parameters are ignored? File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request with special chars is sent Expected Result: Validation report is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request with no optional SignaturePolicy field Expected Result: Validation report is returned using default policy File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request with XML expansion Expected Result: Error is returned and Entity is not handled File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request XML external entity attack Expected Result: Error message is returned and Doctype field is not handled File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request with empty document Expected Result: Error is returned File: not relevant TestCaseID: Soap-ValidationRequest-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request with empty filename Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Request with not allowed signature policy characters Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-BdocValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Input random base64 string as document with bdoc document type Expected Result: Error is returned stating problem in document File: not relevant TestCaseID: Soap-BdocValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Verification of filename value (filename do not match the actual file) Expected Result: The same filename is returned as sent in the request File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-BdocValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Soap-BdocValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and ddoc) Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: Soap-BdocValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Bdoc file, not existing value in signaturePolicy Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-BdocValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Bdoc file, policy fiels should be case insensitive Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-DdocValidationRequest-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and xroad) Expected Result: Error is returned File: xroad-simple.asice TestCaseID: Soap-DdocValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Input random base64 string as document with ddoc document type Expected Result: Error is returned stating problem in document File: TestCaseID: Soap-DdocValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-DdocValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-DdocValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Soap-DdocValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Ddoc file, not existing value in signaturePolicy Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: Soap-DdocValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and xroad) Expected Result: Error is returned File: xroad-attachment.asice TestCaseID: Soap-PdfValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Input random base64 string as document with pdf document type Expected Result: Error is returned stating problem in document File: not relevant TestCaseID: Soap-PdfValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (pdf and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-PdfValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (pdf and ddoc) Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: Soap-PdfValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (pdf and xroad) Expected Result: Error is returned File: xroad-batchsignature.asice TestCaseID: Soap-PdfValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: PDF file, not existing value in signaturePolicy Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Soap-XroadValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: X-road file, not existing value in signaturePolicy Expected Result: Error is returned File: xroad-simple.asice TestCaseID: Soap-XroadValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (xroad and ddoc) Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: Soap-XroadValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (pdf and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-XroadValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf","title":"SoapValidationRequestIT.java"},{"location":"siva/appendix/test_cases/#soapxroadrequestheaderitjava","text":"Open file TestCaseID: XroadSoap-RequestVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/interface_description/#validation-request-interface Title: Soap headers are returned in response Expected Result: Same headers are in response as in request File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: XroadSoap-RequestVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/interface_description/#validation-request-interface Title: Soap headers are returned in correct order Expected Result: Same headers are in response as in request File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: XroadSoap-RequestVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/interface_description/#validation-request-interface Title: Soap headers are returned in error response Expected Result: Same headers are in response as in request File: not relevant TestCaseID: XroadSoap-GetDataFiles-RequestVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Soap headers are returned in response for Get Data Files Expected Result: Same headers are in response as in request File: susisevad1_3.ddoc TestCaseID: XroadSoap-GetDataFiles-RequestVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Soap headers are returned in correct order for Get Data Files Expected Result: Same headers are in response as in request File: susisevad1_3.ddoc TestCaseID: XroadSoap-GetDataFiles-RequestVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#data-files-request-interface Title: Soap headers are returned in error response for Get Data Files Expected Result: Same headers are in response as in request File: not relevant","title":"SoapXRoadRequestHeaderIT.java"},{"location":"siva/appendix/test_cases/#sample-application-integration-test","text":"TestCaseID: Sample-Application-Elements-1 TestType: Manual Requirement: Title: Upload of correct file type Expected Result: Its possible to upload the file by dropping in download area or by browsing a file File: \u0160u\u017elikud s\u00f5id \u00fche \u00f5una \u00e4ra.bdoc TestCaseID: Sample-Application-Elements-2 TestType: Manual Requirement: Title: Upload of invalid file type Expected Result: File is not validated, corresponding errors are returned File: XML.xml TestCaseID: Sample-Application-Elements-3 TestType: Manual Requirement: Title: Upload file larger than 10MB Expected Result: File is not validated File: hellopades-lta-no-ocsp.pdf TestCaseID: Sample-Application-Elements-4 TestType: Manual Requirement: Title: Page layout Expected Result: All elements are properly displayed and can be used with different window sizes File: not relevant TestCaseID: Sample-Application-Validation-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Validate container with valid signatures Expected Result: Validation report is displayed correctly both for JSON and SOAP File: \u0160u\u017elikud s\u00f5id \u00fche \u00f5una \u00e4ra.bdoc TestCaseID: Sample-Application-Validation-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Validate container with valid signatures Expected Result: Validation report is displayed correctly both for JSON and SOAP File: \u0160u\u017elikud s\u00f5id \u00fche \u00f5una \u00e4ra.bdoc TestCaseID: Sample-Application-Validation-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Validate container with invalid signatures Expected Result: Validation report is displayed correctly both for JSON and SOAP File: IB-3960_bdoc2.1_TSA_SignatureValue_altered.bdoc TestCaseID: Sample-Application-Validation-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Validate container with not passing policy (POLv2) Expected Result: Validation report is displayed correctly (correct policy is returned) both for JSON and SOAP File: soft-cert-signature.pdf","title":"Sample Application Integration Test"},{"location":"siva/appendix/test_cases/#x-road-soap-system-test","text":"TestCaseID: Xroad-Validate-Ddoc-1 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate valid Ddoc Expected Result: The document should return validation report with one valid signature File: DIGIDOC-XML1.3.ddoc TestCaseID: Xroad-Validate-Ddoc-2 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate invalid Ddoc Expected Result: The document should return validation report with no valid signature File: test-non-repu1.ddoc TestCaseID: Xroad-Validate-Ddoc-3 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Invalid Request Expected Result: Soap error should be returned File: not relevant TestCaseID: Xroad-Validate-Bdoc-1 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate valid Bdoc Expected Result: The document should return validation report with one valid signature File: \u0160u\u017elikud s\u00f5id \u00fche \u00f5una \u00e4ra.bdoc TestCaseID: Xroad-Validate-Bdoc-2 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate invalid Bdoc Expected Result: The document should return validation report with no valid signature File: TM-15_revoked.4.asice TestCaseID: Xroad-Validate-Bdoc-3 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Invalid Request Expected Result: Soap error should be returned File: not relevant TestCaseID: Xroad-Validate-Pdf-1 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate valid Pdf Expected Result: The document should return validation report with one valid signature File: pades-baseline-lta-live-aj.pdf TestCaseID: Xroad-Validate-Pdf-2 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate invalid Pdf Expected Result: The document should return validation report with no valid signature File: pades-baseline-t-live-aj.pdf TestCaseID: Xroad-Validate-Pdf-3 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Invalid Request Expected Result: Soap error should be returned File: not relevant TestCaseID: Xroad-Validate-Xroad-1 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate valid Xroad Expected Result: The document should return validation report with one valid signature File: xroad-batchsignature.asice TestCaseID: Xroad-Validate-Xroad-2 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate invalid Xroad Expected Result: The document should return validation report with no valid signature File: invalid-digest.asice TestCaseID: Xroad-Validate-Xroad-3 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Invalid Request Expected Result: Soap error should be returned File: not relevant TestCaseID: Xroad-GetDataFiles-DDOC-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Get data files from valid DDOC Expected Result: Data files should be returned File: DIGIDOC-XML1.3.ddoc TestCaseID: Xroad-GetDataFiles-DDOC-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Get data files from invalid DDOC Expected Result: Data files should be returned even if the signatures are not valid File: test-non-repu1.ddoc TestCaseID: Xroad-GetDataFiles-DDOC-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Invalid request Expected Result: Error is returned as the document type is not supported File: test-non-repu1.ddoc","title":"X-Road Soap System Test"},{"location":"siva/appendix/test_cases/#configuration-system-test","text":"TestCaseID: Configuration-Webapp-TSL-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: TSL update over network Expected Result: TSL is updated from configured path File: not relevant TestCaseID: Configuration-Webapp-TSL-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: TSL update disabled Expected Result: Local cashe is used File: not relevant TestCaseID: Configuration-Webapp-Keystore-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: Keystore change Expected Result: configured keystore is used File: not relevant TestCaseID: Configuration-Webapp-Scheduler-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: Update time is configured Expected Result: configured time is used File: not relevant TestCaseID: Configuration-Webapp-Xroad-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: X-Road validator service address is changed Expected Result: correct address is used File: not relevant TestCaseID: Configuration-Webapp-GA-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: Google Analytics is configured Expected Result: Data is transfered to GA File: not relevant TestCaseID: Configuration-Webapp-Policy-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: Configure policy for bdoc Expected Result: Configuration is used File: not relevant TestCaseID: Configuration-Webapp-Policy-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: Configure policy for pdf Expected Result: Configuration is used File: not relevant TestCaseID: Configuration-Webapp-Monitoring-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: Monitoring is enabled for webapp only Expected Result: Its possible to get \"heartbeat\" status with correct info File: not relevant TestCaseID: Configuration-Webapp-Monitoring-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: Monitoring is enabled for webapp and Xroad Service Expected Result: Its possible to get \"heartbeat\" status with correct info File: not relevant TestCaseID: Configuration-Webapp-Monitoring-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: Monitoring is enabled and custom links are configured Expected Result: Its possible to get \"heartbeat\" status with correct info File: not relevant TestCaseID: Configuration-XroadService-Monitoring-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: Monitoring is enabled Expected Result: Its possible to get \"heartbeat\" status with correct info for Xroad Service File: not relevant TestCaseID: Configuration-SampleApplication-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: Configuration of SiVa Web Service access Expected Result: Correct web service is used File: not relevant TestCaseID: Configuration-SampleApplication-Monitoring-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/systemintegrators_guide/ Title: Monitoring is enabled Expected Result: Its possible to get \"heartbeat\" status with correct info using basic authentication File: not relevant","title":"Configuration System Test"},{"location":"siva/appendix/validation_policy/","text":"SiVa Signature Validation Policy Introduction This signature validation policy document specifies signature validation rules used for validating signatures in SiVa digital signature validation service (hereinafter: Service). Versioning Different policy versions may be used by the service in the following conditions: different validation policies may be in use simultaneously, enabling the Service's user to choose the most suitable policy for a specific business context; validation policies are subject to change, i.e. there may be an update to a policy which causes the previous version to become no longer used (obsolete); for later reference, the validation report returned by the Service must indicate the specific version of validation policy that was used during validation process. for later reference, previous versions of validation policy documents should remain available for the Service's users. The following validation policy versions are supported in SiVa service: SiVA Signature Validation Policy - Version 1 (POLv1) SiVA Signature Validation Policy - Version 2 (POLv2) General principles of SiVa validation policies The validation policy documents describe validation rules for all digital signature formats that are supported in SiVa. All rules described for electronic signatures also apply for electronic seals and digital stamps. The set of signature validation constraints that are used by the Service are a combination of constraints defined in the Service itself and constraints that are implicitly defined in base components of the service, including: Validation rules defined by the standard or specification documents of the digital signature formats supported in SiVa (described in Signature format constraints section). Validation rules defined by base libraries used in SiVa that implement the supported digital signature formats, i.e. the validation constraints that are imposed by the source code implementation or configuration of the base libraries (described in Base libraries' constraints section). Note When no specific validation rule is set in the present document, the requirements and rules from the abovementioned implicit sources for validation requirements shall apply in their entirety. When specific requirements and rules are set in the present validation policy document, they shall prevail over the corresponding requirements set in the implicit resources. SiVA Signature Validation Policy - Version 1 (POLv1) Description Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. URL http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv1 POLv1 validation constraints The signature may be a Qualified Electronic Signature (QES), Advanced electronic Signature (AdES) or AdES supported by a Qualified Certificate (AdES/QC) taking account of the following requirements: Qualified Certificate (QC) requirement The signer\u2019s certificate may be a qualified or non-qualified certificate, as meant by the eIDAS regulation. The signer's certificate is considered acceptable by the validation process even if it is not possible to determine the certificate's QC compliance. SSCD/QSCD (Secure/Qualified Signature Creation Device) requirement Signer certificate may or may not comply with SSCD/QSCD criteria. The signer's certificate is considered acceptable by the validation process even if it is not possible to determine the certificate's SSCD/QSCD compliance. Constraints defined in the Common validation constraints (POLv1, POLv2) section SiVA Signature Validation Policy - Version 2 (POLv2) Description Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result. URL http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv2 POLv2 validation constraints The signature must be a Qualified Electronic Signature (QES), taking account of the following requirements: Qualified Certificate (QC) requirement The signer\u2019s certificate must be a qualified certificate, as meant by the eIDAS regulation. If Trusted Lists are used during signature validation then also the signer certificate\u2019s qualification information in the Trusted List is taken into account. SSCD/QSCD (Secure/Qualified Signature Creation Device) requirement Signer certificate must comply with SSCD/QSCD criteria. If Trusted Lists are used during signature validation then the also signer certificate\u2019s SSCD/QSCD qualification information in the Trusted List is taken into account. The signer's certificate is not considered acceptable by the validation process if it is not possible to determine the certificate's QC and SSCD/QSCD compliance, with the following exception: In case of DIGIDOC-XML 1.0...1.3 and the respective hashcode formats, it is assumed that the signer's certificate complies with QC and SSCD/QSCD requirements, if the certificate is issued by SK and if the nonRepudiation bit has been set in the certificate's Key Usage field. See also Certificate Profile documents of certificates issued by SK, ETSI EN 319 412-2 and ETSI EN 319 412-3 . Constraints defined in the Common validation constraints (POLv1, POLv2) section Common validation constraints (POLv1, POLv2) General constraints The validation result returned by SiVa determines whether a signature is technically valid and also conforms to a set of validation constraints that are specific to Estonian legislation and local practices of digital signing. The policy may not be suitable for signatures created in other territories. The validation result returned by SiVa comprises validation results of all the signatures in a single signature container (in case of detached signatures) or all signatures in a signed document (in case of enveloped or enveloping signatures). I.e. in case of multiple detached/enveloped/enveloping signatures, overall validation result correspoinding to the collection of signatures is not determined. Signature format constraints SiVa implicitly implements constraints that are specified in the specification documents of the signature formats supported by the Service: BDOC 2.1 ASiC-E/XAdES signatures X-Road ASiC-E/XAdES signatures PAdES signatures DIGIDOC-XML 1.0, 1.1, 1.2, 1.3 signatures DIGIDOC-XML 1.0, 1.1, 1.2 and 1.3 signatures in hashcode format Base libraries' constraints SiVa implicitly implements constraints that are imposed by the base software libraries that are used by the service. For more information, see the documentation and source code of the base libraries: JDigiDoc - is used to validate signatures in DIGIDOC-XML 1.0...1.3 format, including documents in hashcode form. DigiDoc4J - is used to validate ASiC-E/XAdES signatures that conform with BDOC 2.1 digital signature format Open-eID DSS fork - is used to validate PAdES signatures asicverifier - used for validating ASiC-E/XAdES signatures created in X-Road system. Baseline Profile constraints The signature must comply with Baseline Profile of the respective signature format: XAdES Baseline Profile PAdES Baseline Profile In case of Baseline LT-level signature with time-mark, the notation BASELINE_LT_TM is used. The following table describes supported Baseline Profile levels, according to signature formats: Signature format BASELINE_B_BES BASELINE_B_EPES BASELINE_T BASELINE_LT BASELINE_LT_TM BASELINE_LTA BDOC NOK NOK NOK OK OK OK X-Road signature (simple form) NOK NOK NOK OK NOK NOK X-Road signature (batch signature) OK OK NOK NOK NOK NOK PAdES NOK NOK NOK OK NOK OK DIGIDOC-XML 1.0...1.3 NOK NOK NOK NOK OK NOK DIGIDOC-XML 1.0...1.3 hashcode NOK NOK NOK NOK OK NOK Legend: OK - the respective Baseline Profile level is supported and acceptable. NOK - the respective Baseline Profile level is not supported or is considered insufficient for the signature format. X.509 validation constraints The signer certificate\u2019s Key Usage field must have nonRepudiation bit set (also referred to as contentCommitment). Cryptographic algorithm constraints Hash algorithm constraints: In case of BDOC and PAdES formats: when validating a signature where SHA-1 function has been used then a validation warning about weak digest method is returned. Asymmetric cryptographic algorithm contraints: RSA and ECC cryptographic algorithms are supported In case of BDOC and PAdES formats, the RSA key lenght must be at least 1024 bits and ECC key length at least 192 bits. Trust anchor constraints The signature must contain the certificate of the trust anchor and all certificates necessary for the signature validator to build a certification path up to the trust anchor. This applies to the signer\u2019s certificate and the certificates of trust service providers that have issued the time-stamp token and revocation data that are incorporated in the signature. Trust Anchors are: In case of BDOC, PAdES formats: EU Member State Trusted Lists . In case of DIGIDOC-XML 1.0...1.3 and respective hashcode formats: Estonian CA certificates issued by SK , defined in local configuration file. In case of X-Road ASiC-E signatures, SK issued KLASS3-SK 2010, and KLASS3-SK 2010 OCSP RESPONDER and SK TIMESTAMPING AUTHORITY certificates, defined in local configuration file. Revocation data constraints The signature must contain evidence record to confirm that certificate was valid at the time of signing. The evidence record of signer certificate must be in the form of an OCSP confirmation . No additional revocation data other than the data that was originally incorporated in the signature shall be requested during validation time. Checking revocation of certificates regarded as Trust Anchors: In case of DIGIDOC-XML 1.0...1.3 and X-Road formats: revocation of Trust Anchor certificates is not checked. In case of BDOC, PAdES formats: revocation of Trust Anchor certificates is checked on the basis of the data in Trusted Lists. Signer certificate's revocation freshness constraints In case of BDOC and DIGIDOC-XML 1.0...1.3 BASELINE_LT_TM signatures with time-mark: revocation data is always considered fresh as the revocation data is issued at the trusted signing time. In case of BDOC 2.1 BASELINE_LT and BASELINE_LTA signatures with signature time-stamp: revocation data freshness is checked according to the following rules: The revocation data must be issued after the signature time-stamp production time. If difference between signature time-stamp's production time (genTime field) and signer certificate OCSP confirmation\u2019s production time (producedAt field) is more than 15 minutes then a validation warning is returned. If difference between signature time-stamp's production time (genTime field) and signer certificate OCSP confirmation\u2019s production time (producedAt field) is more than 24 hours then the signature is considered invalid. In case of PAdES signatures, the default DSS base library's revocation freshness check is used. Trusted signing time constraints Trusted signing time, denoting the earliest time when it can be trusted (because proven by some Proof-of-Existence present in the signature) that a signature has existed, is determined as follows: In case of signature with time-mark (BASELINE_LT_TM level) - the producedAt value of the earliest valid time-mark (OCSP confirmation of the signer's certificate) in the signature. In case of signature with time-stamp (BASELINE_T, BASELINE_LT or BASELINE_LTA level) - the genTime value of the earliest valid signature time-stamp token in the signature. In case of basic signature (BASELINE_B_BES or BASELINE_B_EPES level) - the trusted signing time value cannot be determined as there is no Proof-of-Existence of the signature. BDOC/ASiC-E container spceific requirements File extension \".asice\", \".sce\" and \".bdoc\" file extensions are supported during signature validation. Only one signature shall be stored in one signatures.xml file. All signatures in the container must sign all of the data files. All data files in the container must be signed, i.e. all files in the container, except of \"mimetype\" file and the files in META-INF/ folder, must be signed. Two data files with the same name and same path shall not be allowed in the container as the signed data file must be uniquely identifiable in the container. To avoid conflicts in some operating system environments, file names shall be case insensitive. Only relative file paths are supported, for example \"META-INF/signatures.xml\" and \"document.txt\" instead of \"/META-INF/signatures.xml\" and \"/document.txt\". \"META-INF/manifest.xml\" file shall be conformant to OASIS Open Document Format version 1.0 or 1.2 .","title":"Appendix 1 - Validation Policy"},{"location":"siva/appendix/validation_policy/#siva-signature-validation-policy","text":"","title":"SiVa Signature Validation Policy"},{"location":"siva/appendix/validation_policy/#introduction","text":"This signature validation policy document specifies signature validation rules used for validating signatures in SiVa digital signature validation service (hereinafter: Service).","title":"Introduction"},{"location":"siva/appendix/validation_policy/#versioning","text":"Different policy versions may be used by the service in the following conditions: different validation policies may be in use simultaneously, enabling the Service's user to choose the most suitable policy for a specific business context; validation policies are subject to change, i.e. there may be an update to a policy which causes the previous version to become no longer used (obsolete); for later reference, the validation report returned by the Service must indicate the specific version of validation policy that was used during validation process. for later reference, previous versions of validation policy documents should remain available for the Service's users. The following validation policy versions are supported in SiVa service: SiVA Signature Validation Policy - Version 1 (POLv1) SiVA Signature Validation Policy - Version 2 (POLv2)","title":"Versioning"},{"location":"siva/appendix/validation_policy/#general-principles-of-siva-validation-policies","text":"The validation policy documents describe validation rules for all digital signature formats that are supported in SiVa. All rules described for electronic signatures also apply for electronic seals and digital stamps. The set of signature validation constraints that are used by the Service are a combination of constraints defined in the Service itself and constraints that are implicitly defined in base components of the service, including: Validation rules defined by the standard or specification documents of the digital signature formats supported in SiVa (described in Signature format constraints section). Validation rules defined by base libraries used in SiVa that implement the supported digital signature formats, i.e. the validation constraints that are imposed by the source code implementation or configuration of the base libraries (described in Base libraries' constraints section). Note When no specific validation rule is set in the present document, the requirements and rules from the abovementioned implicit sources for validation requirements shall apply in their entirety. When specific requirements and rules are set in the present validation policy document, they shall prevail over the corresponding requirements set in the implicit resources.","title":"General principles of SiVa validation policies"},{"location":"siva/appendix/validation_policy/#siva-signature-validation-policy-version-1-polv1","text":"","title":"SiVA Signature Validation Policy - Version 1 (POLv1)"},{"location":"siva/appendix/validation_policy/#description","text":"Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature.","title":"Description"},{"location":"siva/appendix/validation_policy/#url","text":"http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv1","title":"URL"},{"location":"siva/appendix/validation_policy/#polv1-validation-constraints","text":"The signature may be a Qualified Electronic Signature (QES), Advanced electronic Signature (AdES) or AdES supported by a Qualified Certificate (AdES/QC) taking account of the following requirements: Qualified Certificate (QC) requirement The signer\u2019s certificate may be a qualified or non-qualified certificate, as meant by the eIDAS regulation. The signer's certificate is considered acceptable by the validation process even if it is not possible to determine the certificate's QC compliance. SSCD/QSCD (Secure/Qualified Signature Creation Device) requirement Signer certificate may or may not comply with SSCD/QSCD criteria. The signer's certificate is considered acceptable by the validation process even if it is not possible to determine the certificate's SSCD/QSCD compliance. Constraints defined in the Common validation constraints (POLv1, POLv2) section","title":"POLv1 validation constraints"},{"location":"siva/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv2","text":"","title":"SiVA Signature Validation Policy - Version 2 (POLv2)"},{"location":"siva/appendix/validation_policy/#description_1","text":"Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result.","title":"Description"},{"location":"siva/appendix/validation_policy/#url_1","text":"http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv2","title":"URL"},{"location":"siva/appendix/validation_policy/#polv2-validation-constraints","text":"The signature must be a Qualified Electronic Signature (QES), taking account of the following requirements: Qualified Certificate (QC) requirement The signer\u2019s certificate must be a qualified certificate, as meant by the eIDAS regulation. If Trusted Lists are used during signature validation then also the signer certificate\u2019s qualification information in the Trusted List is taken into account. SSCD/QSCD (Secure/Qualified Signature Creation Device) requirement Signer certificate must comply with SSCD/QSCD criteria. If Trusted Lists are used during signature validation then the also signer certificate\u2019s SSCD/QSCD qualification information in the Trusted List is taken into account. The signer's certificate is not considered acceptable by the validation process if it is not possible to determine the certificate's QC and SSCD/QSCD compliance, with the following exception: In case of DIGIDOC-XML 1.0...1.3 and the respective hashcode formats, it is assumed that the signer's certificate complies with QC and SSCD/QSCD requirements, if the certificate is issued by SK and if the nonRepudiation bit has been set in the certificate's Key Usage field. See also Certificate Profile documents of certificates issued by SK, ETSI EN 319 412-2 and ETSI EN 319 412-3 . Constraints defined in the Common validation constraints (POLv1, POLv2) section","title":"POLv2 validation constraints"},{"location":"siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2","text":"","title":"Common validation constraints (POLv1, POLv2)"},{"location":"siva/appendix/validation_policy/#general-constraints","text":"The validation result returned by SiVa determines whether a signature is technically valid and also conforms to a set of validation constraints that are specific to Estonian legislation and local practices of digital signing. The policy may not be suitable for signatures created in other territories. The validation result returned by SiVa comprises validation results of all the signatures in a single signature container (in case of detached signatures) or all signatures in a signed document (in case of enveloped or enveloping signatures). I.e. in case of multiple detached/enveloped/enveloping signatures, overall validation result correspoinding to the collection of signatures is not determined.","title":"General constraints"},{"location":"siva/appendix/validation_policy/#signature-format-constraints","text":"SiVa implicitly implements constraints that are specified in the specification documents of the signature formats supported by the Service: BDOC 2.1 ASiC-E/XAdES signatures X-Road ASiC-E/XAdES signatures PAdES signatures DIGIDOC-XML 1.0, 1.1, 1.2, 1.3 signatures DIGIDOC-XML 1.0, 1.1, 1.2 and 1.3 signatures in hashcode format","title":"Signature format constraints"},{"location":"siva/appendix/validation_policy/#base-libraries-constraints","text":"SiVa implicitly implements constraints that are imposed by the base software libraries that are used by the service. For more information, see the documentation and source code of the base libraries: JDigiDoc - is used to validate signatures in DIGIDOC-XML 1.0...1.3 format, including documents in hashcode form. DigiDoc4J - is used to validate ASiC-E/XAdES signatures that conform with BDOC 2.1 digital signature format Open-eID DSS fork - is used to validate PAdES signatures asicverifier - used for validating ASiC-E/XAdES signatures created in X-Road system.","title":"Base libraries' constraints"},{"location":"siva/appendix/validation_policy/#baseline-profile-constraints","text":"The signature must comply with Baseline Profile of the respective signature format: XAdES Baseline Profile PAdES Baseline Profile In case of Baseline LT-level signature with time-mark, the notation BASELINE_LT_TM is used. The following table describes supported Baseline Profile levels, according to signature formats: Signature format BASELINE_B_BES BASELINE_B_EPES BASELINE_T BASELINE_LT BASELINE_LT_TM BASELINE_LTA BDOC NOK NOK NOK OK OK OK X-Road signature (simple form) NOK NOK NOK OK NOK NOK X-Road signature (batch signature) OK OK NOK NOK NOK NOK PAdES NOK NOK NOK OK NOK OK DIGIDOC-XML 1.0...1.3 NOK NOK NOK NOK OK NOK DIGIDOC-XML 1.0...1.3 hashcode NOK NOK NOK NOK OK NOK Legend: OK - the respective Baseline Profile level is supported and acceptable. NOK - the respective Baseline Profile level is not supported or is considered insufficient for the signature format.","title":"Baseline Profile constraints"},{"location":"siva/appendix/validation_policy/#x509-validation-constraints","text":"The signer certificate\u2019s Key Usage field must have nonRepudiation bit set (also referred to as contentCommitment).","title":"X.509 validation constraints"},{"location":"siva/appendix/validation_policy/#cryptographic-algorithm-constraints","text":"Hash algorithm constraints: In case of BDOC and PAdES formats: when validating a signature where SHA-1 function has been used then a validation warning about weak digest method is returned. Asymmetric cryptographic algorithm contraints: RSA and ECC cryptographic algorithms are supported In case of BDOC and PAdES formats, the RSA key lenght must be at least 1024 bits and ECC key length at least 192 bits.","title":"Cryptographic algorithm constraints"},{"location":"siva/appendix/validation_policy/#trust-anchor-constraints","text":"The signature must contain the certificate of the trust anchor and all certificates necessary for the signature validator to build a certification path up to the trust anchor. This applies to the signer\u2019s certificate and the certificates of trust service providers that have issued the time-stamp token and revocation data that are incorporated in the signature. Trust Anchors are: In case of BDOC, PAdES formats: EU Member State Trusted Lists . In case of DIGIDOC-XML 1.0...1.3 and respective hashcode formats: Estonian CA certificates issued by SK , defined in local configuration file. In case of X-Road ASiC-E signatures, SK issued KLASS3-SK 2010, and KLASS3-SK 2010 OCSP RESPONDER and SK TIMESTAMPING AUTHORITY certificates, defined in local configuration file.","title":"Trust anchor constraints"},{"location":"siva/appendix/validation_policy/#revocation-data-constraints","text":"The signature must contain evidence record to confirm that certificate was valid at the time of signing. The evidence record of signer certificate must be in the form of an OCSP confirmation . No additional revocation data other than the data that was originally incorporated in the signature shall be requested during validation time. Checking revocation of certificates regarded as Trust Anchors: In case of DIGIDOC-XML 1.0...1.3 and X-Road formats: revocation of Trust Anchor certificates is not checked. In case of BDOC, PAdES formats: revocation of Trust Anchor certificates is checked on the basis of the data in Trusted Lists.","title":"Revocation data constraints"},{"location":"siva/appendix/validation_policy/#signer-certificates-revocation-freshness-constraints","text":"In case of BDOC and DIGIDOC-XML 1.0...1.3 BASELINE_LT_TM signatures with time-mark: revocation data is always considered fresh as the revocation data is issued at the trusted signing time. In case of BDOC 2.1 BASELINE_LT and BASELINE_LTA signatures with signature time-stamp: revocation data freshness is checked according to the following rules: The revocation data must be issued after the signature time-stamp production time. If difference between signature time-stamp's production time (genTime field) and signer certificate OCSP confirmation\u2019s production time (producedAt field) is more than 15 minutes then a validation warning is returned. If difference between signature time-stamp's production time (genTime field) and signer certificate OCSP confirmation\u2019s production time (producedAt field) is more than 24 hours then the signature is considered invalid. In case of PAdES signatures, the default DSS base library's revocation freshness check is used.","title":"Signer certificate's revocation freshness constraints"},{"location":"siva/appendix/validation_policy/#trusted-signing-time-constraints","text":"Trusted signing time, denoting the earliest time when it can be trusted (because proven by some Proof-of-Existence present in the signature) that a signature has existed, is determined as follows: In case of signature with time-mark (BASELINE_LT_TM level) - the producedAt value of the earliest valid time-mark (OCSP confirmation of the signer's certificate) in the signature. In case of signature with time-stamp (BASELINE_T, BASELINE_LT or BASELINE_LTA level) - the genTime value of the earliest valid signature time-stamp token in the signature. In case of basic signature (BASELINE_B_BES or BASELINE_B_EPES level) - the trusted signing time value cannot be determined as there is no Proof-of-Existence of the signature.","title":"Trusted signing time constraints"},{"location":"siva/appendix/validation_policy/#bdocasic-e-container-spceific-requirements","text":"File extension \".asice\", \".sce\" and \".bdoc\" file extensions are supported during signature validation. Only one signature shall be stored in one signatures.xml file. All signatures in the container must sign all of the data files. All data files in the container must be signed, i.e. all files in the container, except of \"mimetype\" file and the files in META-INF/ folder, must be signed. Two data files with the same name and same path shall not be allowed in the container as the signed data file must be uniquely identifiable in the container. To avoid conflicts in some operating system environments, file names shall be case insensitive. Only relative file paths are supported, for example \"META-INF/signatures.xml\" and \"document.txt\" instead of \"/META-INF/signatures.xml\" and \"/document.txt\". \"META-INF/manifest.xml\" file shall be conformant to OASIS Open Document Format version 1.0 or 1.2 .","title":"BDOC/ASiC-E container spceific requirements"},{"location":"siva/appendix/wsdl/","text":"See also Interfaces for more information about the SOAP interfaces. Validation web service wsdl <wsdl:definitions xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:xrd= \"http://x-road.eu/xsd/xroad.xsd\" xmlns:wsdl= \"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" xmlns:soap= \"http://schemas.xmlsoap.org/wsdl/soap/\" name= \"SignatureValidationService\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" > <wsdl:types> <xs:schema xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:xrd= \"http://x-road.eu/xsd/xroad.xsd\" xmlns:wsdl= \"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" xmlns:soap= \"http://schemas.xmlsoap.org/wsdl/soap/\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" > <xs:import namespace= \"http://x-road.eu/xsd/xroad.xsd\" schemaLocation= \"http://x-road.eu/xsd/xroad.xsd\" /> <xs:element name= \"ValidateDocument\" type= \"tns:validateDocument\" /> <xs:element name= \"ValidateDocumentResponse\" type= \"tns:ValidateDocumentResponse\" /> <xs:element name= \"ValidationReport\" type= \"tns:simpleReport\" /> <xs:element name= \"ValidationRequest\" type= \"tns:soapValidationRequest\" /> <xs:complexType name= \"validateDocument\" > <xs:sequence> <xs:element ref= \"tns:ValidationRequest\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"soapValidationRequest\" > <xs:sequence> <xs:element name= \"Document\" type= \"xs:string\" /> <xs:element name= \"Filename\" type= \"xs:string\" /> <xs:element name= \"DocumentType\" type= \"tns:documentType\" /> <xs:element minOccurs= \"0\" name= \"SignaturePolicy\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"ValidateDocumentResponse\" > <xs:sequence> <xs:element minOccurs= \"0\" ref= \"tns:ValidationReport\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"simpleReport\" > <xs:sequence> <xs:element name= \"Policy\" type= \"tns:policy\" /> <xs:element name= \"ValidationTime\" type= \"xs:string\" /> <xs:element name= \"DocumentName\" type= \"xs:string\" /> <xs:element name= \"SignatureForm\" type= \"xs:string\" /> <xs:element name= \"Signatures\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"Signature\" type= \"tns:signatureValidationData\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"ValidSignaturesCount\" type= \"xs:int\" /> <xs:element name= \"SignaturesCount\" type= \"xs:int\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"policy\" > <xs:sequence> <xs:element name= \"PolicyDescription\" type= \"xs:string\" /> <xs:element name= \"PolicyName\" type= \"xs:string\" /> <xs:element name= \"PolicyUrl\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"signatureValidationData\" > <xs:sequence> <xs:element name= \"Id\" type= \"xs:string\" /> <xs:element name= \"SignatureFormat\" type= \"xs:string\" /> <xs:element name= \"SignatureLevel\" type= \"xs:string\" /> <xs:element name= \"SignedBy\" type= \"xs:string\" /> <xs:element name= \"Indication\" type= \"tns:indication\" /> <xs:element name= \"SubIndication\" type= \"xs:string\" /> <xs:element name= \"Errors\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"Error\" type= \"tns:error\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"SignatureScopes\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" name= \"SignatureScope\" type= \"tns:signatureScope\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"ClaimedSigningTime\" type= \"xs:string\" /> <xs:element name= \"Warnings\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"Warning\" type= \"tns:warning\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"Info\" type= \"tns:info\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"error\" > <xs:sequence> <xs:element name= \"Content\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"signatureScope\" > <xs:sequence> <xs:element name= \"Name\" type= \"xs:string\" /> <xs:element name= \"Scope\" type= \"xs:string\" /> <xs:element name= \"Content\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"warning\" > <xs:sequence> <xs:element name= \"Description\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"info\" > <xs:sequence> <xs:element minOccurs= \"0\" name= \"bestSignatureTime\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:simpleType name= \"documentType\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"PDF\" /> <xs:enumeration value= \"XROAD\" /> <xs:enumeration value= \"BDOC\" /> <xs:enumeration value= \"DDOC\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"indication\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"TOTAL-PASSED\" /> <xs:enumeration value= \"TOTAL-FAILED\" /> <xs:enumeration value= \"INDETERMINATE\" /> </xs:restriction> </xs:simpleType> </xs:schema> </wsdl:types> <wsdl:message name= \"ValidateDocument\" > <wsdl:part element= \"tns:ValidateDocument\" name= \"parameters\" /> </wsdl:message> <wsdl:message name= \"requestHeader\" > <wsdl:part element= \"xrd:client\" name= \"client\" /> <wsdl:part element= \"xrd:service\" name= \"service\" /> <wsdl:part element= \"xrd:id\" name= \"id\" /> <wsdl:part element= \"xrd:userId\" name= \"userId\" /> <wsdl:part element= \"xrd:issue\" name= \"issue\" /> <wsdl:part element= \"xrd:protocolVersion\" name= \"protocolVersion\" /> </wsdl:message> <wsdl:message name= \"ValidateDocumentResponse\" > <wsdl:part element= \"tns:ValidateDocumentResponse\" name= \"parameters\" /> </wsdl:message> <wsdl:portType name= \"ValidationWebService\" > <wsdl:operation name= \"ValidateDocument\" > <wsdl:input message= \"tns:ValidateDocument\" name= \"ValidateDocument\" /> <wsdl:output message= \"tns:ValidateDocumentResponse\" name= \"ValidateDocumentResponse\" /> </wsdl:operation> </wsdl:portType> <wsdl:binding name= \"SignatureValidationServiceSoapBinding\" type= \"tns:ValidationWebService\" > <soap:binding style= \"document\" transport= \"http://schemas.xmlsoap.org/soap/http\" /> <wsdl:operation name= \"ValidateDocument\" > <soap:operation soapAction= \"\" style= \"document\" /> <wsdl:input name= \"ValidateDocument\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:input> <wsdl:output name= \"ValidateDocumentResponse\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:output> </wsdl:operation> </wsdl:binding> <wsdl:binding name= \"ValidationWebServiceSoapBinding\" type= \"tns:ValidationWebService\" > <soap:binding style= \"document\" transport= \"http://schemas.xmlsoap.org/soap/http\" /> <wsdl:operation name= \"ValidateDocument\" > <soap:operation soapAction= \"\" style= \"document\" /> <wsdl:input name= \"ValidateDocument\" > <soap:body use= \"literal\" /> </wsdl:input> <wsdl:output name= \"ValidateDocumentResponse\" > <soap:body use= \"literal\" /> </wsdl:output> </wsdl:operation> </wsdl:binding> <wsdl:service name= \"SignatureValidationService\" > <wsdl:port binding= \"tns:SignatureValidationServiceSoapBinding\" name= \"ValidationWebServiceImplPort\" > <soap:address location= \"http://localhost:8080/soap/validationWebService\" /> </wsdl:port> </wsdl:service> <wsdl:service name= \"ValidationWebServiceService\" > <wsdl:port binding= \"tns:ValidationWebServiceSoapBinding\" name= \"ValidationWebServicePort\" > <soap:address location= \"http://localhost:8080/soap/validationWebService\" /> </wsdl:port> </wsdl:service> </wsdl:definitions> Data files web service wsdl <wsdl:definitions xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:xrd= \"http://x-road.eu/xsd/xroad.xsd\" xmlns:wsdl= \"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" xmlns:soap= \"http://schemas.xmlsoap.org/wsdl/soap/\" name= \"DataFilesService\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" > <wsdl:types> <xs:schema xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:xrd= \"http://x-road.eu/xsd/xroad.xsd\" xmlns:wsdl= \"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" xmlns:soap= \"http://schemas.xmlsoap.org/wsdl/soap/\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" > <xs:import namespace= \"http://x-road.eu/xsd/xroad.xsd\" schemaLocation= \"http://x-road.eu/xsd/xroad.xsd\" /> <xs:element name= \"GetDocumentDataFiles\" type= \"tns:getDocumentDataFiles\" /> <xs:element name= \"GetDocumentDataFilesResponse\" type= \"tns:GetDocumentDataFilesResponse\" /> <xs:element name= \"DataFilesReport\" type= \"tns:dataFilesReport\" /> <xs:element name= \"DataFilesRequest\" type= \"tns:soapDataFilesRequest\" /> <xs:complexType name= \"getDocumentDataFiles\" > <xs:sequence> <xs:element ref= \"tns:DataFilesRequest\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"soapDataFilesRequest\" > <xs:sequence> <xs:element name= \"Document\" type= \"xs:string\" /> <xs:element name= \"DocumentType\" type= \"tns:documentType\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"GetDocumentDataFilesResponse\" > <xs:sequence> <xs:element minOccurs= \"0\" ref= \"tns:DataFilesReport\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"dataFilesReport\" > <xs:sequence> <xs:element name= \"DataFiles\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"DataFile\" type= \"tns:dataFile\" /> </xs:sequence> </xs:complexType> </xs:element> </xs:sequence> </xs:complexType> <xs:complexType name= \"dataFile\" > <xs:sequence> <xs:element name= \"Base64\" type= \"xs:string\" /> <xs:element name= \"FileName\" type= \"xs:string\" /> <xs:element name= \"MimeType\" type= \"xs:string\" /> <xs:element name= \"Size\" type= \"xs:long\" /> </xs:sequence> </xs:complexType> <xs:simpleType name= \"documentType\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"PDF\" /> <xs:enumeration value= \"XROAD\" /> <xs:enumeration value= \"BDOC\" /> <xs:enumeration value= \"DDOC\" /> </xs:restriction> </xs:simpleType> </xs:schema> </wsdl:types> <wsdl:message name= \"GetDocumentDataFilesResponse\" > <wsdl:part element= \"tns:GetDocumentDataFilesResponse\" name= \"parameters\" /> </wsdl:message> <wsdl:message name= \"requestHeader\" > <wsdl:part element= \"xrd:client\" name= \"client\" /> <wsdl:part element= \"xrd:service\" name= \"service\" /> <wsdl:part element= \"xrd:id\" name= \"id\" /> <wsdl:part element= \"xrd:userId\" name= \"userId\" /> <wsdl:part element= \"xrd:issue\" name= \"issue\" /> <wsdl:part element= \"xrd:protocolVersion\" name= \"protocolVersion\" /> </wsdl:message> <wsdl:message name= \"GetDocumentDataFiles\" /> <wsdl:portType name= \"DataFilesWebService\" > <wsdl:operation name= \"GetDocumentDataFiles\" > <wsdl:input message= \"tns:GetDocumentDataFiles\" name= \"GetDocumentDataFiles\" > </wsdl:input> <wsdl:output message= \"tns:GetDocumentDataFilesResponse\" name= \"GetDocumentDataFilesResponse\" > </wsdl:output> </wsdl:operation> </wsdl:portType> <wsdl:binding name= \"DataFilesWebServiceSoapBinding\" type= \"tns:DataFilesWebService\" > <soap:binding style= \"document\" transport= \"http://schemas.xmlsoap.org/soap/http\" /> <wsdl:operation name= \"GetDocumentDataFiles\" > <soap:operation soapAction= \"\" style= \"document\" /> <wsdl:input name= \"GetDocumentDataFiles\" > <soap:body use= \"literal\" /> </wsdl:input> <wsdl:output name= \"GetDocumentDataFilesResponse\" > <soap:body use= \"literal\" /> </wsdl:output> </wsdl:operation> </wsdl:binding> <wsdl:binding name= \"DataFilesServiceSoapBinding\" type= \"tns:DataFilesWebService\" > <soap:binding style= \"document\" transport= \"http://schemas.xmlsoap.org/soap/http\" /> <wsdl:operation name= \"GetDocumentDataFiles\" > <soap:operation soapAction= \"\" style= \"document\" /> <wsdl:input name= \"GetDocumentDataFiles\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:input> <wsdl:output name= \"GetDocumentDataFilesResponse\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:output> </wsdl:operation> </wsdl:binding> <wsdl:service name= \"DataFilesWebServiceService\" > <wsdl:port binding= \"tns:DataFilesWebServiceSoapBinding\" name= \"DataFilesWebServicePort\" > <soap:address location= \"http://localhost:8080/soap/dataFilesWebService/getDocumentDataFiles\" /> </wsdl:port> </wsdl:service> <wsdl:service name= \"DataFilesWebService\" > <wsdl:port binding= \"tns:DataFilesServiceSoapBinding\" name= \"DataFilesWebServiceImplPort\" > <soap:address location= \"http://localhost:8080/soap/dataFilesWebService\" /> </wsdl:port> </wsdl:service> </wsdl:definitions>","title":"Appendix 3 - WSDL of SOAP Interface"},{"location":"siva/appendix/wsdl/#validation-web-service-wsdl","text":"<wsdl:definitions xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:xrd= \"http://x-road.eu/xsd/xroad.xsd\" xmlns:wsdl= \"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" xmlns:soap= \"http://schemas.xmlsoap.org/wsdl/soap/\" name= \"SignatureValidationService\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" > <wsdl:types> <xs:schema xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:xrd= \"http://x-road.eu/xsd/xroad.xsd\" xmlns:wsdl= \"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" xmlns:soap= \"http://schemas.xmlsoap.org/wsdl/soap/\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" > <xs:import namespace= \"http://x-road.eu/xsd/xroad.xsd\" schemaLocation= \"http://x-road.eu/xsd/xroad.xsd\" /> <xs:element name= \"ValidateDocument\" type= \"tns:validateDocument\" /> <xs:element name= \"ValidateDocumentResponse\" type= \"tns:ValidateDocumentResponse\" /> <xs:element name= \"ValidationReport\" type= \"tns:simpleReport\" /> <xs:element name= \"ValidationRequest\" type= \"tns:soapValidationRequest\" /> <xs:complexType name= \"validateDocument\" > <xs:sequence> <xs:element ref= \"tns:ValidationRequest\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"soapValidationRequest\" > <xs:sequence> <xs:element name= \"Document\" type= \"xs:string\" /> <xs:element name= \"Filename\" type= \"xs:string\" /> <xs:element name= \"DocumentType\" type= \"tns:documentType\" /> <xs:element minOccurs= \"0\" name= \"SignaturePolicy\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"ValidateDocumentResponse\" > <xs:sequence> <xs:element minOccurs= \"0\" ref= \"tns:ValidationReport\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"simpleReport\" > <xs:sequence> <xs:element name= \"Policy\" type= \"tns:policy\" /> <xs:element name= \"ValidationTime\" type= \"xs:string\" /> <xs:element name= \"DocumentName\" type= \"xs:string\" /> <xs:element name= \"SignatureForm\" type= \"xs:string\" /> <xs:element name= \"Signatures\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"Signature\" type= \"tns:signatureValidationData\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"ValidSignaturesCount\" type= \"xs:int\" /> <xs:element name= \"SignaturesCount\" type= \"xs:int\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"policy\" > <xs:sequence> <xs:element name= \"PolicyDescription\" type= \"xs:string\" /> <xs:element name= \"PolicyName\" type= \"xs:string\" /> <xs:element name= \"PolicyUrl\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"signatureValidationData\" > <xs:sequence> <xs:element name= \"Id\" type= \"xs:string\" /> <xs:element name= \"SignatureFormat\" type= \"xs:string\" /> <xs:element name= \"SignatureLevel\" type= \"xs:string\" /> <xs:element name= \"SignedBy\" type= \"xs:string\" /> <xs:element name= \"Indication\" type= \"tns:indication\" /> <xs:element name= \"SubIndication\" type= \"xs:string\" /> <xs:element name= \"Errors\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"Error\" type= \"tns:error\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"SignatureScopes\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" name= \"SignatureScope\" type= \"tns:signatureScope\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"ClaimedSigningTime\" type= \"xs:string\" /> <xs:element name= \"Warnings\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"Warning\" type= \"tns:warning\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"Info\" type= \"tns:info\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"error\" > <xs:sequence> <xs:element name= \"Content\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"signatureScope\" > <xs:sequence> <xs:element name= \"Name\" type= \"xs:string\" /> <xs:element name= \"Scope\" type= \"xs:string\" /> <xs:element name= \"Content\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"warning\" > <xs:sequence> <xs:element name= \"Description\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"info\" > <xs:sequence> <xs:element minOccurs= \"0\" name= \"bestSignatureTime\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:simpleType name= \"documentType\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"PDF\" /> <xs:enumeration value= \"XROAD\" /> <xs:enumeration value= \"BDOC\" /> <xs:enumeration value= \"DDOC\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"indication\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"TOTAL-PASSED\" /> <xs:enumeration value= \"TOTAL-FAILED\" /> <xs:enumeration value= \"INDETERMINATE\" /> </xs:restriction> </xs:simpleType> </xs:schema> </wsdl:types> <wsdl:message name= \"ValidateDocument\" > <wsdl:part element= \"tns:ValidateDocument\" name= \"parameters\" /> </wsdl:message> <wsdl:message name= \"requestHeader\" > <wsdl:part element= \"xrd:client\" name= \"client\" /> <wsdl:part element= \"xrd:service\" name= \"service\" /> <wsdl:part element= \"xrd:id\" name= \"id\" /> <wsdl:part element= \"xrd:userId\" name= \"userId\" /> <wsdl:part element= \"xrd:issue\" name= \"issue\" /> <wsdl:part element= \"xrd:protocolVersion\" name= \"protocolVersion\" /> </wsdl:message> <wsdl:message name= \"ValidateDocumentResponse\" > <wsdl:part element= \"tns:ValidateDocumentResponse\" name= \"parameters\" /> </wsdl:message> <wsdl:portType name= \"ValidationWebService\" > <wsdl:operation name= \"ValidateDocument\" > <wsdl:input message= \"tns:ValidateDocument\" name= \"ValidateDocument\" /> <wsdl:output message= \"tns:ValidateDocumentResponse\" name= \"ValidateDocumentResponse\" /> </wsdl:operation> </wsdl:portType> <wsdl:binding name= \"SignatureValidationServiceSoapBinding\" type= \"tns:ValidationWebService\" > <soap:binding style= \"document\" transport= \"http://schemas.xmlsoap.org/soap/http\" /> <wsdl:operation name= \"ValidateDocument\" > <soap:operation soapAction= \"\" style= \"document\" /> <wsdl:input name= \"ValidateDocument\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:input> <wsdl:output name= \"ValidateDocumentResponse\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:output> </wsdl:operation> </wsdl:binding> <wsdl:binding name= \"ValidationWebServiceSoapBinding\" type= \"tns:ValidationWebService\" > <soap:binding style= \"document\" transport= \"http://schemas.xmlsoap.org/soap/http\" /> <wsdl:operation name= \"ValidateDocument\" > <soap:operation soapAction= \"\" style= \"document\" /> <wsdl:input name= \"ValidateDocument\" > <soap:body use= \"literal\" /> </wsdl:input> <wsdl:output name= \"ValidateDocumentResponse\" > <soap:body use= \"literal\" /> </wsdl:output> </wsdl:operation> </wsdl:binding> <wsdl:service name= \"SignatureValidationService\" > <wsdl:port binding= \"tns:SignatureValidationServiceSoapBinding\" name= \"ValidationWebServiceImplPort\" > <soap:address location= \"http://localhost:8080/soap/validationWebService\" /> </wsdl:port> </wsdl:service> <wsdl:service name= \"ValidationWebServiceService\" > <wsdl:port binding= \"tns:ValidationWebServiceSoapBinding\" name= \"ValidationWebServicePort\" > <soap:address location= \"http://localhost:8080/soap/validationWebService\" /> </wsdl:port> </wsdl:service> </wsdl:definitions>","title":"Validation web service wsdl"},{"location":"siva/appendix/wsdl/#data-files-web-service-wsdl","text":"<wsdl:definitions xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:xrd= \"http://x-road.eu/xsd/xroad.xsd\" xmlns:wsdl= \"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" xmlns:soap= \"http://schemas.xmlsoap.org/wsdl/soap/\" name= \"DataFilesService\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" > <wsdl:types> <xs:schema xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:xrd= \"http://x-road.eu/xsd/xroad.xsd\" xmlns:wsdl= \"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" xmlns:soap= \"http://schemas.xmlsoap.org/wsdl/soap/\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" > <xs:import namespace= \"http://x-road.eu/xsd/xroad.xsd\" schemaLocation= \"http://x-road.eu/xsd/xroad.xsd\" /> <xs:element name= \"GetDocumentDataFiles\" type= \"tns:getDocumentDataFiles\" /> <xs:element name= \"GetDocumentDataFilesResponse\" type= \"tns:GetDocumentDataFilesResponse\" /> <xs:element name= \"DataFilesReport\" type= \"tns:dataFilesReport\" /> <xs:element name= \"DataFilesRequest\" type= \"tns:soapDataFilesRequest\" /> <xs:complexType name= \"getDocumentDataFiles\" > <xs:sequence> <xs:element ref= \"tns:DataFilesRequest\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"soapDataFilesRequest\" > <xs:sequence> <xs:element name= \"Document\" type= \"xs:string\" /> <xs:element name= \"DocumentType\" type= \"tns:documentType\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"GetDocumentDataFilesResponse\" > <xs:sequence> <xs:element minOccurs= \"0\" ref= \"tns:DataFilesReport\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"dataFilesReport\" > <xs:sequence> <xs:element name= \"DataFiles\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"DataFile\" type= \"tns:dataFile\" /> </xs:sequence> </xs:complexType> </xs:element> </xs:sequence> </xs:complexType> <xs:complexType name= \"dataFile\" > <xs:sequence> <xs:element name= \"Base64\" type= \"xs:string\" /> <xs:element name= \"FileName\" type= \"xs:string\" /> <xs:element name= \"MimeType\" type= \"xs:string\" /> <xs:element name= \"Size\" type= \"xs:long\" /> </xs:sequence> </xs:complexType> <xs:simpleType name= \"documentType\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"PDF\" /> <xs:enumeration value= \"XROAD\" /> <xs:enumeration value= \"BDOC\" /> <xs:enumeration value= \"DDOC\" /> </xs:restriction> </xs:simpleType> </xs:schema> </wsdl:types> <wsdl:message name= \"GetDocumentDataFilesResponse\" > <wsdl:part element= \"tns:GetDocumentDataFilesResponse\" name= \"parameters\" /> </wsdl:message> <wsdl:message name= \"requestHeader\" > <wsdl:part element= \"xrd:client\" name= \"client\" /> <wsdl:part element= \"xrd:service\" name= \"service\" /> <wsdl:part element= \"xrd:id\" name= \"id\" /> <wsdl:part element= \"xrd:userId\" name= \"userId\" /> <wsdl:part element= \"xrd:issue\" name= \"issue\" /> <wsdl:part element= \"xrd:protocolVersion\" name= \"protocolVersion\" /> </wsdl:message> <wsdl:message name= \"GetDocumentDataFiles\" /> <wsdl:portType name= \"DataFilesWebService\" > <wsdl:operation name= \"GetDocumentDataFiles\" > <wsdl:input message= \"tns:GetDocumentDataFiles\" name= \"GetDocumentDataFiles\" > </wsdl:input> <wsdl:output message= \"tns:GetDocumentDataFilesResponse\" name= \"GetDocumentDataFilesResponse\" > </wsdl:output> </wsdl:operation> </wsdl:portType> <wsdl:binding name= \"DataFilesWebServiceSoapBinding\" type= \"tns:DataFilesWebService\" > <soap:binding style= \"document\" transport= \"http://schemas.xmlsoap.org/soap/http\" /> <wsdl:operation name= \"GetDocumentDataFiles\" > <soap:operation soapAction= \"\" style= \"document\" /> <wsdl:input name= \"GetDocumentDataFiles\" > <soap:body use= \"literal\" /> </wsdl:input> <wsdl:output name= \"GetDocumentDataFilesResponse\" > <soap:body use= \"literal\" /> </wsdl:output> </wsdl:operation> </wsdl:binding> <wsdl:binding name= \"DataFilesServiceSoapBinding\" type= \"tns:DataFilesWebService\" > <soap:binding style= \"document\" transport= \"http://schemas.xmlsoap.org/soap/http\" /> <wsdl:operation name= \"GetDocumentDataFiles\" > <soap:operation soapAction= \"\" style= \"document\" /> <wsdl:input name= \"GetDocumentDataFiles\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:input> <wsdl:output name= \"GetDocumentDataFilesResponse\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:output> </wsdl:operation> </wsdl:binding> <wsdl:service name= \"DataFilesWebServiceService\" > <wsdl:port binding= \"tns:DataFilesWebServiceSoapBinding\" name= \"DataFilesWebServicePort\" > <soap:address location= \"http://localhost:8080/soap/dataFilesWebService/getDocumentDataFiles\" /> </wsdl:port> </wsdl:service> <wsdl:service name= \"DataFilesWebService\" > <wsdl:port binding= \"tns:DataFilesServiceSoapBinding\" name= \"DataFilesWebServiceImplPort\" > <soap:address location= \"http://localhost:8080/soap/dataFilesWebService\" /> </wsdl:port> </wsdl:service> </wsdl:definitions>","title":"Data files web service wsdl"},{"location":"siva/v2/deployment/","text":"The deployment view of the architecture describes the various physical nodes in the most typical configuration for SiVa service provider. Nodes In the following section, a description of each network node element is described in detail. Node Setup description Load balancer server Load balancer distributes traffic between SiVa server nodes when there is more than one Siva server instance running. SiVa does not set any specific requirements for load balancer. As an example, the nginx reverse proxy is used. Siva server Two separate services are set up to run on SiVa server: the SiVa webapp itself and the X-road validation webapp , to provide X-road support SiVa webapp SiVa web appliction is executable Spring Boot JAR file. This means all the dependencies and servlet containers are packaged inside single JAR file. The JAR file can be placed anywhere in server and the JAR must be marked executable if its not already. There also should be separate user created to run executalbe JAR as Linux service. Read more about running Spring Boot applications as Linux system service X-road validation webapp SiVa X-Road validation service is also Spring Boot executable JAR application and also should be installed as Linux service. X-Road validation service communicates with SiVa web application over HTTP and default port is 8081 Note that X-Road separate installation is required to avoid BouncyCastle library version conflicts and class loader issues. X-road security server A standard X-road security server setup. The SiVa validation service wsdl has to be registered to provide service to other organisations using XRoad infrastructure. Setting up XRoad Security server is out of scope for SiVa documentaton (see the official installation instructions ). Demo server Demo server hosts the Demo webapp provided within SiVa project as a reference client implementation. Demo webapp - single Java web application that provides a simple form to upload and validate a signed file in Siva webapp. Demo webapp serves as a tool for evaluating and testing the validation service. Horizontal scaling Neither the Siva webapp , X-road validation webapp , nor Demo wbapp persist their state in sessions between requests. Therefore it is possible to install multiple instances of these services behind respective load balancers.","title":"10.5.1 Deployment model"},{"location":"siva/v2/deployment/#nodes","text":"In the following section, a description of each network node element is described in detail. Node Setup description Load balancer server Load balancer distributes traffic between SiVa server nodes when there is more than one Siva server instance running. SiVa does not set any specific requirements for load balancer. As an example, the nginx reverse proxy is used. Siva server Two separate services are set up to run on SiVa server: the SiVa webapp itself and the X-road validation webapp , to provide X-road support SiVa webapp SiVa web appliction is executable Spring Boot JAR file. This means all the dependencies and servlet containers are packaged inside single JAR file. The JAR file can be placed anywhere in server and the JAR must be marked executable if its not already. There also should be separate user created to run executalbe JAR as Linux service. Read more about running Spring Boot applications as Linux system service X-road validation webapp SiVa X-Road validation service is also Spring Boot executable JAR application and also should be installed as Linux service. X-Road validation service communicates with SiVa web application over HTTP and default port is 8081 Note that X-Road separate installation is required to avoid BouncyCastle library version conflicts and class loader issues. X-road security server A standard X-road security server setup. The SiVa validation service wsdl has to be registered to provide service to other organisations using XRoad infrastructure. Setting up XRoad Security server is out of scope for SiVa documentaton (see the official installation instructions ). Demo server Demo server hosts the Demo webapp provided within SiVa project as a reference client implementation. Demo webapp - single Java web application that provides a simple form to upload and validate a signed file in Siva webapp. Demo webapp serves as a tool for evaluating and testing the validation service.","title":"Nodes"},{"location":"siva/v2/deployment/#horizontal-scaling","text":"Neither the Siva webapp , X-road validation webapp , nor Demo wbapp persist their state in sessions between requests. Therefore it is possible to install multiple instances of these services behind respective load balancers.","title":"Horizontal scaling"},{"location":"siva/v2/interfaces/","text":"In this section the SiVa signature validation service's external interfaces that are provided for the service's clients are described. For information of internal components and their interfaces, please refer to Structure and activities . SiVa service provides REST JSON and SOAP interfaces that enable the service users to: request validation of signatures in a digitally signed document (i.e. signature container like BDOC/ASiC-E or PDF); receive a response with the validation result of all the signatures in the document. SiVa service SOAP interface supports X-Road v6. However, it is optional whether to integrate SiVa service using X-Road or using \"plain\" SOAP interface. This document only describes the SiVa service part of the interface, for the X-Road specifics visit Riigi Infos\u00fcsteemi Amet webpage . In the following subsections, the SiVa validation request and response interfaces are described in detail. Validation request interface REST JSON Endpoint POST https://<server url>/validate SOAP Endpoint POST https://<server url>/soap/validationWebService/validateDocument SOAP WSDL POST https://<server url>/soap/validationWebService/validateDocument?wsdl Validation request parameters Validation request parameters for JSON and SOAP interfaces are described in the table below. Data types of SOAP parameters are defined in the SiVa WSDL document . JSON parameter SOAP parameter Mandatory JSON data type Description document Document + String Base64 encoded string of digitally signed document to be validated filename Filename + String File name of the digitally signed document (i.e. sample.bdoc) documentType DocumentType + String Format of the digitally signed document. This value determines the validation service type that will be used for validation. Possible values: * BDOC - for documents in BDOC (ASiC-E/XAdES) format. Both time-stamp (TS) and time-mark (TM) profiles are supported here. * DDOC - for documents in DIGIDOC-XML format, supported versions are DIGIDOC-XML 1.0 (also known as SK-XML 1.0) to DIGIDOC-XML 1.3. In case of DIGIDOC_XML documents, also the hashcode format is supported (see DigiDocService Specification for more information). * PDF - for signed PDF document in PAdES format. * XROAD - for documents created in the X-Road information system, see also specification document of the signature format. signaturePolicy SignaturePolicy - String Can be used to change the default signature validation policy that is used by the service. See also SiVa Validation Policy for more information. Possible values: * POLv1 - the default policy. Signatures with all legal levels are accepted (i.e. QES, AdES and AdESqc, according to Regulation (EU) No 910/2014.) * POLv2 - only signatures with QES legal level (according to Regulation (EU) No 910/2014) are accepted. Sample JSON request { \"filename\" : \"sample.ddoc\" , \"documentType\" : \"DDOC\" , \"document\" : \"PD94bWwgdmVyc2lvbj0iMS4....\" , \"signaturePolicy\" : \"POLv1\" } Sample SOAP request <?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <ns2:ValidateDocument xmlns:ns2= \"http://soap.webapp.siva.openeid.ee/\" > <ns2:ValidationRequest> <Document> PD94bWwgdmVyc2lvbj0iMS4.... </Document> <Filename> sample.ddoc </Filename> <DocumentType> DDOC </DocumentType> <SignaturePolicy> POLv1 </SignaturePolicy> </ns2:ValidationRequest> </ns2:ValidateDocument> </soap:Body> </soap:Envelope> Validation response interface Validation response parameters (successful scenario) The signature validation report (i.e. the validation response) for JSON and SOAP interfaces is described in the table below. Data types of SOAP parameters are defined in the SiVa WSDL document . JSON parameter SOAP parameter JSON data type Description policy Policy Object Object containing information of the SiVa signature validation policy that was used for validation policy.policyName Policy.PolicyName String Name of the validation policy policy. policyDescription Policy. PolicyDescription String Short description of the validation policy policy.policyUrl Policy.PolicyUrl String URL where the signature validation policy document can be downloaded. The validation policy document shall include information about validation of all the document formats, including the different validation policies that are used in case of different file formats and base libraries. signaturesCount SignaturesCount Number Number of signatures found inside digitally signed file validSignaturesCount ValidSignaturesCount Number Signatures count that have validated to TOTAL-PASSED . See also Signature.Indication field. validationTime ValidationTime Date Time of validating the signature by the service validationWarnings ValidationWarnings Array Block of SiVa validation warnings that do not affect the overall validation result and applicable only to BDOC/ASiC-E type containers. Known warning situations: container includes unsigned files, manifest validation warnings. filename DocumentName String Digitally signed document's file name signatureForm SignatureForm String Format (and optionally version) of the digitally signed document container. In case of documents in DIGIDOC-XML (DDOC) format, the \"hashcode\" suffix is used to denote that the container was validated in hashcode mode , i.e. without original data files. Possible values: * DIGIDOC_XML_1.0 * DIGIDOC_XML_1.0_hashcode * DIGIDOC_XML_1.1 * DIGIDOC_XML_1.1_hashcode * DIGIDOC_XML_1.2 * DIGIDOC_XML_1.2_hashcode * DIGIDOC_XML_1.3 * DIGIDOC_XML_1.3_hashcode * PAdES - used in case of signed PDF document * ASiC_E - used in case of all BDOC documents and X-Road simple containers that don't use batch time-stamping (see specification document ) * ASiC_E_batchsignature - used in case of X-Road containers with batch signature (see specification document ) signatures Signatures Array Collection of signatures found in digitally signed document signatures[0] Signature Object Signature information object signatures[0]. claimedSigningTime Signature. ClaimedSigningTime Date Claimed signing time, i.e. signer's computer time during signature creation signatures[0].id Signature.Id String Signature ID attribute signatures[0].indication Signature.Indication String Overall result of the signature's validation process, according to ETSI EN 319 102-1 \"Table 5: Status indications of the signature validation process\". Note that the validation results of different signatures in one signed document (signature container) may vary. See also validSignaturesCount and SignaturesCount fields. Possible values: * TOTAL-PASSED * TOTAL-FAILED * INDETERMINATE signatures[0]. subIndication Signature. SubIndication String Additional subindication in case of failed or indeterminate validation result, according to ETSI EN 319 102-1 \"Table 6: Validation Report Structure and Semantics\" signatures[0].errors Signature.Errors Array Information about validation error(s), array of error messages. signatures[0].errors[0]. content Signature.Errors. Error.Content String Error message, as returned by the base library that was used for signature validation. signatures[0].info Signature.Info Object Object containing trusted signing time information. signatures[0].info. bestSignatureTime Signature.Info. BestSignatureTime Date Time value that is regarded as trusted signing time, denoting the earliest time when it can be trusted by the validation application (because proven by some Proof-of-Existence present in the signature) that a signature has existed. The source of the value depends on the signature profile (see also SignatureFormat parameter): - Signature with time-mark (LT_TM level) - the producedAt value of the earliest valid time-mark (OCSP confirmation of the signer's certificate) in the signature. - Signature with time-stamp (LT or LTA level) - the genTime value of the earliest valid signature time-stamp token in the signature. - Signature with BES or EPES level - the value is empty, i.e. there is no trusted signing time value available. signatures[0]. signatureFormat Signature. SignatureFormat String Format and profile (according to Baseline Profile) of the signature. See XAdES Baseline Profile and PAdES Baseline Profile for detailed description of the Baseline Profile levels. Levels that are accepted in SiVa validation policy are described in SiVa signature validation policy Possible values: * XAdES_BASELINE_B_BES * XAdES_BASELINE_B_EPES * XAdES_BASELINE_T * XAdES_BASELINE_LT - long-term level XAdES signature where time-stamp is used as a assertion of trusted signing time * XAdES_BASELINE_LT_TM - long-term level XAdES signature where time-mark is used as a assertion of trusted signing time. Used in case of BDOC signatures with time-mark profile and DIGIDOC-XML (DDOC) signatures. * XAdES_BASELINE_LTA * PAdES_BASELINE_B_BES * PAdES_BASELINE_B_EPES * PAdES_BASELINE_T * PAdES_BASELINE_LT * PAdES_BASELINE_LTA signatures[0]. signatureLevel Signature. SignatureLevel String Legal level of the signature, according to Regulation (EU) No 910/2014. - In case of BDOC and PAdES formats: indication whether the signature is Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES). - In case of DIGIDOC-XML 1.0..1.3 formats, empty value is used as the signature level is not checked by the JDigiDoc base library that is used for validation. However, the signatures can be indirectly regarded as QES level signatures, see also SiVa Validation Policy signatures[0].signedBy Signature.SignedBy String Signers name and identification number, i.e. value of the CN field of the signer's certificate signatures[0]. signatureScopes Signature. SignatureScopes Array Contains information of the original data that is covered by the signature. signatures[0]. signatureScopes[0]. name Signature. SignatureScopes. SignatureScope.Name String Name of the signature scope. - In case of XAdES signature: name of the data file that is signed. - In case of PAdES signature: PDF version that is covered by the signature, e.g. 'PDF previous version #1' signatures[0]. signatureScopes[0]. scope Signature. SignatureScopes. SignatureScope. Scope String Type of the signature scope. - In case of XAdES signature: 'FullSignatureScope' - In case of PAdES signature: 'PdfByteRangeSignatureScope' signatures[0]. signatureScopes[0]. content Signature. SignatureScopes. SignatureScope. Content String - In case of XAdES signatures: 'Full document', indicating that the whole document is covered by the signature. - In case of PAdES signatures: the byte range that is covered by the signature. signatures[0].warnings Signature.Warnings Array Block of validation warnings that do not affect the overall validation result. Known warning situations (according to http://id.ee/public/SK-JDD-PRG-GUIDE.pdf, chap. 5.2.4.1): - BDOC (ASiC-E) and PAdES: weaker digest method (SHA-1) has been used than recommended when calculating either Reference or Signature element\u2019s digest value; - DIGIDOC-XML 1.0-1.3: DataFile element\u2019s xmlns attribute is missing; - DIGIDOC-XML 1.0-1.3: IssuerSerial/X509IssuerName and/or IssuerSerial/X509IssuerSerial element\u2019s xmlns attribute is missing. signatures[0].warnings[0]. description Signature.Warnings. Warning.Description String Warning description, as retuned by the base library that was used for validation. Sample JSON response (successful scenario) { \"policy\" : { \"policyName\" : \"POLv2\" , \"policyDescription\" : \"Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result.\" , \"policyUrl\" : \"http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv2\" }, \"signaturesCount\" : 1 , \"validSignaturesCount\" : 1 , \"validationTime\" : \"2016-07-28T14:41:45Z\" , \"documentName\" : \"sample.bdoc\" , \"validationWarnings\" : [ { \"content\" : \"Manifest file has an entry for file document_3.xml with mimetype application/octet-stream but the signature file for signature S0 does not have an entry for this file\" }, { \"content\" : \"Signature SOLOVEI,JULIA,47711040261 has unsigned files: document_3.xml\" } ], \"signatures\" : [ { \"claimedSigningTime\" : \"2016-05-11T10:17:57Z\" , \"errors\" : [], \"id\" : \"S0\" , \"indication\" : \"TOTAL-PASSED\" , \"info\" : { \"bestSignatureTime\" : \"2016-05-11T10:18:06Z\" }, \"signatureFormat\" : \"XAdES_BASELINE_LT_TM\" , \"signatureLevel\" : \"QES\" , \"signatureScopes\" : [], \"signedBy\" : \"NURM,AARE,38211015222\" , \"subIndication\" : \"\" , \"warnings\" : [] } ] } Sample SOAP response (successful scenario) <?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <ns2:ValidateDocumentResponse xmlns:ns2= \"http://soap.webapp.siva.openeid.ee/\" xmlns:ns3= \"http://x-road.eu/xsd/identifiers\" xmlns:ns4= \"http://x-road.eu/xsd/xroad.xsd\" > <ns2:ValidationReport> <Policy> <PolicyDescription> Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. </PolicyDescription> <PolicyName> POLv1 </PolicyName> <PolicyUrl> http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv1 </PolicyUrl> </Policy> <ValidationTime> 2016-09-27T06:42:33Z </ValidationTime> <ValidationWarnings> <ValidationWarning> <Content> Manifest file has an entry for file document_3.xml with mimetype application/octet-stream but the signature file for signature S0 does not have an entry for this file </Content> </ValidationWarning> <ValidationWarning> <Content> Signature SOLOVEI,JULIA,47711040261 has unsigned files: document_3.xml </Content> </ValidationWarning> </ValidationWarnings> <DocumentName> Valid_ID_sig.bdoc </DocumentName> <SignatureForm> ASiC_E </SignatureForm> <Signatures> <Signature> <Id> S0 </Id> <SignatureFormat> XAdES_BASELINE_LT_TM </SignatureFormat> <SignatureLevel> QES </SignatureLevel> <SignedBy> NURM,AARE,38211015222 </SignedBy> <Indication> TOTAL-PASSED </Indication> <SubIndication/> <Errors/> <SignatureScopes> <SignatureScope> <Name> Proov.txt </Name> <Scope> FullSignatureScope </Scope> <Content> Full document </Content> </SignatureScope> </SignatureScopes> <ClaimedSigningTime> 2016-05-12T10:09:09Z </ClaimedSigningTime> <Warnings/> <Info> <bestSignatureTime> 2016-05-12T10:09:20Z </bestSignatureTime> </Info> </Signature> </Signatures> <ValidSignaturesCount> 1 </ValidSignaturesCount> <SignaturesCount> 1 </SignaturesCount> </ns2:ValidationReport> </ns2:ValidateDocumentResponse> </soap:Body> </soap:Envelope> Sample JSON response (error situation) { \"requestErrors\" : [{ \"message\" : \"Document malformed or not matching documentType\" , \"key\" : \"document\" }]} Sample SOAP response (error situation) <?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <soap:Fault> <faultcode> soap:Server </faultcode> <faultstring> Document malformed or not matching documentType </faultstring> </soap:Fault> </soap:Body> </soap:Envelope> Data files request interface REST JSON Endpoint POST https://<server url>/getDataFiles SOAP Endpoint POST https://<server url>/soap/dataFilesWebService/getDocumentDataFiles SOAP WSDL POST https://<server url>/soap/dataFilesWebService/getDocumentDataFiles?wsdl Data files request parameters Data files request parameters for JSON and SOAP interfaces are described in the table below. Data types of SOAP parameters are defined in the SiVa WSDL document . JSON parameter SOAP parameter Mandatory JSON data type Description document Document + String Base64 encoded string of digitally signed DDOC document documentType DocumentType + String Format of the digitally signed document. Possible values: * DDOC - for documents in DIGIDOC-XML format, supported versions are DIGIDOC-XML 1.0 (also known as SK-XML 1.0) to DIGIDOC-XML 1.3. Currently only DDOC file format is supported for this operation Sample JSON request { \"documentType\" : \"DDOC\" , \"document\" : \"PD94bWwgdmVyc2lvbj0iMS4....\" } Sample SOAP request <soapenv:Envelope xmlns:soapenv= \"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:soap= \"http://soap.webapp.siva.openeid.ee/\" > <soapenv:Header/> <soapenv:Body> <soap:GetDocumentDataFiles> <soap:DataFilesRequest> <Document> PD94bWwgdmVyc2lvbj0iMS4wI... </Document> <DocumentType> DDOC </DocumentType> </soap:DataFilesRequest> </soap:GetDocumentDataFiles> </soapenv:Body> </soapenv:Envelope> Data files response interface Data files response parameters (successful scenario) The data file extraction report (i.e. the data files response) for JSON and SOAP interfaces is described in the table below. Data types of SOAP parameters are defined in the SiVa WSDL document . SiVa returns all data files as they are extracted by JDigiDoc library in an as is form. No extra operations or validations are done. JSON parameter SOAP parameter JSON data type Description dataFiles DataFiles Array Collection of data files found in digitally signed document dataFiles[0] DataFile Object Extracted data file object dataFiles[0].fileName DataFile.FileName String File name of the extracted data file dataFiles[0].size DataFile.Size Long Extracted data file size in bytes dataFiles[0].base64 DataFile.Base64 String Base64 encoded string of extracted data file dataFiles[0].mimeType DataFile.MimeType String MIME type of the extracted data file Sample JSON response (successful scenario) { \"dataFiles\" : [{ \"fileName\" : \"Glitter-rock-4_gallery.jpg\" , \"size\" : 41114 , \"base64\" : \"/9j/4AAQSkZJ...\" , \"mimeType\" : \"application/octet-stream\" }] } Sample SOAP response (successful scenario) <?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <ns2:GetDocumentDataFilesResponse xmlns:ns2= \"http://soap.webapp.siva.openeid.ee/\" xmlns:ns3= \"http://x-road.eu/xsd/identifiers\" xmlns:ns4= \"http://x-road.eu/xsd/xroad.xsd\" > <ns2:DataFilesReport> <DataFiles> <DataFile> <Base64> UCgUCgUCgUCgUCgUCgUCgUCgUCgUCgUCgUH... </Base64> <FileName> Glitter-rock-4_gallery.jpg </FileName> <MimeType> application/octet-stream </MimeType> <Size> 41114 </Size> </DataFile> </DataFiles> </ns2:DataFilesReport> </ns2:GetDocumentDataFilesResponse> </soap:Body> </soap:Envelope> Sample JSON response (error situation) { \"requestErrors\" : [{ \"message\" : \"Invalid document type. Can only return data files for DDOC type containers.\" , \"key\" : \"documentType\" }]} Sample SOAP response (error situation) <?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <soap:Fault> <faultcode> soap:Client </faultcode> <faultstring> Invalid document type. Can only return data files for DDOC type containers. </faultstring> </soap:Fault> </soap:Body> </soap:Envelope> Service health monitoring SiVa webapps provide an interface for external monitoring tools (to periodically check the generic service health status). The request The monitoring endpoint is accessible via HTTP GET at /monitoring/health or /monitoring/health.json url. Sample request: GET https://<server url>/monitoring/health The response As a response, a JSON object is returned with the following information: Field Description status General status of the webapp. Possible values: DOWN - when some of the dependent indicators status are down (ie when link{number}.status is DOWN, the overall service status is DOWN) UP - the default value. health.status Status of current webapp - constant value UP health.webappName The artifact name of the webapp. Taken from the MANIFEST.MF file (inside the jar/war file). health.version The release version fo the webapp. Taken from the MANIFEST.MF (inside the jar/war file). health.buildTime Build date and time (format yyyy-MM-dd'T'HH:mm:ss'Z') of the webapp. Taken from the MANIFEST.MF (inside the jar/war file). health.startTime Webapp startup date and time (format yyyy-MM-dd'T'HH:mm:ss'Z') health.currentTime Current server date and time (format yyyy-MM-dd'T'HH:mm:ss'Z') link{number}.status (OPTIONAL) Represents the status of a link to the external system that the webapp depends on. DOWN when the webapp does not respond (within a specified timeout limit - default 10 seconds) or the response is in invalid format (default Spring boot actuator /health endpoint format is expected). UP if the service responds with HTTP status code 200 and returns a valid JSON object with status \"UP\" link{number}.name (OPTIONAL) Descriptive name for the link to the external system Sample response: { \"status\" : \"UP\" , \"health\" :{ \"status\" : \"UP\" , \"webappName\" : \"siva-sample-application\" , \"version\" : \"3.1.0\" , \"buildTime\" : \"2016-10-21T15:56:21Z\" , \"startTime\" : \"2016-10-21T15:57:48Z\" , \"currentTime\" : \"2016-10-21T15:58:39Z\" }, \"link1\" :{ \"status\" : \"UP\" , \"name\" : \"sivaService\" } }","title":"10.4. INTERFACES"},{"location":"siva/v2/interfaces/#validation-request-interface","text":"REST JSON Endpoint POST https://<server url>/validate SOAP Endpoint POST https://<server url>/soap/validationWebService/validateDocument SOAP WSDL POST https://<server url>/soap/validationWebService/validateDocument?wsdl","title":"Validation request interface"},{"location":"siva/v2/interfaces/#validation-request-parameters","text":"Validation request parameters for JSON and SOAP interfaces are described in the table below. Data types of SOAP parameters are defined in the SiVa WSDL document . JSON parameter SOAP parameter Mandatory JSON data type Description document Document + String Base64 encoded string of digitally signed document to be validated filename Filename + String File name of the digitally signed document (i.e. sample.bdoc) documentType DocumentType + String Format of the digitally signed document. This value determines the validation service type that will be used for validation. Possible values: * BDOC - for documents in BDOC (ASiC-E/XAdES) format. Both time-stamp (TS) and time-mark (TM) profiles are supported here. * DDOC - for documents in DIGIDOC-XML format, supported versions are DIGIDOC-XML 1.0 (also known as SK-XML 1.0) to DIGIDOC-XML 1.3. In case of DIGIDOC_XML documents, also the hashcode format is supported (see DigiDocService Specification for more information). * PDF - for signed PDF document in PAdES format. * XROAD - for documents created in the X-Road information system, see also specification document of the signature format. signaturePolicy SignaturePolicy - String Can be used to change the default signature validation policy that is used by the service. See also SiVa Validation Policy for more information. Possible values: * POLv1 - the default policy. Signatures with all legal levels are accepted (i.e. QES, AdES and AdESqc, according to Regulation (EU) No 910/2014.) * POLv2 - only signatures with QES legal level (according to Regulation (EU) No 910/2014) are accepted.","title":"Validation request parameters"},{"location":"siva/v2/interfaces/#sample-json-request","text":"{ \"filename\" : \"sample.ddoc\" , \"documentType\" : \"DDOC\" , \"document\" : \"PD94bWwgdmVyc2lvbj0iMS4....\" , \"signaturePolicy\" : \"POLv1\" }","title":"Sample JSON request"},{"location":"siva/v2/interfaces/#sample-soap-request","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <ns2:ValidateDocument xmlns:ns2= \"http://soap.webapp.siva.openeid.ee/\" > <ns2:ValidationRequest> <Document> PD94bWwgdmVyc2lvbj0iMS4.... </Document> <Filename> sample.ddoc </Filename> <DocumentType> DDOC </DocumentType> <SignaturePolicy> POLv1 </SignaturePolicy> </ns2:ValidationRequest> </ns2:ValidateDocument> </soap:Body> </soap:Envelope>","title":"Sample SOAP request"},{"location":"siva/v2/interfaces/#validation-response-interface","text":"","title":"Validation response interface"},{"location":"siva/v2/interfaces/#validation-response-parameters-successful-scenario","text":"The signature validation report (i.e. the validation response) for JSON and SOAP interfaces is described in the table below. Data types of SOAP parameters are defined in the SiVa WSDL document . JSON parameter SOAP parameter JSON data type Description policy Policy Object Object containing information of the SiVa signature validation policy that was used for validation policy.policyName Policy.PolicyName String Name of the validation policy policy. policyDescription Policy. PolicyDescription String Short description of the validation policy policy.policyUrl Policy.PolicyUrl String URL where the signature validation policy document can be downloaded. The validation policy document shall include information about validation of all the document formats, including the different validation policies that are used in case of different file formats and base libraries. signaturesCount SignaturesCount Number Number of signatures found inside digitally signed file validSignaturesCount ValidSignaturesCount Number Signatures count that have validated to TOTAL-PASSED . See also Signature.Indication field. validationTime ValidationTime Date Time of validating the signature by the service validationWarnings ValidationWarnings Array Block of SiVa validation warnings that do not affect the overall validation result and applicable only to BDOC/ASiC-E type containers. Known warning situations: container includes unsigned files, manifest validation warnings. filename DocumentName String Digitally signed document's file name signatureForm SignatureForm String Format (and optionally version) of the digitally signed document container. In case of documents in DIGIDOC-XML (DDOC) format, the \"hashcode\" suffix is used to denote that the container was validated in hashcode mode , i.e. without original data files. Possible values: * DIGIDOC_XML_1.0 * DIGIDOC_XML_1.0_hashcode * DIGIDOC_XML_1.1 * DIGIDOC_XML_1.1_hashcode * DIGIDOC_XML_1.2 * DIGIDOC_XML_1.2_hashcode * DIGIDOC_XML_1.3 * DIGIDOC_XML_1.3_hashcode * PAdES - used in case of signed PDF document * ASiC_E - used in case of all BDOC documents and X-Road simple containers that don't use batch time-stamping (see specification document ) * ASiC_E_batchsignature - used in case of X-Road containers with batch signature (see specification document ) signatures Signatures Array Collection of signatures found in digitally signed document signatures[0] Signature Object Signature information object signatures[0]. claimedSigningTime Signature. ClaimedSigningTime Date Claimed signing time, i.e. signer's computer time during signature creation signatures[0].id Signature.Id String Signature ID attribute signatures[0].indication Signature.Indication String Overall result of the signature's validation process, according to ETSI EN 319 102-1 \"Table 5: Status indications of the signature validation process\". Note that the validation results of different signatures in one signed document (signature container) may vary. See also validSignaturesCount and SignaturesCount fields. Possible values: * TOTAL-PASSED * TOTAL-FAILED * INDETERMINATE signatures[0]. subIndication Signature. SubIndication String Additional subindication in case of failed or indeterminate validation result, according to ETSI EN 319 102-1 \"Table 6: Validation Report Structure and Semantics\" signatures[0].errors Signature.Errors Array Information about validation error(s), array of error messages. signatures[0].errors[0]. content Signature.Errors. Error.Content String Error message, as returned by the base library that was used for signature validation. signatures[0].info Signature.Info Object Object containing trusted signing time information. signatures[0].info. bestSignatureTime Signature.Info. BestSignatureTime Date Time value that is regarded as trusted signing time, denoting the earliest time when it can be trusted by the validation application (because proven by some Proof-of-Existence present in the signature) that a signature has existed. The source of the value depends on the signature profile (see also SignatureFormat parameter): - Signature with time-mark (LT_TM level) - the producedAt value of the earliest valid time-mark (OCSP confirmation of the signer's certificate) in the signature. - Signature with time-stamp (LT or LTA level) - the genTime value of the earliest valid signature time-stamp token in the signature. - Signature with BES or EPES level - the value is empty, i.e. there is no trusted signing time value available. signatures[0]. signatureFormat Signature. SignatureFormat String Format and profile (according to Baseline Profile) of the signature. See XAdES Baseline Profile and PAdES Baseline Profile for detailed description of the Baseline Profile levels. Levels that are accepted in SiVa validation policy are described in SiVa signature validation policy Possible values: * XAdES_BASELINE_B_BES * XAdES_BASELINE_B_EPES * XAdES_BASELINE_T * XAdES_BASELINE_LT - long-term level XAdES signature where time-stamp is used as a assertion of trusted signing time * XAdES_BASELINE_LT_TM - long-term level XAdES signature where time-mark is used as a assertion of trusted signing time. Used in case of BDOC signatures with time-mark profile and DIGIDOC-XML (DDOC) signatures. * XAdES_BASELINE_LTA * PAdES_BASELINE_B_BES * PAdES_BASELINE_B_EPES * PAdES_BASELINE_T * PAdES_BASELINE_LT * PAdES_BASELINE_LTA signatures[0]. signatureLevel Signature. SignatureLevel String Legal level of the signature, according to Regulation (EU) No 910/2014. - In case of BDOC and PAdES formats: indication whether the signature is Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES). - In case of DIGIDOC-XML 1.0..1.3 formats, empty value is used as the signature level is not checked by the JDigiDoc base library that is used for validation. However, the signatures can be indirectly regarded as QES level signatures, see also SiVa Validation Policy signatures[0].signedBy Signature.SignedBy String Signers name and identification number, i.e. value of the CN field of the signer's certificate signatures[0]. signatureScopes Signature. SignatureScopes Array Contains information of the original data that is covered by the signature. signatures[0]. signatureScopes[0]. name Signature. SignatureScopes. SignatureScope.Name String Name of the signature scope. - In case of XAdES signature: name of the data file that is signed. - In case of PAdES signature: PDF version that is covered by the signature, e.g. 'PDF previous version #1' signatures[0]. signatureScopes[0]. scope Signature. SignatureScopes. SignatureScope. Scope String Type of the signature scope. - In case of XAdES signature: 'FullSignatureScope' - In case of PAdES signature: 'PdfByteRangeSignatureScope' signatures[0]. signatureScopes[0]. content Signature. SignatureScopes. SignatureScope. Content String - In case of XAdES signatures: 'Full document', indicating that the whole document is covered by the signature. - In case of PAdES signatures: the byte range that is covered by the signature. signatures[0].warnings Signature.Warnings Array Block of validation warnings that do not affect the overall validation result. Known warning situations (according to http://id.ee/public/SK-JDD-PRG-GUIDE.pdf, chap. 5.2.4.1): - BDOC (ASiC-E) and PAdES: weaker digest method (SHA-1) has been used than recommended when calculating either Reference or Signature element\u2019s digest value; - DIGIDOC-XML 1.0-1.3: DataFile element\u2019s xmlns attribute is missing; - DIGIDOC-XML 1.0-1.3: IssuerSerial/X509IssuerName and/or IssuerSerial/X509IssuerSerial element\u2019s xmlns attribute is missing. signatures[0].warnings[0]. description Signature.Warnings. Warning.Description String Warning description, as retuned by the base library that was used for validation.","title":"Validation response parameters (successful scenario)"},{"location":"siva/v2/interfaces/#sample-json-response-successful-scenario","text":"{ \"policy\" : { \"policyName\" : \"POLv2\" , \"policyDescription\" : \"Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result.\" , \"policyUrl\" : \"http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv2\" }, \"signaturesCount\" : 1 , \"validSignaturesCount\" : 1 , \"validationTime\" : \"2016-07-28T14:41:45Z\" , \"documentName\" : \"sample.bdoc\" , \"validationWarnings\" : [ { \"content\" : \"Manifest file has an entry for file document_3.xml with mimetype application/octet-stream but the signature file for signature S0 does not have an entry for this file\" }, { \"content\" : \"Signature SOLOVEI,JULIA,47711040261 has unsigned files: document_3.xml\" } ], \"signatures\" : [ { \"claimedSigningTime\" : \"2016-05-11T10:17:57Z\" , \"errors\" : [], \"id\" : \"S0\" , \"indication\" : \"TOTAL-PASSED\" , \"info\" : { \"bestSignatureTime\" : \"2016-05-11T10:18:06Z\" }, \"signatureFormat\" : \"XAdES_BASELINE_LT_TM\" , \"signatureLevel\" : \"QES\" , \"signatureScopes\" : [], \"signedBy\" : \"NURM,AARE,38211015222\" , \"subIndication\" : \"\" , \"warnings\" : [] } ] }","title":"Sample JSON response (successful scenario)"},{"location":"siva/v2/interfaces/#sample-soap-response-successful-scenario","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <ns2:ValidateDocumentResponse xmlns:ns2= \"http://soap.webapp.siva.openeid.ee/\" xmlns:ns3= \"http://x-road.eu/xsd/identifiers\" xmlns:ns4= \"http://x-road.eu/xsd/xroad.xsd\" > <ns2:ValidationReport> <Policy> <PolicyDescription> Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. </PolicyDescription> <PolicyName> POLv1 </PolicyName> <PolicyUrl> http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv1 </PolicyUrl> </Policy> <ValidationTime> 2016-09-27T06:42:33Z </ValidationTime> <ValidationWarnings> <ValidationWarning> <Content> Manifest file has an entry for file document_3.xml with mimetype application/octet-stream but the signature file for signature S0 does not have an entry for this file </Content> </ValidationWarning> <ValidationWarning> <Content> Signature SOLOVEI,JULIA,47711040261 has unsigned files: document_3.xml </Content> </ValidationWarning> </ValidationWarnings> <DocumentName> Valid_ID_sig.bdoc </DocumentName> <SignatureForm> ASiC_E </SignatureForm> <Signatures> <Signature> <Id> S0 </Id> <SignatureFormat> XAdES_BASELINE_LT_TM </SignatureFormat> <SignatureLevel> QES </SignatureLevel> <SignedBy> NURM,AARE,38211015222 </SignedBy> <Indication> TOTAL-PASSED </Indication> <SubIndication/> <Errors/> <SignatureScopes> <SignatureScope> <Name> Proov.txt </Name> <Scope> FullSignatureScope </Scope> <Content> Full document </Content> </SignatureScope> </SignatureScopes> <ClaimedSigningTime> 2016-05-12T10:09:09Z </ClaimedSigningTime> <Warnings/> <Info> <bestSignatureTime> 2016-05-12T10:09:20Z </bestSignatureTime> </Info> </Signature> </Signatures> <ValidSignaturesCount> 1 </ValidSignaturesCount> <SignaturesCount> 1 </SignaturesCount> </ns2:ValidationReport> </ns2:ValidateDocumentResponse> </soap:Body> </soap:Envelope>","title":"Sample SOAP response (successful scenario)"},{"location":"siva/v2/interfaces/#sample-json-response-error-situation","text":"{ \"requestErrors\" : [{ \"message\" : \"Document malformed or not matching documentType\" , \"key\" : \"document\" }]}","title":"Sample JSON response (error situation)"},{"location":"siva/v2/interfaces/#sample-soap-response-error-situation","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <soap:Fault> <faultcode> soap:Server </faultcode> <faultstring> Document malformed or not matching documentType </faultstring> </soap:Fault> </soap:Body> </soap:Envelope>","title":"Sample SOAP response (error situation)"},{"location":"siva/v2/interfaces/#data-files-request-interface","text":"REST JSON Endpoint POST https://<server url>/getDataFiles SOAP Endpoint POST https://<server url>/soap/dataFilesWebService/getDocumentDataFiles SOAP WSDL POST https://<server url>/soap/dataFilesWebService/getDocumentDataFiles?wsdl","title":"Data files request interface"},{"location":"siva/v2/interfaces/#data-files-request-parameters","text":"Data files request parameters for JSON and SOAP interfaces are described in the table below. Data types of SOAP parameters are defined in the SiVa WSDL document . JSON parameter SOAP parameter Mandatory JSON data type Description document Document + String Base64 encoded string of digitally signed DDOC document documentType DocumentType + String Format of the digitally signed document. Possible values: * DDOC - for documents in DIGIDOC-XML format, supported versions are DIGIDOC-XML 1.0 (also known as SK-XML 1.0) to DIGIDOC-XML 1.3. Currently only DDOC file format is supported for this operation","title":"Data files request parameters"},{"location":"siva/v2/interfaces/#sample-json-request_1","text":"{ \"documentType\" : \"DDOC\" , \"document\" : \"PD94bWwgdmVyc2lvbj0iMS4....\" }","title":"Sample JSON request"},{"location":"siva/v2/interfaces/#sample-soap-request_1","text":"<soapenv:Envelope xmlns:soapenv= \"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:soap= \"http://soap.webapp.siva.openeid.ee/\" > <soapenv:Header/> <soapenv:Body> <soap:GetDocumentDataFiles> <soap:DataFilesRequest> <Document> PD94bWwgdmVyc2lvbj0iMS4wI... </Document> <DocumentType> DDOC </DocumentType> </soap:DataFilesRequest> </soap:GetDocumentDataFiles> </soapenv:Body> </soapenv:Envelope>","title":"Sample SOAP request"},{"location":"siva/v2/interfaces/#data-files-response-interface","text":"","title":"Data files response interface"},{"location":"siva/v2/interfaces/#data-files-response-parameters-successful-scenario","text":"The data file extraction report (i.e. the data files response) for JSON and SOAP interfaces is described in the table below. Data types of SOAP parameters are defined in the SiVa WSDL document . SiVa returns all data files as they are extracted by JDigiDoc library in an as is form. No extra operations or validations are done. JSON parameter SOAP parameter JSON data type Description dataFiles DataFiles Array Collection of data files found in digitally signed document dataFiles[0] DataFile Object Extracted data file object dataFiles[0].fileName DataFile.FileName String File name of the extracted data file dataFiles[0].size DataFile.Size Long Extracted data file size in bytes dataFiles[0].base64 DataFile.Base64 String Base64 encoded string of extracted data file dataFiles[0].mimeType DataFile.MimeType String MIME type of the extracted data file","title":"Data files response parameters (successful scenario)"},{"location":"siva/v2/interfaces/#sample-json-response-successful-scenario_1","text":"{ \"dataFiles\" : [{ \"fileName\" : \"Glitter-rock-4_gallery.jpg\" , \"size\" : 41114 , \"base64\" : \"/9j/4AAQSkZJ...\" , \"mimeType\" : \"application/octet-stream\" }] }","title":"Sample JSON response (successful scenario)"},{"location":"siva/v2/interfaces/#sample-soap-response-successful-scenario_1","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <ns2:GetDocumentDataFilesResponse xmlns:ns2= \"http://soap.webapp.siva.openeid.ee/\" xmlns:ns3= \"http://x-road.eu/xsd/identifiers\" xmlns:ns4= \"http://x-road.eu/xsd/xroad.xsd\" > <ns2:DataFilesReport> <DataFiles> <DataFile> <Base64> UCgUCgUCgUCgUCgUCgUCgUCgUCgUCgUCgUH... </Base64> <FileName> Glitter-rock-4_gallery.jpg </FileName> <MimeType> application/octet-stream </MimeType> <Size> 41114 </Size> </DataFile> </DataFiles> </ns2:DataFilesReport> </ns2:GetDocumentDataFilesResponse> </soap:Body> </soap:Envelope>","title":"Sample SOAP response (successful scenario)"},{"location":"siva/v2/interfaces/#sample-json-response-error-situation_1","text":"{ \"requestErrors\" : [{ \"message\" : \"Invalid document type. Can only return data files for DDOC type containers.\" , \"key\" : \"documentType\" }]}","title":"Sample JSON response (error situation)"},{"location":"siva/v2/interfaces/#sample-soap-response-error-situation_1","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <soap:Fault> <faultcode> soap:Client </faultcode> <faultstring> Invalid document type. Can only return data files for DDOC type containers. </faultstring> </soap:Fault> </soap:Body> </soap:Envelope>","title":"Sample SOAP response (error situation)"},{"location":"siva/v2/interfaces/#service-health-monitoring","text":"SiVa webapps provide an interface for external monitoring tools (to periodically check the generic service health status).","title":"Service health monitoring"},{"location":"siva/v2/interfaces/#the-request","text":"The monitoring endpoint is accessible via HTTP GET at /monitoring/health or /monitoring/health.json url. Sample request: GET https://<server url>/monitoring/health","title":"The request"},{"location":"siva/v2/interfaces/#the-response","text":"As a response, a JSON object is returned with the following information: Field Description status General status of the webapp. Possible values: DOWN - when some of the dependent indicators status are down (ie when link{number}.status is DOWN, the overall service status is DOWN) UP - the default value. health.status Status of current webapp - constant value UP health.webappName The artifact name of the webapp. Taken from the MANIFEST.MF file (inside the jar/war file). health.version The release version fo the webapp. Taken from the MANIFEST.MF (inside the jar/war file). health.buildTime Build date and time (format yyyy-MM-dd'T'HH:mm:ss'Z') of the webapp. Taken from the MANIFEST.MF (inside the jar/war file). health.startTime Webapp startup date and time (format yyyy-MM-dd'T'HH:mm:ss'Z') health.currentTime Current server date and time (format yyyy-MM-dd'T'HH:mm:ss'Z') link{number}.status (OPTIONAL) Represents the status of a link to the external system that the webapp depends on. DOWN when the webapp does not respond (within a specified timeout limit - default 10 seconds) or the response is in invalid format (default Spring boot actuator /health endpoint format is expected). UP if the service responds with HTTP status code 200 and returns a valid JSON object with status \"UP\" link{number}.name (OPTIONAL) Descriptive name for the link to the external system Sample response: { \"status\" : \"UP\" , \"health\" :{ \"status\" : \"UP\" , \"webappName\" : \"siva-sample-application\" , \"version\" : \"3.1.0\" , \"buildTime\" : \"2016-10-21T15:56:21Z\" , \"startTime\" : \"2016-10-21T15:57:48Z\" , \"currentTime\" : \"2016-10-21T15:58:39Z\" }, \"link1\" :{ \"status\" : \"UP\" , \"name\" : \"sivaService\" } }","title":"The response"},{"location":"siva/v2/links/","text":"https://www.ria.ee/ee/xtee-teenuste-arendamine.html - XRoad impolentations guides to be used for SiVa XRoad implementation","title":"Links"},{"location":"siva/v2/siva_service_overview/","text":"","title":"Siva service overview"},{"location":"siva/v2/structure_and_activities/","text":"The following chapter depicts SiVa software on a component diagram. Note that not all of the external base libraries are included in the component model to avoid duplicity with other documentation. Only relevant base libraries and dependencies are listed and described in the documentation. Information about additional and transitive dependencies of the respective validation service components can be found via the references provided. System components Siva webapp All validation services use different Java library to validate given document in request. The used validation library is described in each of the validation service section. Component Description Web gateway service Web gateway service is a single access point to the whole SiVa webapp application. Web service is implemented as a standard Spring Boot Web application module, that accepts valid JSON or SOAP requests (see the Interfaces section ) sent by the client systems. Web service module is responsible for basic request and response handling. This includes basic validation of incoming requests (existence of required fields, permitted values, etc) and unmarshaling the request to a Java object before passing it to the next component \u2013 the Proxy service. Response from the proxy service is marshalled and sent back to the client according to respective API. Validation proxy service Acts as a router for the request and response. It is responsible for selecting the appropriate validation service for incoming document. - Proxy service accepts an in memory representation of a document and finds a matching validation service based on document type. The incoming request is converted to validation request and forwarded to the specific validation service. - The report returned by the specific validation service is passed to the statistics service before returning it to Web service. Data files proxy service Acts as a router for the request and response. It is responsible for selecting the appropriate data files extraction service for incoming document. - Proxy service accepts an in memory representation of a document and finds a matching validation service based on document type. Statistics service An optional component that can be turned on or off using configuration file. It is Spring Boot module and main purpose for it is to collect data about: incoming request, validation reports and errors that have been reported during validation process. - When HTTP authentication header have been set the reporting service will also add this info to statistics report. - After the report object have been created the data will be sent to configured reporting service. SiVa is preconfigured to work with Google Analytics. - More info and specifics about the statistics service can be found in SiVa_statistics.pdf PDF validation service PDF uses DSS PaDES validation functionality along with the preconfigured validation policy that complies with Estonian laws and regulations. BDOC validation service Provides validation services for BDOC containers. BDOC for ASiC compliant containers both TM and TS will use latest Maven released DigiDoc4J library DDOC validation service Provides validation services for DigiDoc containers. DDOC for previous generation digitally signed files will use latest Maven release of JDigiDoc DDOC data files service Provides files extraction services for DigiDoc containers. DDOC for previous generation digitally signed files will use latest Maven release of JDigiDoc Digidoc4j Digidoc4j implementation is used by BDOC validation service. See the project Github page for further details. Dss Dss library implementations are used for PaDES validation and TSL loading. SiVa uses Digidoc4J DSS fork Java library . JDigiDoc JDigiDoc implementation is used by DDOC validation service and for the DDOC data files service. See the project Github page for further details. TSL loader TSL loader loads the contents of TSL file from given URL in online mode or from directory when using offline mode in predefined interval. Logger Logging functionality is handled by the SLF4J logging facade and on top of the Logback framework. As a result, logging can be configured via the standard Logback configuration file. By default, logging works on the INFO level and logs are directed to the system console. Additional logging appenders can be added (consult logback documentation for more details ) Configuration Configuration is a global component used throughout the webapp. Responsible for reading and handling the application configuration management Validation commons Common interfaces and utilities for all validation services (ie utilities for default and additional policies and constraints) Monitoring service Service that provides generic information about the webapp - it's name, version, uptime and link status. (The service is disabled by default) Siva webapp interfaces Provided: Validation service REST interface - interface for handling validation queries. JSON formatted POST requests Validation service SOAP interface - interface for handling validation queries X-Road compliant and non-compliant SOAP requests (without the X-Road required headers) Data file service REST interface - interface for handling data file extraction queries. JSON formatted POST requests Data file service SOAP interface - interface for handling data file extraction queries X-Road compliant and non-compliant SOAP requests (without the X-Road required headers) Monitoring service REST interface - interface for retrieving the webapp's health information HTTP GET that returns JSON formatted resp\u00f3nses Required: X-road validation webapp - interface for validating X-road signed requests EU TSL provider interface - interface for loading the TSL Google Analytics service - interface for collection statistics (optional) X-road validation webapp Note X-road validation webapp is distributed as a separate webapp installation to avoid BouncyCastle libraries version conflicts and class loader issues. Component Description X-Road validation service X-Road containers are similar to ASiCE containers but are not valid ASiCE containers. There we could not use DSS nor DigiDoc4J provided ASiCE validation functionality but need to X-Road developed asicverifier Java command line utility to validate these containers. Source code for asicverifier can be found in GitHub xroad-public repository : Asicverfier has been integrated into SiVa as Java library. Making possible to use all the Java libraries packaged into asicverifier fat JAR. Configurable functionality: - In SiVa configuration application.yml file You can define alternative location for globalconf directory to be loaded in using input stream Asicverifier X-road signature validation utility (see github project for details). A command line tool to validate X-Road Security server generated ASiCe files. The utility was chosen because it's only available packaged to tool to validate X-Road signature file. Logger Logger is a global component used throughout the webapp by every other components. Logging functionality is handled by the SLF4J logging facade and on top of it the Logback framework is used. As a result, logging can be configured via the standard Logback configuration file. By default, logging works on the INFO level and logs are directed to the system console. Additional logging appenders can be added (consult logback documentation for more details ) Configuration Configuration is a global component used throughout the webapp. Responsible for reading and handling the application configuration management Validation commons Common interfaces and utilities for all validation services (ie utilities for default and additional policies and constraints) Monitoring service Service that provides generic information about the webapp - it's name, version, uptime and link status. (The service is disabled by default) X-road validation webapp interfaces Provided: Validation service REST interface - interface for handling X-Road signed requests. JSON formatted POST queries Monitoring service REST interface - interface for retrieving the webapp's health information HTTP GET that returns JSON formatted resp\u00f3nses Required: N/A Demo webapp Component Description Demo webapp A Spring boot based web application that provides a web interface to the SiVa system for initial access and testing purposes. Offers a simple and user friendly presentation layer for the whole SiVa webapp. Contains a simple form, that can be used to send signed documents to be validated in SiVa. Demo webapp interfaces Provided: Web interface - interface for handling X-Road signed requests. JSON formatted POST queries Required: Siva webapp REST interface Siva webapp SOAP interface External configuration Component Description Policies and constraints (Optional) By default, two policies are supported and integrated into SiVa - see SiVa Validation Policy . However, it is possible to customize the validation policies and their constraints. Configuration is validation service specific. See the overriding configuration section for details. Externalized configuration Application specific configuration (property files, command line variables, etc) that allow overriding the default values set within the webapp. External subsystems Component Description Digidoc3 client DigiDoc3 client is a program that can be used to sign digitally with ID-card and Mobile-ID, check the validity of digital signatures and open and save documents inside the signature container. See the github project for further details. XROAD security server A client subsystem that, once connected, allows SiVa to be integrated into the X-Road data exchange layer EU TSL provider A subsystem that provides SiVa with a current TSL. An HTTPS endpoint, that provides an XML formatted file that lists all trusted service providers along with their certificates. Google Analytics (Optional) A subsystem that can be used for business analysis based on the SiVa statistics (sent over Google Management Protocol v1). The webapp can be configured to send statistical data about validation reports to Google Analytics. See SiVa_statistics.pdf for further details. NB! Note that the exact same dataset is logged by the Logger component if one needs to handle generic statistical data locally (for example using Logstash and Kibana) Monitoring (Optional) A subsystem that tracks the health and uptime of SiVa webapps","title":"10.3.1 Component model"},{"location":"siva/v2/structure_and_activities/#system-components","text":"","title":"System components"},{"location":"siva/v2/structure_and_activities/#siva-webapp","text":"All validation services use different Java library to validate given document in request. The used validation library is described in each of the validation service section. Component Description Web gateway service Web gateway service is a single access point to the whole SiVa webapp application. Web service is implemented as a standard Spring Boot Web application module, that accepts valid JSON or SOAP requests (see the Interfaces section ) sent by the client systems. Web service module is responsible for basic request and response handling. This includes basic validation of incoming requests (existence of required fields, permitted values, etc) and unmarshaling the request to a Java object before passing it to the next component \u2013 the Proxy service. Response from the proxy service is marshalled and sent back to the client according to respective API. Validation proxy service Acts as a router for the request and response. It is responsible for selecting the appropriate validation service for incoming document. - Proxy service accepts an in memory representation of a document and finds a matching validation service based on document type. The incoming request is converted to validation request and forwarded to the specific validation service. - The report returned by the specific validation service is passed to the statistics service before returning it to Web service. Data files proxy service Acts as a router for the request and response. It is responsible for selecting the appropriate data files extraction service for incoming document. - Proxy service accepts an in memory representation of a document and finds a matching validation service based on document type. Statistics service An optional component that can be turned on or off using configuration file. It is Spring Boot module and main purpose for it is to collect data about: incoming request, validation reports and errors that have been reported during validation process. - When HTTP authentication header have been set the reporting service will also add this info to statistics report. - After the report object have been created the data will be sent to configured reporting service. SiVa is preconfigured to work with Google Analytics. - More info and specifics about the statistics service can be found in SiVa_statistics.pdf PDF validation service PDF uses DSS PaDES validation functionality along with the preconfigured validation policy that complies with Estonian laws and regulations. BDOC validation service Provides validation services for BDOC containers. BDOC for ASiC compliant containers both TM and TS will use latest Maven released DigiDoc4J library DDOC validation service Provides validation services for DigiDoc containers. DDOC for previous generation digitally signed files will use latest Maven release of JDigiDoc DDOC data files service Provides files extraction services for DigiDoc containers. DDOC for previous generation digitally signed files will use latest Maven release of JDigiDoc Digidoc4j Digidoc4j implementation is used by BDOC validation service. See the project Github page for further details. Dss Dss library implementations are used for PaDES validation and TSL loading. SiVa uses Digidoc4J DSS fork Java library . JDigiDoc JDigiDoc implementation is used by DDOC validation service and for the DDOC data files service. See the project Github page for further details. TSL loader TSL loader loads the contents of TSL file from given URL in online mode or from directory when using offline mode in predefined interval. Logger Logging functionality is handled by the SLF4J logging facade and on top of the Logback framework. As a result, logging can be configured via the standard Logback configuration file. By default, logging works on the INFO level and logs are directed to the system console. Additional logging appenders can be added (consult logback documentation for more details ) Configuration Configuration is a global component used throughout the webapp. Responsible for reading and handling the application configuration management Validation commons Common interfaces and utilities for all validation services (ie utilities for default and additional policies and constraints) Monitoring service Service that provides generic information about the webapp - it's name, version, uptime and link status. (The service is disabled by default)","title":"Siva webapp"},{"location":"siva/v2/structure_and_activities/#siva-webapp-interfaces","text":"Provided: Validation service REST interface - interface for handling validation queries. JSON formatted POST requests Validation service SOAP interface - interface for handling validation queries X-Road compliant and non-compliant SOAP requests (without the X-Road required headers) Data file service REST interface - interface for handling data file extraction queries. JSON formatted POST requests Data file service SOAP interface - interface for handling data file extraction queries X-Road compliant and non-compliant SOAP requests (without the X-Road required headers) Monitoring service REST interface - interface for retrieving the webapp's health information HTTP GET that returns JSON formatted resp\u00f3nses Required: X-road validation webapp - interface for validating X-road signed requests EU TSL provider interface - interface for loading the TSL Google Analytics service - interface for collection statistics (optional)","title":"Siva webapp interfaces"},{"location":"siva/v2/structure_and_activities/#x-road-validation-webapp","text":"Note X-road validation webapp is distributed as a separate webapp installation to avoid BouncyCastle libraries version conflicts and class loader issues. Component Description X-Road validation service X-Road containers are similar to ASiCE containers but are not valid ASiCE containers. There we could not use DSS nor DigiDoc4J provided ASiCE validation functionality but need to X-Road developed asicverifier Java command line utility to validate these containers. Source code for asicverifier can be found in GitHub xroad-public repository : Asicverfier has been integrated into SiVa as Java library. Making possible to use all the Java libraries packaged into asicverifier fat JAR. Configurable functionality: - In SiVa configuration application.yml file You can define alternative location for globalconf directory to be loaded in using input stream Asicverifier X-road signature validation utility (see github project for details). A command line tool to validate X-Road Security server generated ASiCe files. The utility was chosen because it's only available packaged to tool to validate X-Road signature file. Logger Logger is a global component used throughout the webapp by every other components. Logging functionality is handled by the SLF4J logging facade and on top of it the Logback framework is used. As a result, logging can be configured via the standard Logback configuration file. By default, logging works on the INFO level and logs are directed to the system console. Additional logging appenders can be added (consult logback documentation for more details ) Configuration Configuration is a global component used throughout the webapp. Responsible for reading and handling the application configuration management Validation commons Common interfaces and utilities for all validation services (ie utilities for default and additional policies and constraints) Monitoring service Service that provides generic information about the webapp - it's name, version, uptime and link status. (The service is disabled by default)","title":"X-road validation webapp"},{"location":"siva/v2/structure_and_activities/#x-road-validation-webapp-interfaces","text":"Provided: Validation service REST interface - interface for handling X-Road signed requests. JSON formatted POST queries Monitoring service REST interface - interface for retrieving the webapp's health information HTTP GET that returns JSON formatted resp\u00f3nses Required: N/A","title":"X-road validation webapp interfaces"},{"location":"siva/v2/structure_and_activities/#demo-webapp","text":"Component Description Demo webapp A Spring boot based web application that provides a web interface to the SiVa system for initial access and testing purposes. Offers a simple and user friendly presentation layer for the whole SiVa webapp. Contains a simple form, that can be used to send signed documents to be validated in SiVa.","title":"Demo webapp"},{"location":"siva/v2/structure_and_activities/#demo-webapp-interfaces","text":"Provided: Web interface - interface for handling X-Road signed requests. JSON formatted POST queries Required: Siva webapp REST interface Siva webapp SOAP interface","title":"Demo webapp interfaces"},{"location":"siva/v2/structure_and_activities/#external-configuration","text":"Component Description Policies and constraints (Optional) By default, two policies are supported and integrated into SiVa - see SiVa Validation Policy . However, it is possible to customize the validation policies and their constraints. Configuration is validation service specific. See the overriding configuration section for details. Externalized configuration Application specific configuration (property files, command line variables, etc) that allow overriding the default values set within the webapp.","title":"External configuration"},{"location":"siva/v2/structure_and_activities/#external-subsystems","text":"Component Description Digidoc3 client DigiDoc3 client is a program that can be used to sign digitally with ID-card and Mobile-ID, check the validity of digital signatures and open and save documents inside the signature container. See the github project for further details. XROAD security server A client subsystem that, once connected, allows SiVa to be integrated into the X-Road data exchange layer EU TSL provider A subsystem that provides SiVa with a current TSL. An HTTPS endpoint, that provides an XML formatted file that lists all trusted service providers along with their certificates. Google Analytics (Optional) A subsystem that can be used for business analysis based on the SiVa statistics (sent over Google Management Protocol v1). The webapp can be configured to send statistical data about validation reports to Google Analytics. See SiVa_statistics.pdf for further details. NB! Note that the exact same dataset is logged by the Logger component if one needs to handle generic statistical data locally (for example using Logstash and Kibana) Monitoring (Optional) A subsystem that tracks the health and uptime of SiVa webapps","title":"External subsystems"},{"location":"siva/v2/systemintegrators_guide/","text":"This guide describes how to integrate SiVa service with other applications. The following is for system integrators who need to set-up, configure, manage, and troubleshoot SiVa system. System requirements Following are the minimum requirements to build and deploy SiVa webapps as a service: Java 8 or above Oracle JVM is supported Git version control system version 1.8 or above is recommended Minimum 2 GB of RAM. Recommended at least 4 GB of RAM Minimum 1 processor core Open internet connection 1GB of free disk space Supported operating system is Ubuntu 14.04 LTS Building Building SiVa webapps on Ubuntu 16.04 First we need to install Git and Java SDK 8 by issuing below commands: sudo apt-get update sudo apt-get install git -y sudo apt-get install default-jdk -y Next we need to clone the SiVa Github repository: git clone https://github.com/open-eid/SiVa.git --branch master Final step is building the SiVa project using Maven Wrapper cd SiVa ./mvnw clean install Note The build can take up to 30 minutes because there are lot of tests that will be run through and downloading of the required dependencies To verify that SiVa project built successfully look for BUILD SUCCESS in build compilation output last lines. The last lines of build output should look very similar to below image: [INFO] Reactor Summary: [INFO] [INFO] SiVa Digitally signed documents validation service . SUCCESS [ 25.258 s] [INFO] validation-services-parent ......................... SUCCESS [ 0.479 s] [INFO] validation-commons ................................. SUCCESS [01:45 min] [INFO] tsl-loader ......................................... SUCCESS [ 16.507 s] [INFO] PDF Validation Service ............................. SUCCESS [ 42.263 s] [INFO] BDOC Validation Service ............................ SUCCESS [ 58.864 s] [INFO] DDOC Validation Service ............................ SUCCESS [ 9.929 s] [INFO] xroad-validation-service ........................... SUCCESS [ 5.664 s] [INFO] SIVa webapp and other core modules ................. SUCCESS [ 0.315 s] [INFO] SiVa validation service proxy ...................... SUCCESS [ 43.098 s] [INFO] siva-webapp ........................................ SUCCESS [04:06 min] [INFO] SiVa Sample Web application ........................ SUCCESS [04:31 min] [INFO] SiVa Web Service integration tests ................. SUCCESS [03:41 min] [INFO] siva-distribution .................................. SUCCESS [ 56.941 s] [INFO] ------------------------------------------------------------------------ [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------ [INFO] Total time: 18:30 min [INFO] Finished at: 2016-07-22T13:40:31+00:00 [INFO] Final Memory: 80M/250M [INFO] ------------------------------------------------------------------------ Deploying OPTION 1 - starting webapps from command line SiVa project compiles 3 fat executable JAR files that you can run after successfully building the project by issuing below commands: First start the Siva webapp ./siva-parent/siva-webapp/target/siva-webapp-3.1.0.jar Second we need to start X-road validation webapp ./validation-services-parent/xroad-validation-service/target/xroad-validation-service-3.1.0.jar The SiVa webapp by default runs on port 8080 and XRoad validation service starts up on port 8081 . Easiest way to test out validation is run SiVa demo application. Start the Demo webapp ./siva-parent/siva-sample-application/target/siva-sample-application-3.1.0.jar Now point Your browser to URL: http://localhost:9000 OPTION 2 - running webapps as systemd services Maven build generates executable JAR files. This means web container and all its dependencies are package inside single JAR file. It makes a lot easier to deploy it into servers. Easiest option to setup SiVa is as systemd service in Ubuntu servers. For that we first need to create service file: vim siva-webapp.service Inside it we need to paste below text. You need to change few things in service setup file. First you must not run service as root . So it's strongly recommended to change line User=root Second You can change Java JVM options by modifying the JAVA_OPTS inside the siva-webapp.service file. Also You can change the SiVa application configuration options by modifying RUN_ARGS section in file [Unit] Description = siva-webapp After = syslog.target [Service] User = root ExecStart = /var/apps/siva-webapp.jar Environment = JAVA_OPTS=-Xmx320m RUN_ARGS=--server.port=80 SuccessExitStatus = 143 [Install] WantedBy = multi-user.target Save and close the siva-webapp.service file. Next we need to move siva-webapp-3.1.0.jar into newly created /var/apps directory and rename to JAR file to siva-webapp.jar . match Note The copied JAR filename must match option ExecStart in siva-webapp.service file sudo mkdir /var/apps sudo cp siva-parent/siva-webapp/target/executable/siva-webapp-3.1.0.jar /var/apps/siva-webapp.jar Next we need to copy the siva-webapp.service file into /lib/systemd/system directory. Then we are ready to start the siva-webapp service. sudo cp siva-webapp.service /lib/systemd/system sudo systemctl start siva-webapp Final step of setting up the siva-webapp service is to verify that service started correctly by issuing below command. systemctl status siva-webapp It should print out similar to below picture: \u25cf siva - webapp . service - siva - webapp Loaded : loaded ( / lib / systemd / system / siva - webapp . service ; disabled ; vendor preset : enabled ) Active : active ( running ) since Thu 2016 - 07 - 21 08 : 48 : 14 EDT ; 1 day 2 h ago Main PID : 15965 ( siva - webapp . jar ) Tasks : 34 Memory : 429.6 M CPU : 2 min 5.721 s CGroup : / system . slice / siva - webapp . service \u251c\u2500 15965 / bin / bash / var / apps / stage / siva - webapp . jar \u2514\u2500 15982 / usr / bin / java - Dsun . misc . URLClassPath . disableJarChecking = true - Xmx320m - jar / var / apps / stage / siva - webapp . jar Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: at eu . europa . esig . dss . tsl . service . TSLParser . getTslModel ( TSLParser . java : 143 ) Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: at eu . europa . esig . dss . tsl . service . TSLParser . call ( TSLParser . java : 129 ) Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: ... 5 common frames omitted Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: 20.07 . 2016 03 : 00 : 01.450 INFO [ pool - 3 - thread - 1 ] [ e . e . e . dss . tsl . service . TSLRepository . sync Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: 20.07 . 2016 03 : 00 : 01.450 INFO [ pool - 3 - thread - 1 ] [ e . e . e . dss . tsl . service . TSLRepository . sync OPTION 3 - deploy webapps as war files (Tomcat setup for legacy systems) NOTE 1 : We do not recommend using WAR deployment option because lack of testing done on different servlet containers also possible container application libraries conflicts NOTE 2 : Each SiVa service must be deployed to separate instance of Tomcat to avoid Java JAR library version conflicts. NOTE 3 : To limit your webapp request size (this is set automatically when deploying service as jar) one needs to configure the container manually. For example, when using Tomcat 7 or Tomcat 8 - the http connector parameter maxPostSize should be configured with the desired limit. NOTE 4 : The war file must be deployed to Tomcat ROOT. First we need to download Tomcat web servlet container as of the writing latest version available in version 7 branch is 7.0.77. We will download it with wget wget http://www-eu.apache.org/dist/tomcat/tomcat-7/v7.0.70/bin/apache-tomcat-7.0.70.tar.gz Unpack it somewhere: tar xf apache-tomcat-7.0.70.tar.gz Now we should build the WAR file. We have created helper script with all the correct Maven parameters. ./war-build.sh NOTE The script will skip running the integration tests when building WAR files Final steps would be copying built WAR file into Tomcat webapps directory and starting the servlet container. cp siva-parent/siva-webapp/target/siva-webapp-3.1.0.war apache-tomcat-7.0.70/webapps ./apache-tomcat-7.0.77/bin/catalina.sh run IMPORTANT siva-webapp on startup creates etc directory where it copies the TSL validaiton certificates siva-keystore.jks . Default location for this directory is application root or $CATALINA_HOME . To change this default behavior you should set environment variable DSS_DATA_FOLDER How-to set WAR deployed SiVa application.properties SiVa override properties can be set using application.properties file. The file can locate anywhare in the host system. To make properties file accessible for SiVa you need to create or edit setenv.sh placed inside bin directory. Contents of the setenv.sh file should look like: export CATALINA_OPTS = \"-Dspring.config.location=file:/path/to/application.properties\" Smoke testing your deployed system Step 1 . Install HTTPIE httpie is more user friendly version of curl and we will use to verify that SiVa was installed and started correctly on our server. If you have Python and its package manager pip installed. Then You can issue below command: pip install httpie Step 2 . Download a sample JSON request file. http --download https://raw.githubusercontent.com/open-eid/SiVa/develop/build-helpers/sample-requests/bdoc_pass.json Step 3 . After successful download issue below command in same directory where you downloaded the file using the command below. http POST http://10.211.55.9:8080/validate < bdoc_pass.json Step 4 . Verify the output. The output of previous command should look like below screenshot. Look for signatureCount and validSignatureCount they must be equal. Logging By default, logging works on the INFO level and logs are directed to the system console only. Logging functionality is handled by the SLF4J logging facade and on top of the Logback framework. As a result, logging can be configured via the standard Logback configuration file through Spring boot. Additional logging appenders can be added. Consult logback documentation for more details on log file structure. For example, adding application.properties to classpath with the logging.config property logging.config = /path/to/logback.xml Statistics For every report validated, a statistical report is composed that collects the following data: Data Description Validation duration The time it takes to process an incoming request - measured in milliseconds Container type Container type ( text value that identifies the signature type of the incoming document: ASiC-E, XAdES, PAdES or ASiC-E (BatchSignature) ) Siva User ID String (Text data that contains the SiVa user identifier for reports (from the HTTP x-authenticated-user header) or N/A ) Total signatures count The value of the signaturesCount element in the validation report Valid signatures count The value of the validSignaturesCount element in the validation report Signature validation indication(s) Values of elements signatures/indication and signatures/subindication from the validation report. indication[/subindication] Signature country/countries Country code extracted from the signer certs. The ISO-3166-1 alpha-2 country code that is associated with signature (the signing certificate). Or constant string \"XX\" if the country cannot be determined. Signature format(s) Values of element signatures/signatureFormat from the validation report. There are two channels where this information is sent: Log feeds (at INFO level) which can be redirected to files or to a syslog feed. Google Analytics service (as GA events). Turned off by default. See Configuration parameters for further details. The format and events are described in more detail in SiVa_statistics.pdf Monitoring SiVa webapps provide an endpoint for external monitoring tools to periodically check the generic service health status. Note Note that this endpoint is disabled by default. The url for accessing JSON formatted health information with HTTP GET is /monitoring/health or /monitoring/health.json . See the Interfaces section for response structure and details. Enabling and disabling the monitoring endpoint To enable the endpoint, use the following configuration parameter: endpoints.health.enabled = true Customizing external service health indicators The endpoint is implemented as a customized Spring boot health endpoint , which allows to add custom health indicators. Demo webapp and Siva webapp also include additional information about the health of their dependent services. These links to dependent web services have been preconfigured. For example, the Demo webapp is preset to check whether the Siva webapp is accessible from the following url (parameter siva.service.serviceHost value)/monitoring/health and the Siva webapp verifies that the X-road validation service webapp is accessible by checking the default url (configured by parameter siva.proxy.xroadUrl value)/monitoring/health url. However, using the following parameters, these links can be overridden: Property Description endpoints.health.links[index].name A short link name Default: N/A endpoints.health.links[index].url URL to another monitoring endpoint that produces Spring boot health endpoint compatible JSON object as a response to HTTP GET. Default: N/A endpoints.health.links[index].timeout Connection timeout (in milliseconds) Default: N/A For example: endpoints.health.links [ 0 ] .name = linkToXroad endpoints.health.links [ 0 ] .url = http://localhost:7777/monitoring/health endpoints.health.links [ 0 ] .timeout = 1000 Note The external link configuration must be explicitly set when the monitoring service on the target machine is configured to run on a different port as the target service itself(ie using the management.port option in configuration) . Configuration parameters All SiVa webapps have been designed to run with predetermined defaults after building and without additional configuration. However, all the properties can be overridden on the service or embedded web server level, if necessary. By default, the service loads it's global configuration from the application.yml file that is packaged inside the jar file. Default configuration parameters can be overridden by providing custom application.yml in the following locations , or using command line parameters or by using other externalized configuration methods methods. For example, to configure the embedded Tomcat web server inside a fat jar to run on different port (default is 8080), change the server.port following property: server.port = 8080 Or to increase or modify the default http request limit, override the server.max-http-post-size property: server.max-http-post-size: 13981016 See the reference list of all common application properties provided by Spring boot Siva webapp parameters Updating TSL Property Description siva.tsl.loader.loadFromCache A boolean value that determines, whether the TSL disk cache is updated by downloading a new TSL in a predetermined interval Note that the cache is by default stored in a system temporary folder (can be set with system property java.io.tmpdir ) in a subdirectory named dss_cache_tsl When set to false the cache is refreshed periodically by SiVa in a predetermined interval specified by siva.tsl.loader.schedulerCron using siva.tsl.loader.url When set to true the siva uses existing cache as it's TSL. No direct polling for updates are performed. Default: false siva.tsl.loader.url A url value that points to the external TSL Default: https://ec.europa.eu/tools/lotl/eu-lotl.xml siva.tsl.loader.code Sets the LOTL code in DSS Default: EU siva.tsl.loader.schedulerCron A string in a Crontab expression format that defines the interval at which the TSL renewal process is started. The default is 03:00 every day (local time) Default: 0 0 3 * * ? siva.keystore.type Keystore type. Keystore that contains public keys to verify the signed TSL Default: JKS siva.keystore.filename Keystore that contains public keys to verify the signed TSL Default: siva-keystore.jks siva.keystore.password Keystore password. Keystore that contains public keys to verify the signed TSL Default: siva-keystore-password Note Note that the keystore file location can be overriden using environment variable DSS_DATA_FOLDER . By default the keystore file location, is expected to be on local filesystem in etc directory which is at the same level with the fat jar file (one is created, if no such directory exists). Note TSL is currently used only by PDF and BDOC validators Forward to custom X-road webapp instance Property Description siva.proxy.xroadUrl A URL where the X-Road validation requests are forwarded Default: http://localhost:8081 Collecting statistics with Google Analytics Property Description siva.statistics.google-analytics.enabled Enables/disables the service Default: false siva.statistics.google-analytics.url Statistics endpoint URL Default: http://www.google-analytics.com/batch siva.statistics.google-analytics.trackingId The Google Analytics tracking ID Default: UA-83206619-1 siva.statistics.google-analytics.dataSourceName Descriptive text of the system Default: SiVa BDOC validation parameters Property Description siva.bdoc.digidoc4JConfigurationFile Path to Digidoc4j configuration override Default: N/A Customizing BDOC validation policies Property Description siva.bdoc.signaturePolicy.defaultPolicy Selected default policy name Default: N/A siva.bdoc.signaturePolicy.policies[index].name Policy name Default: N/A siva.bdoc.signaturePolicy.policies[index].description Policy description Default: N/A siva.bdoc.signaturePolicy.policies[index].constraintPath Constraint XML file path for the policy. An absolute path or a reference to a resource on the classpath Default: N/A siva.bdoc.signaturePolicy.policies[index].url Policy URL Default: N/A By default, the following configuration is used siva.bdoc.signaturePolicy.policies[0].name=POLv1 siva.bdoc.signaturePolicy.policies[0].description=Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. siva.bdoc.signaturePolicy.policies[0].url=http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv1 siva.bdoc.signaturePolicy.policies[0].constraintPath=bdoc_constraint_no_type.xml siva.bdoc.signaturePolicy.policies[1].name=POLv2 siva.bdoc.signaturePolicy.policies[1].description=Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result. siva.bdoc.signaturePolicy.policies[1].url=http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv2 siva.bdoc.signaturePolicy.policies[1].constraintPath=bdoc_constraint_qes.xml siva.bdoc.signaturePolicy.defaultPolicy=POLv1 Note Default policy configuration is lost when policy detail properties (name, description, url or constraintPath) are overridden or new custom policies added in custom configuration files (in this case, the existing default policies must be redefined in configuration files explicitly) PadES validation - customize validation policies Property Description siva.pdf.signaturePolicy.defaultPolicy Selected default policy name Default: N/A siva.pdf.signaturePolicy.policies[index].name Policy name Default: N/A siva.pdf.signaturePolicy.policies[index].description Policy description Default: N/A siva.pdf.signaturePolicy.policies[index].constraintPath Constraint XML file path for the policy. An absolute path or a reference to a resource on the classpath Default: N/A siva.pdf.signaturePolicy.policies[index].url Policy URL Default: N/A By default, the following configuration is used siva.pdf.signaturePolicy.policies[0].name=POLv1 siva.pdf.signaturePolicy.policies[0].description=Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. siva.pdf.signaturePolicy.policies[0].url=http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv1 siva.pdf.signaturePolicy.policies[0].constraintPath=pdf_constraint_no_type.xml siva.pdf.signaturePolicy.policies[1].name=POLv2 siva.pdf.signaturePolicy.policies[1].description=Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result. siva.pdf.signaturePolicy.policies[1].url=http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv2 siva.pdf.signaturePolicy.policies[1].constraintPath=pdf_constraint_qes.xml siva.pdf.signaturePolicy.defaultPolicy=POLv1 Note Default policy configuration is lost when policy detail properties (name, description, url or constraintPath) are overridden or new custom policies added in custom configuration files (in this case, the existing default policies must be redefined in configuration files explicitly) DDOC validation Property Description siva.ddoc.jdigidocConfigurationFile Path to JDigidoc configuration file. Determines the Jdigidoc configuration parameters (see JDigidoc manual for details. Default: /siva-jdigidoc.cfg Customizing DDOC validation policies: Property Description siva.ddoc.signaturePolicy.defaultPolicy Selected default policy name Default: N/A siva.ddoc.signaturePolicy.policies[index].name Policy name Default: N/A siva.ddoc.signaturePolicy.policies[index].description Policy description Default: N/A siva.ddoc.signaturePolicy.policies[index].constraintPath Constraint XML file path for the policy. An absolute path or a reference to a resource on the classpath Default: N/A siva.ddoc.signaturePolicy.policies[index].url Policy URL Default: N/A By default, the following configuration is used siva.ddoc.signaturePolicy.policies[0].name=POLv1 siva.ddoc.signaturePolicy.policies[0].description=Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. siva.ddoc.signaturePolicy.policies[0].url=http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv1 siva.ddoc.signaturePolicy.policies[0].constraintPath=pdf_constraint_no_type.xml siva.ddoc.signaturePolicy.policies[1].name=POLv2 siva.ddoc.signaturePolicy.policies[1].description=Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result. siva.ddoc.signaturePolicy.policies[1].url=http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv2 siva.ddoc.signaturePolicy.policies[1].constraintPath=pdf_constraint_qes.xml siva.ddoc.signaturePolicy.defaultPolicy=POLv1 Note Default policy configuration is lost when policy detail properties (name, description, url or constraintPath) are overridden or new custom policies added in custom configuration files (in this case, the existing default policies must be redefined in configuration files explicitly) X-road validation webapp parameters X-road validation Property Description siva.xroad.validation.service.configurationDirectoryPath Directory that contains the certs of approved CA's, TSA's and list of members Default: /verificationconf Property Description siva.ddoc.signaturePolicy.defaultPolicy Selected default policy name Default: N/A siva.ddoc.signaturePolicy.policies[index].name Policy name Default: N/A siva.ddoc.signaturePolicy.policies[index].description Policy description Default: N/A siva.ddoc.signaturePolicy.policies[index].constraintPath Constraint XML file path for the policy. An absolute path or a reference to a resource on the classpath Default: N/A siva.ddoc.signaturePolicy.policies[index].url Policy URL Default: N/A By default, the following configuration is used siva.ddoc.signaturePolicy.policies[0].name=POLv1 siva.ddoc.signaturePolicy.policies[0].description=Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. siva.ddoc.signaturePolicy.policies[0].url=http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv1 siva.ddoc.signaturePolicy.policies[0].constraintPath=pdf_constraint_no_type.xml siva.ddoc.signaturePolicy.defaultPolicy= POLv1 Note Default policy configuration is lost when policy detail properties (name, description, url or constraintPath) are overridden or new custom policies added in custom configuration files (in this case, the existing default policies must be redefined in configuration files explicitly) Note By default, X-road validation currently supports only POLv1 Demo webapp parameters Linking to SiVa webapp Property Description siva.service.serviceHost An HTTP URL link to the Siva webapp Default: http://localhost:8080 siva.service.jsonServicePath Service path in Siva webapp to access the REST/JSON API Default: /validate siva.service.soapServicePath Service path in Siva webapp to access the SOAP API Default: /soap/validationWebService/validateDocument FAQ Q: SiVa webapp API-s require that you specify the document type? Is it possible to detect the container/file type automatically based on the provided file. A: There is a demo webapp that provides a reference solution. See ee.openeid.siva.sample.siva.ValidationRequestUtils for reference.","title":"10.5.2 System integrator's guide"},{"location":"siva/v2/systemintegrators_guide/#system-requirements","text":"Following are the minimum requirements to build and deploy SiVa webapps as a service: Java 8 or above Oracle JVM is supported Git version control system version 1.8 or above is recommended Minimum 2 GB of RAM. Recommended at least 4 GB of RAM Minimum 1 processor core Open internet connection 1GB of free disk space Supported operating system is Ubuntu 14.04 LTS","title":"System requirements"},{"location":"siva/v2/systemintegrators_guide/#building","text":"","title":"Building"},{"location":"siva/v2/systemintegrators_guide/#building-siva-webapps-on-ubuntu-1604","text":"First we need to install Git and Java SDK 8 by issuing below commands: sudo apt-get update sudo apt-get install git -y sudo apt-get install default-jdk -y Next we need to clone the SiVa Github repository: git clone https://github.com/open-eid/SiVa.git --branch master Final step is building the SiVa project using Maven Wrapper cd SiVa ./mvnw clean install Note The build can take up to 30 minutes because there are lot of tests that will be run through and downloading of the required dependencies To verify that SiVa project built successfully look for BUILD SUCCESS in build compilation output last lines. The last lines of build output should look very similar to below image: [INFO] Reactor Summary: [INFO] [INFO] SiVa Digitally signed documents validation service . SUCCESS [ 25.258 s] [INFO] validation-services-parent ......................... SUCCESS [ 0.479 s] [INFO] validation-commons ................................. SUCCESS [01:45 min] [INFO] tsl-loader ......................................... SUCCESS [ 16.507 s] [INFO] PDF Validation Service ............................. SUCCESS [ 42.263 s] [INFO] BDOC Validation Service ............................ SUCCESS [ 58.864 s] [INFO] DDOC Validation Service ............................ SUCCESS [ 9.929 s] [INFO] xroad-validation-service ........................... SUCCESS [ 5.664 s] [INFO] SIVa webapp and other core modules ................. SUCCESS [ 0.315 s] [INFO] SiVa validation service proxy ...................... SUCCESS [ 43.098 s] [INFO] siva-webapp ........................................ SUCCESS [04:06 min] [INFO] SiVa Sample Web application ........................ SUCCESS [04:31 min] [INFO] SiVa Web Service integration tests ................. SUCCESS [03:41 min] [INFO] siva-distribution .................................. SUCCESS [ 56.941 s] [INFO] ------------------------------------------------------------------------ [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------ [INFO] Total time: 18:30 min [INFO] Finished at: 2016-07-22T13:40:31+00:00 [INFO] Final Memory: 80M/250M [INFO] ------------------------------------------------------------------------","title":"Building SiVa webapps on Ubuntu 16.04"},{"location":"siva/v2/systemintegrators_guide/#deploying","text":"","title":"Deploying"},{"location":"siva/v2/systemintegrators_guide/#option-1-starting-webapps-from-command-line","text":"SiVa project compiles 3 fat executable JAR files that you can run after successfully building the project by issuing below commands: First start the Siva webapp ./siva-parent/siva-webapp/target/siva-webapp-3.1.0.jar Second we need to start X-road validation webapp ./validation-services-parent/xroad-validation-service/target/xroad-validation-service-3.1.0.jar The SiVa webapp by default runs on port 8080 and XRoad validation service starts up on port 8081 . Easiest way to test out validation is run SiVa demo application. Start the Demo webapp ./siva-parent/siva-sample-application/target/siva-sample-application-3.1.0.jar Now point Your browser to URL: http://localhost:9000","title":"OPTION 1 - starting webapps from command line"},{"location":"siva/v2/systemintegrators_guide/#option-2-running-webapps-as-systemd-services","text":"Maven build generates executable JAR files. This means web container and all its dependencies are package inside single JAR file. It makes a lot easier to deploy it into servers. Easiest option to setup SiVa is as systemd service in Ubuntu servers. For that we first need to create service file: vim siva-webapp.service Inside it we need to paste below text. You need to change few things in service setup file. First you must not run service as root . So it's strongly recommended to change line User=root Second You can change Java JVM options by modifying the JAVA_OPTS inside the siva-webapp.service file. Also You can change the SiVa application configuration options by modifying RUN_ARGS section in file [Unit] Description = siva-webapp After = syslog.target [Service] User = root ExecStart = /var/apps/siva-webapp.jar Environment = JAVA_OPTS=-Xmx320m RUN_ARGS=--server.port=80 SuccessExitStatus = 143 [Install] WantedBy = multi-user.target Save and close the siva-webapp.service file. Next we need to move siva-webapp-3.1.0.jar into newly created /var/apps directory and rename to JAR file to siva-webapp.jar . match Note The copied JAR filename must match option ExecStart in siva-webapp.service file sudo mkdir /var/apps sudo cp siva-parent/siva-webapp/target/executable/siva-webapp-3.1.0.jar /var/apps/siva-webapp.jar Next we need to copy the siva-webapp.service file into /lib/systemd/system directory. Then we are ready to start the siva-webapp service. sudo cp siva-webapp.service /lib/systemd/system sudo systemctl start siva-webapp Final step of setting up the siva-webapp service is to verify that service started correctly by issuing below command. systemctl status siva-webapp It should print out similar to below picture: \u25cf siva - webapp . service - siva - webapp Loaded : loaded ( / lib / systemd / system / siva - webapp . service ; disabled ; vendor preset : enabled ) Active : active ( running ) since Thu 2016 - 07 - 21 08 : 48 : 14 EDT ; 1 day 2 h ago Main PID : 15965 ( siva - webapp . jar ) Tasks : 34 Memory : 429.6 M CPU : 2 min 5.721 s CGroup : / system . slice / siva - webapp . service \u251c\u2500 15965 / bin / bash / var / apps / stage / siva - webapp . jar \u2514\u2500 15982 / usr / bin / java - Dsun . misc . URLClassPath . disableJarChecking = true - Xmx320m - jar / var / apps / stage / siva - webapp . jar Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: at eu . europa . esig . dss . tsl . service . TSLParser . getTslModel ( TSLParser . java : 143 ) Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: at eu . europa . esig . dss . tsl . service . TSLParser . call ( TSLParser . java : 129 ) Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: ... 5 common frames omitted Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: 20.07 . 2016 03 : 00 : 01.450 INFO [ pool - 3 - thread - 1 ] [ e . e . e . dss . tsl . service . TSLRepository . sync Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: 20.07 . 2016 03 : 00 : 01.450 INFO [ pool - 3 - thread - 1 ] [ e . e . e . dss . tsl . service . TSLRepository . sync","title":"OPTION 2 - running webapps as systemd services"},{"location":"siva/v2/systemintegrators_guide/#option-3-deploy-webapps-as-war-files-tomcat-setup-for-legacy-systems","text":"NOTE 1 : We do not recommend using WAR deployment option because lack of testing done on different servlet containers also possible container application libraries conflicts NOTE 2 : Each SiVa service must be deployed to separate instance of Tomcat to avoid Java JAR library version conflicts. NOTE 3 : To limit your webapp request size (this is set automatically when deploying service as jar) one needs to configure the container manually. For example, when using Tomcat 7 or Tomcat 8 - the http connector parameter maxPostSize should be configured with the desired limit. NOTE 4 : The war file must be deployed to Tomcat ROOT. First we need to download Tomcat web servlet container as of the writing latest version available in version 7 branch is 7.0.77. We will download it with wget wget http://www-eu.apache.org/dist/tomcat/tomcat-7/v7.0.70/bin/apache-tomcat-7.0.70.tar.gz Unpack it somewhere: tar xf apache-tomcat-7.0.70.tar.gz Now we should build the WAR file. We have created helper script with all the correct Maven parameters. ./war-build.sh NOTE The script will skip running the integration tests when building WAR files Final steps would be copying built WAR file into Tomcat webapps directory and starting the servlet container. cp siva-parent/siva-webapp/target/siva-webapp-3.1.0.war apache-tomcat-7.0.70/webapps ./apache-tomcat-7.0.77/bin/catalina.sh run IMPORTANT siva-webapp on startup creates etc directory where it copies the TSL validaiton certificates siva-keystore.jks . Default location for this directory is application root or $CATALINA_HOME . To change this default behavior you should set environment variable DSS_DATA_FOLDER","title":"OPTION 3  - deploy webapps as war files (Tomcat setup for legacy systems)"},{"location":"siva/v2/systemintegrators_guide/#how-to-set-war-deployed-siva-applicationproperties","text":"SiVa override properties can be set using application.properties file. The file can locate anywhare in the host system. To make properties file accessible for SiVa you need to create or edit setenv.sh placed inside bin directory. Contents of the setenv.sh file should look like: export CATALINA_OPTS = \"-Dspring.config.location=file:/path/to/application.properties\"","title":"How-to set WAR deployed SiVa application.properties"},{"location":"siva/v2/systemintegrators_guide/#smoke-testing-your-deployed-system","text":"Step 1 . Install HTTPIE httpie is more user friendly version of curl and we will use to verify that SiVa was installed and started correctly on our server. If you have Python and its package manager pip installed. Then You can issue below command: pip install httpie Step 2 . Download a sample JSON request file. http --download https://raw.githubusercontent.com/open-eid/SiVa/develop/build-helpers/sample-requests/bdoc_pass.json Step 3 . After successful download issue below command in same directory where you downloaded the file using the command below. http POST http://10.211.55.9:8080/validate < bdoc_pass.json Step 4 . Verify the output. The output of previous command should look like below screenshot. Look for signatureCount and validSignatureCount they must be equal.","title":"Smoke testing your deployed system"},{"location":"siva/v2/systemintegrators_guide/#logging","text":"By default, logging works on the INFO level and logs are directed to the system console only. Logging functionality is handled by the SLF4J logging facade and on top of the Logback framework. As a result, logging can be configured via the standard Logback configuration file through Spring boot. Additional logging appenders can be added. Consult logback documentation for more details on log file structure. For example, adding application.properties to classpath with the logging.config property logging.config = /path/to/logback.xml","title":"Logging"},{"location":"siva/v2/systemintegrators_guide/#statistics","text":"For every report validated, a statistical report is composed that collects the following data: Data Description Validation duration The time it takes to process an incoming request - measured in milliseconds Container type Container type ( text value that identifies the signature type of the incoming document: ASiC-E, XAdES, PAdES or ASiC-E (BatchSignature) ) Siva User ID String (Text data that contains the SiVa user identifier for reports (from the HTTP x-authenticated-user header) or N/A ) Total signatures count The value of the signaturesCount element in the validation report Valid signatures count The value of the validSignaturesCount element in the validation report Signature validation indication(s) Values of elements signatures/indication and signatures/subindication from the validation report. indication[/subindication] Signature country/countries Country code extracted from the signer certs. The ISO-3166-1 alpha-2 country code that is associated with signature (the signing certificate). Or constant string \"XX\" if the country cannot be determined. Signature format(s) Values of element signatures/signatureFormat from the validation report. There are two channels where this information is sent: Log feeds (at INFO level) which can be redirected to files or to a syslog feed. Google Analytics service (as GA events). Turned off by default. See Configuration parameters for further details. The format and events are described in more detail in SiVa_statistics.pdf","title":"Statistics"},{"location":"siva/v2/systemintegrators_guide/#monitoring","text":"SiVa webapps provide an endpoint for external monitoring tools to periodically check the generic service health status. Note Note that this endpoint is disabled by default. The url for accessing JSON formatted health information with HTTP GET is /monitoring/health or /monitoring/health.json . See the Interfaces section for response structure and details. Enabling and disabling the monitoring endpoint To enable the endpoint, use the following configuration parameter: endpoints.health.enabled = true Customizing external service health indicators The endpoint is implemented as a customized Spring boot health endpoint , which allows to add custom health indicators. Demo webapp and Siva webapp also include additional information about the health of their dependent services. These links to dependent web services have been preconfigured. For example, the Demo webapp is preset to check whether the Siva webapp is accessible from the following url (parameter siva.service.serviceHost value)/monitoring/health and the Siva webapp verifies that the X-road validation service webapp is accessible by checking the default url (configured by parameter siva.proxy.xroadUrl value)/monitoring/health url. However, using the following parameters, these links can be overridden: Property Description endpoints.health.links[index].name A short link name Default: N/A endpoints.health.links[index].url URL to another monitoring endpoint that produces Spring boot health endpoint compatible JSON object as a response to HTTP GET. Default: N/A endpoints.health.links[index].timeout Connection timeout (in milliseconds) Default: N/A For example: endpoints.health.links [ 0 ] .name = linkToXroad endpoints.health.links [ 0 ] .url = http://localhost:7777/monitoring/health endpoints.health.links [ 0 ] .timeout = 1000 Note The external link configuration must be explicitly set when the monitoring service on the target machine is configured to run on a different port as the target service itself(ie using the management.port option in configuration) .","title":"Monitoring"},{"location":"siva/v2/systemintegrators_guide/#configuration-parameters","text":"All SiVa webapps have been designed to run with predetermined defaults after building and without additional configuration. However, all the properties can be overridden on the service or embedded web server level, if necessary. By default, the service loads it's global configuration from the application.yml file that is packaged inside the jar file. Default configuration parameters can be overridden by providing custom application.yml in the following locations , or using command line parameters or by using other externalized configuration methods methods. For example, to configure the embedded Tomcat web server inside a fat jar to run on different port (default is 8080), change the server.port following property: server.port = 8080 Or to increase or modify the default http request limit, override the server.max-http-post-size property: server.max-http-post-size: 13981016 See the reference list of all common application properties provided by Spring boot","title":"Configuration parameters"},{"location":"siva/v2/systemintegrators_guide/#siva-webapp-parameters","text":"Updating TSL Property Description siva.tsl.loader.loadFromCache A boolean value that determines, whether the TSL disk cache is updated by downloading a new TSL in a predetermined interval Note that the cache is by default stored in a system temporary folder (can be set with system property java.io.tmpdir ) in a subdirectory named dss_cache_tsl When set to false the cache is refreshed periodically by SiVa in a predetermined interval specified by siva.tsl.loader.schedulerCron using siva.tsl.loader.url When set to true the siva uses existing cache as it's TSL. No direct polling for updates are performed. Default: false siva.tsl.loader.url A url value that points to the external TSL Default: https://ec.europa.eu/tools/lotl/eu-lotl.xml siva.tsl.loader.code Sets the LOTL code in DSS Default: EU siva.tsl.loader.schedulerCron A string in a Crontab expression format that defines the interval at which the TSL renewal process is started. The default is 03:00 every day (local time) Default: 0 0 3 * * ? siva.keystore.type Keystore type. Keystore that contains public keys to verify the signed TSL Default: JKS siva.keystore.filename Keystore that contains public keys to verify the signed TSL Default: siva-keystore.jks siva.keystore.password Keystore password. Keystore that contains public keys to verify the signed TSL Default: siva-keystore-password Note Note that the keystore file location can be overriden using environment variable DSS_DATA_FOLDER . By default the keystore file location, is expected to be on local filesystem in etc directory which is at the same level with the fat jar file (one is created, if no such directory exists). Note TSL is currently used only by PDF and BDOC validators Forward to custom X-road webapp instance Property Description siva.proxy.xroadUrl A URL where the X-Road validation requests are forwarded Default: http://localhost:8081 Collecting statistics with Google Analytics Property Description siva.statistics.google-analytics.enabled Enables/disables the service Default: false siva.statistics.google-analytics.url Statistics endpoint URL Default: http://www.google-analytics.com/batch siva.statistics.google-analytics.trackingId The Google Analytics tracking ID Default: UA-83206619-1 siva.statistics.google-analytics.dataSourceName Descriptive text of the system Default: SiVa BDOC validation parameters Property Description siva.bdoc.digidoc4JConfigurationFile Path to Digidoc4j configuration override Default: N/A Customizing BDOC validation policies Property Description siva.bdoc.signaturePolicy.defaultPolicy Selected default policy name Default: N/A siva.bdoc.signaturePolicy.policies[index].name Policy name Default: N/A siva.bdoc.signaturePolicy.policies[index].description Policy description Default: N/A siva.bdoc.signaturePolicy.policies[index].constraintPath Constraint XML file path for the policy. An absolute path or a reference to a resource on the classpath Default: N/A siva.bdoc.signaturePolicy.policies[index].url Policy URL Default: N/A By default, the following configuration is used siva.bdoc.signaturePolicy.policies[0].name=POLv1 siva.bdoc.signaturePolicy.policies[0].description=Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. siva.bdoc.signaturePolicy.policies[0].url=http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv1 siva.bdoc.signaturePolicy.policies[0].constraintPath=bdoc_constraint_no_type.xml siva.bdoc.signaturePolicy.policies[1].name=POLv2 siva.bdoc.signaturePolicy.policies[1].description=Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result. siva.bdoc.signaturePolicy.policies[1].url=http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv2 siva.bdoc.signaturePolicy.policies[1].constraintPath=bdoc_constraint_qes.xml siva.bdoc.signaturePolicy.defaultPolicy=POLv1 Note Default policy configuration is lost when policy detail properties (name, description, url or constraintPath) are overridden or new custom policies added in custom configuration files (in this case, the existing default policies must be redefined in configuration files explicitly) PadES validation - customize validation policies Property Description siva.pdf.signaturePolicy.defaultPolicy Selected default policy name Default: N/A siva.pdf.signaturePolicy.policies[index].name Policy name Default: N/A siva.pdf.signaturePolicy.policies[index].description Policy description Default: N/A siva.pdf.signaturePolicy.policies[index].constraintPath Constraint XML file path for the policy. An absolute path or a reference to a resource on the classpath Default: N/A siva.pdf.signaturePolicy.policies[index].url Policy URL Default: N/A By default, the following configuration is used siva.pdf.signaturePolicy.policies[0].name=POLv1 siva.pdf.signaturePolicy.policies[0].description=Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. siva.pdf.signaturePolicy.policies[0].url=http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv1 siva.pdf.signaturePolicy.policies[0].constraintPath=pdf_constraint_no_type.xml siva.pdf.signaturePolicy.policies[1].name=POLv2 siva.pdf.signaturePolicy.policies[1].description=Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result. siva.pdf.signaturePolicy.policies[1].url=http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv2 siva.pdf.signaturePolicy.policies[1].constraintPath=pdf_constraint_qes.xml siva.pdf.signaturePolicy.defaultPolicy=POLv1 Note Default policy configuration is lost when policy detail properties (name, description, url or constraintPath) are overridden or new custom policies added in custom configuration files (in this case, the existing default policies must be redefined in configuration files explicitly) DDOC validation Property Description siva.ddoc.jdigidocConfigurationFile Path to JDigidoc configuration file. Determines the Jdigidoc configuration parameters (see JDigidoc manual for details. Default: /siva-jdigidoc.cfg Customizing DDOC validation policies: Property Description siva.ddoc.signaturePolicy.defaultPolicy Selected default policy name Default: N/A siva.ddoc.signaturePolicy.policies[index].name Policy name Default: N/A siva.ddoc.signaturePolicy.policies[index].description Policy description Default: N/A siva.ddoc.signaturePolicy.policies[index].constraintPath Constraint XML file path for the policy. An absolute path or a reference to a resource on the classpath Default: N/A siva.ddoc.signaturePolicy.policies[index].url Policy URL Default: N/A By default, the following configuration is used siva.ddoc.signaturePolicy.policies[0].name=POLv1 siva.ddoc.signaturePolicy.policies[0].description=Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. siva.ddoc.signaturePolicy.policies[0].url=http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv1 siva.ddoc.signaturePolicy.policies[0].constraintPath=pdf_constraint_no_type.xml siva.ddoc.signaturePolicy.policies[1].name=POLv2 siva.ddoc.signaturePolicy.policies[1].description=Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result. siva.ddoc.signaturePolicy.policies[1].url=http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv2 siva.ddoc.signaturePolicy.policies[1].constraintPath=pdf_constraint_qes.xml siva.ddoc.signaturePolicy.defaultPolicy=POLv1 Note Default policy configuration is lost when policy detail properties (name, description, url or constraintPath) are overridden or new custom policies added in custom configuration files (in this case, the existing default policies must be redefined in configuration files explicitly)","title":"Siva webapp parameters"},{"location":"siva/v2/systemintegrators_guide/#x-road-validation-webapp-parameters","text":"X-road validation Property Description siva.xroad.validation.service.configurationDirectoryPath Directory that contains the certs of approved CA's, TSA's and list of members Default: /verificationconf Property Description siva.ddoc.signaturePolicy.defaultPolicy Selected default policy name Default: N/A siva.ddoc.signaturePolicy.policies[index].name Policy name Default: N/A siva.ddoc.signaturePolicy.policies[index].description Policy description Default: N/A siva.ddoc.signaturePolicy.policies[index].constraintPath Constraint XML file path for the policy. An absolute path or a reference to a resource on the classpath Default: N/A siva.ddoc.signaturePolicy.policies[index].url Policy URL Default: N/A By default, the following configuration is used siva.ddoc.signaturePolicy.policies[0].name=POLv1 siva.ddoc.signaturePolicy.policies[0].description=Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. siva.ddoc.signaturePolicy.policies[0].url=http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv1 siva.ddoc.signaturePolicy.policies[0].constraintPath=pdf_constraint_no_type.xml siva.ddoc.signaturePolicy.defaultPolicy= POLv1 Note Default policy configuration is lost when policy detail properties (name, description, url or constraintPath) are overridden or new custom policies added in custom configuration files (in this case, the existing default policies must be redefined in configuration files explicitly) Note By default, X-road validation currently supports only POLv1","title":"X-road validation webapp parameters"},{"location":"siva/v2/systemintegrators_guide/#demo-webapp-parameters","text":"Linking to SiVa webapp Property Description siva.service.serviceHost An HTTP URL link to the Siva webapp Default: http://localhost:8080 siva.service.jsonServicePath Service path in Siva webapp to access the REST/JSON API Default: /validate siva.service.soapServicePath Service path in Siva webapp to access the SOAP API Default: /soap/validationWebService/validateDocument","title":"Demo webapp parameters"},{"location":"siva/v2/systemintegrators_guide/#faq","text":"Q: SiVa webapp API-s require that you specify the document type? Is it possible to detect the container/file type automatically based on the provided file. A: There is a demo webapp that provides a reference solution. See ee.openeid.siva.sample.siva.ValidationRequestUtils for reference.","title":"FAQ"},{"location":"siva/v2/use_cases/","text":"Digitally signed document validation process Digitally signed document validation process shows how SiVa chooses validation service and possible output of validation process. User of SiVa system provides digitally signed document file in form of Base64 encoded string. The validation of file and validation policy is handled by validation services underlying libraries. In case of PDF file it will be DSS For BDOC and DDOC files we will use DigiDoc4J or when required jDigiDoc And for X-Road signatures we will use X-road signature validation utility We will log following failure cases: When file upload fails (request started but was not completed successfully) When request validation (JSON or SOAP) fails When user authentication fails - not shown in diagram above When signature validation fails \u2013 not shown in diagram above When increasing of request count fails \u2013 not shown in diagram above Certificate loading process All validation services require certificates to validate digitally signed documents. Below process shows how certificates are loaded into validation service. Loading process is done separably for each validation service. Certificate loading process is scheduled cron job inside each validation service to update currently in memory loaded certificates. This process should run after TSL loader has completed updating SiVa local copy of certificates. X-Road 6 security server SOAP request process X-Road validation process is brought out because we skip authentication process for X-Road security server interface and and use XML SOAP as input source. Validation of SOAP request XML is done in the SiVa web application module. Document validation process is described in detail in Digitally signed document validation process Validation report output id described in Interface description TSL loading use case TSL implementd in seprate module. The process is executed in two ways. When SiVa application is started As scheduled job Loading process is required action when ASiCE (BDOC) or DDOC data file extraction process DDOC data file extraction process shows how SiVa extracts data file(s) from container and possible output of data file extraction. User of SiVa system provides digitally signed DDOC file in form of Base64 encoded string. The extraction of data files is handled by underlying JDigiDoc library. We will log following failure cases: When file upload fails (request started but was not completed successfully) When request validation (JSON or SOAP) fails.","title":"10.3.2 Use cases"},{"location":"siva/v2/use_cases/#digitally-signed-document-validation-process","text":"Digitally signed document validation process shows how SiVa chooses validation service and possible output of validation process. User of SiVa system provides digitally signed document file in form of Base64 encoded string. The validation of file and validation policy is handled by validation services underlying libraries. In case of PDF file it will be DSS For BDOC and DDOC files we will use DigiDoc4J or when required jDigiDoc And for X-Road signatures we will use X-road signature validation utility We will log following failure cases: When file upload fails (request started but was not completed successfully) When request validation (JSON or SOAP) fails When user authentication fails - not shown in diagram above When signature validation fails \u2013 not shown in diagram above When increasing of request count fails \u2013 not shown in diagram above","title":"Digitally signed document validation process"},{"location":"siva/v2/use_cases/#certificate-loading-process","text":"All validation services require certificates to validate digitally signed documents. Below process shows how certificates are loaded into validation service. Loading process is done separably for each validation service. Certificate loading process is scheduled cron job inside each validation service to update currently in memory loaded certificates. This process should run after TSL loader has completed updating SiVa local copy of certificates.","title":"Certificate loading process"},{"location":"siva/v2/use_cases/#x-road-6-security-server-soap-request-process","text":"X-Road validation process is brought out because we skip authentication process for X-Road security server interface and and use XML SOAP as input source. Validation of SOAP request XML is done in the SiVa web application module. Document validation process is described in detail in Digitally signed document validation process Validation report output id described in Interface description","title":"X-Road 6 security server SOAP request process"},{"location":"siva/v2/use_cases/#tsl-loading-use-case","text":"TSL implementd in seprate module. The process is executed in two ways. When SiVa application is started As scheduled job Loading process is required action when ASiCE (BDOC) or","title":"TSL loading use case"},{"location":"siva/v2/use_cases/#ddoc-data-file-extraction-process","text":"DDOC data file extraction process shows how SiVa extracts data file(s) from container and possible output of data file extraction. User of SiVa system provides digitally signed DDOC file in form of Base64 encoded string. The extraction of data files is handled by underlying JDigiDoc library. We will log following failure cases: When file upload fails (request started but was not completed successfully) When request validation (JSON or SOAP) fails.","title":"DDOC data file extraction process"},{"location":"siva2/component_diagram/","text":"Web API Web API is standard Spring Boot Web application module inside SiVa webapp it will take in JSON or SOAP requests sent by systems that are integrated with SiVa web service API. The incoming requests will be converted to SiVa Proxy Module Java request objects. Web API module also does basic validation of incoming requests. Checking that all the required fields are present and document type is correct. When validation has been completed by proxy selected validation service the returned qualified validation report Java object will be marshalled based on incoming request to JSON or SOAP and returned to client that requested the validation. External configuration resources Optionally SiVa webapp can load in configuration file (i.e application.yml) at application startup time. Configuration file can control Spring Boot configuration options in addition to SiVa application specific options. Optionally SiVa webapp can also load in logging configuration options Validation proxy service Validation proxy service or validation service selector is Spring Boot module that will take the Web API sent request object and try to find matching validation service based on the documentType inside the request object. When matching validation service have been found the proxy request is converted to validation request and sent to matched validation service. When no matching validation service has not been found exception is raised and error object is returned to Web API module. On successful validation the qualified validation report Java object sent from validation service is returned to Web API module. Note Validation services can be added dynamically to SiVa by conforming to pattern documentType + \"ValidationService\" and new validation service module must be Maven dependency of siva-validation-proxy . Example would be BDOCValidationService . Validation reporting service Validation reporting service is optional module that can be turned on or off using configuration file. It's Spring Boot module and main purpose is to collect data about: incoming request, validation reports and errors that have been reported during validation process. When HTTP authentication header have been set the reporting service will also collect its and adds to required statistics reports. After the report object have been created the data will be sent to configured reporting service. SiVa is preconfigured to work with Google Analytics. TSL Loader TSL loader loads in contents of TSL file from given URL in online mode or from directory when using offline mode in predefined interval. Validation services All validation services use different Java library to validate given document in request. The used validation library is described in each of the validation service section. Common process that all validation services do with proxy forwarded validation process is: Convert the Base64 encoded document into InputStream byte array Check that given document is correct format (i.e valid BDOC). If not then error is thrown and validation process is terminated. After validation of signatures has been completed the validation service starts to build qualified validation report Validation report is created even validation FAILED or ended with INDETERMINATE result PDF Validation service PDF or PaDES as known in DSS validation service uses Digidoc4J DSS fork Java library PaDES validation functionality using the validation policy that complies with Estonian laws and regulations. Configurable functionality: Possibility to add additional validation policies using SiVa application.yml configuration section. BDOC validation service BDOC for ASiC compliant containers both TM and TS will latest Maven released DigiDoc4J library DDOC Validation service DDOC for previous generation digitally signed files will use latest Maven release of JDigiDoc X-Road validation service X-Road containers are similar to ASiCE containers but are not valid ASiCE containers. There we could not use DSS nor DigiDoc4J provided ASiCE validation functionality but need to X-Road developed asicverifier Java command line utility to validate these containers. Source code for asicverifier can be found in GitHub xroad-public repository *[]: Asicverfier has been integrated into SiVa as Java library. Making possible to use all the Java libraries packaged into asicverifier fat JAR. Configurable functionality: In SiVa configuration application.yml file You can define alternative location for globalconf directory to be loaded in using input stream","title":"Component diagram"},{"location":"siva2/component_diagram/#web-api","text":"Web API is standard Spring Boot Web application module inside SiVa webapp it will take in JSON or SOAP requests sent by systems that are integrated with SiVa web service API. The incoming requests will be converted to SiVa Proxy Module Java request objects. Web API module also does basic validation of incoming requests. Checking that all the required fields are present and document type is correct. When validation has been completed by proxy selected validation service the returned qualified validation report Java object will be marshalled based on incoming request to JSON or SOAP and returned to client that requested the validation.","title":"Web API"},{"location":"siva2/component_diagram/#external-configuration-resources","text":"Optionally SiVa webapp can load in configuration file (i.e application.yml) at application startup time. Configuration file can control Spring Boot configuration options in addition to SiVa application specific options. Optionally SiVa webapp can also load in logging configuration options","title":"External configuration resources"},{"location":"siva2/component_diagram/#validation-proxy-service","text":"Validation proxy service or validation service selector is Spring Boot module that will take the Web API sent request object and try to find matching validation service based on the documentType inside the request object. When matching validation service have been found the proxy request is converted to validation request and sent to matched validation service. When no matching validation service has not been found exception is raised and error object is returned to Web API module. On successful validation the qualified validation report Java object sent from validation service is returned to Web API module. Note Validation services can be added dynamically to SiVa by conforming to pattern documentType + \"ValidationService\" and new validation service module must be Maven dependency of siva-validation-proxy . Example would be BDOCValidationService .","title":"Validation proxy service"},{"location":"siva2/component_diagram/#validation-reporting-service","text":"Validation reporting service is optional module that can be turned on or off using configuration file. It's Spring Boot module and main purpose is to collect data about: incoming request, validation reports and errors that have been reported during validation process. When HTTP authentication header have been set the reporting service will also collect its and adds to required statistics reports. After the report object have been created the data will be sent to configured reporting service. SiVa is preconfigured to work with Google Analytics.","title":"Validation reporting service"},{"location":"siva2/component_diagram/#tsl-loader","text":"TSL loader loads in contents of TSL file from given URL in online mode or from directory when using offline mode in predefined interval.","title":"TSL Loader"},{"location":"siva2/component_diagram/#validation-services","text":"All validation services use different Java library to validate given document in request. The used validation library is described in each of the validation service section. Common process that all validation services do with proxy forwarded validation process is: Convert the Base64 encoded document into InputStream byte array Check that given document is correct format (i.e valid BDOC). If not then error is thrown and validation process is terminated. After validation of signatures has been completed the validation service starts to build qualified validation report Validation report is created even validation FAILED or ended with INDETERMINATE result","title":"Validation services"},{"location":"siva2/component_diagram/#pdf-validation-service","text":"PDF or PaDES as known in DSS validation service uses Digidoc4J DSS fork Java library PaDES validation functionality using the validation policy that complies with Estonian laws and regulations. Configurable functionality: Possibility to add additional validation policies using SiVa application.yml configuration section.","title":"PDF Validation service"},{"location":"siva2/component_diagram/#bdoc-validation-service","text":"BDOC for ASiC compliant containers both TM and TS will latest Maven released DigiDoc4J library","title":"BDOC validation service"},{"location":"siva2/component_diagram/#ddoc-validation-service","text":"DDOC for previous generation digitally signed files will use latest Maven release of JDigiDoc","title":"DDOC Validation service"},{"location":"siva2/component_diagram/#x-road-validation-service","text":"X-Road containers are similar to ASiCE containers but are not valid ASiCE containers. There we could not use DSS nor DigiDoc4J provided ASiCE validation functionality but need to X-Road developed asicverifier Java command line utility to validate these containers. Source code for asicverifier can be found in GitHub xroad-public repository *[]: Asicverfier has been integrated into SiVa as Java library. Making possible to use all the Java libraries packaged into asicverifier fat JAR. Configurable functionality: In SiVa configuration application.yml file You can define alternative location for globalconf directory to be loaded in using input stream","title":"X-Road validation service"},{"location":"siva2/definitions/","text":"BDOC A digital signature format that was created in order to replace the DDOC (DigiDoc) digital signature format that is specific to Estonia. DDOC A format of digitally signed files based on the ETSI TS 101 903 Standard that is called \u2018XML Advanced Electronic Signatures (XAdES)\u2019. The standard describes the structure of digitally signed documents on various levels of incorporation of additional validity verification information. DigiDoc corresponds to the XAdES profile \u2018XAdES-X-L\u2019. DSS Digital Signature Services is Java library to sign and validate European digital signature formats Fat JAR The fat JAR is the JAR, which contains classes from all the libraries, on which your project depends and, the classes of built project. JAR Java Archive is a package file format typically used to aggregate many Java class files and associated metadata and resources (text, images, etc.) into one file to distribute application software or libraries on the Java platform. JVM The Java Virtual Machine is the runtime engine of the Java Platform, which allows any program written in Java or other language compiled into Java bytecode to run on any computer that has a native JVM. Linux an operating system, based on UNIX, that runs on many different hardware platforms and whose source code is available to the public. PDF Portable document format is a file format that provides an electronic image of text or text and graphics that looks like a printed document and can be viewed, printed, and electronically transmitted. SiVa is RESTful web service providing digital signature validation services for BDOC, DDOC, PDF and X-Road files Spring Boot is a framework from the team at Pivotal, designed to simplify the bootstrapping and development of a new Spring application. The framework takes an opinionated approach to configuration, freeing developers from the need to define boilerplate configuration X-Road X-Road, the data exchange layer for information systems, is a technological and organizational environment enabling a secure Internet-based data exchange between information systems.","title":"9.1. DEFINITIONS"},{"location":"siva2/deployment/","text":"The deployment view of the architecture describes the various physical nodes in the most typical configuration for SiVa service provider. Nodes In the following section, a description of each network node element is described in detail. Node Setup description Load balancer server Load balancer distributes traffic between SiVa server nodes when there is more than one Siva server instance running. SiVa does not set any specific requirements for load balancer. As an example, the nginx reverse proxy is used. Siva server Two separate services are set up to run on SiVa server: the SiVa webapp itself and the X-road validation webapp , to provide X-road support SiVa webapp SiVa web appliction is executable Spring Boot JAR file. This means all the dependencies and servlet containers are packaged inside single JAR file. The JAR file can be placed anywhere in server and the JAR must be marked executable if its not already. There also should be separate user created to run executalbe JAR as Linux service. Read more about running Spring Boot applications as Linux system service X-road validation webapp SiVa X-Road validation service is also Spring Boot executable JAR application and also should be installed as Linux service. X-Road validation service communicates with SiVa web application over HTTP and default port is 8081 Note that X-Road separate installation is required to avoid BouncyCastle library version conflicts and class loader issues. X-road security server A standard X-road security server setup. The SiVa validation service wsdl has to be registered to provide service to other organisations using XRoad infrastructure. Setting up XRoad Security server is out of scope for SiVa documentaton (see the official installation instructions ). Demo server Demo server hosts the Demo webapp provided within SiVa project as a reference client implementation. Demo webapp - single Java web application that provides a simple form to upload and validate a signed file in Siva webapp. Demo webapp serves as a tool for evaluating and testing the validation service. Horizontal scaling Neither the Siva webapp , X-road validation webapp , nor Demo wbapp persist their state in sessions between requests. Therefore it is possible to install multiple instances of these services behind respective load balancers.","title":"9.5.1 Deployment model"},{"location":"siva2/deployment/#nodes","text":"In the following section, a description of each network node element is described in detail. Node Setup description Load balancer server Load balancer distributes traffic between SiVa server nodes when there is more than one Siva server instance running. SiVa does not set any specific requirements for load balancer. As an example, the nginx reverse proxy is used. Siva server Two separate services are set up to run on SiVa server: the SiVa webapp itself and the X-road validation webapp , to provide X-road support SiVa webapp SiVa web appliction is executable Spring Boot JAR file. This means all the dependencies and servlet containers are packaged inside single JAR file. The JAR file can be placed anywhere in server and the JAR must be marked executable if its not already. There also should be separate user created to run executalbe JAR as Linux service. Read more about running Spring Boot applications as Linux system service X-road validation webapp SiVa X-Road validation service is also Spring Boot executable JAR application and also should be installed as Linux service. X-Road validation service communicates with SiVa web application over HTTP and default port is 8081 Note that X-Road separate installation is required to avoid BouncyCastle library version conflicts and class loader issues. X-road security server A standard X-road security server setup. The SiVa validation service wsdl has to be registered to provide service to other organisations using XRoad infrastructure. Setting up XRoad Security server is out of scope for SiVa documentaton (see the official installation instructions ). Demo server Demo server hosts the Demo webapp provided within SiVa project as a reference client implementation. Demo webapp - single Java web application that provides a simple form to upload and validate a signed file in Siva webapp. Demo webapp serves as a tool for evaluating and testing the validation service.","title":"Nodes"},{"location":"siva2/deployment/#horizontal-scaling","text":"Neither the Siva webapp , X-road validation webapp , nor Demo wbapp persist their state in sessions between requests. Therefore it is possible to install multiple instances of these services behind respective load balancers.","title":"Horizontal scaling"},{"location":"siva2/deployment_view/","text":"Load balancer Load balancer can distribute traffic between SiVa nodes when there is more then one instance running. SiVa do not set any specific requirements for load balancer but in diagram the Nginx reverse proxy option is used. SiVa web application SiVa web appliction is executable Spring Boot JAR file. This means all the dependencies and servlet containers are packaged inside single JAR file. The JAR file can be placed anywhere in server and the JAR must be marked executable if its not already. There also should be separate user created to run executalbe JAR as Linux service. Read more about running Spring Boot applications as Linux system service SiVa X-Road validation service SiVa X-Road validation service is also Spring Boot executable JAR application and also should be installed as Linux service. X-Road validation service communicates with SiVa web application over HTTP and default port is 8081 X-Road separate installation is required to avoid BouncyCastle libraries version conflicts and class loader issues. Security server Into XRoad v6 security server the SiVa validation service will be registered to provide service to other organisations using XRoad infrastructure. Setting up XRoad Security server is out of scope for SiVa documentaiton.","title":"Deployment view"},{"location":"siva2/deployment_view/#load-balancer","text":"Load balancer can distribute traffic between SiVa nodes when there is more then one instance running. SiVa do not set any specific requirements for load balancer but in diagram the Nginx reverse proxy option is used.","title":"Load balancer"},{"location":"siva2/deployment_view/#siva-web-application","text":"SiVa web appliction is executable Spring Boot JAR file. This means all the dependencies and servlet containers are packaged inside single JAR file. The JAR file can be placed anywhere in server and the JAR must be marked executable if its not already. There also should be separate user created to run executalbe JAR as Linux service. Read more about running Spring Boot applications as Linux system service","title":"SiVa web application"},{"location":"siva2/deployment_view/#siva-x-road-validation-service","text":"SiVa X-Road validation service is also Spring Boot executable JAR application and also should be installed as Linux service. X-Road validation service communicates with SiVa web application over HTTP and default port is 8081 X-Road separate installation is required to avoid BouncyCastle libraries version conflicts and class loader issues.","title":"SiVa X-Road validation service"},{"location":"siva2/deployment_view/#security-server","text":"Into XRoad v6 security server the SiVa validation service will be registered to provide service to other organisations using XRoad infrastructure. Setting up XRoad Security server is out of scope for SiVa documentaiton.","title":"Security server"},{"location":"siva2/interfaces/","text":"In this section the SiVa external interfaces are described. For information of internal components and their interfaces, please refer to Structure and activities . SiVa service provides REST JSON and SOAP interfaces that enable the service users to: Request validation of signatures in a digitally signed document (i.e. signature container like BDOC,ASiC-E/PDF/...); Request validation of signature with providing data file hashes. Receive a response with the validation result of all the signatures in the document. Request datafiles inside of DDOC container Receive datafiles from DDOC container SiVa service SOAP interface supports X-Road v6. However, it is optional whether to integrate SiVa service using X-Road or using \"plain\" SOAP interface. This document only describes the SiVa service part of the interface, for the X-Road specifics visit Riigi Infos\u00fcsteemi Amet webpage . In the following subsections, the SiVa validation request and response interfaces are described in detail. Validation request interface REST JSON Endpoint POST https://<server url>/validate SOAP Endpoint POST https://<server url>/soap/validationWebService/validateDocument SOAP WSDL POST https://<server url>/soap/validationWebService/validateDocument?wsdl Validation request parameters Validation request parameters for JSON and SOAP interfaces are described in the table below. Data types of SOAP parameters are defined in the SiVa WSDL document . JSON parameter SOAP parameter Mandatory JSON data type Description document Document + String Base64 encoded string of digitally signed document to be validated filename Filename + String File name of the digitally signed document (i.e. sample.bdoc), max length 255 characters. documentType DocumentType - String If not present document type is determined automatically based on the file extension used in the filename. This parameter is necessary to differentiate XROAD ASIC-E containers from standard ASIC-E containers. Possible values: XROAD - for documents created in the X-Road information system, see also specification document of the signature format. signaturePolicy SignaturePolicy - String Can be used to change the default signature validation policy that is used by the service. See also SiVa Validation Policy for more detailed information on given policy constraints. Possible values: POLv3 - signatures with all legal levels are accepted (i.e. QES, AdESqc and AdES, according to Regulation (EU) No 910/2014.) POLv4 - the default policy. Accepted signatures depend on their type (i.e. signature, seal or unknown) and legal level (i.e. QES, AdESqc and Ades) reportType ReportType - String Can be used to change the default returned report type. Possible values: Simple - default report type. Returns overall validation result (validationConclusion block) Detailed - returns detailed information about the signatures and their validation results (validationConclusion, validationProcess and validationReportSignature. Two later ones are optionally present). Sample JSON request with mandatory parameters { \"filename\" : \"sample.bdoc\" , \"document\" : \"PD94bWwgdmVyc2lvbj0iMS4....\" } Sample JSON request with all parameters { \"filename\" : \"sample.asice\" , \"document\" : \"PD94bWwgdmVyc2lvbj0iMS4....\" , \"documentType\" : \"XROAD\" , \"signaturePolicy\" : \"POLv3\" , \"reportType\" : \"Detailed\" } Sample SOAP request <?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <ns2:ValidateDocument xmlns:ns2= \"http://soap.webapp.siva.openeid.ee/\" > <ns2:ValidationRequest> <Document> PD94bWwgdmVyc2lvbj0iMS4.... </Document> <Filename> sample.asice </Filename> <DocumentType> XROAD </DocumentType> <SignaturePolicy> POLv3 </SignaturePolicy> <ReportType> Detailed </ReportType> </ns2:ValidationRequest> </ns2:ValidateDocument> </soap:Body> </soap:Envelope> Validation request interface for hashcode Hashcode XAdES validation is supported for REST JSON and SOAP interfaces. REST JSON Endpoint POST https://<server url>/validateHashcode SOAP Endpoint POST https://<server url>/soap/hashcodeValidationWebService SOAP WSDL POST https://<server url>/soap/hashcodeValidationWebService?wsdl Validation request parameters Validation request parameters for JSON interface are described in the table below. JSON parameter SOAP parameter Mandatory JSON data type Description signatureFile SignatureFile + String Base64 encoded string of XAdES document to be validated filename Filename + String File name of the XAdES document (i.e. signature0.xml). Only XML files supported. signaturePolicy SignaturePolicy - String Can be used to change the default signature validation policy that is used by the service. See also SiVa Validation Policy for more detailed information on given policy constraints. Possible values: POLv3 - signatures with all legal levels are accepted (i.e. QES, AdESqc and AdES, according to Regulation (EU) No 910/2014.) POLv4 - the default policy. Accepted signatures depend on their type (i.e. signature, seal or unknown) and legal level (i.e. QES, AdESqc and Ades) reportType ReportType - String Can be used to change the default returned report type. Possible values: Simple - default report type. Returns overall validation result (validationConclusion block) Detailed - returns detailed information about the signatures and their validation results (validationConclusion, validationProcess and validationReportSignature. Two later ones are optionally present). datafiles DataFiles + Array Array containing the information for datafiles that signature is covering datafiles[0] DataFile + Object Object containing data file information datafiles.filename Filename + String File name of the hashed data file, max length 255 characters. datafiles.hashAlgo HashAlgo + String Hash algorithm used for hashing the data file (must match with algorithm in signature file). Accepted values are dependant of validation policy datafiles.hash Hash + String Data file hash in Base64 encoded format. Sample JSON request with mandatory parameters { \"signatureFile\" : \"PD94bWwgdmVyc2lvbj0iMS4....\" \"filename\" : \"signature0.xml\" , \"datafiles\" : [{ \"filename\" : \"test.pdf\" , \"hashAlgo\" : \"SHA256\" , \"hash\" : \"IucjUcbRo9Rke0bZLiHcwiIiplP9pSrSPr7LKln1EiI=\" }] } Sample JSON request with all parameters and multiple datafiles { \"signatureFile\" : \"sample.asice\" , \"filename\" : \"PD94bWwgdmVyc2lvbj0iMS4....\" , \"signaturePolicy\" : \"POLv3\" , \"reportType\" : \"Detailed\" , \"datafiles\" : [{ \"filename\" : \"test.pdf\" , \"hashAlgo\" : \"SHA256\" , \"hash\" : \"IucjUcbRo9Rke0bZLiHcwiIiplP9pSrSPr7LKln1EiI=\" }, { \"filename\" : \"test2.pdf\" , \"hashAlgo\" : \"SHA256\" , \"hash\" : \"IucjUcbRo9Rke0bZLiHc23SSasw9pSrSPr7LKln1EiI=\" }] } Sample SOAP request with mandatory parameters <soapenv:Envelope xmlns:soapenv= \"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:soap= \"http://soap.webapp.siva.openeid.ee/\" > <soapenv:Body> <soap:HashcodeValidationDocument> <soap:HashcodeValidationRequest> <SignatureFile> PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGlu... </SignatureFile> <Filename> signature.xml </Filename> <DataFiles> <DataFile> <Filename> test.pdf </Filename> <HashAlgo> SHA256 </HashAlgo> <Hash> IucjUcbRo9Rke0bZLiHcwiIiplP9pSrSPr7LKln1EiI= </Hash> </DataFile> </DataFiles> </soap:HashcodeValidationRequest> </soap:HashcodeValidationDocument> </soapenv:Body> </soapenv:Envelope> Sample SOAP request with all parameters and multiple datafiles <soapenv:Envelope xmlns:soapenv= \"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:soap= \"http://soap.webapp.siva.openeid.ee/\" > <soapenv:Body> <soap:HashcodeValidationDocument> <soap:HashcodeValidationRequest> <SignatureFile> PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGlu... </SignatureFile> <Filename> signature.xml </Filename> <ReportType> Simple </ReportType> <SignaturePolicy> POLv4 </SignaturePolicy> <DataFiles> <DataFile> <Filename> test.pdf </Filename> <HashAlgo> SHA256 </HashAlgo> <Hash> IucjUcbRo9Rke0bZLiHcwiIiplP9pSrSPr7LKln1EiI= </Hash> </DataFile> <DataFile> <Filename> test2.pdf </Filename> <HashAlgo> SHA256 </HashAlgo> <Hash> IucjUcbRo9Rke0bZLiHcwiIiplP9pSrSPr7LKln1EiI= </Hash> </DataFile> <DataFile> <Filename> test3.pdf </Filename> <HashAlgo> SHA256 </HashAlgo> <Hash> IucjUcbRo9Rke0bZLiHcwiIiplP9pSrSPr7LKln1EiI= </Hash> </DataFile> </DataFiles> </soap:HashcodeValidationRequest> </soap:HashcodeValidationDocument> </soapenv:Body> </soapenv:Envelope> Validation response interface The signature validation report (i.e. the validation response) for JSON and SOAP interfaces depends on what type of validation report was requested. Data types of SOAP parameters are defined in the SiVa WSDL document . Validation response parameters Simple Report (successful scenario) General structure of validation response. JSON parameter SOAP parameter Mandatory JSON data type Description validationReport ValidationReport + Object Object containing SIVA validation report validationReport. validationConclusion ValidationReport. ValidationConclusion + Object Object containing information of the validation conclusion Structure of validationConclusion block JSON parameter SOAP parameter Mandatory JSON data type Description policy Policy + Object Object containing information of the SiVa signature validation policy that was used for validation. policy.policyName Policy.PolicyName + String Name of the validation policy policy. policyDescription Policy. PolicyDescription + String Short description of the validation policy. policy.policyUrl Policy.PolicyUrl + String URL where the signature validation policy document can be downloaded. The validation policy document shall include information about validation of all the document formats, including the different validation policies that are used in case of different file formats and base libraries. signaturesCount SignaturesCount + Number Number of signatures found inside digitally signed file. validSignaturesCount ValidSignaturesCount + Number Signatures count that have validated to TOTAL-PASSED . See also Signature.Indication field. validationLevel ValidationLevel - Date Validation process against what the document is validated, only applicable on DSS based validations. Possible values: ARCHIVAL_DATA validationTime ValidationTime + Date Time of validating the signature by the service. validationWarnings ValidationWarnings - Array Array of SiVa validation warnings that do not affect the overall validation result. See also signatures.warnings parameter. validationWarnings[0] ValidationWarning + Object Object containing the warning. validationWarnings[0]. content ValidationWarning. Content + String Description of the warning. validatedDocument ValidatedDocument + Object Object containing information about validated document. validatedDocument. filename ValidatedDocument. Filename + String Digitally signed document's file name. validatedDocument. fileHashInHex ValidatedDocument. FileHashInHex - String Calculated hash in hex of validated document. validatedDocument. hashAlgo ValidatedDocument. HashAlgo - String Hash algorithm used. signatureForm SignatureForm - String Format (and optionally version) of the digitally signed document container. In case of documents in DIGIDOC-XML (DDOC) format, the \"hashcode\" suffix is used to denote that the container was validated in hashcode mode , i.e. without original data files. Possible values: DIGIDOC_XML_1.0 DIGIDOC_XML_1.0_hashcode DIGIDOC_XML_1.1 DIGIDOC_XML_1.1_hashcode DIGIDOC_XML_1.2 DIGIDOC_XML_1.2_hashcode DIGIDOC_XML_1.3 DIGIDOC_XML_1.3_hashcode ASiC_E - used in case of all ASIC-E ( BDOC ) documents and X-Road simple containers that don't use batch time-stamping (see specification document ) ASiC_E_batchsignature - used in case of X-Road containers with batch signature (see specification document ) ASiC_S - used in case of all ASIC-S documents signatures Signatures - Array Collection of signatures found in digitally signed document signatures[0] Signature + Object Signature information object signatures[0]. claimedSigningTime Signature. ClaimedSigningTime + Date Claimed signing time, i.e. signer's computer time during signature creation signatures[0].id Signature.Id + String Signature ID attribute signatures[0].indication Signature.Indication + String Overall result of the signature's validation process, according to ETSI EN 319 102-1 \"Table 5: Status indications of the signature validation process\". Note that the validation results of different signatures in one signed document (signature container) may vary. See also validSignaturesCount and SignaturesCount fields. Possible values: TOTAL-PASSED TOTAL-FAILED INDETERMINATE signatures[0]. subIndication Signature. SubIndication - String Additional subindication in case of failed or indeterminate validation result, according to ETSI EN 319 102-1 \"Table 6: Validation Report Structure and Semantics\" signatures[0].errors Signature.Errors - Array Information about validation error(s), array of error messages. signatures[0].errors[0] Signature.Errors. Error + Object Object containing the error signatures[0].errors[0]. content Signature.Errors. Error.Content + String Error message, as returned by the base library that was used for signature validation. signatures[0].info Signature.Info - Object Object containing trusted signing time information. signatures[0].info. bestSignatureTime Signature.Info. BestSignatureTime + Date Time value that is regarded as trusted signing time, denoting the earliest time when it can be trusted by the validation application (because proven by some Proof-of-Existence present in the signature) that a signature has existed. The source of the value depends on the signature profile (see also SignatureFormat parameter): - Signature with time-mark (LT_TM level) - the producedAt value of the earliest valid time-mark (OCSP confirmation of the signer's certificate) in the signature. - Signature with time-stamp (LT or LTA level) - the genTime value of the earliest valid signature time-stamp token in the signature. - Signature with BES or EPES level - the value is empty, i.e. there is no trusted signing time value available. signatures[0]. signatureFormat Signature. SignatureFormat + String Format and profile (according to Baseline Profile) of the signature. See XAdES Baseline Profile , CAdES Baseline Profile and PAdES Baseline Profile for detailed description of the Baseline Profile levels. Levels that are accepted in SiVa validation policy are described in SiVa signature validation policy Possible values: XAdES_BASELINE_B XAdES_BASELINE_B_BES XAdES_BASELINE_B_EPES XAdES_BASELINE_T XAdES_BASELINE_LT - long-term level XAdES signature where time-stamp is used as a assertion of trusted signing time XAdES_BASELINE_LT_TM - long-term level XAdES signature where time-mark is used as a assertion of trusted signing time. Used in case of BDOC signatures with time-mark profile and DIGIDOC-XML (DDOC) signatures. XAdES_BASELINE_LTA CAdES_BASELINE_B CAdES_BASELINE_T CAdES_BASELINE_LT CAdES_BASELINE_LTA PAdES_BASELINE_B PAdES_BASELINE_T PAdES_BASELINE_LT PAdES_BASELINE_LTA signatures[0]. signatureLevel Signature. SignatureLevel - String Legal level of the signature, according to Regulation (EU) No 910/2014. - Possible values on positive validation result: QESIG QESEAL QES ADESIG_QC ADESEAL_QC ADES_QC ADESIG ADESEAL ADES - Possible values on indeterminate validation result: prefix INDETERMINATE is added to the level described in positive result. For example INDETERMINATE_QESIG - Possible values on negative validation result: In addition to abovementioned NOT_ADES_QC_QSCD NOT_ADES_QC NOT_ADES NA - In case of DIGIDOC-XML 1.0..1.3 formats, value is missing as the signature level is not checked by the JDigiDoc base library that is used for validation. However, the signatures can be indirectly regarded as QES level signatures, see also SiVa Validation Policy - In case of XROAD ASICE containers the value is missing as the asicverifier base library do not check the signature level. signatures[0].signedBy Signature.SignedBy + String Signers name and identification number, i.e. value of the CN field of the signer's certificate signatures[0]. signatureScopes Signature. SignatureScopes - Array Contains information of the original data that is covered by the signature. signatures[0]. signatureScopes[0]. name Signature. SignatureScopes. SignatureScope.Name + String Name of the signature scope. signatures[0]. signatureScopes[0]. scope Signature. SignatureScopes. SignatureScope. Scope + String Type of the signature scope. signatures[0]. signatureScopes[0]. content Signature. SignatureScopes. SignatureScope. Content + String Description of the scope. signatures[0]. warnings Signature.Warnings - Array Block of validation warnings that do not affect the overall validation result. signatures[0]. warnings[0] Signature.Warnings. Warning + Object Object containing the warning signatures[0]. warnings[0]. content Signature.Warnings. Warning.Description + String Warning description, as retuned by the base library that was used for validation. timeStampTokens TimeStampTokens - Array Array containing the time stamp tokens timeStampTokens[0]. TimeStampToken + Object Object containing the time stamp token (TST) timeStampTokens[0]. indication TimeStampToken. Indication + String Result of the time stamp token validation. Possible values: TOTAL-PASSED TOTAL-FAILED timeStampTokens[0]. signedBy TimeStampToken. SignedBy + String Signer of the time stamp token. timeStampTokens[0]. signedTime TimeStampToken. SignedTime + String Time when the time stamp token was given. timeStampTokens[0]. error TimeStampToken. Errors - Array Errors returned in time stamp token validation. timeStampTokens[0]. error[0] Errors. Error + Object Object containing the error. timeStampTokens[0]. error[0]. content Error. Content + String Error description. Sample JSON response Simple Report (successful scenario) { \"validationReport\" : { \"validationConclusion\" : { \"validationTime\" : \"2017-11-07T08:14:07Z\" , \"signaturesCount\" : 1 , \"validationLevel\" : \"ARCHIVAL_DATA\" , \"validatedDocument\" : { \"filename\" : \"ValidLiveSignature.asice\" , \"fileHashInHex\" : \"0A805C920603750E0B427C3F25D7B22DCEC183DEF3CA14BE9A2D4488887DD501\" , \"hashAlgo\" : \"SHA-256\" }, \"validSignaturesCount\" : 1 , \"signatures\" : [{ \"signatureFormat\" : \"XAdES_BASELINE_LT\" , \"signedBy\" : \"NURM,AARE,38211015222\" , \"claimedSigningTime\" : \"2016-10-11T09:35:48Z\" , \"signatureLevel\" : \"QESIG\" , \"warnings\" : [{ \"content\" : \"The trusted list is not fresh!\" }], \"signatureScopes\" : [{ \"scope\" : \"FullSignatureScope\" , \"name\" : \"Tresting.txt\" , \"content\" : \"Full document\" }], \"id\" : \"S0\" , \"indication\" : \"TOTAL-PASSED\" , \"info\" : { \"bestSignatureTime\" : \"2016-10-11T09:36:10Z\" } }], \"policy\" : { \"policyDescription\" : \"Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result.\" , \"policyUrl\" : \"http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#POLv4\" , \"policyName\" : \"POLv4\" }, \"signatureForm\" : \"ASiC_E\" }}} Sample SOAP response Simple Report (successful scenario) <?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <ns2:ValidateDocumentResponse xmlns:ns2= \"http://soap.webapp.siva.openeid.ee/\" xmlns:ns3= \"http://dss.esig.europa.eu/validation/detailed-report\" xmlns:ns4= \"http://x-road.eu/xsd/identifiers\" xmlns:ns5= \"http://x-road.eu/xsd/xroad.xsd\" > <ns2:ValidationReport> <ns2:ValidationConclusion> <Policy> <PolicyDescription> Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result. </PolicyDescription> <PolicyName> POLv4 </PolicyName> <PolicyUrl> http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv4 </PolicyUrl> </Policy> <ValidationTime> 2017-11-07T08:14:07Z </ValidationTime> <ValidatedDocument> <Filename> ValidLiveSignature.asice </Filename> <FileHashInHex> 0A805C920603750E0B427C3F25D7B22DCEC183DEF3CA14BE9A2D4488887DD501 </FileHashInHex> <HashAlgo> SHA-256 </HashAlgo> </ValidatedDocument> <ValidationLevel> ARCHIVAL_DATA </ValidationLevel> <ValidationWarnings/> <SignatureForm> ASiC_E </SignatureForm> <Signatures> <Signature> <Id> S0 </Id> <SignatureFormat> XAdES_BASELINE_LT </SignatureFormat> <SignatureLevel> QESIG </SignatureLevel> <SignedBy> NURM,AARE,38211015222 </SignedBy> <Indication> TOTAL-PASSED </Indication> <SubIndication/> <Errors/> <SignatureScopes> <SignatureScope> <Name> Tresting.txt </Name> <Scope> FullSignatureScope </Scope> <Content> Full document </Content> </SignatureScope> </SignatureScopes> <ClaimedSigningTime> 2016-10-11T09:35:48Z </ClaimedSigningTime> <Warnings> <Warning> <Content> The trusted list is not fresh! </Content> </Warning> </Warnings> <Info> <bestSignatureTime> 2016-10-11T09:36:10Z </bestSignatureTime> </Info> </Signature> </Signatures> <ValidSignaturesCount> 1 </ValidSignaturesCount> <SignaturesCount> 1 </SignaturesCount> </ns2:ValidationConclusion> </ns2:ValidationReport> </ns2:ValidateDocumentResponse> </soap:Body> </soap:Envelope> Validation response parameters Detailed Report (successful scenario) General structure of validation response. JSON parameter SOAP parameter Mandatory JSON data type Description validationReport ValidationReport + Object Object containing SIVA validation report. validationReport. validationConclusion ValidationReport. ValidationConclusion + Object Object containing information of the validation conclusion. The same object that is present in Simple Report. validationReport. validationProcess ValidationReport. ValidationProcess - Object Object containing information of the validation process. This block is present only on DSS library based validations and is built on DSS detailed report. For more information visit DSS documentation . validationReportSignature ValidationReportSignature - String Base64 string of ASIC-E container that includes the detailed report and is signed by the validation service provider Sample JSON response Detailed Report (successful scenario). The report is shortened but gives general overview of structure. { \"validationReport\" : { \"validationProcess\" : { \"qmatrixBlock\" : { \"tlanalysis\" : [{ \"conclusion\" : { \"indication\" : \"PASSED\" }, \"countryCode\" : \"EU\" , \"constraint\" : [ { \"name\" : { \"nameId\" : \"QUAL_TL_FRESH\" , \"value\" : \"Is the trusted list fresh ?\" }, \"status\" : \"OK\" }, ... ] }, { \"conclusion\" : { \"indication\" : \"PASSED\" }, \"countryCode\" : \"EE\" , \"constraint\" : [{ \"name\" : { \"nameId\" : \"QUAL_TL_FRESH\" , \"value\" : \"Is the trusted list fresh ?\" }, \"status\" : \"OK\" }, ... ] } ], \"signatureAnalysis\" : [{ \"conclusion\" : { \"indication\" : \"PASSED\" }, \"signatureQualification\" : \"QESIG\" , \"constraint\" : [{ \"name\" : { \"nameId\" : \"QUAL_IS_ADES\" , \"value\" : \"Is the signature/seal an acceptable AdES (ETSI EN 319 102-1) ?\" }, \"status\" : \"OK\" }, ... ], \"id\" : \"S0\" }] }, \"basicBuildingBlocks\" : [{ \"conclusion\" : { \"indication\" : \"PASSED\" }, \"cv\" : { \"conclusion\" : { \"indication\" : \"PASSED\" }, \"constraint\" : [{ \"name\" : { \"nameId\" : \"BBB_CV_IRDOF\" , \"value\" : \"Is the reference data object(s) found?\" }, \"status\" : \"OK\" }, ... ]}, ... \"id\" : \"1561CD6BEA97B0A72664067021330509894BE1EBA586D3057D77787E5F4180A4\" , \"type\" : \"TIMESTAMP\" }, ... \"signatures\" : [{ \"validationProcessArchivalData\" : { \"conclusion\" : { \"indication\" : \"PASSED\" }, \"constraint\" : [{ \"name\" : { \"nameId\" : \"ARCH_LTVV\" , \"value\" : \"Is the result of the LTV validation process acceptable?\" }, \"status\" : \"OK\" }]}, ... }, \"id\" : \"S0\" , \"validationProcessLongTermData\" : { \"conclusion\" : { \"indication\" : \"PASSED\" }, \"constraint\" : [{ \"name\" : { \"nameId\" : \"LTV_ABSV\" , \"value\" : \"Is the result of the Basic Validation Process acceptable?\" }, \"status\" : \"OK\" }, ... }]}}] }, \"validationConclusion\" : { \"validationTime\" : \"2017-11-07T09:20:18Z\" , \"signaturesCount\" : 1 , \"validationLevel\" : \"ARCHIVAL_DATA\" , \"validatedDocument\" : { \"filename\" : \"ValidLiveSignature.asice\" , \"fileHashInHex\" : \"0A805C920603750E0B427C3F25D7B22DCEC183DEF3CA14BE9A2D4488887DD501\" , \"hashAlgo\" : \"SHA-256\" }, \"validSignaturesCount\" : 1 , \"signatures\" : [{ \"signatureFormat\" : \"XAdES_BASELINE_LT\" , \"signedBy\" : \"NURM,AARE,38211015222\" , \"claimedSigningTime\" : \"2016-10-11T09:35:48Z\" , \"signatureLevel\" : \"QESIG\" , \"signatureScopes\" : [{ \"scope\" : \"FullSignatureScope\" , \"name\" : \"Tresting.txt\" , \"content\" : \"Full document\" }], \"id\" : \"S0\" , \"indication\" : \"TOTAL-PASSED\" , \"info\" : { \"bestSignatureTime\" : \"2016-10-11T09:36:10Z\" } }], \"policy\" : { \"policyDescription\" : \"Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result.\" , \"policyUrl\" : \"http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv4\" , \"policyName\" : \"POLv4\" }, \"signatureForm\" : \"ASiC_E\" } }, \"validationReportSignature\" : \"UEsDBBQACAgIAIlaZ0sAA...\" } Sample SOAP response Simple Report (successful scenario) <?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <ns2:ValidateDocumentResponse xmlns:ns2= \"http://soap.webapp.siva.openeid.ee/\" xmlns:ns3= \"http://dss.esig.europa.eu/validation/detailed-report\" xmlns:ns4= \"http://x-road.eu/xsd/identifiers\" xmlns:ns5= \"http://x-road.eu/xsd/xroad.xsd\" > <ns2:ValidationReport> <ns2:ValidationConclusion> <Policy> <PolicyDescription> Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result. </PolicyDescription> <PolicyName> POLv4 </PolicyName> <PolicyUrl> http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv4 </PolicyUrl> </Policy> <ValidationTime> 2017-11-07T09:20:18Z </ValidationTime> <ValidatedDocument> <Filename> ValidLiveSignature.asice </Filename> <FileHashInHex> 0A805C920603750E0B427C3F25D7B22DCEC183DEF3CA14BE9A2D4488887DD501 </FileHashInHex> <HashAlgo> SHA-256 </HashAlgo> </ValidatedDocument> <ValidationLevel> ARCHIVAL_DATA </ValidationLevel> <ValidationWarnings/> <SignatureForm> ASiC-E </SignatureForm> <Signatures> <Signature> <Id> S0 </Id> <SignatureFormat> XAdES_BASELINE_LT </SignatureFormat> <SignatureLevel> QESIG </SignatureLevel> <SignedBy> NURM,AARE,38211015222 </SignedBy> <Indication> TOTAL-PASSED </Indication> <SubIndication/> <Errors/> <SignatureScopes> <SignatureScope> <Name> Tresting.txt </Name> <Scope> FullSignatureScope </Scope> <Content> Full document </Content> </SignatureScope> </SignatureScopes> <ClaimedSigningTime> 2016-10-11T09:35:48Z </ClaimedSigningTime> <Warnings/> <Info> <bestSignatureTime> 2016-10-11T09:36:10Z </bestSignatureTime> </Info> </Signature> </Signatures> <ValidSignaturesCount> 1 </ValidSignaturesCount> <SignaturesCount> 1 </SignaturesCount> </ns2:ValidationConclusion> <ns2:ValidationProcess> <ns3:Signatures Id= \"S0\" > <ns3:ValidationProcessBasicSignatures> <ns3:Constraint Id= \"S0\" > <ns3:Name NameId= \"ADEST_ROBVPIIC\" > Is the result of the Basic Validation Process conclusive? </ns3:Name> <ns3:Status> OK </ns3:Status> </ns3:Constraint> <ns3:Conclusion> <ns3:Indication> PASSED </ns3:Indication> </ns3:Conclusion> </ns3:ValidationProcessBasicSignatures> ... <ns3:ValidationProcessArchivalData> <ns3:Constraint> <ns3:Name NameId= \"ARCH_LTVV\" > Is the result of the LTV validation process acceptable? </ns3:Name> <ns3:Status> OK </ns3:Status> </ns3:Constraint> <ns3:Conclusion> <ns3:Indication> PASSED </ns3:Indication> </ns3:Conclusion> </ns3:ValidationProcessArchivalData> </ns3:Signatures> ... <ns3:BasicBuildingBlocks Id= \"S0\" Type= \"SIGNATURE\" > <ns3:FC> <ns3:Constraint> <ns3:Name NameId= \"BBB_FC_IEFF\" > Is the expected format found? </ns3:Name> <ns3:Status> OK </ns3:Status> </ns3:Constraint> ... <ns3:XCV> <ns3:Constraint> <ns3:Name NameId= \"BBB_XCV_CCCBB\" > Can the certificate chain be built till the trust anchor? </ns3:Name> <ns3:Status> OK </ns3:Status> </ns3:Constraint> </ns3:BasicBuildingBlocks> <ns3:QMatrixBlock> <ns3:TLAnalysis CountryCode= \"EU\" > ... <ns3:Constraint> <ns3:Name NameId= \"QUAL_TL_WS\" > Is the trusted list well signed ? </ns3:Name> <ns3:Status> OK </ns3:Status> </ns3:Constraint> <ns3:Conclusion> <ns3:Indication> PASSED </ns3:Indication> </ns3:Conclusion> </ns3:TLAnalysis> ... <ns3:SignatureAnalysis Id= \"S0\" SignatureQualification= \"QESig\" > <ns3:Constraint> <ns3:Name NameId= \"QUAL_IS_ADES\" > Is the signature/seal an acceptable AdES (ETSI EN 319 102-1) ? </ns3:Name> <ns3:Status> OK </ns3:Status> </ns3:Constraint> ... <ns3:Conclusion> <ns3:Indication> PASSED </ns3:Indication> </ns3:Conclusion> </ns3:SignatureAnalysis> </ns3:QMatrixBlock> </ns2:ValidationProcess> </ns2:ValidationReport> <ValidationReportSignature> UEsDBBQACAgIAIlaZ0s... </ValidationReportSignature> </ns2:ValidateDocumentResponse> </soap:Body> </soap:Envelope> Sample JSON response (error situation) In case of error (when validation report is not returned) status code 400 is returned together with following message body: { \"requestErrors\" : [{ \"message\" : \"Document malformed or not matching documentType\" , \"key\" : \"document\" }]} Sample SOAP response (error situation) <?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <soap:Fault> <faultcode> soap:Server </faultcode> <faultstring> Document malformed or not matching documentType </faultstring> </soap:Fault> </soap:Body> </soap:Envelope> Data files request interface REST JSON Endpoint POST https://<server url>/getDataFiles SOAP Endpoint POST https://<server url>/soap/dataFilesWebService/getDocumentDataFiles SOAP WSDL POST https://<server url>/soap/dataFilesWebService/getDocumentDataFiles?wsdl Data files request parameters Data files request parameters for JSON and SOAP interfaces are described in the table below. Data types of SOAP parameters are defined in the SiVa WSDL document . JSON parameter SOAP parameter Mandatory JSON data type Description document Document + String Base64 encoded string of digitally signed DDOC document filename Filename + String File name of the digitally signed document (i.e. sample.ddoc), max length 255 characters. Currently only DDOC file format is supported for this operation Sample JSON request { \"filename\" : \"sample.ddoc\" , \"document\" : \"PD94bWwgdmVyc2lvbj0iMS4....\" } Sample SOAP request <soapenv:Envelope xmlns:soapenv= \"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:soap= \"http://soap.webapp.siva.openeid.ee/\" > <soapenv:Header/> <soapenv:Body> <soap:GetDocumentDataFiles> <soap:DataFilesRequest> <Document> PD94bWwgdmVyc2lvbj0iMS4wI... </Document> <Filename> sample.ddoc </Filename> </soap:DataFilesRequest> </soap:GetDocumentDataFiles> </soapenv:Body> </soapenv:Envelope> Data files response interface Data files response parameters (successful scenario) The data file extraction report (i.e. the data files response) for JSON and SOAP interfaces is described in the table below. Data types of SOAP parameters are defined in the SiVa WSDL document . SiVa returns all data files as they are extracted by JDigiDoc library in an as is form. No extra operations or validations are done. JSON parameter SOAP parameter Mandatory JSON data type Description dataFiles DataFiles - Array Collection of data files found in digitally signed document dataFiles[0] DataFile + Object Extracted data file object dataFiles[0].fileName DataFile.FileName - String File name of the extracted data file dataFiles[0].size DataFile.Size - Long Extracted data file size in bytes dataFiles[0].base64 DataFile.Base64 - String Base64 encoded string of extracted data file dataFiles[0].mimeType DataFile.MimeType - String MIME type of the extracted data file Sample JSON response (successful scenario) { \"dataFiles\" : [{ \"fileName\" : \"Glitter-rock-4_gallery.jpg\" , \"size\" : 41114 , \"base64\" : \"/9j/4AAQSkZJ...\" , \"mimeType\" : \"application/octet-stream\" }] } Sample SOAP response (successful scenario) <?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <ns2:GetDocumentDataFilesResponse xmlns:ns2= \"http://soap.webapp.siva.openeid.ee/\" xmlns:ns3= \"http://x-road.eu/xsd/identifiers\" xmlns:ns4= \"http://x-road.eu/xsd/xroad.xsd\" > <ns2:DataFilesReport> <DataFiles> <DataFile> <Base64> UCgUCgUCgUCgUCgUCgUCgUCgUCgUCgUCgUH... </Base64> <FileName> Glitter-rock-4_gallery.jpg </FileName> <MimeType> application/octet-stream </MimeType> <Size> 41114 </Size> </DataFile> </DataFiles> </ns2:DataFilesReport> </ns2:GetDocumentDataFilesResponse> </soap:Body> </soap:Envelope> Sample JSON response (error situation) In case of error (when datafiles are not returned) status code 400 is returned together with following message body: { \"requestErrors\" : [{ \"message\" : \"Invalid document type. Can only return data files for DDOC type containers.\" , \"key\" : \"documentType\" }]} Sample SOAP response (error situation) <?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <soap:Fault> <faultcode> soap:Client </faultcode> <faultstring> Invalid document type. Can only return data files for DDOC type containers. </faultstring> </soap:Fault> </soap:Body> </soap:Envelope> Service health monitoring SiVa webapps provide an interface for external monitoring tools (to periodically check the generic service health status). The request The monitoring endpoint is accessible via HTTP GET at /monitoring/health or /monitoring/health.json url. Sample request: GET https://<server url>/monitoring/health The response As a response, a JSON object is returned with the following information: Field Description status General status of the webapp. Possible values: DOWN - when some of the dependent indicators status are down (ie when link{number}.status is DOWN, the overall service status is DOWN) UP - the default value. health.status Status of current webapp - constant value UP health.webappName The artifact name of the webapp. Taken from the MANIFEST.MF file (inside the jar/war file). health.version The release version fo the webapp. Taken from the MANIFEST.MF (inside the jar/war file). health.buildTime Build date and time (format yyyy-MM-dd'T'HH:mm:ss'Z') of the webapp. Taken from the MANIFEST.MF (inside the jar/war file). health.startTime Webapp startup date and time (format yyyy-MM-dd'T'HH:mm:ss'Z') health.currentTime Current server date and time (format yyyy-MM-dd'T'HH:mm:ss'Z') link{number}.status (OPTIONAL) Represents the status of a link to the external system that the webapp depends on. DOWN when the webapp does not respond (within a specified timeout limit - default 10 seconds) or the response is in invalid format (default Spring boot actuator /health endpoint format is expected). UP if the service responds with HTTP status code 200 and returns a valid JSON object with status \"UP\" link{number}.name (OPTIONAL) Descriptive name for the link to the external system Sample response: { \"status\" : \"UP\" , \"health\" :{ \"status\" : \"UP\" , \"webappName\" : \"siva-sample-application\" , \"version\" : \"3.1.0\" , \"buildTime\" : \"2016-10-21T15:56:21Z\" , \"startTime\" : \"2016-10-21T15:57:48Z\" , \"currentTime\" : \"2016-10-21T15:58:39Z\" }, \"link1\" :{ \"status\" : \"UP\" , \"name\" : \"sivaService\" } }","title":"9.4. INTERFACES"},{"location":"siva2/interfaces/#validation-request-interface","text":"REST JSON Endpoint POST https://<server url>/validate SOAP Endpoint POST https://<server url>/soap/validationWebService/validateDocument SOAP WSDL POST https://<server url>/soap/validationWebService/validateDocument?wsdl","title":"Validation request interface"},{"location":"siva2/interfaces/#validation-request-parameters","text":"Validation request parameters for JSON and SOAP interfaces are described in the table below. Data types of SOAP parameters are defined in the SiVa WSDL document . JSON parameter SOAP parameter Mandatory JSON data type Description document Document + String Base64 encoded string of digitally signed document to be validated filename Filename + String File name of the digitally signed document (i.e. sample.bdoc), max length 255 characters. documentType DocumentType - String If not present document type is determined automatically based on the file extension used in the filename. This parameter is necessary to differentiate XROAD ASIC-E containers from standard ASIC-E containers. Possible values: XROAD - for documents created in the X-Road information system, see also specification document of the signature format. signaturePolicy SignaturePolicy - String Can be used to change the default signature validation policy that is used by the service. See also SiVa Validation Policy for more detailed information on given policy constraints. Possible values: POLv3 - signatures with all legal levels are accepted (i.e. QES, AdESqc and AdES, according to Regulation (EU) No 910/2014.) POLv4 - the default policy. Accepted signatures depend on their type (i.e. signature, seal or unknown) and legal level (i.e. QES, AdESqc and Ades) reportType ReportType - String Can be used to change the default returned report type. Possible values: Simple - default report type. Returns overall validation result (validationConclusion block) Detailed - returns detailed information about the signatures and their validation results (validationConclusion, validationProcess and validationReportSignature. Two later ones are optionally present).","title":"Validation request parameters"},{"location":"siva2/interfaces/#sample-json-request-with-mandatory-parameters","text":"{ \"filename\" : \"sample.bdoc\" , \"document\" : \"PD94bWwgdmVyc2lvbj0iMS4....\" }","title":"Sample JSON request with mandatory parameters"},{"location":"siva2/interfaces/#sample-json-request-with-all-parameters","text":"{ \"filename\" : \"sample.asice\" , \"document\" : \"PD94bWwgdmVyc2lvbj0iMS4....\" , \"documentType\" : \"XROAD\" , \"signaturePolicy\" : \"POLv3\" , \"reportType\" : \"Detailed\" }","title":"Sample JSON request with all parameters"},{"location":"siva2/interfaces/#sample-soap-request","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <ns2:ValidateDocument xmlns:ns2= \"http://soap.webapp.siva.openeid.ee/\" > <ns2:ValidationRequest> <Document> PD94bWwgdmVyc2lvbj0iMS4.... </Document> <Filename> sample.asice </Filename> <DocumentType> XROAD </DocumentType> <SignaturePolicy> POLv3 </SignaturePolicy> <ReportType> Detailed </ReportType> </ns2:ValidationRequest> </ns2:ValidateDocument> </soap:Body> </soap:Envelope>","title":"Sample SOAP request"},{"location":"siva2/interfaces/#validation-request-interface-for-hashcode","text":"Hashcode XAdES validation is supported for REST JSON and SOAP interfaces. REST JSON Endpoint POST https://<server url>/validateHashcode SOAP Endpoint POST https://<server url>/soap/hashcodeValidationWebService SOAP WSDL POST https://<server url>/soap/hashcodeValidationWebService?wsdl","title":"Validation request interface for hashcode"},{"location":"siva2/interfaces/#validation-request-parameters_1","text":"Validation request parameters for JSON interface are described in the table below. JSON parameter SOAP parameter Mandatory JSON data type Description signatureFile SignatureFile + String Base64 encoded string of XAdES document to be validated filename Filename + String File name of the XAdES document (i.e. signature0.xml). Only XML files supported. signaturePolicy SignaturePolicy - String Can be used to change the default signature validation policy that is used by the service. See also SiVa Validation Policy for more detailed information on given policy constraints. Possible values: POLv3 - signatures with all legal levels are accepted (i.e. QES, AdESqc and AdES, according to Regulation (EU) No 910/2014.) POLv4 - the default policy. Accepted signatures depend on their type (i.e. signature, seal or unknown) and legal level (i.e. QES, AdESqc and Ades) reportType ReportType - String Can be used to change the default returned report type. Possible values: Simple - default report type. Returns overall validation result (validationConclusion block) Detailed - returns detailed information about the signatures and their validation results (validationConclusion, validationProcess and validationReportSignature. Two later ones are optionally present). datafiles DataFiles + Array Array containing the information for datafiles that signature is covering datafiles[0] DataFile + Object Object containing data file information datafiles.filename Filename + String File name of the hashed data file, max length 255 characters. datafiles.hashAlgo HashAlgo + String Hash algorithm used for hashing the data file (must match with algorithm in signature file). Accepted values are dependant of validation policy datafiles.hash Hash + String Data file hash in Base64 encoded format.","title":"Validation request parameters"},{"location":"siva2/interfaces/#sample-json-request-with-mandatory-parameters_1","text":"{ \"signatureFile\" : \"PD94bWwgdmVyc2lvbj0iMS4....\" \"filename\" : \"signature0.xml\" , \"datafiles\" : [{ \"filename\" : \"test.pdf\" , \"hashAlgo\" : \"SHA256\" , \"hash\" : \"IucjUcbRo9Rke0bZLiHcwiIiplP9pSrSPr7LKln1EiI=\" }] }","title":"Sample JSON request with mandatory parameters"},{"location":"siva2/interfaces/#sample-json-request-with-all-parameters-and-multiple-datafiles","text":"{ \"signatureFile\" : \"sample.asice\" , \"filename\" : \"PD94bWwgdmVyc2lvbj0iMS4....\" , \"signaturePolicy\" : \"POLv3\" , \"reportType\" : \"Detailed\" , \"datafiles\" : [{ \"filename\" : \"test.pdf\" , \"hashAlgo\" : \"SHA256\" , \"hash\" : \"IucjUcbRo9Rke0bZLiHcwiIiplP9pSrSPr7LKln1EiI=\" }, { \"filename\" : \"test2.pdf\" , \"hashAlgo\" : \"SHA256\" , \"hash\" : \"IucjUcbRo9Rke0bZLiHc23SSasw9pSrSPr7LKln1EiI=\" }] }","title":"Sample JSON request with all parameters and multiple datafiles"},{"location":"siva2/interfaces/#sample-soap-request-with-mandatory-parameters","text":"<soapenv:Envelope xmlns:soapenv= \"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:soap= \"http://soap.webapp.siva.openeid.ee/\" > <soapenv:Body> <soap:HashcodeValidationDocument> <soap:HashcodeValidationRequest> <SignatureFile> PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGlu... </SignatureFile> <Filename> signature.xml </Filename> <DataFiles> <DataFile> <Filename> test.pdf </Filename> <HashAlgo> SHA256 </HashAlgo> <Hash> IucjUcbRo9Rke0bZLiHcwiIiplP9pSrSPr7LKln1EiI= </Hash> </DataFile> </DataFiles> </soap:HashcodeValidationRequest> </soap:HashcodeValidationDocument> </soapenv:Body> </soapenv:Envelope>","title":"Sample SOAP request with mandatory parameters"},{"location":"siva2/interfaces/#sample-soap-request-with-all-parameters-and-multiple-datafiles","text":"<soapenv:Envelope xmlns:soapenv= \"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:soap= \"http://soap.webapp.siva.openeid.ee/\" > <soapenv:Body> <soap:HashcodeValidationDocument> <soap:HashcodeValidationRequest> <SignatureFile> PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGlu... </SignatureFile> <Filename> signature.xml </Filename> <ReportType> Simple </ReportType> <SignaturePolicy> POLv4 </SignaturePolicy> <DataFiles> <DataFile> <Filename> test.pdf </Filename> <HashAlgo> SHA256 </HashAlgo> <Hash> IucjUcbRo9Rke0bZLiHcwiIiplP9pSrSPr7LKln1EiI= </Hash> </DataFile> <DataFile> <Filename> test2.pdf </Filename> <HashAlgo> SHA256 </HashAlgo> <Hash> IucjUcbRo9Rke0bZLiHcwiIiplP9pSrSPr7LKln1EiI= </Hash> </DataFile> <DataFile> <Filename> test3.pdf </Filename> <HashAlgo> SHA256 </HashAlgo> <Hash> IucjUcbRo9Rke0bZLiHcwiIiplP9pSrSPr7LKln1EiI= </Hash> </DataFile> </DataFiles> </soap:HashcodeValidationRequest> </soap:HashcodeValidationDocument> </soapenv:Body> </soapenv:Envelope>","title":"Sample SOAP request with all parameters and multiple datafiles"},{"location":"siva2/interfaces/#validation-response-interface","text":"The signature validation report (i.e. the validation response) for JSON and SOAP interfaces depends on what type of validation report was requested. Data types of SOAP parameters are defined in the SiVa WSDL document .","title":"Validation response interface"},{"location":"siva2/interfaces/#validation-response-parameters-simple-report-successful-scenario","text":"General structure of validation response. JSON parameter SOAP parameter Mandatory JSON data type Description validationReport ValidationReport + Object Object containing SIVA validation report validationReport. validationConclusion ValidationReport. ValidationConclusion + Object Object containing information of the validation conclusion Structure of validationConclusion block JSON parameter SOAP parameter Mandatory JSON data type Description policy Policy + Object Object containing information of the SiVa signature validation policy that was used for validation. policy.policyName Policy.PolicyName + String Name of the validation policy policy. policyDescription Policy. PolicyDescription + String Short description of the validation policy. policy.policyUrl Policy.PolicyUrl + String URL where the signature validation policy document can be downloaded. The validation policy document shall include information about validation of all the document formats, including the different validation policies that are used in case of different file formats and base libraries. signaturesCount SignaturesCount + Number Number of signatures found inside digitally signed file. validSignaturesCount ValidSignaturesCount + Number Signatures count that have validated to TOTAL-PASSED . See also Signature.Indication field. validationLevel ValidationLevel - Date Validation process against what the document is validated, only applicable on DSS based validations. Possible values: ARCHIVAL_DATA validationTime ValidationTime + Date Time of validating the signature by the service. validationWarnings ValidationWarnings - Array Array of SiVa validation warnings that do not affect the overall validation result. See also signatures.warnings parameter. validationWarnings[0] ValidationWarning + Object Object containing the warning. validationWarnings[0]. content ValidationWarning. Content + String Description of the warning. validatedDocument ValidatedDocument + Object Object containing information about validated document. validatedDocument. filename ValidatedDocument. Filename + String Digitally signed document's file name. validatedDocument. fileHashInHex ValidatedDocument. FileHashInHex - String Calculated hash in hex of validated document. validatedDocument. hashAlgo ValidatedDocument. HashAlgo - String Hash algorithm used. signatureForm SignatureForm - String Format (and optionally version) of the digitally signed document container. In case of documents in DIGIDOC-XML (DDOC) format, the \"hashcode\" suffix is used to denote that the container was validated in hashcode mode , i.e. without original data files. Possible values: DIGIDOC_XML_1.0 DIGIDOC_XML_1.0_hashcode DIGIDOC_XML_1.1 DIGIDOC_XML_1.1_hashcode DIGIDOC_XML_1.2 DIGIDOC_XML_1.2_hashcode DIGIDOC_XML_1.3 DIGIDOC_XML_1.3_hashcode ASiC_E - used in case of all ASIC-E ( BDOC ) documents and X-Road simple containers that don't use batch time-stamping (see specification document ) ASiC_E_batchsignature - used in case of X-Road containers with batch signature (see specification document ) ASiC_S - used in case of all ASIC-S documents signatures Signatures - Array Collection of signatures found in digitally signed document signatures[0] Signature + Object Signature information object signatures[0]. claimedSigningTime Signature. ClaimedSigningTime + Date Claimed signing time, i.e. signer's computer time during signature creation signatures[0].id Signature.Id + String Signature ID attribute signatures[0].indication Signature.Indication + String Overall result of the signature's validation process, according to ETSI EN 319 102-1 \"Table 5: Status indications of the signature validation process\". Note that the validation results of different signatures in one signed document (signature container) may vary. See also validSignaturesCount and SignaturesCount fields. Possible values: TOTAL-PASSED TOTAL-FAILED INDETERMINATE signatures[0]. subIndication Signature. SubIndication - String Additional subindication in case of failed or indeterminate validation result, according to ETSI EN 319 102-1 \"Table 6: Validation Report Structure and Semantics\" signatures[0].errors Signature.Errors - Array Information about validation error(s), array of error messages. signatures[0].errors[0] Signature.Errors. Error + Object Object containing the error signatures[0].errors[0]. content Signature.Errors. Error.Content + String Error message, as returned by the base library that was used for signature validation. signatures[0].info Signature.Info - Object Object containing trusted signing time information. signatures[0].info. bestSignatureTime Signature.Info. BestSignatureTime + Date Time value that is regarded as trusted signing time, denoting the earliest time when it can be trusted by the validation application (because proven by some Proof-of-Existence present in the signature) that a signature has existed. The source of the value depends on the signature profile (see also SignatureFormat parameter): - Signature with time-mark (LT_TM level) - the producedAt value of the earliest valid time-mark (OCSP confirmation of the signer's certificate) in the signature. - Signature with time-stamp (LT or LTA level) - the genTime value of the earliest valid signature time-stamp token in the signature. - Signature with BES or EPES level - the value is empty, i.e. there is no trusted signing time value available. signatures[0]. signatureFormat Signature. SignatureFormat + String Format and profile (according to Baseline Profile) of the signature. See XAdES Baseline Profile , CAdES Baseline Profile and PAdES Baseline Profile for detailed description of the Baseline Profile levels. Levels that are accepted in SiVa validation policy are described in SiVa signature validation policy Possible values: XAdES_BASELINE_B XAdES_BASELINE_B_BES XAdES_BASELINE_B_EPES XAdES_BASELINE_T XAdES_BASELINE_LT - long-term level XAdES signature where time-stamp is used as a assertion of trusted signing time XAdES_BASELINE_LT_TM - long-term level XAdES signature where time-mark is used as a assertion of trusted signing time. Used in case of BDOC signatures with time-mark profile and DIGIDOC-XML (DDOC) signatures. XAdES_BASELINE_LTA CAdES_BASELINE_B CAdES_BASELINE_T CAdES_BASELINE_LT CAdES_BASELINE_LTA PAdES_BASELINE_B PAdES_BASELINE_T PAdES_BASELINE_LT PAdES_BASELINE_LTA signatures[0]. signatureLevel Signature. SignatureLevel - String Legal level of the signature, according to Regulation (EU) No 910/2014. - Possible values on positive validation result: QESIG QESEAL QES ADESIG_QC ADESEAL_QC ADES_QC ADESIG ADESEAL ADES - Possible values on indeterminate validation result: prefix INDETERMINATE is added to the level described in positive result. For example INDETERMINATE_QESIG - Possible values on negative validation result: In addition to abovementioned NOT_ADES_QC_QSCD NOT_ADES_QC NOT_ADES NA - In case of DIGIDOC-XML 1.0..1.3 formats, value is missing as the signature level is not checked by the JDigiDoc base library that is used for validation. However, the signatures can be indirectly regarded as QES level signatures, see also SiVa Validation Policy - In case of XROAD ASICE containers the value is missing as the asicverifier base library do not check the signature level. signatures[0].signedBy Signature.SignedBy + String Signers name and identification number, i.e. value of the CN field of the signer's certificate signatures[0]. signatureScopes Signature. SignatureScopes - Array Contains information of the original data that is covered by the signature. signatures[0]. signatureScopes[0]. name Signature. SignatureScopes. SignatureScope.Name + String Name of the signature scope. signatures[0]. signatureScopes[0]. scope Signature. SignatureScopes. SignatureScope. Scope + String Type of the signature scope. signatures[0]. signatureScopes[0]. content Signature. SignatureScopes. SignatureScope. Content + String Description of the scope. signatures[0]. warnings Signature.Warnings - Array Block of validation warnings that do not affect the overall validation result. signatures[0]. warnings[0] Signature.Warnings. Warning + Object Object containing the warning signatures[0]. warnings[0]. content Signature.Warnings. Warning.Description + String Warning description, as retuned by the base library that was used for validation. timeStampTokens TimeStampTokens - Array Array containing the time stamp tokens timeStampTokens[0]. TimeStampToken + Object Object containing the time stamp token (TST) timeStampTokens[0]. indication TimeStampToken. Indication + String Result of the time stamp token validation. Possible values: TOTAL-PASSED TOTAL-FAILED timeStampTokens[0]. signedBy TimeStampToken. SignedBy + String Signer of the time stamp token. timeStampTokens[0]. signedTime TimeStampToken. SignedTime + String Time when the time stamp token was given. timeStampTokens[0]. error TimeStampToken. Errors - Array Errors returned in time stamp token validation. timeStampTokens[0]. error[0] Errors. Error + Object Object containing the error. timeStampTokens[0]. error[0]. content Error. Content + String Error description.","title":"Validation response parameters Simple Report (successful scenario)"},{"location":"siva2/interfaces/#sample-json-response-simple-report-successful-scenario","text":"{ \"validationReport\" : { \"validationConclusion\" : { \"validationTime\" : \"2017-11-07T08:14:07Z\" , \"signaturesCount\" : 1 , \"validationLevel\" : \"ARCHIVAL_DATA\" , \"validatedDocument\" : { \"filename\" : \"ValidLiveSignature.asice\" , \"fileHashInHex\" : \"0A805C920603750E0B427C3F25D7B22DCEC183DEF3CA14BE9A2D4488887DD501\" , \"hashAlgo\" : \"SHA-256\" }, \"validSignaturesCount\" : 1 , \"signatures\" : [{ \"signatureFormat\" : \"XAdES_BASELINE_LT\" , \"signedBy\" : \"NURM,AARE,38211015222\" , \"claimedSigningTime\" : \"2016-10-11T09:35:48Z\" , \"signatureLevel\" : \"QESIG\" , \"warnings\" : [{ \"content\" : \"The trusted list is not fresh!\" }], \"signatureScopes\" : [{ \"scope\" : \"FullSignatureScope\" , \"name\" : \"Tresting.txt\" , \"content\" : \"Full document\" }], \"id\" : \"S0\" , \"indication\" : \"TOTAL-PASSED\" , \"info\" : { \"bestSignatureTime\" : \"2016-10-11T09:36:10Z\" } }], \"policy\" : { \"policyDescription\" : \"Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result.\" , \"policyUrl\" : \"http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#POLv4\" , \"policyName\" : \"POLv4\" }, \"signatureForm\" : \"ASiC_E\" }}}","title":"Sample JSON response Simple Report (successful scenario)"},{"location":"siva2/interfaces/#sample-soap-response-simple-report-successful-scenario","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <ns2:ValidateDocumentResponse xmlns:ns2= \"http://soap.webapp.siva.openeid.ee/\" xmlns:ns3= \"http://dss.esig.europa.eu/validation/detailed-report\" xmlns:ns4= \"http://x-road.eu/xsd/identifiers\" xmlns:ns5= \"http://x-road.eu/xsd/xroad.xsd\" > <ns2:ValidationReport> <ns2:ValidationConclusion> <Policy> <PolicyDescription> Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result. </PolicyDescription> <PolicyName> POLv4 </PolicyName> <PolicyUrl> http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv4 </PolicyUrl> </Policy> <ValidationTime> 2017-11-07T08:14:07Z </ValidationTime> <ValidatedDocument> <Filename> ValidLiveSignature.asice </Filename> <FileHashInHex> 0A805C920603750E0B427C3F25D7B22DCEC183DEF3CA14BE9A2D4488887DD501 </FileHashInHex> <HashAlgo> SHA-256 </HashAlgo> </ValidatedDocument> <ValidationLevel> ARCHIVAL_DATA </ValidationLevel> <ValidationWarnings/> <SignatureForm> ASiC_E </SignatureForm> <Signatures> <Signature> <Id> S0 </Id> <SignatureFormat> XAdES_BASELINE_LT </SignatureFormat> <SignatureLevel> QESIG </SignatureLevel> <SignedBy> NURM,AARE,38211015222 </SignedBy> <Indication> TOTAL-PASSED </Indication> <SubIndication/> <Errors/> <SignatureScopes> <SignatureScope> <Name> Tresting.txt </Name> <Scope> FullSignatureScope </Scope> <Content> Full document </Content> </SignatureScope> </SignatureScopes> <ClaimedSigningTime> 2016-10-11T09:35:48Z </ClaimedSigningTime> <Warnings> <Warning> <Content> The trusted list is not fresh! </Content> </Warning> </Warnings> <Info> <bestSignatureTime> 2016-10-11T09:36:10Z </bestSignatureTime> </Info> </Signature> </Signatures> <ValidSignaturesCount> 1 </ValidSignaturesCount> <SignaturesCount> 1 </SignaturesCount> </ns2:ValidationConclusion> </ns2:ValidationReport> </ns2:ValidateDocumentResponse> </soap:Body> </soap:Envelope>","title":"Sample SOAP response Simple Report (successful scenario)"},{"location":"siva2/interfaces/#validation-response-parameters-detailed-report-successful-scenario","text":"General structure of validation response. JSON parameter SOAP parameter Mandatory JSON data type Description validationReport ValidationReport + Object Object containing SIVA validation report. validationReport. validationConclusion ValidationReport. ValidationConclusion + Object Object containing information of the validation conclusion. The same object that is present in Simple Report. validationReport. validationProcess ValidationReport. ValidationProcess - Object Object containing information of the validation process. This block is present only on DSS library based validations and is built on DSS detailed report. For more information visit DSS documentation . validationReportSignature ValidationReportSignature - String Base64 string of ASIC-E container that includes the detailed report and is signed by the validation service provider","title":"Validation response parameters Detailed Report (successful scenario)"},{"location":"siva2/interfaces/#sample-json-response-detailed-report-successful-scenario-the-report-is-shortened-but-gives-general-overview-of-structure","text":"{ \"validationReport\" : { \"validationProcess\" : { \"qmatrixBlock\" : { \"tlanalysis\" : [{ \"conclusion\" : { \"indication\" : \"PASSED\" }, \"countryCode\" : \"EU\" , \"constraint\" : [ { \"name\" : { \"nameId\" : \"QUAL_TL_FRESH\" , \"value\" : \"Is the trusted list fresh ?\" }, \"status\" : \"OK\" }, ... ] }, { \"conclusion\" : { \"indication\" : \"PASSED\" }, \"countryCode\" : \"EE\" , \"constraint\" : [{ \"name\" : { \"nameId\" : \"QUAL_TL_FRESH\" , \"value\" : \"Is the trusted list fresh ?\" }, \"status\" : \"OK\" }, ... ] } ], \"signatureAnalysis\" : [{ \"conclusion\" : { \"indication\" : \"PASSED\" }, \"signatureQualification\" : \"QESIG\" , \"constraint\" : [{ \"name\" : { \"nameId\" : \"QUAL_IS_ADES\" , \"value\" : \"Is the signature/seal an acceptable AdES (ETSI EN 319 102-1) ?\" }, \"status\" : \"OK\" }, ... ], \"id\" : \"S0\" }] }, \"basicBuildingBlocks\" : [{ \"conclusion\" : { \"indication\" : \"PASSED\" }, \"cv\" : { \"conclusion\" : { \"indication\" : \"PASSED\" }, \"constraint\" : [{ \"name\" : { \"nameId\" : \"BBB_CV_IRDOF\" , \"value\" : \"Is the reference data object(s) found?\" }, \"status\" : \"OK\" }, ... ]}, ... \"id\" : \"1561CD6BEA97B0A72664067021330509894BE1EBA586D3057D77787E5F4180A4\" , \"type\" : \"TIMESTAMP\" }, ... \"signatures\" : [{ \"validationProcessArchivalData\" : { \"conclusion\" : { \"indication\" : \"PASSED\" }, \"constraint\" : [{ \"name\" : { \"nameId\" : \"ARCH_LTVV\" , \"value\" : \"Is the result of the LTV validation process acceptable?\" }, \"status\" : \"OK\" }]}, ... }, \"id\" : \"S0\" , \"validationProcessLongTermData\" : { \"conclusion\" : { \"indication\" : \"PASSED\" }, \"constraint\" : [{ \"name\" : { \"nameId\" : \"LTV_ABSV\" , \"value\" : \"Is the result of the Basic Validation Process acceptable?\" }, \"status\" : \"OK\" }, ... }]}}] }, \"validationConclusion\" : { \"validationTime\" : \"2017-11-07T09:20:18Z\" , \"signaturesCount\" : 1 , \"validationLevel\" : \"ARCHIVAL_DATA\" , \"validatedDocument\" : { \"filename\" : \"ValidLiveSignature.asice\" , \"fileHashInHex\" : \"0A805C920603750E0B427C3F25D7B22DCEC183DEF3CA14BE9A2D4488887DD501\" , \"hashAlgo\" : \"SHA-256\" }, \"validSignaturesCount\" : 1 , \"signatures\" : [{ \"signatureFormat\" : \"XAdES_BASELINE_LT\" , \"signedBy\" : \"NURM,AARE,38211015222\" , \"claimedSigningTime\" : \"2016-10-11T09:35:48Z\" , \"signatureLevel\" : \"QESIG\" , \"signatureScopes\" : [{ \"scope\" : \"FullSignatureScope\" , \"name\" : \"Tresting.txt\" , \"content\" : \"Full document\" }], \"id\" : \"S0\" , \"indication\" : \"TOTAL-PASSED\" , \"info\" : { \"bestSignatureTime\" : \"2016-10-11T09:36:10Z\" } }], \"policy\" : { \"policyDescription\" : \"Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result.\" , \"policyUrl\" : \"http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv4\" , \"policyName\" : \"POLv4\" }, \"signatureForm\" : \"ASiC_E\" } }, \"validationReportSignature\" : \"UEsDBBQACAgIAIlaZ0sAA...\" }","title":"Sample JSON response Detailed Report (successful scenario). The report is shortened but gives general overview of structure."},{"location":"siva2/interfaces/#sample-soap-response-simple-report-successful-scenario_1","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <ns2:ValidateDocumentResponse xmlns:ns2= \"http://soap.webapp.siva.openeid.ee/\" xmlns:ns3= \"http://dss.esig.europa.eu/validation/detailed-report\" xmlns:ns4= \"http://x-road.eu/xsd/identifiers\" xmlns:ns5= \"http://x-road.eu/xsd/xroad.xsd\" > <ns2:ValidationReport> <ns2:ValidationConclusion> <Policy> <PolicyDescription> Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result. </PolicyDescription> <PolicyName> POLv4 </PolicyName> <PolicyUrl> http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv4 </PolicyUrl> </Policy> <ValidationTime> 2017-11-07T09:20:18Z </ValidationTime> <ValidatedDocument> <Filename> ValidLiveSignature.asice </Filename> <FileHashInHex> 0A805C920603750E0B427C3F25D7B22DCEC183DEF3CA14BE9A2D4488887DD501 </FileHashInHex> <HashAlgo> SHA-256 </HashAlgo> </ValidatedDocument> <ValidationLevel> ARCHIVAL_DATA </ValidationLevel> <ValidationWarnings/> <SignatureForm> ASiC-E </SignatureForm> <Signatures> <Signature> <Id> S0 </Id> <SignatureFormat> XAdES_BASELINE_LT </SignatureFormat> <SignatureLevel> QESIG </SignatureLevel> <SignedBy> NURM,AARE,38211015222 </SignedBy> <Indication> TOTAL-PASSED </Indication> <SubIndication/> <Errors/> <SignatureScopes> <SignatureScope> <Name> Tresting.txt </Name> <Scope> FullSignatureScope </Scope> <Content> Full document </Content> </SignatureScope> </SignatureScopes> <ClaimedSigningTime> 2016-10-11T09:35:48Z </ClaimedSigningTime> <Warnings/> <Info> <bestSignatureTime> 2016-10-11T09:36:10Z </bestSignatureTime> </Info> </Signature> </Signatures> <ValidSignaturesCount> 1 </ValidSignaturesCount> <SignaturesCount> 1 </SignaturesCount> </ns2:ValidationConclusion> <ns2:ValidationProcess> <ns3:Signatures Id= \"S0\" > <ns3:ValidationProcessBasicSignatures> <ns3:Constraint Id= \"S0\" > <ns3:Name NameId= \"ADEST_ROBVPIIC\" > Is the result of the Basic Validation Process conclusive? </ns3:Name> <ns3:Status> OK </ns3:Status> </ns3:Constraint> <ns3:Conclusion> <ns3:Indication> PASSED </ns3:Indication> </ns3:Conclusion> </ns3:ValidationProcessBasicSignatures> ... <ns3:ValidationProcessArchivalData> <ns3:Constraint> <ns3:Name NameId= \"ARCH_LTVV\" > Is the result of the LTV validation process acceptable? </ns3:Name> <ns3:Status> OK </ns3:Status> </ns3:Constraint> <ns3:Conclusion> <ns3:Indication> PASSED </ns3:Indication> </ns3:Conclusion> </ns3:ValidationProcessArchivalData> </ns3:Signatures> ... <ns3:BasicBuildingBlocks Id= \"S0\" Type= \"SIGNATURE\" > <ns3:FC> <ns3:Constraint> <ns3:Name NameId= \"BBB_FC_IEFF\" > Is the expected format found? </ns3:Name> <ns3:Status> OK </ns3:Status> </ns3:Constraint> ... <ns3:XCV> <ns3:Constraint> <ns3:Name NameId= \"BBB_XCV_CCCBB\" > Can the certificate chain be built till the trust anchor? </ns3:Name> <ns3:Status> OK </ns3:Status> </ns3:Constraint> </ns3:BasicBuildingBlocks> <ns3:QMatrixBlock> <ns3:TLAnalysis CountryCode= \"EU\" > ... <ns3:Constraint> <ns3:Name NameId= \"QUAL_TL_WS\" > Is the trusted list well signed ? </ns3:Name> <ns3:Status> OK </ns3:Status> </ns3:Constraint> <ns3:Conclusion> <ns3:Indication> PASSED </ns3:Indication> </ns3:Conclusion> </ns3:TLAnalysis> ... <ns3:SignatureAnalysis Id= \"S0\" SignatureQualification= \"QESig\" > <ns3:Constraint> <ns3:Name NameId= \"QUAL_IS_ADES\" > Is the signature/seal an acceptable AdES (ETSI EN 319 102-1) ? </ns3:Name> <ns3:Status> OK </ns3:Status> </ns3:Constraint> ... <ns3:Conclusion> <ns3:Indication> PASSED </ns3:Indication> </ns3:Conclusion> </ns3:SignatureAnalysis> </ns3:QMatrixBlock> </ns2:ValidationProcess> </ns2:ValidationReport> <ValidationReportSignature> UEsDBBQACAgIAIlaZ0s... </ValidationReportSignature> </ns2:ValidateDocumentResponse> </soap:Body> </soap:Envelope>","title":"Sample SOAP response Simple Report (successful scenario)"},{"location":"siva2/interfaces/#sample-json-response-error-situation","text":"In case of error (when validation report is not returned) status code 400 is returned together with following message body: { \"requestErrors\" : [{ \"message\" : \"Document malformed or not matching documentType\" , \"key\" : \"document\" }]}","title":"Sample JSON response (error situation)"},{"location":"siva2/interfaces/#sample-soap-response-error-situation","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <soap:Fault> <faultcode> soap:Server </faultcode> <faultstring> Document malformed or not matching documentType </faultstring> </soap:Fault> </soap:Body> </soap:Envelope>","title":"Sample SOAP response (error situation)"},{"location":"siva2/interfaces/#data-files-request-interface","text":"REST JSON Endpoint POST https://<server url>/getDataFiles SOAP Endpoint POST https://<server url>/soap/dataFilesWebService/getDocumentDataFiles SOAP WSDL POST https://<server url>/soap/dataFilesWebService/getDocumentDataFiles?wsdl","title":"Data files request interface"},{"location":"siva2/interfaces/#data-files-request-parameters","text":"Data files request parameters for JSON and SOAP interfaces are described in the table below. Data types of SOAP parameters are defined in the SiVa WSDL document . JSON parameter SOAP parameter Mandatory JSON data type Description document Document + String Base64 encoded string of digitally signed DDOC document filename Filename + String File name of the digitally signed document (i.e. sample.ddoc), max length 255 characters. Currently only DDOC file format is supported for this operation","title":"Data files request parameters"},{"location":"siva2/interfaces/#sample-json-request","text":"{ \"filename\" : \"sample.ddoc\" , \"document\" : \"PD94bWwgdmVyc2lvbj0iMS4....\" }","title":"Sample JSON request"},{"location":"siva2/interfaces/#sample-soap-request_1","text":"<soapenv:Envelope xmlns:soapenv= \"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:soap= \"http://soap.webapp.siva.openeid.ee/\" > <soapenv:Header/> <soapenv:Body> <soap:GetDocumentDataFiles> <soap:DataFilesRequest> <Document> PD94bWwgdmVyc2lvbj0iMS4wI... </Document> <Filename> sample.ddoc </Filename> </soap:DataFilesRequest> </soap:GetDocumentDataFiles> </soapenv:Body> </soapenv:Envelope>","title":"Sample SOAP request"},{"location":"siva2/interfaces/#data-files-response-interface","text":"","title":"Data files response interface"},{"location":"siva2/interfaces/#data-files-response-parameters-successful-scenario","text":"The data file extraction report (i.e. the data files response) for JSON and SOAP interfaces is described in the table below. Data types of SOAP parameters are defined in the SiVa WSDL document . SiVa returns all data files as they are extracted by JDigiDoc library in an as is form. No extra operations or validations are done. JSON parameter SOAP parameter Mandatory JSON data type Description dataFiles DataFiles - Array Collection of data files found in digitally signed document dataFiles[0] DataFile + Object Extracted data file object dataFiles[0].fileName DataFile.FileName - String File name of the extracted data file dataFiles[0].size DataFile.Size - Long Extracted data file size in bytes dataFiles[0].base64 DataFile.Base64 - String Base64 encoded string of extracted data file dataFiles[0].mimeType DataFile.MimeType - String MIME type of the extracted data file","title":"Data files response parameters (successful scenario)"},{"location":"siva2/interfaces/#sample-json-response-successful-scenario","text":"{ \"dataFiles\" : [{ \"fileName\" : \"Glitter-rock-4_gallery.jpg\" , \"size\" : 41114 , \"base64\" : \"/9j/4AAQSkZJ...\" , \"mimeType\" : \"application/octet-stream\" }] }","title":"Sample JSON response (successful scenario)"},{"location":"siva2/interfaces/#sample-soap-response-successful-scenario","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <ns2:GetDocumentDataFilesResponse xmlns:ns2= \"http://soap.webapp.siva.openeid.ee/\" xmlns:ns3= \"http://x-road.eu/xsd/identifiers\" xmlns:ns4= \"http://x-road.eu/xsd/xroad.xsd\" > <ns2:DataFilesReport> <DataFiles> <DataFile> <Base64> UCgUCgUCgUCgUCgUCgUCgUCgUCgUCgUCgUH... </Base64> <FileName> Glitter-rock-4_gallery.jpg </FileName> <MimeType> application/octet-stream </MimeType> <Size> 41114 </Size> </DataFile> </DataFiles> </ns2:DataFilesReport> </ns2:GetDocumentDataFilesResponse> </soap:Body> </soap:Envelope>","title":"Sample SOAP response (successful scenario)"},{"location":"siva2/interfaces/#sample-json-response-error-situation_1","text":"In case of error (when datafiles are not returned) status code 400 is returned together with following message body: { \"requestErrors\" : [{ \"message\" : \"Invalid document type. Can only return data files for DDOC type containers.\" , \"key\" : \"documentType\" }]}","title":"Sample JSON response (error situation)"},{"location":"siva2/interfaces/#sample-soap-response-error-situation_1","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <soap:Fault> <faultcode> soap:Client </faultcode> <faultstring> Invalid document type. Can only return data files for DDOC type containers. </faultstring> </soap:Fault> </soap:Body> </soap:Envelope>","title":"Sample SOAP response (error situation)"},{"location":"siva2/interfaces/#service-health-monitoring","text":"SiVa webapps provide an interface for external monitoring tools (to periodically check the generic service health status).","title":"Service health monitoring"},{"location":"siva2/interfaces/#the-request","text":"The monitoring endpoint is accessible via HTTP GET at /monitoring/health or /monitoring/health.json url. Sample request: GET https://<server url>/monitoring/health","title":"The request"},{"location":"siva2/interfaces/#the-response","text":"As a response, a JSON object is returned with the following information: Field Description status General status of the webapp. Possible values: DOWN - when some of the dependent indicators status are down (ie when link{number}.status is DOWN, the overall service status is DOWN) UP - the default value. health.status Status of current webapp - constant value UP health.webappName The artifact name of the webapp. Taken from the MANIFEST.MF file (inside the jar/war file). health.version The release version fo the webapp. Taken from the MANIFEST.MF (inside the jar/war file). health.buildTime Build date and time (format yyyy-MM-dd'T'HH:mm:ss'Z') of the webapp. Taken from the MANIFEST.MF (inside the jar/war file). health.startTime Webapp startup date and time (format yyyy-MM-dd'T'HH:mm:ss'Z') health.currentTime Current server date and time (format yyyy-MM-dd'T'HH:mm:ss'Z') link{number}.status (OPTIONAL) Represents the status of a link to the external system that the webapp depends on. DOWN when the webapp does not respond (within a specified timeout limit - default 10 seconds) or the response is in invalid format (default Spring boot actuator /health endpoint format is expected). UP if the service responds with HTTP status code 200 and returns a valid JSON object with status \"UP\" link{number}.name (OPTIONAL) Descriptive name for the link to the external system Sample response: { \"status\" : \"UP\" , \"health\" :{ \"status\" : \"UP\" , \"webappName\" : \"siva-sample-application\" , \"version\" : \"3.1.0\" , \"buildTime\" : \"2016-10-21T15:56:21Z\" , \"startTime\" : \"2016-10-21T15:57:48Z\" , \"currentTime\" : \"2016-10-21T15:58:39Z\" }, \"link1\" :{ \"status\" : \"UP\" , \"name\" : \"sivaService\" } }","title":"The response"},{"location":"siva2/introduction/","text":"SiVa is digital signature validation web service that provides SOAP and JSON API to validate following file types: Older Estonian digital signature files with DDOC extension BDOC containers with TimeMark and TimeStamp signatures Digitally signed PDF files X-Road security server ASiCE signature containers Architecture document main purpose is to give overview what SiVa is. Give an overview of it's internal processes and provide information when deploying it to production environment. SiVa architecture document sections overview Below list will give You an overview of what each section of the SiVa architecture document will cover: Overview - gives overview what SiVa is and it's main features. Regulatory environment - legal analysis and standards that are used when building SiVa application Component diagram - gives overview of main SiVa subsystems and and and base validation Java libraries used for different validation services Deployment view - gives general overview of servers required when deploying SiVa validation web service into production Interfaces - Description of SiVa SOAP and JSON API request and response Database schema - description of SiVa validation administration service database Use cases - describes main processes in SiVa validation web service Deploying - how to build, deploy and configure SiVa web service Logging - how to configure and setup SiVa validation service logging support Download documentation Download documentation in PDF format","title":"Introduction"},{"location":"siva2/introduction/#siva-architecture-document-sections-overview","text":"Below list will give You an overview of what each section of the SiVa architecture document will cover: Overview - gives overview what SiVa is and it's main features. Regulatory environment - legal analysis and standards that are used when building SiVa application Component diagram - gives overview of main SiVa subsystems and and and base validation Java libraries used for different validation services Deployment view - gives general overview of servers required when deploying SiVa validation web service into production Interfaces - Description of SiVa SOAP and JSON API request and response Database schema - description of SiVa validation administration service database Use cases - describes main processes in SiVa validation web service Deploying - how to build, deploy and configure SiVa web service Logging - how to configure and setup SiVa validation service logging support","title":"SiVa architecture document sections overview"},{"location":"siva2/introduction/#download-documentation","text":"Download documentation in PDF format","title":"Download documentation"},{"location":"siva2/links/","text":"https://www.ria.ee/ee/xtee-teenuste-arendamine.html - XRoad impolentations guides to be used for SiVa XRoad implementation","title":"Links"},{"location":"siva2/logging/","text":"Logging functionality is handled by the SLF4J logging facade and on top of it the Logback framework is used. As a result, logging can be configured via the standard Logback configuration file. By default, logging works on the INFO level and logs are directed to the system console as well as a log file. The logback xml configuration file can be found at: pdfValidator/pdf-validator-webapp/src/main/resources/logback.xml and when compiled the file will reside at WEB-INF/classes/logback.xml within the packaged war. There is also a possibility to set the location of the default configuration file with a system property logback.configurationFile as a JVM argument. The value of this property can be a URL, a resource on the class path or a path to a file external to the application. java -Dlogback.configurationFile = /path/to/config.xml In this configuration file there are three appenders: STDOUT (logs to standard output), FILE (logs to a file) and SYSLOG (logs to syslog server over the network). To disable certain appender from logging, commenting out its appender-ref is sufficient, but it is recommended that the appender itself should also be commented out. For example to disable SYSLOG appender (which is the default configuration), then one can use following configuration: <!-- <appender name=\"SYSLOG\" class=\"ch.qos.logback.classic.net.SyslogAppender\"> <syslogHost>enter\\_ip\\_or\\_hostname\\_here</syslogHost> <port>514</port> <facility>USER</facility> <filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\"> <level>INFO</level> </filter> <suffixPattern>%-5level %logger{0}:%L \\[%thread\\] - %msg</suffixPattern> </appender> --> <root level= \"DEBUG\" > <appender-ref ref= \"STDOUT\" /> <appender-ref ref= \"FILE\" /> <!--<appender-ref ref=\"SYSLOG\"/>--> </root> Logback configuration manual: http://logback.qos.ch/manual/ STDOUT appender Default the log level is set to DEBUG Appender output pattern is: %d{HH:mm:ss.SSS} %-5level %logger{0}:%L [%thread] - %msg%n FILE appender Default log level is set to INFO uses RollingFileAppender configured with TimeBasedRollingPolicy . Current configuration makes a seperate logfile for each day and each file is kept for 30 days . PS! keep in mind when using relative destination file path, then the path is added at the end of the currently working directory, i.e. where the application was started. (Current day's logfile path: logs/pdf-validator-webapp.log , prievious days pattern: logs/pdf-validator-webapp.%d{yyyy-MM-dd}.log) Appender output pattern is: %d{HH:mm:ss.SSS} %-5level %logger{0}:%L \\[%thread\\] - %msg%n -Dlogback.configurationFile=config.xml SYSLOG appender Default log level is set to INFO Target's ip/hostname and port are configurable Syslog messsages' severity is configurable Syslog messages' payload's timestamp and hostname part are created implicitly and the suffixpattern is: %-5level %logger{0}:%L \\[%thread\\] - %msg","title":"Logging"},{"location":"siva2/logging/#stdout-appender","text":"Default the log level is set to DEBUG Appender output pattern is: %d{HH:mm:ss.SSS} %-5level %logger{0}:%L [%thread] - %msg%n","title":"STDOUT appender"},{"location":"siva2/logging/#file-appender","text":"Default log level is set to INFO uses RollingFileAppender configured with TimeBasedRollingPolicy . Current configuration makes a seperate logfile for each day and each file is kept for 30 days . PS! keep in mind when using relative destination file path, then the path is added at the end of the currently working directory, i.e. where the application was started. (Current day's logfile path: logs/pdf-validator-webapp.log , prievious days pattern: logs/pdf-validator-webapp.%d{yyyy-MM-dd}.log) Appender output pattern is: %d{HH:mm:ss.SSS} %-5level %logger{0}:%L \\[%thread\\] - %msg%n -Dlogback.configurationFile=config.xml","title":"FILE appender"},{"location":"siva2/logging/#syslog-appender","text":"Default log level is set to INFO Target's ip/hostname and port are configurable Syslog messsages' severity is configurable Syslog messages' payload's timestamp and hostname part are created implicitly and the suffixpattern is: %-5level %logger{0}:%L \\[%thread\\] - %msg","title":"SYSLOG appender"},{"location":"siva2/overview/","text":"What is SiVa? SiVa (Signature Validation) web service provides JSON and SOAP based API web interface to validate digital signatures. Please take a look in Validation Policy section for supported formats and applied constraints. SiVa uses following Java libraries and command line utilities: DigiDoc4J Java library to validate BDOC containers. Supported signature types are TimeStamp and TimeMark JDigiDoc Java library is used to validate DDOC containers. X-Road ASiCE containers are validated using X-Road security server project provided command line utility EU DSS (Digital Signature Service) library is used to validate all other types of digital signatures that are not covered above. Validation libraries DigiDoc4j EU DSS fork DigiDoc4J EU DSS fork is used as the main validation library. The fork includes Estonian specific changes and may not be suitable for all signatures. SiVa will use the following functionality of EU DSS library: XAdES/CAdES/PAdES Validation Functionality ASIC-E and ASIC-S container validation TSL loading functionality DigiDoc4J DigiDoc4J is used to validate both TimeMark and TimeStamp based BDOC containers. For more information on DigiDoc4J visit Github SiVa will use the following functionality of DigiDoc4J: BDOC validation functionality JDigiDoc JDigiDoc is used to validate DDOC containers. For more information on JDigiDoc visit GitHub SiVa will use the following functionality of JDigiDoc: DDOC validation functionality X-Road signature validation utility X-Road signature validation utility is command line tool to validate X-Road Security server generated ASiCe files. For more information on this utility visit GitHub Main features of SiVa validation service: SOAP and REST/JSON API to validate signatures. SOAP and REST/JSON API to retrieve data files from DDOC containers. SOAP API is compadible with X-Road v6. Signing of validation report.","title":"9.2. BACKGROUND"},{"location":"siva2/overview/#what-is-siva","text":"SiVa (Signature Validation) web service provides JSON and SOAP based API web interface to validate digital signatures. Please take a look in Validation Policy section for supported formats and applied constraints. SiVa uses following Java libraries and command line utilities: DigiDoc4J Java library to validate BDOC containers. Supported signature types are TimeStamp and TimeMark JDigiDoc Java library is used to validate DDOC containers. X-Road ASiCE containers are validated using X-Road security server project provided command line utility EU DSS (Digital Signature Service) library is used to validate all other types of digital signatures that are not covered above.","title":"What is SiVa?"},{"location":"siva2/overview/#validation-libraries","text":"","title":"Validation libraries"},{"location":"siva2/overview/#digidoc4j-eu-dss-fork","text":"DigiDoc4J EU DSS fork is used as the main validation library. The fork includes Estonian specific changes and may not be suitable for all signatures. SiVa will use the following functionality of EU DSS library: XAdES/CAdES/PAdES Validation Functionality ASIC-E and ASIC-S container validation TSL loading functionality","title":"DigiDoc4j EU DSS fork"},{"location":"siva2/overview/#digidoc4j","text":"DigiDoc4J is used to validate both TimeMark and TimeStamp based BDOC containers. For more information on DigiDoc4J visit Github SiVa will use the following functionality of DigiDoc4J: BDOC validation functionality","title":"DigiDoc4J"},{"location":"siva2/overview/#jdigidoc","text":"JDigiDoc is used to validate DDOC containers. For more information on JDigiDoc visit GitHub SiVa will use the following functionality of JDigiDoc: DDOC validation functionality","title":"JDigiDoc"},{"location":"siva2/overview/#x-road-signature-validation-utility","text":"X-Road signature validation utility is command line tool to validate X-Road Security server generated ASiCe files. For more information on this utility visit GitHub","title":"X-Road signature validation utility"},{"location":"siva2/overview/#main-features-of-siva-validation-service","text":"SOAP and REST/JSON API to validate signatures. SOAP and REST/JSON API to retrieve data files from DDOC containers. SOAP API is compadible with X-Road v6. Signing of validation report.","title":"Main features of SiVa validation service:"},{"location":"siva2/qa_strategy/","text":"Introduction The goal of this document is to give general overview of the used infrastructure, processes, schedule and actions to ensure good quality delivery. The document describes activities in the whole software development process. Analysis, development and testing are separated for the sake of structure and transparency although they are integral parts of the development cycle. This is living document and will be constantly updated as the project evolves. Environments and infrastructure There are different test environments for quality assurance, depending on the nature and aim. TravisCI environment for public CI - Platform: Linux Test environment for local test and load test - Platform: Linux Instructions how to set up test enviroment and run tests together with more info can be found in SiVa GitHub page System requirements: At least 2GB of RAM on machine where the build is executed Minimum required Java version is Java 8 SiVa project provided Maven Wrapper (./mvnw) Tools used: TravisCI \u2013 is a continuous integration service used to build and test software projects hosted at GitHub Jenkins \u2013 is an open source continuous integration tool written in Java. JMeter \u2013 tool for creating and running load tests. IntelliJ IDEA \u2013 is a Java integrated development environment(IDE) for developing and executing automated tests locally Apache Tomcat - is an open source servlet container developed by the Apache Software Foundation. Docker \u2013 is an open-source project that automates the deployment of applications inside software containers, by providing an additional layer of abstraction and automation of operating-system-level virtualization on Linux. Rest-Assured - is a Java DSL(Domain-specific language) for simplifying testing of REST based Services built on top of HTTP Builder. Analysis Analysis will be tagged with identificators to enable cross-reference between requirements and corresponding tests. This includes both functional and non-functional requirements. See documents (2) and (3) in References Development Development process Customized process based on Kanban is used in the development. The process consists of following elements: Product backlog is maintained JIRA Tasks are maintained through JIRA Kanban board Daily team stand-ups are held Tasks marked done are developed, tested and ready to be shipped Bi-weekly meetings are held to give status on progress and discuss open questions Issue lifecycle Each ticket in JIRA Kanban board goes through the following states that correspond the development procedure described in previous chapter. Description of states: Awaiting analysis - ticket to be dealt with, product backlog. Awaiting implementation - ticket analysed and ready to be implemented. In progress - ticket is being handled (feature coding, document writing, ...). In Review - ticket is ready for review Resolved - ticket is ready for test Closed - ticket has been tested and found ready for release QA activities and quality criterias in the development Process improvement The development process is constantly monitored and adjusted to the changing situations. Retrospective meetings for process feedback are held. Unit tests It is responsibility of developer to write, maintain and execute the unit tests on developed features. The code must compile and pass unit tests before it is allowed to be submitted to the code repository. The code of the unit tests is integral part of the source code and is maintained on the same principles. Unit tests are also automatically executed on each build, if the unit tests do not pass further test execution is stopped. Static testing/code reviews All changes (including changes in unit test code) are reviewed by another development team member using GitHub. The code must pass review before it is submitted to testing. SonarLint is used to validate code automatically. It integrates both suggested tools mentioned in reference document (3) References Testing Approach Testing follows the principles described in reference document (1) in References The goal is to automate as much of the testing process as possible, however some aspects of the testing will be carried out manually. As the development is carried out by the backlog priority the testing follows the same principle. After each feature release test cases, test automation code and test results will be available through GitHub. Testing process All automatic tests, except load tests will follow the same execution process. The tests are ran automatically during the project build process by Travis CI after each push in GitHub. Test case management Test cases are handled as integral part of test automation code. The same applies on manual tests, in manual test cases some portion of automation may be used to execute the tests but the results are verified manually. All the test cases and test code will be maintained in the GitHub. Test cases are developed and maintained together with test automation code by the QA specialist for Integration and System Testing. Following elements will be present in test cases: TestCaseID: unique ID that makes possible to identify specific test case TestType: Automated, Automated SoapUI or Manual Requirement: Reference to the requirement that is tested Title: Description of the test Expected Result: expected outcome of the test (pass criteria for the test) File: input test file that is used Test case sample Automatic and manual test cases will have the same description principles (shown below). /** * TestCaseID: Bdoc-ValidationFail-27 * * TestType: Automated * * Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 * * Title: Bdoc OCSP response doesn ' t correspond to the signers certificate * * Expected Result: The document should fail the validation * * File: NS28_WrongSignerCertInOCSPResp.bdoc */ @Test public void bdocWrongSignersCertInOcspResponse () { setTestFilesDirectory ( \"bdoc/live/timemark/\" ) ; post ( validationRequestFor ( \"NS28_WrongSignerCertInOCSPResp.bdoc\" )) .then () .body ( \"signatures[0].indication\" , Matchers.is ( \"TOTAL-FAILED\" )) .body ( \"signatures[0].subIndication\" , Matchers.is ( \"TRY_LATER\" )) .body ( \"signatures[0].errors.content\" , Matchers.hasItem ( \"No revocation data for the certificate\" )) .body ( \"validSignaturesCount\" , Matchers.is ( 0 )) ; } Defect management All found defects will be reported and handled in Jira. The defect report will follow similar lifecycle in JIRA Kanban board as tasks. The report will have at least the following elements: Title: Short, precise description of the problem Details: Type, Priority, Epic Link Description: Steps to reproduce bug - sequence for reproduction, link to test case if applicable. Expected behavior - expected outcome of the test sequence. Actual behavior - actual result of the test sequence. The description should be thorough enough to enable the debugging of the problem and to give objective base for severity assessment. File attachments - Test files, logs, images, ... Test levels Integration testing The scope of the tests is illustrated on the image below. The goal is to test the SiVA application API (both X-Road and REST/JSON) and to test the independent module capability for validation of specific type of file. Both valid and invalid inputs are tested. More info about testing specifics can be found in Test Plan Integration testing section. System testing The scope of the tests is illustrated on the image below. The goal of the test is to test the entire length of signature validation process and to test supportive functions. In addition Demo application is tested. More info about testing specifics can be found in Test Plan System testing section. Regression testing Regression testing will consist of two parts: Running all automated tests (unit, integration and system tests) Manual testing of the areas that are not covered by automatic tests based on the regression test checklist","title":"9.6.1 QA Strategy"},{"location":"siva2/qa_strategy/#introduction","text":"The goal of this document is to give general overview of the used infrastructure, processes, schedule and actions to ensure good quality delivery. The document describes activities in the whole software development process. Analysis, development and testing are separated for the sake of structure and transparency although they are integral parts of the development cycle. This is living document and will be constantly updated as the project evolves.","title":"Introduction"},{"location":"siva2/qa_strategy/#environments-and-infrastructure","text":"There are different test environments for quality assurance, depending on the nature and aim. TravisCI environment for public CI - Platform: Linux Test environment for local test and load test - Platform: Linux Instructions how to set up test enviroment and run tests together with more info can be found in SiVa GitHub page System requirements: At least 2GB of RAM on machine where the build is executed Minimum required Java version is Java 8 SiVa project provided Maven Wrapper (./mvnw) Tools used: TravisCI \u2013 is a continuous integration service used to build and test software projects hosted at GitHub Jenkins \u2013 is an open source continuous integration tool written in Java. JMeter \u2013 tool for creating and running load tests. IntelliJ IDEA \u2013 is a Java integrated development environment(IDE) for developing and executing automated tests locally Apache Tomcat - is an open source servlet container developed by the Apache Software Foundation. Docker \u2013 is an open-source project that automates the deployment of applications inside software containers, by providing an additional layer of abstraction and automation of operating-system-level virtualization on Linux. Rest-Assured - is a Java DSL(Domain-specific language) for simplifying testing of REST based Services built on top of HTTP Builder.","title":"Environments and infrastructure"},{"location":"siva2/qa_strategy/#analysis","text":"Analysis will be tagged with identificators to enable cross-reference between requirements and corresponding tests. This includes both functional and non-functional requirements. See documents (2) and (3) in References","title":"Analysis"},{"location":"siva2/qa_strategy/#development","text":"","title":"Development"},{"location":"siva2/qa_strategy/#development-process","text":"Customized process based on Kanban is used in the development. The process consists of following elements: Product backlog is maintained JIRA Tasks are maintained through JIRA Kanban board Daily team stand-ups are held Tasks marked done are developed, tested and ready to be shipped Bi-weekly meetings are held to give status on progress and discuss open questions","title":"Development process"},{"location":"siva2/qa_strategy/#issue-lifecycle","text":"Each ticket in JIRA Kanban board goes through the following states that correspond the development procedure described in previous chapter. Description of states: Awaiting analysis - ticket to be dealt with, product backlog. Awaiting implementation - ticket analysed and ready to be implemented. In progress - ticket is being handled (feature coding, document writing, ...). In Review - ticket is ready for review Resolved - ticket is ready for test Closed - ticket has been tested and found ready for release","title":"Issue lifecycle"},{"location":"siva2/qa_strategy/#qa-activities-and-quality-criterias-in-the-development","text":"Process improvement The development process is constantly monitored and adjusted to the changing situations. Retrospective meetings for process feedback are held. Unit tests It is responsibility of developer to write, maintain and execute the unit tests on developed features. The code must compile and pass unit tests before it is allowed to be submitted to the code repository. The code of the unit tests is integral part of the source code and is maintained on the same principles. Unit tests are also automatically executed on each build, if the unit tests do not pass further test execution is stopped. Static testing/code reviews All changes (including changes in unit test code) are reviewed by another development team member using GitHub. The code must pass review before it is submitted to testing. SonarLint is used to validate code automatically. It integrates both suggested tools mentioned in reference document (3) References","title":"QA activities and quality criterias in the development"},{"location":"siva2/qa_strategy/#testing","text":"","title":"Testing"},{"location":"siva2/qa_strategy/#approach","text":"Testing follows the principles described in reference document (1) in References The goal is to automate as much of the testing process as possible, however some aspects of the testing will be carried out manually. As the development is carried out by the backlog priority the testing follows the same principle. After each feature release test cases, test automation code and test results will be available through GitHub.","title":"Approach"},{"location":"siva2/qa_strategy/#testing-process","text":"All automatic tests, except load tests will follow the same execution process. The tests are ran automatically during the project build process by Travis CI after each push in GitHub.","title":"Testing process"},{"location":"siva2/qa_strategy/#test-case-management","text":"Test cases are handled as integral part of test automation code. The same applies on manual tests, in manual test cases some portion of automation may be used to execute the tests but the results are verified manually. All the test cases and test code will be maintained in the GitHub. Test cases are developed and maintained together with test automation code by the QA specialist for Integration and System Testing. Following elements will be present in test cases: TestCaseID: unique ID that makes possible to identify specific test case TestType: Automated, Automated SoapUI or Manual Requirement: Reference to the requirement that is tested Title: Description of the test Expected Result: expected outcome of the test (pass criteria for the test) File: input test file that is used Test case sample Automatic and manual test cases will have the same description principles (shown below). /** * TestCaseID: Bdoc-ValidationFail-27 * * TestType: Automated * * Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 * * Title: Bdoc OCSP response doesn ' t correspond to the signers certificate * * Expected Result: The document should fail the validation * * File: NS28_WrongSignerCertInOCSPResp.bdoc */ @Test public void bdocWrongSignersCertInOcspResponse () { setTestFilesDirectory ( \"bdoc/live/timemark/\" ) ; post ( validationRequestFor ( \"NS28_WrongSignerCertInOCSPResp.bdoc\" )) .then () .body ( \"signatures[0].indication\" , Matchers.is ( \"TOTAL-FAILED\" )) .body ( \"signatures[0].subIndication\" , Matchers.is ( \"TRY_LATER\" )) .body ( \"signatures[0].errors.content\" , Matchers.hasItem ( \"No revocation data for the certificate\" )) .body ( \"validSignaturesCount\" , Matchers.is ( 0 )) ; }","title":"Test case management"},{"location":"siva2/qa_strategy/#defect-management","text":"All found defects will be reported and handled in Jira. The defect report will follow similar lifecycle in JIRA Kanban board as tasks. The report will have at least the following elements: Title: Short, precise description of the problem Details: Type, Priority, Epic Link Description: Steps to reproduce bug - sequence for reproduction, link to test case if applicable. Expected behavior - expected outcome of the test sequence. Actual behavior - actual result of the test sequence. The description should be thorough enough to enable the debugging of the problem and to give objective base for severity assessment. File attachments - Test files, logs, images, ...","title":"Defect management"},{"location":"siva2/qa_strategy/#test-levels","text":"Integration testing The scope of the tests is illustrated on the image below. The goal is to test the SiVA application API (both X-Road and REST/JSON) and to test the independent module capability for validation of specific type of file. Both valid and invalid inputs are tested. More info about testing specifics can be found in Test Plan Integration testing section. System testing The scope of the tests is illustrated on the image below. The goal of the test is to test the entire length of signature validation process and to test supportive functions. In addition Demo application is tested. More info about testing specifics can be found in Test Plan System testing section. Regression testing Regression testing will consist of two parts: Running all automated tests (unit, integration and system tests) Manual testing of the areas that are not covered by automatic tests based on the regression test checklist","title":"Test levels"},{"location":"siva2/references/","text":"References (1) Lisa_6_Osa_I_SiVa_Testimise_korraldus.pdf (2) Lisa_4_Osa_I_SiVa_Valideerimisteenuse_analuus MUUDETUD.pdf (3) Lisa_3_RIA_Mittefunktsionaalsed_nouded.pdf","title":"9.7. REFERENCES"},{"location":"siva2/references/#references","text":"(1) Lisa_6_Osa_I_SiVa_Testimise_korraldus.pdf (2) Lisa_4_Osa_I_SiVa_Valideerimisteenuse_analuus MUUDETUD.pdf (3) Lisa_3_RIA_Mittefunktsionaalsed_nouded.pdf","title":"References"},{"location":"siva2/siva_service_overview/","text":"","title":"Siva service overview"},{"location":"siva2/structure_and_activities/","text":"The following chapter depicts SiVa software on a component diagram. Note that not all of the external base libraries are included in the component model to avoid duplicity with other documentation. Only relevant base libraries and dependencies are listed and described in the documentation. Information about additional and transitive dependencies of the respective validation service components can be found via the references provided. System components Siva webapp All validation services use different Java library to validate given document in request. The used validation library is described in each of the validation service section. Component Description Web gateway service Web gateway service is a single access point to the whole SiVa webapp application. Web service is implemented as a standard Spring Boot Web application module, that accepts valid JSON or SOAP requests (see the Interfaces section ) sent by the client systems. Web service module is responsible for basic request and response handling. This includes basic validation of incoming requests (existence of required fields, permitted values, etc) and unmarshaling the request to a Java object before passing it to the next component \u2013 the Proxy service. Response from the proxy service is marshalled and sent back to the client according to respective API. Report signing service Provides signing services for report. Supported interfaces for signature creation: PKCS11, PKCS12. Validation proxy service Acts as a router for the request and response. It is responsible for selecting the appropriate validation service for incoming document. - Proxy service accepts an in memory representation of a document and finds a matching validation service based on document type. The incoming request is converted to validation request and forwarded to the specific validation service. - The report returned by the specific validation service is passed to the statistics service before returning it to Web service. Data files proxy service Acts as a router for the request and response. It is responsible for selecting the appropriate data files extraction service for incoming document. - Proxy service accepts an in memory representation of a document and finds a matching validation service based on document type. Statistics service An optional component that can be turned on or off using configuration file. It is Spring Boot module and main purpose for it is to collect data about: incoming request, validation reports and errors that have been reported during validation process. - When HTTP authentication header have been set the reporting service will also add this info to statistics report. - After the report object have been created the data will be sent to configured reporting service. SiVa is preconfigured to work with Google Analytics. - More info and specifics about the statistics service can be found in SiVa_statistics.pdf Generic validation service Provides validation services for ASIC containers along with PAdES, CAdES and XAdES signatures. Uses Maven released DigiDoc4J EU DSS fork library BDOC validation service Provides validation services for BDOC containers. BDOC for ASiC compliant containers both TM and TS is supported. Uses Maven released DigiDoc4J library DDOC validation service Provides validation services for DigiDoc containers. DDOC for previous generation digitally signed files. Uses latest Maven release of JDigiDoc TST validation service Provides validation service for Time Stamp Token based ASIC-S containers with Estonian specific validation policy DDOC data files service Provides files extraction services for DigiDoc containers. DDOC for previous generation digitally signed files. Uses latest Maven release of JDigiDoc X-Road validation service X-Road containers are similar to ASiCE containers but are not valid ASiCE containers. There we could not use DSS nor DigiDoc4J provided ASiCE validation functionality but need to X-Road developed asicverifier Java command line utility to validate these containers. Source code for asicverifier can be found in GitHub xroad-public repository : Asicverfier has been integrated into SiVa as Java library. Making possible to use all the Java libraries packaged into asicverifier fat JAR. Configurable functionality: - In SiVa configuration application.yml file You can define alternative location for globalconf directory to be loaded in using input stream. PS! X-road validation service is no longer distributed as a separate webapp installation since SiVa 2.0 Dss Dss library implementations are used for ASICE, XAdES, CAdES and PAdES validation and TSL loading. SiVa uses Digidoc4J DSS fork Java library . JDigiDoc JDigiDoc implementation is used by DDOC validation service and for the DDOC data files service. See the project Github page for further details. Asicverifier X-road signature validation utility (see github project for details). A command line tool to validate X-Road Security server generated ASiCe files. The utility was chosen because it's only available packaged to tool to validate X-Road signature file. TSL loader TSL loader loads the contents of TSL file from given URL in online mode or from directory when using offline mode in predefined interval. Logger Logging functionality is handled by the SLF4J logging facade and on top of the Logback framework. As a result, logging can be configured via the standard Logback configuration file. By default, logging works on the INFO level and logs are directed to the system console. Additional logging appenders can be added (consult logback documentation for more details ) Configuration Configuration is a global component used throughout the webapp. Responsible for reading and handling the application configuration management Validation commons Common interfaces and utilities for all validation services (ie utilities for default and additional policies and constraints) Monitoring service Service that provides generic information about the webapp - it's name, version, uptime and link status. (The service is disabled by default) Siva webapp interfaces Provided: Validation service REST interface - interface for handling validation queries. JSON formatted POST requests Validation service SOAP interface - interface for handling validation queries X-Road compliant and non-compliant SOAP requests (without the X-Road required headers) Data file service REST interface - interface for handling data file extraction queries. JSON formatted POST requests Data file service SOAP interface - interface for handling data file extraction queries X-Road compliant and non-compliant SOAP requests (without the X-Road required headers) Monitoring service REST interface - interface for retrieving the webapp's health information HTTP GET that returns JSON formatted resp\u00f3nses Required: X-road validation webapp - interface for validating X-road signed requests EU TSL provider interface - interface for loading the TSL Google Analytics service - interface for collection statistics (optional) Demo webapp Component Description Demo webapp A Spring boot based web application that provides a web interface to the SiVa system for initial access and testing purposes. Offers a simple and user friendly presentation layer for the whole SiVa webapp. Contains a simple form, that can be used to send signed documents to be validated in SiVa. Demo webapp interfaces Provided: Web interface - interface for handling X-Road signed requests. JSON formatted POST queries Required: Siva webapp REST interface Siva webapp SOAP interface External configuration Component Description Policies and constraints (Optional) By default, two policies are supported and integrated into SiVa - see SiVa Validation Policy . However, it is possible to customize the validation policies and their constraints. Configuration is validation service specific. See the overriding configuration section for details. Externalized configuration Application specific configuration (property files, command line variables, etc) that allow overriding the default values set within the webapp. External subsystems Component Description Digidoc3 client DigiDoc3 client is a program that can be used to sign digitally with ID-card and Mobile-ID, check the validity of digital signatures and open and save documents inside the signature container. See the github project for further details. XROAD security server A client subsystem that, once connected, allows SiVa to be integrated into the X-Road data exchange layer EU TSL provider A subsystem that provides SiVa with a current TSL. An HTTPS endpoint, that provides an XML formatted file that lists all trusted service providers along with their certificates. Google Analytics (Optional) A subsystem that can be used for business analysis based on the SiVa statistics (sent over Google Management Protocol v1). The webapp can be configured to send statistical data about validation reports to Google Analytics. See SiVa_statistics.pdf for further details. NB! Note that the exact same dataset is logged by the Logger component if one needs to handle generic statistical data locally (for example using Logstash and Kibana) Monitoring (Optional) A subsystem that tracks the health and uptime of SiVa webapps","title":"9.3.1 Component model"},{"location":"siva2/structure_and_activities/#system-components","text":"","title":"System components"},{"location":"siva2/structure_and_activities/#siva-webapp","text":"All validation services use different Java library to validate given document in request. The used validation library is described in each of the validation service section. Component Description Web gateway service Web gateway service is a single access point to the whole SiVa webapp application. Web service is implemented as a standard Spring Boot Web application module, that accepts valid JSON or SOAP requests (see the Interfaces section ) sent by the client systems. Web service module is responsible for basic request and response handling. This includes basic validation of incoming requests (existence of required fields, permitted values, etc) and unmarshaling the request to a Java object before passing it to the next component \u2013 the Proxy service. Response from the proxy service is marshalled and sent back to the client according to respective API. Report signing service Provides signing services for report. Supported interfaces for signature creation: PKCS11, PKCS12. Validation proxy service Acts as a router for the request and response. It is responsible for selecting the appropriate validation service for incoming document. - Proxy service accepts an in memory representation of a document and finds a matching validation service based on document type. The incoming request is converted to validation request and forwarded to the specific validation service. - The report returned by the specific validation service is passed to the statistics service before returning it to Web service. Data files proxy service Acts as a router for the request and response. It is responsible for selecting the appropriate data files extraction service for incoming document. - Proxy service accepts an in memory representation of a document and finds a matching validation service based on document type. Statistics service An optional component that can be turned on or off using configuration file. It is Spring Boot module and main purpose for it is to collect data about: incoming request, validation reports and errors that have been reported during validation process. - When HTTP authentication header have been set the reporting service will also add this info to statistics report. - After the report object have been created the data will be sent to configured reporting service. SiVa is preconfigured to work with Google Analytics. - More info and specifics about the statistics service can be found in SiVa_statistics.pdf Generic validation service Provides validation services for ASIC containers along with PAdES, CAdES and XAdES signatures. Uses Maven released DigiDoc4J EU DSS fork library BDOC validation service Provides validation services for BDOC containers. BDOC for ASiC compliant containers both TM and TS is supported. Uses Maven released DigiDoc4J library DDOC validation service Provides validation services for DigiDoc containers. DDOC for previous generation digitally signed files. Uses latest Maven release of JDigiDoc TST validation service Provides validation service for Time Stamp Token based ASIC-S containers with Estonian specific validation policy DDOC data files service Provides files extraction services for DigiDoc containers. DDOC for previous generation digitally signed files. Uses latest Maven release of JDigiDoc X-Road validation service X-Road containers are similar to ASiCE containers but are not valid ASiCE containers. There we could not use DSS nor DigiDoc4J provided ASiCE validation functionality but need to X-Road developed asicverifier Java command line utility to validate these containers. Source code for asicverifier can be found in GitHub xroad-public repository : Asicverfier has been integrated into SiVa as Java library. Making possible to use all the Java libraries packaged into asicverifier fat JAR. Configurable functionality: - In SiVa configuration application.yml file You can define alternative location for globalconf directory to be loaded in using input stream. PS! X-road validation service is no longer distributed as a separate webapp installation since SiVa 2.0 Dss Dss library implementations are used for ASICE, XAdES, CAdES and PAdES validation and TSL loading. SiVa uses Digidoc4J DSS fork Java library . JDigiDoc JDigiDoc implementation is used by DDOC validation service and for the DDOC data files service. See the project Github page for further details. Asicverifier X-road signature validation utility (see github project for details). A command line tool to validate X-Road Security server generated ASiCe files. The utility was chosen because it's only available packaged to tool to validate X-Road signature file. TSL loader TSL loader loads the contents of TSL file from given URL in online mode or from directory when using offline mode in predefined interval. Logger Logging functionality is handled by the SLF4J logging facade and on top of the Logback framework. As a result, logging can be configured via the standard Logback configuration file. By default, logging works on the INFO level and logs are directed to the system console. Additional logging appenders can be added (consult logback documentation for more details ) Configuration Configuration is a global component used throughout the webapp. Responsible for reading and handling the application configuration management Validation commons Common interfaces and utilities for all validation services (ie utilities for default and additional policies and constraints) Monitoring service Service that provides generic information about the webapp - it's name, version, uptime and link status. (The service is disabled by default)","title":"Siva webapp"},{"location":"siva2/structure_and_activities/#siva-webapp-interfaces","text":"Provided: Validation service REST interface - interface for handling validation queries. JSON formatted POST requests Validation service SOAP interface - interface for handling validation queries X-Road compliant and non-compliant SOAP requests (without the X-Road required headers) Data file service REST interface - interface for handling data file extraction queries. JSON formatted POST requests Data file service SOAP interface - interface for handling data file extraction queries X-Road compliant and non-compliant SOAP requests (without the X-Road required headers) Monitoring service REST interface - interface for retrieving the webapp's health information HTTP GET that returns JSON formatted resp\u00f3nses Required: X-road validation webapp - interface for validating X-road signed requests EU TSL provider interface - interface for loading the TSL Google Analytics service - interface for collection statistics (optional)","title":"Siva webapp interfaces"},{"location":"siva2/structure_and_activities/#demo-webapp","text":"Component Description Demo webapp A Spring boot based web application that provides a web interface to the SiVa system for initial access and testing purposes. Offers a simple and user friendly presentation layer for the whole SiVa webapp. Contains a simple form, that can be used to send signed documents to be validated in SiVa.","title":"Demo webapp"},{"location":"siva2/structure_and_activities/#demo-webapp-interfaces","text":"Provided: Web interface - interface for handling X-Road signed requests. JSON formatted POST queries Required: Siva webapp REST interface Siva webapp SOAP interface","title":"Demo webapp interfaces"},{"location":"siva2/structure_and_activities/#external-configuration","text":"Component Description Policies and constraints (Optional) By default, two policies are supported and integrated into SiVa - see SiVa Validation Policy . However, it is possible to customize the validation policies and their constraints. Configuration is validation service specific. See the overriding configuration section for details. Externalized configuration Application specific configuration (property files, command line variables, etc) that allow overriding the default values set within the webapp.","title":"External configuration"},{"location":"siva2/structure_and_activities/#external-subsystems","text":"Component Description Digidoc3 client DigiDoc3 client is a program that can be used to sign digitally with ID-card and Mobile-ID, check the validity of digital signatures and open and save documents inside the signature container. See the github project for further details. XROAD security server A client subsystem that, once connected, allows SiVa to be integrated into the X-Road data exchange layer EU TSL provider A subsystem that provides SiVa with a current TSL. An HTTPS endpoint, that provides an XML formatted file that lists all trusted service providers along with their certificates. Google Analytics (Optional) A subsystem that can be used for business analysis based on the SiVa statistics (sent over Google Management Protocol v1). The webapp can be configured to send statistical data about validation reports to Google Analytics. See SiVa_statistics.pdf for further details. NB! Note that the exact same dataset is logged by the Logger component if one needs to handle generic statistical data locally (for example using Logstash and Kibana) Monitoring (Optional) A subsystem that tracks the health and uptime of SiVa webapps","title":"External subsystems"},{"location":"siva2/systemintegrators_guide/","text":"This guide describes how to integrate SiVa service with other applications. The following is for system integrators who need to set-up, configure, manage, and troubleshoot SiVa system. System requirements Following are the minimum requirements to build and deploy SiVa webapps as a service: Java 8 or above Oracle JVM is supported Git version control system version 1.8 or above is recommended Minimum 2 GB of RAM. Recommended at least 4 GB of RAM Minimum 1 processor core Open internet connection 2GB of free disk space Supported operating system is Ubuntu 16.04 LTS Building Building SiVa webapps on Ubuntu 16.04 First we need to install Git and Java SDK 8 by issuing below commands: sudo apt-get update sudo apt-get install git -y sudo apt-get install default-jdk -y Next we need to clone the SiVa Github repository: git clone https://github.com/open-eid/SiVa.git --branch master Final step is building the SiVa project using Maven Wrapper cd SiVa ./mvnw clean install Note The build can take up to 30 minutes because there are lot of tests that will be run through and downloading of the required dependencies To verify that SiVa project built successfully look for BUILD SUCCESS in build compilation output last lines. The last lines of build output should look very similar to below image: [INFO] Reactor Summary: [INFO] [INFO] SiVa Digitally signed documents validation service . SUCCESS [ 1.632 s] [INFO] validation-services-parent ......................... SUCCESS [ 0.897 s] [INFO] validation-commons ................................. SUCCESS [ 12.321 s] [INFO] tsl-loader ......................................... SUCCESS [ 6.917 s] [INFO] Generic Validation Service ......................... SUCCESS [ 27.919 s] [INFO] TimeStampToken Validation Service .................. SUCCESS [ 7.046 s] [INFO] BDOC Validation Service ............................ SUCCESS [ 50.087 s] [INFO] DDOC Validation Service ............................ SUCCESS [ 16.712 s] [INFO] SiVa webapp and other core modules ................. SUCCESS [ 0.653 s] [INFO] siva-monitoring .................................... SUCCESS [ 9.736 s] [INFO] xroad-validation-service ........................... SUCCESS [ 19.761 s] [INFO] siva-statistics .................................... SUCCESS [ 13.734 s] [INFO] SiVa validation service proxy ...................... SUCCESS [ 11.509 s] [INFO] SiVa signature service ............................. SUCCESS [ 6.869 s] [INFO] siva-webapp ........................................ SUCCESS [ 27.608 s] [INFO] SiVa Sample Web application ........................ SUCCESS [ 38.585 s] [INFO] SiVa Web Service integration tests ................. SUCCESS [03:53 min] [INFO] siva-distribution .................................. SUCCESS [ 10.818 s] [INFO] ------------------------------------------------------------------------ [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------ [INFO] Total time: 08:18 min [INFO] Finished at: 2017-12-04T13:49:48+02:00 [INFO] Final Memory: 113M/903M [INFO] ------------------------------------------------------------------------ Deploying OPTION 1 - starting webapps from command line SiVa project compiles 3 fat executable JAR files that you can run after successfully building the project by issuing below commands: First start the Siva webapp ./siva-parent/siva-webapp/target/siva-webapp-3.0.0.jar Second we need to start X-road validation webapp ./validation-services-parent/xroad-validation-service/target/xroad-validation-service-3.0.0.jar The SiVa webapp by default runs on port 8080 and XRoad validation service starts up on port 8081 . Easiest way to test out validation is run SiVa demo application. Start the Demo webapp ./siva-parent/siva-sample-application/target/siva-sample-application-3.0.0.jar Now point Your browser to URL: http://localhost:9000 OPTION 2 - running webapps as systemd services Maven build generates executable JAR files. This means web container and all its dependencies are package inside single JAR file. It makes a lot easier to deploy it into servers. Easiest option to setup SiVa is as systemd service in Ubuntu servers. For that we first need to create service file: vim siva-webapp.service Inside it we need to paste below text. You need to change few things in service setup file. First you must not run service as root . So it's strongly recommended to change line User=root Second You can change Java JVM options by modifying the JAVA_OPTS inside the siva-webapp.service file. Also You can change the SiVa application configuration options by modifying RUN_ARGS section in file [Unit] Description = siva-webapp After = syslog.target [Service] User = root ExecStart = /var/apps/siva-webapp.jar Environment = JAVA_OPTS=-Xmx320m RUN_ARGS=--server.port=80 SuccessExitStatus = 143 [Install] WantedBy = multi-user.target Save and close the siva-webapp.service file. Next we need to move siva-webapp-3.0.0.jar into newly created /var/apps directory and rename to JAR file to siva-webapp.jar . match Note The copied JAR filename must match option ExecStart in siva-webapp.service file sudo mkdir /var/apps sudo cp siva-parent/siva-webapp/target/executable/siva-webapp-3.0.0.jar /var/apps/siva-webapp.jar Next we need to copy the siva-webapp.service file into /lib/systemd/system directory. Then we are ready to start the siva-webapp service. sudo cp siva-webapp.service /lib/systemd/system sudo systemctl start siva-webapp Final step of setting up the siva-webapp service is to verify that service started correctly by issuing below command. systemctl status siva-webapp It should print out similar to below picture: \u25cf siva - webapp . service - siva - webapp Loaded : loaded ( / lib / systemd / system / siva - webapp . service ; disabled ; vendor preset : enabled ) Active : active ( running ) since Thu 2016 - 07 - 21 08 : 48 : 14 EDT ; 1 day 2 h ago Main PID : 15965 ( siva - webapp . jar ) Tasks : 34 Memory : 429.6 M CPU : 2 min 5.721 s CGroup : / system . slice / siva - webapp . service \u251c\u2500 15965 / bin / bash / var / apps / stage / siva - webapp . jar \u2514\u2500 15982 / usr / bin / java - Dsun . misc . URLClassPath . disableJarChecking = true - Xmx320m - jar / var / apps / stage / siva - webapp . jar Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: at eu . europa . esig . dss . tsl . service . TSLParser . getTslModel ( TSLParser . java : 143 ) Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: at eu . europa . esig . dss . tsl . service . TSLParser . call ( TSLParser . java : 129 ) Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: ... 5 common frames omitted Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: 20.07 . 2016 03 : 00 : 01.450 INFO [ pool - 3 - thread - 1 ] [ e . e . e . dss . tsl . service . TSLRepository . sync Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: 20.07 . 2016 03 : 00 : 01.450 INFO [ pool - 3 - thread - 1 ] [ e . e . e . dss . tsl . service . TSLRepository . sync OPTION 3 - deploy webapps as war files (Tomcat setup for legacy systems) NOTE 1 : We do not recommend using WAR deployment option because lack of testing done on different servlet containers also possible container application libraries conflicts NOTE 2 : Each SiVa service must be deployed to separate instance of Tomcat to avoid Java JAR library version conflicts. NOTE 3 : To limit your webapp request size (this is set automatically when deploying service as jar) one needs to configure the container manually. For example, when using Tomcat 7 or Tomcat 8 - the http connector parameter maxPostSize should be configured with the desired limit. NOTE 4 : The war file must be deployed to Tomcat ROOT. First we need to download Tomcat web servlet container as of the writing latest version available in version 8 branch is 8.5.24. We will download it with wget wget http://www-eu.apache.org/dist/tomcat/tomcat-8/v8.5.24/bin/apache-tomcat-8.5.24.tar.gz Unpack it somewhere: tar xf apache-tomcat-8.5.24.tar.gz Now we should build the WAR file. We have created helper script with all the correct Maven parameters. ./war-build.sh NOTE The script will skip running the integration tests when building WAR files Final steps would be copying built WAR file into Tomcat webapps directory and starting the servlet container. cp siva-parent/siva-webapp/target/siva-webapp-3.0.0.war apache-tomcat-8.5.24/webapps ./apache-tomcat-7.0.77/bin/catalina.sh run IMPORTANT siva-webapp on startup creates etc directory where it copies the TSL validaiton certificates siva-keystore.jks . Default location for this directory is application root or $CATALINA_HOME . To change this default behavior you should set environment variable DSS_DATA_FOLDER How-to set WAR deployed SiVa application.properties SiVa override properties can be set using application.properties file. The file can locate anywhare in the host system. To make properties file accessible for SiVa you need to create or edit setenv.sh placed inside bin directory. Contents of the setenv.sh file should look like: export CATALINA_OPTS = \"-Dspring.config.location=file:/path/to/application.properties\" Smoke testing your deployed system Step 1 . Install HTTPIE httpie is more user friendly version of curl and we will use to verify that SiVa was installed and started correctly on our server. If you have Python and its package manager pip installed. Then You can issue below command: pip install httpie Step 2 . Download a sample JSON request file. http --download https://raw.githubusercontent.com/open-eid/SiVa/develop/build-helpers/sample-requests/bdocPass.json Step 3 . After successful download issue below command in same directory where you downloaded the file using the command below. http POST http://localhost:8080/validate < bdocPass.json Step 4 . Verify the output. The output of previous command should have similar data as below screenshot. Look for signatureCount and validSignatureCount , they must be equal. Logging By default, logging works on the INFO level and logs are directed to the system console only. Logging functionality is handled by the SLF4J logging facade and on top of the Logback framework. As a result, logging can be configured via the standard Logback configuration file through Spring boot. Additional logging appenders can be added. Consult logback documentation for more details on log file structure. For example, adding application.properties to classpath with the logging.config property logging.config = /path/to/logback.xml Statistics For every report validated, a statistical report is composed that collects the following data: Data Description Validation duration The time it takes to process an incoming request - measured in milliseconds Container type Container type ( text value that identifies the signature type of the incoming document: ASiC-E, XAdES, ASiC-S or ASiC-E (BatchSignature) ) Siva User ID String (Text data that contains the SiVa user identifier for reports (from the HTTP x-authenticated-user header) or N/A ) Total signatures count The value of the signaturesCount element in the validation report Valid signatures count The value of the validSignaturesCount element in the validation report Signature validation indication(s) Values of elements signatures/indication and signatures/subindication from the validation report. indication[/subindication] Signature country/countries Country code extracted from the signer certs. The ISO-3166-1 alpha-2 country code that is associated with signature (the signing certificate). Or constant string \"XX\" if the country cannot be determined. Signature format(s) Values of element signatures/signatureFormat from the validation report. There are two channels where this information is sent: Log feeds (at INFO level) which can be redirected to files or to a syslog feed. Google Analytics service (as GA events). Turned off by default. See Configuration parameters for further details. The format and events are described in more detail in SiVa_statistics.pdf Monitoring SiVa webapps provide an endpoint for external monitoring tools to periodically check the generic service health status. Note Note that this endpoint is disabled by default. The url for accessing JSON formatted health information with HTTP GET is /monitoring/health or /monitoring/health.json . See the Interfaces section for response structure and details. Enabling and disabling the monitoring endpoint To enable the endpoint, use the following configuration parameter: endpoints.health.enabled = true Customizing external service health indicators The endpoint is implemented as a customized Spring boot health endpoint , which allows to add custom health indicators. Demo webapp and Siva webapp also include additional information about the health of their dependent services. These links to dependent web services have been preconfigured. For example, the Demo webapp is preset to check whether the Siva webapp is accessible from the following url (parameter siva.service.serviceHost value)/monitoring/health and the Siva webapp verifies that the X-road validation service webapp is accessible by checking the default url (configured by parameter siva.proxy.xroadUrl value)/monitoring/health url. However, using the following parameters, these links can be overridden: Property Description endpoints.health.links[index].name A short link name Default: N/A endpoints.health.links[index].url URL to another monitoring endpoint that produces Spring boot health endpoint compatible JSON object as a response to HTTP GET. Default: N/A endpoints.health.links[index].timeout Connection timeout (in milliseconds) Default: N/A For example: endpoints.health.links [ 0 ] .name = linkToXroad endpoints.health.links [ 0 ] .url = http://localhost:7777/monitoring/health endpoints.health.links [ 0 ] .timeout = 1000 Note The external link configuration must be explicitly set when the monitoring service on the target machine is configured to run on a different port as the target service itself(ie using the management.port option in configuration) . Validation Report Signature SiVa provides the ability to sign the validation report. The idea of supplementing the validation report with a validation report signature is to prove the authority's authenticity and integrity over the validation. Note Signing of validation report is disabled by default To enable it, use the following configuration parameter: siva.report.reportSignatureEnabled = true When validation report signature is enabled, only detailed validation reports will be signed, simple reports will not be signed. The validation report's digital signature is composed out of response's validationReport object. The target format of the signature is ASiC-E (signature level is configurable). The ASiC-E container contents are encoded into Base64 and put on the same level int the response as the validation report itself. Note Enabling the validation report signing will affect the performance of the service. Example structure of the response containing report signature: { \"validationReport\" : { ... }, \"validationReportSignature\" : \"ZHNmYmhkZmdoZGcgZmRmMTM0NTM...\" } Supported interfaces for signature creation: PKCS#11 - a platform-independent API for cryptographic tokens, such as hardware security modules (HSM) and smart cards PKCS#12 - for files bundled with private key and certificate Report signature configuration parameters: Property Description siva.report.reportSignatureEnabled Enables signing of the validation report. Validation report will only be signed when requesting detailed report. Default: false siva.signatureService.signatureLevel The level of the validation report signature. Example values: * XAdES_BASELINE_B * XAdES_BASELINE_T * XAdES_BASELINE_LT * XAdES_BASELINE_LTA siva.signatureService.tspUrl URL of the timestamp provider. Only needed when the configured signature level is at least XAdES_BASELINE_T siva.signatureService.ocspUrl URL of the OCSP provider. Only needed when the configured signature level is at least XAdES_BASELINE_LT siva.signatureService.pkcs11.path path to PKCS#11 module (depends on your installed smart card or hardware token library, for example: /usr/local/lib/opensc-pkcs11.so) siva.signatureService.pkcs11.password pin/password of the smart card or hardware token siva.signatureService.pkcs11.slotIndex depends on the hardware token. E.g. Estonian Smart Card uses 2, USB eToken uses 0. Default: 0 siva.signatureService.pkcs12.path path to keystore file containing certificate and private key siva.signatureService.pkcs12.password password of the keystore file containing certificate and private key Note When configuring report signature, either PKCS#11 or PKCS#12 should be configured, no need to configure both. Configuration parameters All SiVa webapps have been designed to run with predetermined defaults after building and without additional configuration. However, all the properties can be overridden on the service or embedded web server level, if necessary. By default, the service loads it's global configuration from the application.yml file that is packaged inside the jar file. Default configuration parameters can be overridden by providing custom application.yml in the following locations , or using command line parameters or by using other externalized configuration methods methods. For example, to configure the embedded Tomcat web server inside a fat jar to run on different port (default is 8080), change the server.port following property: server.port = 8080 Or to increase or modify the default http request limit, override the server.max-http-post-size property: server.max-http-post-size: 13981016 See the reference list of all common application properties provided by Spring boot Siva webapp parameters Updating TSL Property Description siva.tsl.loader.loadFromCache A boolean value that determines, whether the TSL disk cache is updated by downloading a new TSL in a predetermined interval Note that the cache is by default stored in a system temporary folder (can be set with system property java.io.tmpdir ) in a subdirectory named dss_cache_tsl When set to false the cache is refreshed periodically by SiVa in a predetermined interval specified by siva.tsl.loader.schedulerCron using siva.tsl.loader.url When set to true the siva uses existing cache as it's TSL. No direct polling for updates are performed. Default: false siva.tsl.loader.url A url value that points to the external TSL Default: https://ec.europa.eu/tools/lotl/eu-lotl.xml siva.tsl.loader.code Sets the LOTL code in DSS Default: EU siva.tsl.loader.trustedTerritories Sets the trusted territories by countries Default: \"AT\", \"BE\", \"BG\", \"CY\", \"CZ\", \"DE\", \"DK\", \"EE\", \"ES\", \"FI\", \"FR\", \"GR\", \"HU\", \"HR\", \"IE\", \"IS\", \"IT\", \"LT\", \"LU\", \"LV\", \"LI\", \"MT\", \"NO\", \"NL\", \"PL\", \"PT\", \"RO\", \"SE\", \"SI\", \"SK\", \"UK\" siva.tsl.loader.schedulerCron A string in a Crontab expression format that defines the interval at which the TSL renewal process is started. The default is 03:00 every day (local time) Default: 0 0 3 * * ? siva.keystore.type Keystore type. Keystore that contains public keys to verify the signed TSL Default: JKS siva.keystore.filename Keystore that contains public keys to verify the signed TSL Default: siva-keystore.jks siva.keystore.password Keystore password. Keystore that contains public keys to verify the signed TSL Default: siva-keystore-password Note Note that the keystore file location can be overriden using environment variable DSS_DATA_FOLDER . By default the keystore file location, is expected to be on local filesystem in etc directory which is at the same level with the fat jar file (one is created, if no such directory exists). Note TSL is currently used only by Generic and BDOC validators Forward to custom X-road webapp instance Property Description siva.proxy.xroadUrl A URL where the X-Road validation requests are forwarded Default: http://localhost:8081 Collecting statistics with Google Analytics Property Description siva.statistics.google-analytics.enabled Enables/disables the service Default: false siva.statistics.google-analytics.url Statistics endpoint URL Default: http://www.google-analytics.com/batch siva.statistics.google-analytics.trackingId The Google Analytics tracking ID Default: UA-83206619-1 siva.statistics.google-analytics.dataSourceName Descriptive text of the system Default: SiVa BDOC validation parameters Property Description siva.bdoc.digidoc4JConfigurationFile Path to Digidoc4j configuration override Default: N/A Customizing BDOC validation policies Property Description siva.bdoc.signaturePolicy.defaultPolicy Selected default policy name Default: N/A siva.bdoc.signaturePolicy.policies[index].name Policy name Default: N/A siva.bdoc.signaturePolicy.policies[index].description Policy description Default: N/A siva.bdoc.signaturePolicy.policies[index].constraintPath Constraint XML file path for the policy. An absolute path or a reference to a resource on the classpath Default: N/A siva.bdoc.signaturePolicy.policies[index].url Policy URL Default: N/A By default, the following configuration is used siva.bdoc.signaturePolicy.policies[0].name=POLv3 siva.bdoc.signaturePolicy.policies[0].description=Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. siva.bdoc.signaturePolicy.policies[0].url=http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#POLv3 siva.bdoc.signaturePolicy.policies[0].constraintPath=bdoc_constraint_no_type.xml siva.bdoc.signaturePolicy.policies[1].name=POLv4 siva.bdoc.signaturePolicy.policies[1].description=Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result. siva.bdoc.signaturePolicy.policies[1].url=http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#POLv4 siva.bdoc.signaturePolicy.policies[1].constraintPath=bdoc_constraint_qes.xml siva.bdoc.signaturePolicy.defaultPolicy=POLv4 Note Default policy configuration is lost when policy detail properties (name, description, url or constraintPath) are overridden or new custom policies added in custom configuration files (in this case, the existing default policies must be redefined in configuration files explicitly) Generic validation - customize validation policies Property Description siva.europe.signaturePolicy.defaultPolicy Selected default policy name Default: N/A siva.europe.signaturePolicy.policies[index].name Policy name Default: N/A siva.europe.signaturePolicy.policies[index].description Policy description Default: N/A siva.europe.signaturePolicy.policies[index].constraintPath Constraint XML file path for the policy. An absolute path or a reference to a resource on the classpath Default: N/A siva.europe.signaturePolicy.policies[index].url Policy URL Default: N/A By default, the following configuration is used siva.europe.signaturePolicy.policies[0].name=POLv3 siva.europe.signaturePolicy.policies[0].description=Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. siva.europe.signaturePolicy.policies[0].url=http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#POLv3 siva.europe.signaturePolicy.policies[0].constraintPath=generic_constraint_ades.xml siva.europe.signaturePolicy.policies[1].name=POLv4 siva.europe.signaturePolicy.policies[1].description=Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result. siva.europe.signaturePolicy.policies[1].url=http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#POLv4 siva.europe.signaturePolicy.policies[1].constraintPath=generic_constraint_qes.xml siva.europe.signaturePolicy.defaultPolicy=POLv4 Note Default policy configuration is lost when policy detail properties (name, description, url or constraintPath) are overridden or new custom policies added in custom configuration files (in this case, the existing default policies must be redefined in configuration files explicitly) DDOC validation Property Description siva.ddoc.jdigidocConfigurationFile Path to JDigidoc configuration file. Determines the Jdigidoc configuration parameters (see JDigidoc manual for details. Default: /siva-jdigidoc.cfg Customizing DDOC validation policies: Property Description siva.ddoc.signaturePolicy.defaultPolicy Selected default policy name Default: N/A siva.ddoc.signaturePolicy.policies[index].name Policy name Default: N/A siva.ddoc.signaturePolicy.policies[index].description Policy description Default: N/A siva.ddoc.signaturePolicy.policies[index].constraintPath Constraint XML file path for the policy. An absolute path or a reference to a resource on the classpath Default: N/A siva.ddoc.signaturePolicy.policies[index].url Policy URL Default: N/A By default, the following configuration is used siva.ddoc.signaturePolicy.policies[0].name=POLv3 siva.ddoc.signaturePolicy.policies[0].description=Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. siva.ddoc.signaturePolicy.policies[0].url=http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#POLv3 siva.ddoc.signaturePolicy.policies[0].constraintPath=ddoc_constraint_no_type.xml siva.ddoc.signaturePolicy.policies[1].name=POLv4 siva.ddoc.signaturePolicy.policies[1].description=Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result. siva.ddoc.signaturePolicy.policies[1].url=http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#POLv4 siva.ddoc.signaturePolicy.policies[1].constraintPath=ddoc_constraint_qes.xml siva.ddoc.signaturePolicy.defaultPolicy=POLv4 Note Default policy configuration is lost when policy detail properties (name, description, url or constraintPath) are overridden or new custom policies added in custom configuration files (in this case, the existing default policies must be redefined in configuration files explicitly) X-road validation Property Description siva.xroad.validation.service.configurationDirectoryPath Directory that contains the certs of approved CA's, TSA's and list of members Default: /verificationconf Property Description siva.xroad.signaturePolicy.defaultPolicy Selected default policy name Default: N/A siva.xroad.signaturePolicy.policies[index].name Policy name Default: N/A siva.xroad.signaturePolicy.policies[index].description Policy description Default: N/A siva.xroad.signaturePolicy.policies[index].constraintPath Constraint XML file path for the policy. An absolute path or a reference to a resource on the classpath Default: N/A siva.xroad.signaturePolicy.policies[index].url Policy URL Default: N/A By default, the following configuration is used siva.xroad.signaturePolicy.policies[0].name=POLv3 siva.xroad.signaturePolicy.policies[0].description=Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. siva.xroad.signaturePolicy.policies[0].url=http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#POLv3 siva.xroad.signaturePolicy.policies[0].constraintPath=xroad_constraint_no_type.xml siva.xroad.signaturePolicy.defaultPolicy= POLv3 Note Default policy configuration is lost when policy detail properties (name, description, url or constraintPath) are overridden or new custom policies added in custom configuration files (in this case, the existing default policies must be redefined in configuration files explicitly) Note By default, X-road validation currently supports only POLv3 Demo webapp parameters Linking to SiVa webapp Property Description siva.service.serviceHost An HTTP URL link to the Siva webapp Default: http://localhost:8080 siva.service.jsonServicePath Service path in Siva webapp to access the REST/JSON API Default: /validate siva.service.soapServicePath Service path in Siva webapp to access the SOAP API Default: /soap/validationWebService/validateDocument siva.service.jsonDataFilesServicePath Data file service path in Siva webapp to access the REST/JSON API Default: /getDataFiles siva.service.soapDataFilesServicePath Data file service path in Siva webapp to access the SOAP API Default: /soap/dataFilesWebService/getDocumentDataFiles","title":"9.5.2 System integrator's guide"},{"location":"siva2/systemintegrators_guide/#system-requirements","text":"Following are the minimum requirements to build and deploy SiVa webapps as a service: Java 8 or above Oracle JVM is supported Git version control system version 1.8 or above is recommended Minimum 2 GB of RAM. Recommended at least 4 GB of RAM Minimum 1 processor core Open internet connection 2GB of free disk space Supported operating system is Ubuntu 16.04 LTS","title":"System requirements"},{"location":"siva2/systemintegrators_guide/#building","text":"","title":"Building"},{"location":"siva2/systemintegrators_guide/#building-siva-webapps-on-ubuntu-1604","text":"First we need to install Git and Java SDK 8 by issuing below commands: sudo apt-get update sudo apt-get install git -y sudo apt-get install default-jdk -y Next we need to clone the SiVa Github repository: git clone https://github.com/open-eid/SiVa.git --branch master Final step is building the SiVa project using Maven Wrapper cd SiVa ./mvnw clean install Note The build can take up to 30 minutes because there are lot of tests that will be run through and downloading of the required dependencies To verify that SiVa project built successfully look for BUILD SUCCESS in build compilation output last lines. The last lines of build output should look very similar to below image: [INFO] Reactor Summary: [INFO] [INFO] SiVa Digitally signed documents validation service . SUCCESS [ 1.632 s] [INFO] validation-services-parent ......................... SUCCESS [ 0.897 s] [INFO] validation-commons ................................. SUCCESS [ 12.321 s] [INFO] tsl-loader ......................................... SUCCESS [ 6.917 s] [INFO] Generic Validation Service ......................... SUCCESS [ 27.919 s] [INFO] TimeStampToken Validation Service .................. SUCCESS [ 7.046 s] [INFO] BDOC Validation Service ............................ SUCCESS [ 50.087 s] [INFO] DDOC Validation Service ............................ SUCCESS [ 16.712 s] [INFO] SiVa webapp and other core modules ................. SUCCESS [ 0.653 s] [INFO] siva-monitoring .................................... SUCCESS [ 9.736 s] [INFO] xroad-validation-service ........................... SUCCESS [ 19.761 s] [INFO] siva-statistics .................................... SUCCESS [ 13.734 s] [INFO] SiVa validation service proxy ...................... SUCCESS [ 11.509 s] [INFO] SiVa signature service ............................. SUCCESS [ 6.869 s] [INFO] siva-webapp ........................................ SUCCESS [ 27.608 s] [INFO] SiVa Sample Web application ........................ SUCCESS [ 38.585 s] [INFO] SiVa Web Service integration tests ................. SUCCESS [03:53 min] [INFO] siva-distribution .................................. SUCCESS [ 10.818 s] [INFO] ------------------------------------------------------------------------ [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------ [INFO] Total time: 08:18 min [INFO] Finished at: 2017-12-04T13:49:48+02:00 [INFO] Final Memory: 113M/903M [INFO] ------------------------------------------------------------------------","title":"Building SiVa webapps on Ubuntu 16.04"},{"location":"siva2/systemintegrators_guide/#deploying","text":"","title":"Deploying"},{"location":"siva2/systemintegrators_guide/#option-1-starting-webapps-from-command-line","text":"SiVa project compiles 3 fat executable JAR files that you can run after successfully building the project by issuing below commands: First start the Siva webapp ./siva-parent/siva-webapp/target/siva-webapp-3.0.0.jar Second we need to start X-road validation webapp ./validation-services-parent/xroad-validation-service/target/xroad-validation-service-3.0.0.jar The SiVa webapp by default runs on port 8080 and XRoad validation service starts up on port 8081 . Easiest way to test out validation is run SiVa demo application. Start the Demo webapp ./siva-parent/siva-sample-application/target/siva-sample-application-3.0.0.jar Now point Your browser to URL: http://localhost:9000","title":"OPTION 1 - starting webapps from command line"},{"location":"siva2/systemintegrators_guide/#option-2-running-webapps-as-systemd-services","text":"Maven build generates executable JAR files. This means web container and all its dependencies are package inside single JAR file. It makes a lot easier to deploy it into servers. Easiest option to setup SiVa is as systemd service in Ubuntu servers. For that we first need to create service file: vim siva-webapp.service Inside it we need to paste below text. You need to change few things in service setup file. First you must not run service as root . So it's strongly recommended to change line User=root Second You can change Java JVM options by modifying the JAVA_OPTS inside the siva-webapp.service file. Also You can change the SiVa application configuration options by modifying RUN_ARGS section in file [Unit] Description = siva-webapp After = syslog.target [Service] User = root ExecStart = /var/apps/siva-webapp.jar Environment = JAVA_OPTS=-Xmx320m RUN_ARGS=--server.port=80 SuccessExitStatus = 143 [Install] WantedBy = multi-user.target Save and close the siva-webapp.service file. Next we need to move siva-webapp-3.0.0.jar into newly created /var/apps directory and rename to JAR file to siva-webapp.jar . match Note The copied JAR filename must match option ExecStart in siva-webapp.service file sudo mkdir /var/apps sudo cp siva-parent/siva-webapp/target/executable/siva-webapp-3.0.0.jar /var/apps/siva-webapp.jar Next we need to copy the siva-webapp.service file into /lib/systemd/system directory. Then we are ready to start the siva-webapp service. sudo cp siva-webapp.service /lib/systemd/system sudo systemctl start siva-webapp Final step of setting up the siva-webapp service is to verify that service started correctly by issuing below command. systemctl status siva-webapp It should print out similar to below picture: \u25cf siva - webapp . service - siva - webapp Loaded : loaded ( / lib / systemd / system / siva - webapp . service ; disabled ; vendor preset : enabled ) Active : active ( running ) since Thu 2016 - 07 - 21 08 : 48 : 14 EDT ; 1 day 2 h ago Main PID : 15965 ( siva - webapp . jar ) Tasks : 34 Memory : 429.6 M CPU : 2 min 5.721 s CGroup : / system . slice / siva - webapp . service \u251c\u2500 15965 / bin / bash / var / apps / stage / siva - webapp . jar \u2514\u2500 15982 / usr / bin / java - Dsun . misc . URLClassPath . disableJarChecking = true - Xmx320m - jar / var / apps / stage / siva - webapp . jar Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: at eu . europa . esig . dss . tsl . service . TSLParser . getTslModel ( TSLParser . java : 143 ) Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: at eu . europa . esig . dss . tsl . service . TSLParser . call ( TSLParser . java : 129 ) Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: ... 5 common frames omitted Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: 20.07 . 2016 03 : 00 : 01.450 INFO [ pool - 3 - thread - 1 ] [ e . e . e . dss . tsl . service . TSLRepository . sync Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: 20.07 . 2016 03 : 00 : 01.450 INFO [ pool - 3 - thread - 1 ] [ e . e . e . dss . tsl . service . TSLRepository . sync","title":"OPTION 2 - running webapps as systemd services"},{"location":"siva2/systemintegrators_guide/#option-3-deploy-webapps-as-war-files-tomcat-setup-for-legacy-systems","text":"NOTE 1 : We do not recommend using WAR deployment option because lack of testing done on different servlet containers also possible container application libraries conflicts NOTE 2 : Each SiVa service must be deployed to separate instance of Tomcat to avoid Java JAR library version conflicts. NOTE 3 : To limit your webapp request size (this is set automatically when deploying service as jar) one needs to configure the container manually. For example, when using Tomcat 7 or Tomcat 8 - the http connector parameter maxPostSize should be configured with the desired limit. NOTE 4 : The war file must be deployed to Tomcat ROOT. First we need to download Tomcat web servlet container as of the writing latest version available in version 8 branch is 8.5.24. We will download it with wget wget http://www-eu.apache.org/dist/tomcat/tomcat-8/v8.5.24/bin/apache-tomcat-8.5.24.tar.gz Unpack it somewhere: tar xf apache-tomcat-8.5.24.tar.gz Now we should build the WAR file. We have created helper script with all the correct Maven parameters. ./war-build.sh NOTE The script will skip running the integration tests when building WAR files Final steps would be copying built WAR file into Tomcat webapps directory and starting the servlet container. cp siva-parent/siva-webapp/target/siva-webapp-3.0.0.war apache-tomcat-8.5.24/webapps ./apache-tomcat-7.0.77/bin/catalina.sh run IMPORTANT siva-webapp on startup creates etc directory where it copies the TSL validaiton certificates siva-keystore.jks . Default location for this directory is application root or $CATALINA_HOME . To change this default behavior you should set environment variable DSS_DATA_FOLDER","title":"OPTION 3  - deploy webapps as war files (Tomcat setup for legacy systems)"},{"location":"siva2/systemintegrators_guide/#how-to-set-war-deployed-siva-applicationproperties","text":"SiVa override properties can be set using application.properties file. The file can locate anywhare in the host system. To make properties file accessible for SiVa you need to create or edit setenv.sh placed inside bin directory. Contents of the setenv.sh file should look like: export CATALINA_OPTS = \"-Dspring.config.location=file:/path/to/application.properties\"","title":"How-to set WAR deployed SiVa application.properties"},{"location":"siva2/systemintegrators_guide/#smoke-testing-your-deployed-system","text":"Step 1 . Install HTTPIE httpie is more user friendly version of curl and we will use to verify that SiVa was installed and started correctly on our server. If you have Python and its package manager pip installed. Then You can issue below command: pip install httpie Step 2 . Download a sample JSON request file. http --download https://raw.githubusercontent.com/open-eid/SiVa/develop/build-helpers/sample-requests/bdocPass.json Step 3 . After successful download issue below command in same directory where you downloaded the file using the command below. http POST http://localhost:8080/validate < bdocPass.json Step 4 . Verify the output. The output of previous command should have similar data as below screenshot. Look for signatureCount and validSignatureCount , they must be equal.","title":"Smoke testing your deployed system"},{"location":"siva2/systemintegrators_guide/#logging","text":"By default, logging works on the INFO level and logs are directed to the system console only. Logging functionality is handled by the SLF4J logging facade and on top of the Logback framework. As a result, logging can be configured via the standard Logback configuration file through Spring boot. Additional logging appenders can be added. Consult logback documentation for more details on log file structure. For example, adding application.properties to classpath with the logging.config property logging.config = /path/to/logback.xml","title":"Logging"},{"location":"siva2/systemintegrators_guide/#statistics","text":"For every report validated, a statistical report is composed that collects the following data: Data Description Validation duration The time it takes to process an incoming request - measured in milliseconds Container type Container type ( text value that identifies the signature type of the incoming document: ASiC-E, XAdES, ASiC-S or ASiC-E (BatchSignature) ) Siva User ID String (Text data that contains the SiVa user identifier for reports (from the HTTP x-authenticated-user header) or N/A ) Total signatures count The value of the signaturesCount element in the validation report Valid signatures count The value of the validSignaturesCount element in the validation report Signature validation indication(s) Values of elements signatures/indication and signatures/subindication from the validation report. indication[/subindication] Signature country/countries Country code extracted from the signer certs. The ISO-3166-1 alpha-2 country code that is associated with signature (the signing certificate). Or constant string \"XX\" if the country cannot be determined. Signature format(s) Values of element signatures/signatureFormat from the validation report. There are two channels where this information is sent: Log feeds (at INFO level) which can be redirected to files or to a syslog feed. Google Analytics service (as GA events). Turned off by default. See Configuration parameters for further details. The format and events are described in more detail in SiVa_statistics.pdf","title":"Statistics"},{"location":"siva2/systemintegrators_guide/#monitoring","text":"SiVa webapps provide an endpoint for external monitoring tools to periodically check the generic service health status. Note Note that this endpoint is disabled by default. The url for accessing JSON formatted health information with HTTP GET is /monitoring/health or /monitoring/health.json . See the Interfaces section for response structure and details. Enabling and disabling the monitoring endpoint To enable the endpoint, use the following configuration parameter: endpoints.health.enabled = true Customizing external service health indicators The endpoint is implemented as a customized Spring boot health endpoint , which allows to add custom health indicators. Demo webapp and Siva webapp also include additional information about the health of their dependent services. These links to dependent web services have been preconfigured. For example, the Demo webapp is preset to check whether the Siva webapp is accessible from the following url (parameter siva.service.serviceHost value)/monitoring/health and the Siva webapp verifies that the X-road validation service webapp is accessible by checking the default url (configured by parameter siva.proxy.xroadUrl value)/monitoring/health url. However, using the following parameters, these links can be overridden: Property Description endpoints.health.links[index].name A short link name Default: N/A endpoints.health.links[index].url URL to another monitoring endpoint that produces Spring boot health endpoint compatible JSON object as a response to HTTP GET. Default: N/A endpoints.health.links[index].timeout Connection timeout (in milliseconds) Default: N/A For example: endpoints.health.links [ 0 ] .name = linkToXroad endpoints.health.links [ 0 ] .url = http://localhost:7777/monitoring/health endpoints.health.links [ 0 ] .timeout = 1000 Note The external link configuration must be explicitly set when the monitoring service on the target machine is configured to run on a different port as the target service itself(ie using the management.port option in configuration) .","title":"Monitoring"},{"location":"siva2/systemintegrators_guide/#validation-report-signature","text":"SiVa provides the ability to sign the validation report. The idea of supplementing the validation report with a validation report signature is to prove the authority's authenticity and integrity over the validation. Note Signing of validation report is disabled by default To enable it, use the following configuration parameter: siva.report.reportSignatureEnabled = true When validation report signature is enabled, only detailed validation reports will be signed, simple reports will not be signed. The validation report's digital signature is composed out of response's validationReport object. The target format of the signature is ASiC-E (signature level is configurable). The ASiC-E container contents are encoded into Base64 and put on the same level int the response as the validation report itself. Note Enabling the validation report signing will affect the performance of the service. Example structure of the response containing report signature: { \"validationReport\" : { ... }, \"validationReportSignature\" : \"ZHNmYmhkZmdoZGcgZmRmMTM0NTM...\" } Supported interfaces for signature creation: PKCS#11 - a platform-independent API for cryptographic tokens, such as hardware security modules (HSM) and smart cards PKCS#12 - for files bundled with private key and certificate Report signature configuration parameters: Property Description siva.report.reportSignatureEnabled Enables signing of the validation report. Validation report will only be signed when requesting detailed report. Default: false siva.signatureService.signatureLevel The level of the validation report signature. Example values: * XAdES_BASELINE_B * XAdES_BASELINE_T * XAdES_BASELINE_LT * XAdES_BASELINE_LTA siva.signatureService.tspUrl URL of the timestamp provider. Only needed when the configured signature level is at least XAdES_BASELINE_T siva.signatureService.ocspUrl URL of the OCSP provider. Only needed when the configured signature level is at least XAdES_BASELINE_LT siva.signatureService.pkcs11.path path to PKCS#11 module (depends on your installed smart card or hardware token library, for example: /usr/local/lib/opensc-pkcs11.so) siva.signatureService.pkcs11.password pin/password of the smart card or hardware token siva.signatureService.pkcs11.slotIndex depends on the hardware token. E.g. Estonian Smart Card uses 2, USB eToken uses 0. Default: 0 siva.signatureService.pkcs12.path path to keystore file containing certificate and private key siva.signatureService.pkcs12.password password of the keystore file containing certificate and private key Note When configuring report signature, either PKCS#11 or PKCS#12 should be configured, no need to configure both.","title":"Validation Report Signature"},{"location":"siva2/systemintegrators_guide/#configuration-parameters","text":"All SiVa webapps have been designed to run with predetermined defaults after building and without additional configuration. However, all the properties can be overridden on the service or embedded web server level, if necessary. By default, the service loads it's global configuration from the application.yml file that is packaged inside the jar file. Default configuration parameters can be overridden by providing custom application.yml in the following locations , or using command line parameters or by using other externalized configuration methods methods. For example, to configure the embedded Tomcat web server inside a fat jar to run on different port (default is 8080), change the server.port following property: server.port = 8080 Or to increase or modify the default http request limit, override the server.max-http-post-size property: server.max-http-post-size: 13981016 See the reference list of all common application properties provided by Spring boot","title":"Configuration parameters"},{"location":"siva2/systemintegrators_guide/#siva-webapp-parameters","text":"Updating TSL Property Description siva.tsl.loader.loadFromCache A boolean value that determines, whether the TSL disk cache is updated by downloading a new TSL in a predetermined interval Note that the cache is by default stored in a system temporary folder (can be set with system property java.io.tmpdir ) in a subdirectory named dss_cache_tsl When set to false the cache is refreshed periodically by SiVa in a predetermined interval specified by siva.tsl.loader.schedulerCron using siva.tsl.loader.url When set to true the siva uses existing cache as it's TSL. No direct polling for updates are performed. Default: false siva.tsl.loader.url A url value that points to the external TSL Default: https://ec.europa.eu/tools/lotl/eu-lotl.xml siva.tsl.loader.code Sets the LOTL code in DSS Default: EU siva.tsl.loader.trustedTerritories Sets the trusted territories by countries Default: \"AT\", \"BE\", \"BG\", \"CY\", \"CZ\", \"DE\", \"DK\", \"EE\", \"ES\", \"FI\", \"FR\", \"GR\", \"HU\", \"HR\", \"IE\", \"IS\", \"IT\", \"LT\", \"LU\", \"LV\", \"LI\", \"MT\", \"NO\", \"NL\", \"PL\", \"PT\", \"RO\", \"SE\", \"SI\", \"SK\", \"UK\" siva.tsl.loader.schedulerCron A string in a Crontab expression format that defines the interval at which the TSL renewal process is started. The default is 03:00 every day (local time) Default: 0 0 3 * * ? siva.keystore.type Keystore type. Keystore that contains public keys to verify the signed TSL Default: JKS siva.keystore.filename Keystore that contains public keys to verify the signed TSL Default: siva-keystore.jks siva.keystore.password Keystore password. Keystore that contains public keys to verify the signed TSL Default: siva-keystore-password Note Note that the keystore file location can be overriden using environment variable DSS_DATA_FOLDER . By default the keystore file location, is expected to be on local filesystem in etc directory which is at the same level with the fat jar file (one is created, if no such directory exists). Note TSL is currently used only by Generic and BDOC validators Forward to custom X-road webapp instance Property Description siva.proxy.xroadUrl A URL where the X-Road validation requests are forwarded Default: http://localhost:8081 Collecting statistics with Google Analytics Property Description siva.statistics.google-analytics.enabled Enables/disables the service Default: false siva.statistics.google-analytics.url Statistics endpoint URL Default: http://www.google-analytics.com/batch siva.statistics.google-analytics.trackingId The Google Analytics tracking ID Default: UA-83206619-1 siva.statistics.google-analytics.dataSourceName Descriptive text of the system Default: SiVa BDOC validation parameters Property Description siva.bdoc.digidoc4JConfigurationFile Path to Digidoc4j configuration override Default: N/A Customizing BDOC validation policies Property Description siva.bdoc.signaturePolicy.defaultPolicy Selected default policy name Default: N/A siva.bdoc.signaturePolicy.policies[index].name Policy name Default: N/A siva.bdoc.signaturePolicy.policies[index].description Policy description Default: N/A siva.bdoc.signaturePolicy.policies[index].constraintPath Constraint XML file path for the policy. An absolute path or a reference to a resource on the classpath Default: N/A siva.bdoc.signaturePolicy.policies[index].url Policy URL Default: N/A By default, the following configuration is used siva.bdoc.signaturePolicy.policies[0].name=POLv3 siva.bdoc.signaturePolicy.policies[0].description=Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. siva.bdoc.signaturePolicy.policies[0].url=http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#POLv3 siva.bdoc.signaturePolicy.policies[0].constraintPath=bdoc_constraint_no_type.xml siva.bdoc.signaturePolicy.policies[1].name=POLv4 siva.bdoc.signaturePolicy.policies[1].description=Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result. siva.bdoc.signaturePolicy.policies[1].url=http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#POLv4 siva.bdoc.signaturePolicy.policies[1].constraintPath=bdoc_constraint_qes.xml siva.bdoc.signaturePolicy.defaultPolicy=POLv4 Note Default policy configuration is lost when policy detail properties (name, description, url or constraintPath) are overridden or new custom policies added in custom configuration files (in this case, the existing default policies must be redefined in configuration files explicitly) Generic validation - customize validation policies Property Description siva.europe.signaturePolicy.defaultPolicy Selected default policy name Default: N/A siva.europe.signaturePolicy.policies[index].name Policy name Default: N/A siva.europe.signaturePolicy.policies[index].description Policy description Default: N/A siva.europe.signaturePolicy.policies[index].constraintPath Constraint XML file path for the policy. An absolute path or a reference to a resource on the classpath Default: N/A siva.europe.signaturePolicy.policies[index].url Policy URL Default: N/A By default, the following configuration is used siva.europe.signaturePolicy.policies[0].name=POLv3 siva.europe.signaturePolicy.policies[0].description=Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. siva.europe.signaturePolicy.policies[0].url=http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#POLv3 siva.europe.signaturePolicy.policies[0].constraintPath=generic_constraint_ades.xml siva.europe.signaturePolicy.policies[1].name=POLv4 siva.europe.signaturePolicy.policies[1].description=Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result. siva.europe.signaturePolicy.policies[1].url=http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#POLv4 siva.europe.signaturePolicy.policies[1].constraintPath=generic_constraint_qes.xml siva.europe.signaturePolicy.defaultPolicy=POLv4 Note Default policy configuration is lost when policy detail properties (name, description, url or constraintPath) are overridden or new custom policies added in custom configuration files (in this case, the existing default policies must be redefined in configuration files explicitly) DDOC validation Property Description siva.ddoc.jdigidocConfigurationFile Path to JDigidoc configuration file. Determines the Jdigidoc configuration parameters (see JDigidoc manual for details. Default: /siva-jdigidoc.cfg Customizing DDOC validation policies: Property Description siva.ddoc.signaturePolicy.defaultPolicy Selected default policy name Default: N/A siva.ddoc.signaturePolicy.policies[index].name Policy name Default: N/A siva.ddoc.signaturePolicy.policies[index].description Policy description Default: N/A siva.ddoc.signaturePolicy.policies[index].constraintPath Constraint XML file path for the policy. An absolute path or a reference to a resource on the classpath Default: N/A siva.ddoc.signaturePolicy.policies[index].url Policy URL Default: N/A By default, the following configuration is used siva.ddoc.signaturePolicy.policies[0].name=POLv3 siva.ddoc.signaturePolicy.policies[0].description=Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. siva.ddoc.signaturePolicy.policies[0].url=http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#POLv3 siva.ddoc.signaturePolicy.policies[0].constraintPath=ddoc_constraint_no_type.xml siva.ddoc.signaturePolicy.policies[1].name=POLv4 siva.ddoc.signaturePolicy.policies[1].description=Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result. siva.ddoc.signaturePolicy.policies[1].url=http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#POLv4 siva.ddoc.signaturePolicy.policies[1].constraintPath=ddoc_constraint_qes.xml siva.ddoc.signaturePolicy.defaultPolicy=POLv4 Note Default policy configuration is lost when policy detail properties (name, description, url or constraintPath) are overridden or new custom policies added in custom configuration files (in this case, the existing default policies must be redefined in configuration files explicitly) X-road validation Property Description siva.xroad.validation.service.configurationDirectoryPath Directory that contains the certs of approved CA's, TSA's and list of members Default: /verificationconf Property Description siva.xroad.signaturePolicy.defaultPolicy Selected default policy name Default: N/A siva.xroad.signaturePolicy.policies[index].name Policy name Default: N/A siva.xroad.signaturePolicy.policies[index].description Policy description Default: N/A siva.xroad.signaturePolicy.policies[index].constraintPath Constraint XML file path for the policy. An absolute path or a reference to a resource on the classpath Default: N/A siva.xroad.signaturePolicy.policies[index].url Policy URL Default: N/A By default, the following configuration is used siva.xroad.signaturePolicy.policies[0].name=POLv3 siva.xroad.signaturePolicy.policies[0].description=Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. siva.xroad.signaturePolicy.policies[0].url=http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#POLv3 siva.xroad.signaturePolicy.policies[0].constraintPath=xroad_constraint_no_type.xml siva.xroad.signaturePolicy.defaultPolicy= POLv3 Note Default policy configuration is lost when policy detail properties (name, description, url or constraintPath) are overridden or new custom policies added in custom configuration files (in this case, the existing default policies must be redefined in configuration files explicitly) Note By default, X-road validation currently supports only POLv3","title":"Siva webapp parameters"},{"location":"siva2/systemintegrators_guide/#demo-webapp-parameters","text":"Linking to SiVa webapp Property Description siva.service.serviceHost An HTTP URL link to the Siva webapp Default: http://localhost:8080 siva.service.jsonServicePath Service path in Siva webapp to access the REST/JSON API Default: /validate siva.service.soapServicePath Service path in Siva webapp to access the SOAP API Default: /soap/validationWebService/validateDocument siva.service.jsonDataFilesServicePath Data file service path in Siva webapp to access the REST/JSON API Default: /getDataFiles siva.service.soapDataFilesServicePath Data file service path in Siva webapp to access the SOAP API Default: /soap/dataFilesWebService/getDocumentDataFiles","title":"Demo webapp parameters"},{"location":"siva2/test_plan/","text":"Test execution Execution of tests in SiVa is divided in three categories: Automated, Automated SoapUI, Manual. The method is also indicated in test case description with TestType field. Execution of Automated type of tests These tests are run automatically by Maven every time SiVa project is built. These tests must pass for the build to be successful. Its also possible to execute the tests separately with Maven wrapper using the command: ./mvnw verify These tests are part of SiVa project and can also be executed using IntellJ IDEA. To do that, SiVa project must be loaded into IDEA. Tests are located in following packages: ee.openeid.siva.integrationtest ee.openeid.siva.resttest ee.openeid.siva.soaptest To run the tests in IDEA right click on package name and select \"Run tests in\". Its also possible to run individual tests by right clicking on specific test code and selecting \"Run\". Execution of Automated SoapUI type of tests The description how to execute the tests together with SoapUI project file to be used can be found in SiVa GitHub Execution of Manual type of tests Most of the manual tests require that SiVa service is set up together with SiVa Sample application. The instructions how to set up SiVa are given in System integrator's guide Execution of manual tests depends on testable area. These tests can be divided into following categories: Statistics tests - test data can be prepeared with exectuting ee.openeid.siva.manualtest package. It can be also generated by uploading files into SiVa Sample application. Results have to be verified in logs and Google Analytics. Report tests - test data can be prepeared with exectuting ee.openeid.siva.manualtest package. Results have to be verified manually. Configuration tests - SiVa configuration files have to be modified by hand and service must be set up. Correct behavior of the service must be checked. Other tests - tests are executed by loading files into SiVa Sample application and validating the results shown in the SiVa Sample application. Files to use in manual tests can be found in SiVa GitHub Integration Test introduction This section of the document gives overview of Integration Testing carried out on SiVa web service and SiVa Sample application. SiVa web service Integration Testing is using RestAssured library v2.9.0 to implement automatic checks for REST/SOAP based tests. The testing of the SiVa web service is divided into sections based on the software architecture and functionalities provided to the users. The sections are: REST API SOAP API DDOC container signature validation BDOC container signature validation ASIC-S container signature validation PDF signature validation X-Road ASIC-E signature validation The goal is to focus testing on functionalities implemented in SiVa web service application. Functionalities provided by Validation libraries are not explicitly tested. In addition SiVa Sample Application is tested. These tests are carried out manually. Testing of REST API The goal of the REST API testing is to check that the API is accepting the requests based on the specification and the output result is in correct format and has all the required elements. Validation request tests Following areas are tested on input: Wrong (not accepted) values in input parameters Empty values in input paramters Too many parameters Too few parameters Inconsistencies on stated parameters and actual data (wrong document type) Case insensitivity on parameter names Empty request In all of the negative cases correctness of returned error message is checked. Specific test cases and input files can be found in: ValidationRequestIT.java DocumentFormatIT.java Get Data Files request tests Following areas are tested on input: Empty request Empty values in input parameters Too many parameters Too few parameters Changed order of parameters Case insensitivity on parameter names Inconsistencies on stated parameters and actual data In all of the negative cases correctness of returned error message is checked. Specific test cases and input files can be found in: GetDataFileRequestIT.java Validation report and report siganture tests SiVa web service returns uniform Validation Report on all the supported document types. This also includes correct document types without actual signature (for example PDF document without signature). Following areas are tested on output (Validation Report): JSON structure on DDOC, BDOC, PDF, ASIC-E, ASIC-S and ASICE-E X-Road document types Presence of the mandatory elements on DDOC, BDOC, PDF, ASIC-E, ASIC-S and ASICE-E X-Road document types Presence of optional elements on DDOC, BDOC, PDF, ASIC-E, ASIC-S and ASICE-E X-Road document types Verification of expected values JSON structure on containers without signatures Specific test cases and input files can be found in: ValidationReportValueVerificationIT.java ReportSignatureManualIT.java DetailedReportValidationManualIT.java Testing of SOAP API The goal of the SOAP API testing is to check that the API is accepting the requests based on the specification and the output result (Validation Report) is in correct format and has all the required elements. In general the tests follow the same principles as with REST API. Compatibility with X-Road security server is out of scope for these tests and will be covered in X-Road System Test plan. Validation request tests Following areas are tested on input: Wrong (not accepted) values in input parameters Empty values in input paramters Too many parameters Too few parameters Inconsistencies on stated parameters and actual data (wrong document type) Case insensitivity on parameter names Empty request In all of the negative cases correctness of returned error message is checked. Specific test cases and input files can be found in: SoapValidationRequestIT.java Get Data Files request tests Following areas are tested on input: Empty request Empty values in input parameters Too many parameters Too few parameters Changed order of parameters Case insensitivity on parameter names Inconsistencies on stated parameters and actual data In all of the negative cases correctness of returned error message is checked. Specific test cases and input files can be found in: SoapGetDataFileRequestIT.java Validation report tests SiVa web service returns uniform Validation Report on all the supported document types. This also includes correct document types without actual signature (for example PDF document without signature). However not all values may be present for all the document types. Following areas are tested on output (Validation Report): Presence of the mandatory elements on DDOC, BDOC, PDF, ASIC-S ASIC-E and ASICE-E X-Road document types Presence of optional elements on DDOC, BDOC, PDF, ASIC-S, ASIC-E and ASICE-E X-Road document types Verification of expected values Specific test cases and input files can be found in: SoapValidationReportValueIT.java Get Data Files report tests Following areas are tested on output: Presence of the mandatory elements Verification of expected values Extraction of all data files Specific test cases and input files can be found in: SoapGetDataFileReportIT.java Testing of DDOC container signature validation The goal of the DDOC container signature validation testing is to check that the validation results given by JDigiDoc library are properly presented in validation report. The testing of DDOC signatures consists of following main cases: Containers with valid signature(s) are validated. Containers with invalid signature(s) or no signature are validated Containers sizes near maximum are validated Containers with DDOC v1.0 - 1.3 are validated Specific test cases and input files can be found in: DdocValidationFailIT.java DdocValidationPassIT.java LargeFileIT.java What is not tested: Verification of different causes in container for invalid result is out of scope. Testing of BDOC container signature validation The goal of the BDOC container signature validation testing is to check that the validation results given by DigiDoc4J library are properly presented in validation report. The testing of BDOC container signatures consists of following main cases: Containers with valid signature(s) are validated Containers with invalid signature(s) or no signature are validated Containers sizes near maximum are validated Containers with baseline LT, LTA, T and B profiles Specific test cases and input files can be found in: BdocValidationFailIT.java BdocValidationPassIT.java LargeFileIT.java What is not tested: Verification of different causes in container for invalid result is out of scope. Testing of ASIC-S container signature validation The goal of the ASIC-S container signature validation testing is to check that the validation results given by DSS library are properly presented in validation report. The testing of ASIC-S container signatures consists of following main cases: Containers with valid signature(s) are validated Containers with invalid signature(s) or no signature are validated Containers sizes near maximum are validated Specific test cases and input files can be found in: AsicsValidationFailIT.java AsicsValidationPassIT.java What is not tested: Verification of different causes in container for invalid result is out of scope. Testing of PDF signature validation Portion of the validation rules for PDF documents are implemented in SiVa web apllication itself. Therefor different test area selection is used for PDF compared to other containers. The testing of PDF signatures consists of following main cases: Containers with invalid signature(s) (different reasons for failure) are validated Containers with no signature are validated Containers sizes near maximum are validated Containers with different baseline profiles are validated Containers with serial and parallel signatures are validated Containers with different signature cryptocaphic algorithms are validated Containers with OCSP values inside and outside bounds are validated Containers with baseline LT, LTA, T and B profiles Specific test cases and input files can be found in: PdfBaselineProfileIT.java PdfSignatureCryptographicAlgorithmIT.java PdfValidationFailIT.java PdfValidationPassIT.java LargeFileIT.java Testing of X-Road ASIC-E container signature validation The goal of the ASICE container signature validation testing is to check that the validation results given by X-Road signature validation utility are properly presented in validation report. The testing of ASICE signatures consists of following main cases: Containers with valid signature(s) are validated Containers with invalid signature(s) are validated Specific test cases and input files can be found in: XroadValidationPassIT.java XroadValidationFailIT.java What is not tested: Verification of different causes in container for invalid result is out of scope. Testing of Data Files Extraction The goal of the Data Files Extraction testing is to check if right data files returned for DDOC container and error messages for other types of containers. The testing of Data Files Extraction consists of following main cases: Extracting the data files from valid DDOC container Extracting the data files from Hashcoded DDOC returns null for Base64 encoded String Extracting the data files from DDOC container with 12 different types of files Extracting the data files from not DDOC container Extracting the data files from DDOC container with wrong Document Type Specific test cases and input files can be found in: DdocGetDataFilesIT.java Testing of user statistics Testing of user statistics is carried out in combination of automatic data preparation and generation by integration tests and manual verification of the results. SiVa supports two parallel ways of gathering user statistics: Validation results are printed to system log and can be gathered by any suitable means Validation results are sent to Google Analytics using Google Measurement Protocol API Note Testing of Google Analytics requires creation and configuration of Google Analytics account and configuring SiVa service to send statistics to this account. Configuration of SiVa service is explained in SiVa system deployment. As both systems use the same data the testing follows the same principles for both. Following areas are covered: Statistics values are checked in log and Google Analytics for all container types (this also includes parameters not present in validation report) Valid and invalid signatures are validated Error situations on signature validation (instead of validation report, error message is returned) Specific test cases and input files can be found in: StatisticsToGAManualIT.java StatisticsToLogsManualIT.java What is not tested: Configuring Google Analytics reports is out of scope. Only verification of data presence is done. SiVa Sample Application tests Testing of SiVa Sample Application is done manually. The main cases are: Cross browser usage (IE, Edge, Chrome, Firefox and Safari) File upload (different sizes, suported and unsupported file types) Displayment of Validation Report both for REST and SOAP Layout of the page Error representation Sample test cases with input files can be found in: Sample Application Integration Test System Test introduction While Integration Tests were mostly carried out automatically then System Testing is mostly depending on manual testing. System testing is carried out using two access points: Testing through SiVa Sample Application Testing through X-Road security server using SoapUI Note Testing through X-Road security server requires presence and configuration of X-Road security server to use SiVa service. Tests are run using SoapUI that simulates request to X-Road security server. Testing through X-Road security server Following areas are covered for document validation: Validation of valid signature Validation of invalid signatur Validation that returns Soap error All of the above test cases are run with BDOC, DDOC, PDF, ASIC-S and X-Road ASiC-E containers. Following areas are covered for file extraction: Extraction of data files from valid ddoc Extraction of data files from invalid ddoc Error response from data file extraction Tests along with test case descriptions are available for rerun in github . Specific test cases and input files can be found in: X-Road Soap System Test Configuration/administration testing Following areas are covered: SiVa Web Application configuration X-Road validation service configuration Sample application configuration Specific test cases can be found in: Configuration System Test Load Test introduction The goals of the load test was to: Determine the throughput capabilities of a single Siva node and how it handles requests under increasing load. Test whether the SiVa service throughput is horizontally scalable up to 50 requests per second. Each container type was load-tested separately since the business logic and underlying mechanics for validating specific container types are vastly different. Load tests were run in three stages \u2013 firstly a single Siva service node was tested to determine the baseline performance metrics. Second and third stage involved adding additional service node to previous setup and testing the horizontal scalability performance. All three target Siva service nodes had identical virtual machine set-up. Virtual machines were installed on separate physical hardware. Siva web service nodes on a target Linux virtual machine were packaged inside a Docker container (along with Java with 4 GB allocated for Heap). The test runner (JMeter plugin used by Maven) resided on a separate machine on local area network. Simple reverse proxy was used as a load balancer to distribute the load between nodes (using round robin algorithm). Load testing is carried out on following environments: System under test enviroment (processor: Intel(R) Xeon(R) CPU E5-2620 v3 @ 2.40GHz memory: 6GB (4GB allocated for Java heap)) Load balancer enviroment (processor: Intel(R) Xeon(R) CPU E5-2620 v3 @ 1.60GHz memory: 4GB) Jmeter executer enviroment (processor: Intel(R) Xeon(R) CPU E5-2620 v2 @ 2.10GHz memory: 10GB) Following test data is used in load test: BDOC-TS file with two valid signatures (~100KB and 5MB) BDOC-TM file with two valid signatures (~100KB and 5MB) PDF file with two valid signatures (~200KB and 5MB) DDOC file with two valid signatures (~300KB and 5MB) ASIC-E X-Road container with one valid signature (~10KB) ASIC-S file with two valid signatures (~20KB and 50KB) Each of the files are validated through REST interface. SOAP interface is used with small files for a comparison. It is evaluated that the interface (REST or SOAP) do not play noticeable effect on overall results. Each of the tested files follow the same test plan: Five concurrent requests are made per second This load is held for period of time Concurrent requests are increased by five until 50 concurrent requests per second is achieved Latency and throughput is measured on each concurrent request steps","title":"9.6.2 Test Plan"},{"location":"siva2/test_plan/#test-execution","text":"Execution of tests in SiVa is divided in three categories: Automated, Automated SoapUI, Manual. The method is also indicated in test case description with TestType field.","title":"Test execution"},{"location":"siva2/test_plan/#execution-of-automated-type-of-tests","text":"These tests are run automatically by Maven every time SiVa project is built. These tests must pass for the build to be successful. Its also possible to execute the tests separately with Maven wrapper using the command: ./mvnw verify These tests are part of SiVa project and can also be executed using IntellJ IDEA. To do that, SiVa project must be loaded into IDEA. Tests are located in following packages: ee.openeid.siva.integrationtest ee.openeid.siva.resttest ee.openeid.siva.soaptest To run the tests in IDEA right click on package name and select \"Run tests in\". Its also possible to run individual tests by right clicking on specific test code and selecting \"Run\".","title":"Execution of Automated type of tests"},{"location":"siva2/test_plan/#execution-of-automated-soapui-type-of-tests","text":"The description how to execute the tests together with SoapUI project file to be used can be found in SiVa GitHub","title":"Execution of Automated SoapUI type of tests"},{"location":"siva2/test_plan/#execution-of-manual-type-of-tests","text":"Most of the manual tests require that SiVa service is set up together with SiVa Sample application. The instructions how to set up SiVa are given in System integrator's guide Execution of manual tests depends on testable area. These tests can be divided into following categories: Statistics tests - test data can be prepeared with exectuting ee.openeid.siva.manualtest package. It can be also generated by uploading files into SiVa Sample application. Results have to be verified in logs and Google Analytics. Report tests - test data can be prepeared with exectuting ee.openeid.siva.manualtest package. Results have to be verified manually. Configuration tests - SiVa configuration files have to be modified by hand and service must be set up. Correct behavior of the service must be checked. Other tests - tests are executed by loading files into SiVa Sample application and validating the results shown in the SiVa Sample application. Files to use in manual tests can be found in SiVa GitHub","title":"Execution of Manual type of tests"},{"location":"siva2/test_plan/#integration-test-introduction","text":"This section of the document gives overview of Integration Testing carried out on SiVa web service and SiVa Sample application. SiVa web service Integration Testing is using RestAssured library v2.9.0 to implement automatic checks for REST/SOAP based tests. The testing of the SiVa web service is divided into sections based on the software architecture and functionalities provided to the users. The sections are: REST API SOAP API DDOC container signature validation BDOC container signature validation ASIC-S container signature validation PDF signature validation X-Road ASIC-E signature validation The goal is to focus testing on functionalities implemented in SiVa web service application. Functionalities provided by Validation libraries are not explicitly tested. In addition SiVa Sample Application is tested. These tests are carried out manually.","title":"Integration Test introduction"},{"location":"siva2/test_plan/#testing-of-rest-api","text":"The goal of the REST API testing is to check that the API is accepting the requests based on the specification and the output result is in correct format and has all the required elements.","title":"Testing of REST API"},{"location":"siva2/test_plan/#validation-request-tests","text":"Following areas are tested on input: Wrong (not accepted) values in input parameters Empty values in input paramters Too many parameters Too few parameters Inconsistencies on stated parameters and actual data (wrong document type) Case insensitivity on parameter names Empty request In all of the negative cases correctness of returned error message is checked. Specific test cases and input files can be found in: ValidationRequestIT.java DocumentFormatIT.java","title":"Validation request tests"},{"location":"siva2/test_plan/#get-data-files-request-tests","text":"Following areas are tested on input: Empty request Empty values in input parameters Too many parameters Too few parameters Changed order of parameters Case insensitivity on parameter names Inconsistencies on stated parameters and actual data In all of the negative cases correctness of returned error message is checked. Specific test cases and input files can be found in: GetDataFileRequestIT.java","title":"Get Data Files request tests"},{"location":"siva2/test_plan/#validation-report-and-report-siganture-tests","text":"SiVa web service returns uniform Validation Report on all the supported document types. This also includes correct document types without actual signature (for example PDF document without signature). Following areas are tested on output (Validation Report): JSON structure on DDOC, BDOC, PDF, ASIC-E, ASIC-S and ASICE-E X-Road document types Presence of the mandatory elements on DDOC, BDOC, PDF, ASIC-E, ASIC-S and ASICE-E X-Road document types Presence of optional elements on DDOC, BDOC, PDF, ASIC-E, ASIC-S and ASICE-E X-Road document types Verification of expected values JSON structure on containers without signatures Specific test cases and input files can be found in: ValidationReportValueVerificationIT.java ReportSignatureManualIT.java DetailedReportValidationManualIT.java","title":"Validation report and report siganture tests"},{"location":"siva2/test_plan/#testing-of-soap-api","text":"The goal of the SOAP API testing is to check that the API is accepting the requests based on the specification and the output result (Validation Report) is in correct format and has all the required elements. In general the tests follow the same principles as with REST API. Compatibility with X-Road security server is out of scope for these tests and will be covered in X-Road System Test plan.","title":"Testing of SOAP API"},{"location":"siva2/test_plan/#validation-request-tests_1","text":"Following areas are tested on input: Wrong (not accepted) values in input parameters Empty values in input paramters Too many parameters Too few parameters Inconsistencies on stated parameters and actual data (wrong document type) Case insensitivity on parameter names Empty request In all of the negative cases correctness of returned error message is checked. Specific test cases and input files can be found in: SoapValidationRequestIT.java","title":"Validation request tests"},{"location":"siva2/test_plan/#get-data-files-request-tests_1","text":"Following areas are tested on input: Empty request Empty values in input parameters Too many parameters Too few parameters Changed order of parameters Case insensitivity on parameter names Inconsistencies on stated parameters and actual data In all of the negative cases correctness of returned error message is checked. Specific test cases and input files can be found in: SoapGetDataFileRequestIT.java","title":"Get Data Files request tests"},{"location":"siva2/test_plan/#validation-report-tests","text":"SiVa web service returns uniform Validation Report on all the supported document types. This also includes correct document types without actual signature (for example PDF document without signature). However not all values may be present for all the document types. Following areas are tested on output (Validation Report): Presence of the mandatory elements on DDOC, BDOC, PDF, ASIC-S ASIC-E and ASICE-E X-Road document types Presence of optional elements on DDOC, BDOC, PDF, ASIC-S, ASIC-E and ASICE-E X-Road document types Verification of expected values Specific test cases and input files can be found in: SoapValidationReportValueIT.java","title":"Validation report tests"},{"location":"siva2/test_plan/#get-data-files-report-tests","text":"Following areas are tested on output: Presence of the mandatory elements Verification of expected values Extraction of all data files Specific test cases and input files can be found in: SoapGetDataFileReportIT.java","title":"Get Data Files report tests"},{"location":"siva2/test_plan/#testing-of-ddoc-container-signature-validation","text":"The goal of the DDOC container signature validation testing is to check that the validation results given by JDigiDoc library are properly presented in validation report. The testing of DDOC signatures consists of following main cases: Containers with valid signature(s) are validated. Containers with invalid signature(s) or no signature are validated Containers sizes near maximum are validated Containers with DDOC v1.0 - 1.3 are validated Specific test cases and input files can be found in: DdocValidationFailIT.java DdocValidationPassIT.java LargeFileIT.java What is not tested: Verification of different causes in container for invalid result is out of scope.","title":"Testing of DDOC container signature validation"},{"location":"siva2/test_plan/#testing-of-bdoc-container-signature-validation","text":"The goal of the BDOC container signature validation testing is to check that the validation results given by DigiDoc4J library are properly presented in validation report. The testing of BDOC container signatures consists of following main cases: Containers with valid signature(s) are validated Containers with invalid signature(s) or no signature are validated Containers sizes near maximum are validated Containers with baseline LT, LTA, T and B profiles Specific test cases and input files can be found in: BdocValidationFailIT.java BdocValidationPassIT.java LargeFileIT.java What is not tested: Verification of different causes in container for invalid result is out of scope.","title":"Testing of BDOC container signature validation"},{"location":"siva2/test_plan/#testing-of-asic-s-container-signature-validation","text":"The goal of the ASIC-S container signature validation testing is to check that the validation results given by DSS library are properly presented in validation report. The testing of ASIC-S container signatures consists of following main cases: Containers with valid signature(s) are validated Containers with invalid signature(s) or no signature are validated Containers sizes near maximum are validated Specific test cases and input files can be found in: AsicsValidationFailIT.java AsicsValidationPassIT.java What is not tested: Verification of different causes in container for invalid result is out of scope.","title":"Testing of ASIC-S container signature validation"},{"location":"siva2/test_plan/#testing-of-pdf-signature-validation","text":"Portion of the validation rules for PDF documents are implemented in SiVa web apllication itself. Therefor different test area selection is used for PDF compared to other containers. The testing of PDF signatures consists of following main cases: Containers with invalid signature(s) (different reasons for failure) are validated Containers with no signature are validated Containers sizes near maximum are validated Containers with different baseline profiles are validated Containers with serial and parallel signatures are validated Containers with different signature cryptocaphic algorithms are validated Containers with OCSP values inside and outside bounds are validated Containers with baseline LT, LTA, T and B profiles Specific test cases and input files can be found in: PdfBaselineProfileIT.java PdfSignatureCryptographicAlgorithmIT.java PdfValidationFailIT.java PdfValidationPassIT.java LargeFileIT.java","title":"Testing of PDF signature validation"},{"location":"siva2/test_plan/#testing-of-x-road-asic-e-container-signature-validation","text":"The goal of the ASICE container signature validation testing is to check that the validation results given by X-Road signature validation utility are properly presented in validation report. The testing of ASICE signatures consists of following main cases: Containers with valid signature(s) are validated Containers with invalid signature(s) are validated Specific test cases and input files can be found in: XroadValidationPassIT.java XroadValidationFailIT.java What is not tested: Verification of different causes in container for invalid result is out of scope.","title":"Testing of X-Road ASIC-E container signature validation"},{"location":"siva2/test_plan/#testing-of-data-files-extraction","text":"The goal of the Data Files Extraction testing is to check if right data files returned for DDOC container and error messages for other types of containers. The testing of Data Files Extraction consists of following main cases: Extracting the data files from valid DDOC container Extracting the data files from Hashcoded DDOC returns null for Base64 encoded String Extracting the data files from DDOC container with 12 different types of files Extracting the data files from not DDOC container Extracting the data files from DDOC container with wrong Document Type Specific test cases and input files can be found in: DdocGetDataFilesIT.java","title":"Testing of Data Files Extraction"},{"location":"siva2/test_plan/#testing-of-user-statistics","text":"Testing of user statistics is carried out in combination of automatic data preparation and generation by integration tests and manual verification of the results. SiVa supports two parallel ways of gathering user statistics: Validation results are printed to system log and can be gathered by any suitable means Validation results are sent to Google Analytics using Google Measurement Protocol API Note Testing of Google Analytics requires creation and configuration of Google Analytics account and configuring SiVa service to send statistics to this account. Configuration of SiVa service is explained in SiVa system deployment. As both systems use the same data the testing follows the same principles for both. Following areas are covered: Statistics values are checked in log and Google Analytics for all container types (this also includes parameters not present in validation report) Valid and invalid signatures are validated Error situations on signature validation (instead of validation report, error message is returned) Specific test cases and input files can be found in: StatisticsToGAManualIT.java StatisticsToLogsManualIT.java What is not tested: Configuring Google Analytics reports is out of scope. Only verification of data presence is done.","title":"Testing of user statistics"},{"location":"siva2/test_plan/#siva-sample-application-tests","text":"Testing of SiVa Sample Application is done manually. The main cases are: Cross browser usage (IE, Edge, Chrome, Firefox and Safari) File upload (different sizes, suported and unsupported file types) Displayment of Validation Report both for REST and SOAP Layout of the page Error representation Sample test cases with input files can be found in: Sample Application Integration Test","title":"SiVa Sample Application tests"},{"location":"siva2/test_plan/#system-test-introduction","text":"While Integration Tests were mostly carried out automatically then System Testing is mostly depending on manual testing. System testing is carried out using two access points: Testing through SiVa Sample Application Testing through X-Road security server using SoapUI Note Testing through X-Road security server requires presence and configuration of X-Road security server to use SiVa service. Tests are run using SoapUI that simulates request to X-Road security server.","title":"System Test introduction"},{"location":"siva2/test_plan/#testing-through-x-road-security-server","text":"Following areas are covered for document validation: Validation of valid signature Validation of invalid signatur Validation that returns Soap error All of the above test cases are run with BDOC, DDOC, PDF, ASIC-S and X-Road ASiC-E containers. Following areas are covered for file extraction: Extraction of data files from valid ddoc Extraction of data files from invalid ddoc Error response from data file extraction Tests along with test case descriptions are available for rerun in github . Specific test cases and input files can be found in: X-Road Soap System Test","title":"Testing through X-Road security server"},{"location":"siva2/test_plan/#configurationadministration-testing","text":"Following areas are covered: SiVa Web Application configuration X-Road validation service configuration Sample application configuration Specific test cases can be found in: Configuration System Test","title":"Configuration/administration testing"},{"location":"siva2/test_plan/#load-test-introduction","text":"The goals of the load test was to: Determine the throughput capabilities of a single Siva node and how it handles requests under increasing load. Test whether the SiVa service throughput is horizontally scalable up to 50 requests per second. Each container type was load-tested separately since the business logic and underlying mechanics for validating specific container types are vastly different. Load tests were run in three stages \u2013 firstly a single Siva service node was tested to determine the baseline performance metrics. Second and third stage involved adding additional service node to previous setup and testing the horizontal scalability performance. All three target Siva service nodes had identical virtual machine set-up. Virtual machines were installed on separate physical hardware. Siva web service nodes on a target Linux virtual machine were packaged inside a Docker container (along with Java with 4 GB allocated for Heap). The test runner (JMeter plugin used by Maven) resided on a separate machine on local area network. Simple reverse proxy was used as a load balancer to distribute the load between nodes (using round robin algorithm). Load testing is carried out on following environments: System under test enviroment (processor: Intel(R) Xeon(R) CPU E5-2620 v3 @ 2.40GHz memory: 6GB (4GB allocated for Java heap)) Load balancer enviroment (processor: Intel(R) Xeon(R) CPU E5-2620 v3 @ 1.60GHz memory: 4GB) Jmeter executer enviroment (processor: Intel(R) Xeon(R) CPU E5-2620 v2 @ 2.10GHz memory: 10GB) Following test data is used in load test: BDOC-TS file with two valid signatures (~100KB and 5MB) BDOC-TM file with two valid signatures (~100KB and 5MB) PDF file with two valid signatures (~200KB and 5MB) DDOC file with two valid signatures (~300KB and 5MB) ASIC-E X-Road container with one valid signature (~10KB) ASIC-S file with two valid signatures (~20KB and 50KB) Each of the files are validated through REST interface. SOAP interface is used with small files for a comparison. It is evaluated that the interface (REST or SOAP) do not play noticeable effect on overall results. Each of the tested files follow the same test plan: Five concurrent requests are made per second This load is held for period of time Concurrent requests are increased by five until 50 concurrent requests per second is achieved Latency and throughput is measured on each concurrent request steps","title":"Load Test introduction"},{"location":"siva2/use_cases/","text":"Digitally signed document validation process Digitally signed document validation process shows how SiVa chooses validation service and possible output of validation process. User of SiVa system provides digitally signed document file in form of Base64 encoded string. The validation of file and validation policy is handled by validation services underlying libraries. In case of DDOC containers with XAdES signatures it will be Ddoc Validation Service In case of BDOC containers with XAdES signatures it will be Bdoc Validation Service In case of X-ROAD ASIC-E containers with XAdES signatures it will be Xroad Validation Service In case of ASIC-S containers with TimeStampToken it will be Timestamptoken Validation Service In case of other containers or with XAdES, CAdES and PAdES signatures it will be Generic Validation Service We will log following failure cases: When file upload fails (request started but was not completed successfully) When request validation (JSON or SOAP) fails When signature validation fails Certificate loading process All validation services require certificates to validate digitally signed documents. Below process shows how certificates are loaded into validation service. Loading process is done separably for each validation service. Certificate loading process is scheduled cron job inside each validation service to update currently in memory loaded certificates. This process should run after TSL loader has completed updating SiVa local copy of certificates. X-Road 6 security server SOAP request process X-Road validation process is brought out because we skip authentication process for X-Road security server interface and and use XML SOAP as input source. Validation of SOAP request XML is done in the SiVa web application module. Document validation process is described in detail in Digitally signed document validation process Validation report output id described in Interface description TSL loading use case TSL implementd in seprate module. The process is executed in two ways. When SiVa application is started As scheduled job Loading process is required action when ASiCE (BDOC) or DDOC data file extraction process DDOC data file extraction process shows how SiVa extracts data file(s) from container and possible output of data file extraction. User of SiVa system provides digitally signed DDOC file in form of Base64 encoded string. The extraction of data files is handled by underlying JDigiDoc library. We will log following failure cases: When file upload fails (request started but was not completed successfully) When request validation (JSON or SOAP) fails.","title":"9.3.2 Use cases"},{"location":"siva2/use_cases/#digitally-signed-document-validation-process","text":"Digitally signed document validation process shows how SiVa chooses validation service and possible output of validation process. User of SiVa system provides digitally signed document file in form of Base64 encoded string. The validation of file and validation policy is handled by validation services underlying libraries. In case of DDOC containers with XAdES signatures it will be Ddoc Validation Service In case of BDOC containers with XAdES signatures it will be Bdoc Validation Service In case of X-ROAD ASIC-E containers with XAdES signatures it will be Xroad Validation Service In case of ASIC-S containers with TimeStampToken it will be Timestamptoken Validation Service In case of other containers or with XAdES, CAdES and PAdES signatures it will be Generic Validation Service We will log following failure cases: When file upload fails (request started but was not completed successfully) When request validation (JSON or SOAP) fails When signature validation fails","title":"Digitally signed document validation process"},{"location":"siva2/use_cases/#certificate-loading-process","text":"All validation services require certificates to validate digitally signed documents. Below process shows how certificates are loaded into validation service. Loading process is done separably for each validation service. Certificate loading process is scheduled cron job inside each validation service to update currently in memory loaded certificates. This process should run after TSL loader has completed updating SiVa local copy of certificates.","title":"Certificate loading process"},{"location":"siva2/use_cases/#x-road-6-security-server-soap-request-process","text":"X-Road validation process is brought out because we skip authentication process for X-Road security server interface and and use XML SOAP as input source. Validation of SOAP request XML is done in the SiVa web application module. Document validation process is described in detail in Digitally signed document validation process Validation report output id described in Interface description","title":"X-Road 6 security server SOAP request process"},{"location":"siva2/use_cases/#tsl-loading-use-case","text":"TSL implementd in seprate module. The process is executed in two ways. When SiVa application is started As scheduled job Loading process is required action when ASiCE (BDOC) or","title":"TSL loading use case"},{"location":"siva2/use_cases/#ddoc-data-file-extraction-process","text":"DDOC data file extraction process shows how SiVa extracts data file(s) from container and possible output of data file extraction. User of SiVa system provides digitally signed DDOC file in form of Base64 encoded string. The extraction of data files is handled by underlying JDigiDoc library. We will log following failure cases: When file upload fails (request started but was not completed successfully) When request validation (JSON or SOAP) fails.","title":"DDOC data file extraction process"},{"location":"siva2/appendix/known_issues/","text":"Known issues All known issues should be reported and managed under GitHub project issues section","title":"Appendix 4 - Known Issues"},{"location":"siva2/appendix/known_issues/#known-issues","text":"All known issues should be reported and managed under GitHub project issues section","title":"Known issues"},{"location":"siva2/appendix/test_cases/","text":"Test Case Descriptions Introduction This document gives overview of the test cases. This page is partially generated using a script, more info about the script can be found in SiVa GitHub . The structure and elements of test case is described in QA Strategy document. All the files used in the tests can be found in SiVa GitHub . AsiceValidationFailIT.java Open file TestCaseID: Asice-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with single invalid signature Expected Result: The document should fail the validation File: InvalidLiveSignature.asice TestCaseID: Asice-ValidationFail-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice with multiple invalid signatures Expected Result: The document should fail the validation File: InvalidMultipleSignatures.bdoc TestCaseID: Asice-ValidationFail-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice with multiple signatures both valid and invalid Expected Result: The document should fail the validation File: InvalidAndValidSignatures.asice TestCaseID: Asice-ValidationFail-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice with no signatures Expected Result: The document should fail the validation File: AsiceContainerNoSignature.asice TestCaseID: Asice-ValidationFail-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Wrong signature timestamp Expected Result: The document should fail the validation File: TS-02_23634_TS_wrong_SignatureValue.asice TestCaseID: Asice-ValidationFail-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice No non-repudiation key usage value in the certificate, verification of AdES signature level Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-I-43.asice TestCaseID: Asice-ValidationFail-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice signers certificate does not have non-repudiation value in the certificates key usage field and it does not contain the QC and SSCD compliance information. Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-I-26.asice TestCaseID: Asice-ValidationFail-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: OCSP certificate is not trusted Expected Result: The document should fail the validation File: TM-01_bdoc21-unknown-resp.bdoc TestCaseID: Asice-ValidationFail-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice TSA certificate is not trusted Expected Result: The document should fail the validation File: TS-05_23634_TS_unknown_TSA.asice **Attention! This test is disabled: https://ec.europa.eu/cefdigital/tracker/browse/DSS-1221 TestCaseID: Asice-ValidationFail-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice OCSP response status is revoked Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-R-25.asice TestCaseID: Asice-ValidationFail-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice difference between OCSP and time-stamp issuing times is more than 24 hours Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-V-20.asice TestCaseID: Asice-ValidationFail-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice unsigned data files in the container Expected Result: The document should pass the validation with warning File: EE_SER-AEX-B-LT-V-34.asice TestCaseID: Asice-ValidationFail-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice SignatureValue does not correspond to the SignedInfo block Expected Result: The document should fail the validation File: REF-19_bdoc21-no-sig-asn1-pref.bdoc TestCaseID: Asice-ValidationFail-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice Baseline-BES file Expected Result: The document should fail the validation File: signWithIdCard_d4j_1.0.4_BES.asice TestCaseID: Asice-ValidationFail-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice Baseline-EPES file Expected Result: The document should fail the validation File: TM-04_kehtivuskinnituset.4.asice TestCaseID: Asice-ValidationFail-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice signers certificate is not trusted Expected Result: The document should fail the validation File: SS-4_teadmataCA.4.asice TestCaseID: Asice-ValidationFail-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice OCSP response status is revoked Expected Result: The document should fail the validation File: TM-15_revoked.4.asice TestCaseID: Asice-ValidationFail-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice OCSP response status is unknown Expected Result: The document should fail the validation File: TM-16_unknown.4.asice TestCaseID: Asice-ValidationFail-19 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice signed data file has been removed from the container Expected Result: The document should fail the validation File: KS-21_fileeemaldatud.4.asice TestCaseID: Asice-ValidationFail-20 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice no files in container Expected Result: The document should fail the validation File: KS-02_tyhi.bdoc TestCaseID: Asice-ValidationFail-21 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice signed data file(s) don't match the hash values in reference elements Expected Result: The document should fail the validation File: REF-14_filesisumuudetud.4.bdoc TestCaseID: Asice-ValidationFail-22 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice Baseline-T signature Expected Result: The document should fail the validation File: TS-06_23634_TS_missing_OCSP.asice TestCaseID: Asice-ValidationFail-23 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice certificate's validity time is not in the period of OCSP producedAt time Expected Result: The document should fail the validation File: **Attention! This test is disabled: test file is needed where certificate expiration end is before the OCSP produced at time AsiceValidationPassIT.java Open file TestCaseID: Asice-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice with single valid signature Expected Result: The document should pass the validation File: ValidLiveSignature.asice TestCaseID: Asice-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice TM with multiple valid signatures Expected Result: The document should pass the validation File: BDOC-TS.asice TestCaseID: Asice-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice One LT signature with certificates from different countries Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-30.asice TestCaseID: Asice-ValidationPass-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice Baseline-LT file Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-49.asice TestCaseID: Asice-ValidationPass-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice Baseline-LTA file Expected Result: The document should pass the validation File: EE_SER-AEX-B-LTA-V-24.asice TestCaseID: Asice-ValidationPass-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice file signed with Mobile-ID, ECC-SHA256 signature with prime256v1 key Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-2.asice TestCaseID: Asice-ValidationPass-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice file with ESTEID-SK 2015 certificate chain Expected Result: The document should pass the validation File: IB-4270_TS_ESTEID-SK 2015 SK OCSP RESPONDER 2011.asice TestCaseID: Asice-ValidationPass-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice file with KLASS3-SK 2010 (EECCRCA) certificate chain Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-28.asice TestCaseID: Asice-ValidationPass-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: *.sce file with TimeStamp Expected Result: The document should pass the validation File: ASICE_TS_LTA_content_as_sce.sce TestCaseID: Asice-ValidationPass-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice-TS with special characters in data file Expected Result: The document should pass the validation with correct signature scope File: Nonconventionalcharacters.asice TestCaseID: Asice-ValidationPass-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice unsigned data files in the container Expected Result: The document should pass the validation with warning File: EE_SER-AEX-B-LT-V-34.asice TestCaseID: Asice-ValidationPass-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: New Estonian ECC signature Expected Result: The document should pass the validation File: Mac_AS0099904_EsimeneAmetlikSKTestElliptilistega_TS.asice AsicsValidationFailIT.java Open file TestCaseID: Asics-ValidationFail-1 TestType: Automated Requirement: Title: Only one datafile is allowed in ASIC-s Expected Result: The validation should fail File: TwoDataFilesAsics.asics TestCaseID: Asics-ValidationFail-2 TestType: Automated Requirement: Title: No data file in ASIC-s Expected Result: The validation should fail File: DataFileMissingAsics.asics TestCaseID: Asics-ValidationFail-3 TestType: Automated Requirement: Title: more folders that META-INF in ASIC-s Expected Result: The validation should fail File: FoldersInAsics.asics TestCaseID: Asics-ValidationFail-4 TestType: Automated Requirement: Title: META-INF folder not in root of container Expected Result: The validation should fail File: MetaInfNotInRoot.asics TestCaseID: Asics-ValidationFail-5 TestType: Automated Requirement: Title: Not allowed files in META-INF folder Expected Result: The validation should fail File: signatureMixedWithTST.asics TestCaseID: Asics-ValidationFail-6 TestType: Automated Requirement: Title: TST not intact Expected Result: The validation should fail File: AsicsTSTsignatureModified.asics TestCaseID: Asics-ValidationFail-7 TestType: Automated Requirement: Title: TST has been corrupted Expected Result: The validation should fail File: AsicsTSTsignatureBroken.asics TestCaseID: Asics-ValidationFail-8 TestType: Automated Requirement: Title: Data file changed Expected Result: The validation should fail File: DatafileAlteredButStillValid.asics TestCaseID: Asics-ValidationFail-9 TestType: Automated Requirement: Title: Exluding files in META-INF folder together with TST Expected Result: The validation should fail File: evidencerecordMixedWithTST.asics AsicsValidationPassIT.java Open file TestCaseID: Asics-ValidationPass-1 TestType: Automated Requirement: Title: Validation of ASICs with DDOC inside Expected Result: TST and inner DDOC are valid File: ValidDDOCinsideAsics.asics TestCaseID: Asics-ValidationPass-2 TestType: Automated Requirement: Title: Validation of ASICs with DDOC inside SCS extension Expected Result: TST and inner DDOC are valid File: ValidDDOCinsideAsics.scs TestCaseID: Asics-ValidationPass-3 TestType: Automated Requirement: Title: Validation of ASICs with BDOC inside Expected Result: TST and inner BDOC are valid File: ValidBDOCinsideAsics.asics TestCaseID: Asics-ValidationPass-4 TestType: Automated Requirement: Title: Validation of ASICs with text document inside Expected Result: TST is valid File: TXTinsideAsics.asics TestCaseID: Asics-ValidationPass-5 TestType: Automated Requirement: Title: Validation of ASICs with ASICs inside Expected Result: TST is valid, no inner looping of ASICs File: ValidASICSinsideAsics.asics TestCaseID: Asics-ValidationPass-6 TestType: Automated Requirement: Title: Validation of ASICs with DDOC inside ZIP extension Expected Result: TST and inner DDOC are valid File: ValidDDOCinsideAsics.zip TestCaseID: Asics-ValidationPass-7 TestType: Automated Requirement: Title: Validation of ASICs with wrong mimetype with DDOC inside Expected Result: TST and inner DDOC are valid File: ValidDDOCinsideAsicsWrongMime.asics BdocValidationFailIT.java Open file TestCaseID: Bdoc-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with single invalid signature Expected Result: The document should fail the validation File: IB-3960_bdoc2.1_TSA_SignatureValue_altered.bdoc TestCaseID: Bdoc-ValidationFail-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with multiple invalid signatures Expected Result: The document should fail the validation File: BdocMultipleSignaturesInvalid.bdoc TestCaseID: Bdoc-ValidationFail-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with multiple signatures both valid and invalid Expected Result: The document should fail the validation File: BdocMultipleSignaturesMixedWithValidAndInvalid.bdoc TestCaseID: Bdoc-ValidationFail-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with no signatures Expected Result: The document should fail the validation File: BdocContainerNoSignature.bdoc TestCaseID: Bdoc-ValidationFail-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with invalid mimetype in manifest Expected Result: document malformed error should be returned File: 23147_weak-warning-sha1-invalid-mimetype-in-manifest.bdoc **Attention! This test is disabled: /jira.ria.ee/browse/DD4J-161\") TestCaseID: Bdoc-ValidationFail-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice with wrong slash character ('\\') in data file mime-type value Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-V-33.bdoc **Attention! This test is disabled: /jira.ria.ee/browse/DD4J-161\") TestCaseID: Bdoc-ValidationFail-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Wrong signature timestamp Expected Result: The document should fail the validation in DD4J File: TS-02_23634_TS_wrong_SignatureValue.asice TestCaseID: Bdoc-ValidationFail-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice No non-repudiation key usage value in the certificate, verification of AdES signature level Expected Result: The document should fail the validation in DD4J File: EE_SER-AEX-B-LT-I-43.asice TestCaseID: Bdoc-ValidationFail-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice signers certificate does not have non-repudiation value in the certificates key usage field and it does not contain the QC and SSCD compliance information. Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-I-26.asice TestCaseID: Bdoc-ValidationFail-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc OCSP certificate is not trusted Expected Result: The document should fail the validation File: TM-01_bdoc21-unknown-resp.bdoc TestCaseID: Bdoc-ValidationFail-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice TSA certificate is not trusted Expected Result: The document should fail the validation in DD4J File: TS-05_23634_TS_unknown_TSA.asice TestCaseID: Bdoc-ValidationFail-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice OCSP response status is revoked Expected Result: The document should fail the validation in DD4J File: EE_SER-AEX-B-LT-R-25.asice TestCaseID: Bdoc-ValidationFail-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice difference between OCSP and time-stamp issuing times is more than 24 hours Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-V-20.asice TestCaseID: Bdoc-ValidationFail-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc different data file mime-type values in signatures.xml and manifest.xml files Expected Result: The document should return warning regarding the mismatch File: 23613_TM_wrong-manifest-mimetype.bdoc TestCaseID: Bdoc-ValidationFail-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc SignatureValue does not correspond to the SignedInfo block Expected Result: The document should fail the validation File: REF-19_bdoc21-no-sig-asn1-pref.bdoc TestCaseID: Bdoc-ValidationFail-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc Baseline-BES file Expected Result: The document should fail the validation in DD4J File: signWithIdCard_d4j_1.0.4_BES.asice TestCaseID: Bdoc-ValidationFail-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc Baseline-EPES file Expected Result: The document should fail the validation File: TM-04_kehtivuskinnituset.4.asice TestCaseID: Bdoc-ValidationFail-19 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc signers certificate is not trusted Expected Result: The document should fail the validation File: SS-4_teadmataCA.4.asice TestCaseID: Bdoc-ValidationFail-20 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc OCSP response status is revoked Expected Result: The document should fail the validation File: TM-15_revoked.4.asice TestCaseID: Bdoc-ValidationFail-21 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc OCSP response status is unknown Expected Result: The document should fail the validation File: TM-16_unknown.4.asice TestCaseID: Bdoc-ValidationFail-22 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc signed data file has been removed from the container Expected Result: The document should fail the validation in DD4J File: KS-21_fileeemaldatud.4.asice TestCaseID: Bdoc-ValidationFail-23 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc no files in container Expected Result: The document should fail the validation File: KS-02_tyhi.bdoc TestCaseID: Bdoc-ValidationFail-24 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc wrong nonce Expected Result: The document should fail the validation File: TM-10_noncevale.4.asice TestCaseID: Bdoc-ValidationFail-25 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc signed data file(s) don't match the hash values in reference elements Expected Result: The document should fail the validation File: REF-14_filesisumuudetud.4.bdoc TestCaseID: Bdoc-ValidationFail-26 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice Baseline-T signature Expected Result: The document should fail the validation in DD4J File: TS-06_23634_TS_missing_OCSP.asice TestCaseID: Bdoc-ValidationFail-27 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc OCSP response is not the one expected Expected Result: The document should fail the validation File: 23608-bdoc21-TM-ocsp-bad-nonce.bdoc TestCaseID: Bdoc-ValidationFail-28 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc certificate's validity time is not in the period of OCSP producedAt time Expected Result: The document should fail the validation File: 23154_test1-old-sig-sigat-OK-prodat-NOK-1.bdoc TestCaseID: Bdoc-ValidationFail-29 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc BDOC-1.0 version container Expected Result: The document should fail the validation File: BDOC-1.0.bdoc BdocValidationPassIT.java Open file TestCaseID: Bdoc-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Bdoc with single valid signature Expected Result: The document should pass the validation File: Valid_ID_sig.bdoc TestCaseID: Bdoc-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Bdoc TM with multiple valid signatures Expected Result: The document should pass the validation File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Bdoc-ValidationPass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Bdoc with warning on signature Expected Result: The document should pass the validation but warning should be returned File: bdoc_weak_warning_sha1.bdoc **Attention! This test is disabled: New file needed. This one has different mimetype value in manifest.xml and signature.xml TestCaseID: Bdoc-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice One LT signature with certificates from different countries Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-30.asice TestCaseID: Bdoc-ValidationPass-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Bdoc signed with Mobile-ID, ECC-SHA256 signature with prime256v1 key Expected Result: The document should pass the validation File: 24050_short_ecdsa_correct_file_mimetype.bdoc TestCaseID: Bdoc-ValidationPass-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice Baseline-LT file Expected Result: The document should pass the validation in DD4J File: EE_SER-AEX-B-LT-V-49.asice TestCaseID: Bdoc-ValidationPass-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice QES file Expected Result: The document should pass the validation File: ValidLiveSignature.asice TestCaseID: Bdoc-ValidationPass-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice Baseline-LTA file Expected Result: The document should pass the validation File: EE_SER-AEX-B-LTA-V-24.asice TestCaseID: Bdoc-ValidationPass-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice file signed with Mobile-ID, ECC-SHA256 signature with prime256v1 key Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-2.asice TestCaseID: Bdoc-ValidationPass-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice file with ESTEID-SK 2015 certificate chain Expected Result: The document should pass the validation File: IB-4270_TS_ESTEID-SK 2015 SK OCSP RESPONDER 2011.asice TestCaseID: Bdoc-ValidationPass-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice file with KLASS3-SK 2010 (EECCRCA) certificate chain Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-28.asice TestCaseID: Bdoc-ValidationPass-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Bdoc with Baseline-LT_TM and QES signature level and ESTEID-SK 2011 certificate chain with valid signature Expected Result: The document should pass the validation File: BDOC2.1.bdoc TestCaseID: Bdoc-ValidationPass-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Bdoc TS with multiple valid signatures Expected Result: The document should pass the validation File: Test_id_aa.asice TestCaseID: Bdoc-ValidationPass-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Bdoc-TM with special characters in data file Expected Result: The document should pass the validation File: \u0160u\u017elikud s\u00f5id \u00fche \u00f5una \u00e4ra.bdoc TestCaseID: Bdoc-ValidationPass-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: *.sce file with TimeMark Expected Result: The document should pass the validation File: BDOC2.1_content_as_sce.sce TestCaseID: Bdoc-ValidationPass-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: *.sce file with TimeStamp Expected Result: The document should pass the validation File: ASICE_TS_LTA_content_as_sce.sce TestCaseID: Bdoc-ValidationPass-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc-TS with special characters in data file Expected Result: The document should pass the validation with correct signature scope File: Nonconventionalcharacters.asice TestCaseID: Bdoc-ValidationPass-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice unsigned data files in the container Expected Result: The document should pass the validation with warning File: EE_SER-AEX-B-LT-V-34.asice TestCaseID: Bdoc-ValidationPass-19 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: ECC signature vith BDOC TM Expected Result: The document should pass the validation File: testECCDemo.bdoc TestCaseID: Bdoc-ValidationPass-20 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: ECC signature vith BDOC TS Expected Result: The document should pass the validation File: Mac_AS0099904_EsimeneAmetlikSKTestElliptilistega_TS.asice DdocGetDataFilesIT.java Open file TestCaseID: Ddoc-Get-Data-Files-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/use_cases/#ddoc-data-file-extraction-process Title: Valid DDOC with data file used Expected Result: The data file should be returned File: 18912.ddoc TestCaseID: Ddoc-Get-Data-Files-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/use_cases/#ddoc-data-file-extraction-process Title: Invalid DDOC with data file used Expected Result: The data file should be returned File: OCSP nonce vale.ddoc TestCaseID: Ddoc-Get-Data-Files-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/use_cases/#ddoc-data-file-extraction-process Title:DDOC with xml v1.1 is used Expected Result: The data file is returned File: DIGIDOC-XML1.1.ddoc TestCaseID: Ddoc-Get-Data-Files-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/use_cases/#ddoc-data-file-extraction-process Title: DDOC with xml v1.2 is used Expected Result: The data file is returned File: DIGIDOC-XML1.2.ddoc TestCaseID: Ddoc-Get-Data-Files-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/use_cases/#ddoc-data-file-extraction-process Title: DDOC with xml v1.3 is used Expected Result: The data file is returned File: DIGIDOC-XML1.3.ddoc TestCaseID: Ddoc-Get-Data-Files-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/use_cases/#ddoc-data-file-extraction-process Title: Hashcoded DDOC is used Expected Result: Null is returned File: DIGIDOC-XML1.3_hashcode.ddoc **Attention! This test is disabled: Run this test manually as it fails in Travis TestCaseID: Ddoc-Get-Data-Files-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/use_cases/#ddoc-data-file-extraction-process Title: DDOC with 12 different files of different types is used Expected Result: Data file returned for each file correctly File: igasugust1.3.ddoc TestCaseID: Ddoc-Get-Data-Files-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/use_cases/#ddoc-data-file-extraction-process Title: BDOC with data file used Expected Result: The error message should be returned File: BDOC-TS.bdoc TestCaseID: Ddoc-Get-Data-Files-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/use_cases/#ddoc-data-file-extraction-process Title: PDF file used Expected Result: The error message should be returned File: hellopades-lt-b.pdf DdocValidationFailIT.java Open file TestCaseID: Ddoc-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc with single invalid signature Expected Result: The document should fail the validation File: AndmefailiAtribuudidMuudetud.ddoc TestCaseID: Ddoc-ValidationFail-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc with multiple invalid signatures Expected Result: The document should fail the validation File: multipleInvalidSignatures.ddoc TestCaseID: Ddoc-ValidationFail-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc with multiple signatures both valid and invalid Expected Result: The document should fail the validation File: multipleValidAndInvalidSignatures.ddoc TestCaseID: Ddoc-ValidationFail-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc with no signatures Expected Result: The document should fail the validation File: DdocContainerNoSignature.bdoc TestCaseID: Ddoc-ValidationFail-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc signature value has been changed (SignatureValue does not correspond to the SignedInfo block) Expected Result: The document should fail the validation File: test-inv-sig-inf.ddoc TestCaseID: Ddoc-ValidationFail-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc Data file(s) don't match the hash values in Reference elements Expected Result: The document should fail the validation File: AndmefailiAtribuudidMuudetud.ddoc TestCaseID: Ddoc-ValidationFail-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc Baseline-BES file, no OCSP response Expected Result: The document should fail the validation File: ilma_kehtivuskinnituseta.ddoc TestCaseID: Ddoc-ValidationFail-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc no non-repudiation key usage value in the certificate Expected Result: The document should fail the validation File: test-non-repu1.ddoc TestCaseID: Ddoc-ValidationFail-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc Signer's certificate is not trusted Expected Result: The document should fail the validation File: Belgia_kandeavaldus_LIV.ddoc TestCaseID: Ddoc-ValidationFail-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc OCSP certificate is not trusted Expected Result: The document should fail the validation File: Tundmatu_OCSP_responder.ddoc TestCaseID: Ddoc-ValidationFail-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc has unsigned data files in the container Expected Result: The document should fail the validation File: lisatud_andmefail.ddoc TestCaseID: Ddoc-ValidationFail-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc signed data file has been removed from the container Expected Result: The document should fail the validation File: faileemald1.ddoc TestCaseID: Ddoc-ValidationFail-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc wrong nonce Expected Result: The document should fail the validation File: OCSP nonce vale.ddoc TestCaseID: Ddoc-ValidationFail-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/ Title: Ddoc with XML Entity expansion attack Expected Result: The document should fail the validation with error File: xml_expansion.ddoc TestCaseID: Ddoc-ValidationFail-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/ Title: Ddoc with XML server side request forgery attack Expected Result: The document should fail the validation with error File: xml_entity.ddoc TestCaseID: Ddoc-ValidationFail-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc no files in container Expected Result: The document should fail the validation File: KS-02_tyhi.ddoc TestCaseID: Ddoc-ValidationFail-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc XML namespace error in container Expected Result: The document should pass with warning File: ns6t3cp7.ddoc DdocValidationPassIT.java Open file TestCaseID: Ddoc-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Ddoc v1.0 with valid signatures Expected Result: The document should pass the validation File: SK-XML1.0.ddoc **Attention! This test is disabled: https://github.com/open-eid/SiVa/issues/11 TestCaseID: Ddoc-ValidationPass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Ddoc v1.1 with valid signature Expected Result: The document should pass the validation File: DIGIDOC-XML1.1.ddoc TestCaseID: Ddoc-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Ddoc v1.2 with valid signature Expected Result: The document should pass the validation File: DIGIDOC-XML1.2.ddoc TestCaseID: Ddoc-ValidationPass-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Ddoc v1.3 with valid signature with ESTEID-SK 2011 certificate chain Expected Result: The document should pass the validation File: DIGIDOC-XML1.3.ddoc TestCaseID: Ddoc-ValidationPass-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Ddoc v1.3 with valid signature, signed data file name has special characters and ESTEID-SK certificate chain Expected Result: The document should pass the validation File: susisevad1_3.ddoc TestCaseID: Ddoc-ValidationPass-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Ddoc v1.3 KLASS3-SK certificate chain with valid signature Expected Result: The document should pass the validation File: KLASS3-SK _ KLASS3-SK OCSP RESPONDER uus.ddoc TestCaseID: Ddoc-ValidationPass-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Ddoc v1.3 KLASS3-SK 2010 certificate chain with valid signature Expected Result: The document should pass the validation File: KLASS3-SK 2010 _ KLASS3-SK 2010 OCSP RESPONDER.ddoc TestCaseID: Ddoc-ValidationPass-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Ddoc v1.1 ESTEID-SK 2007 certificate chain with valid signature Expected Result: The document should pass the validation File: vaikesed1.1.ddoc TestCaseID: Ddoc-ValidationPass-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Ddoc v1.1 ESTEID-SK 2007 certificate chain with valid signature Expected Result: The document should pass the validation File: IB-4270_ESTEID-SK 2015 SK OCSP RESPONDER 2011.ddoc TestCaseID: Ddoc-ValidationPass-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Ddoc v1.1 ESTEID-SK certificate chain with valid signature Expected Result: The document should pass the validation File: EID-SK _ EID-SK OCSP RESPONDER.ddoc TestCaseID: Ddoc-ValidationPass-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Ddoc v1.1 ESTEID-SK 2007 and OCSP 2010 certificate chain with valid signature Expected Result: The document should pass the validation File: EID-SK 2007 _ EID-SK 2007 OCSP RESPONDER 2010.ddoc TestCaseID: Ddoc-ValidationPass-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Ddoc v1.3 ESTEID-SK 2007 and OCSP 2007 certificate chain with valid signature Expected Result: The document should pass the validation File: EID-SK 2007 _ EID-SK 2007 OCSP RESPONDER.ddoc TestCaseID: Ddoc-ValidationPass-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Ddoc v1.3 ESTEID-SK 2011 and OCSP 2011 certificate chain with valid signature Expected Result: The document should pass the validation File: EID-SK 2011 _ SK OCSP RESPONDER 2011.ddoc TestCaseID: Ddoc-ValidationPass-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc with warning should pass Expected Result: Document passes the validation File: 18912.ddoc TestCaseID: DdocHashcode-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Validation of DDOC Hashcode v1.0 Expected Result: Document passes the validation File: SK-XML1.0_hashcode.ddoc **Attention! This test is disabled: https://github.com/open-eid/SiVa/issues/11 TestCaseID: DdocHashcode-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Validation of DDOC Hashcode v1.1 Expected Result: Document passes the validation File: DIGIDOC-XML1.1_hashcode.ddoc **Attention! This test is disabled: This tests fails in Travis. Has been executed locally TestCaseID: DdocHashcode-ValidationPass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Validation of DDOC Hashcode v1.2 Expected Result: Document passes the validation File: DIGIDOC-XML1.2_hashcode.ddoc **Attention! This test is disabled: This tests fails in Travis. Has been executed locally TestCaseID: DdocHashcode-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Validation of DDOC Hashcode v1.3 Expected Result: Document passes the validation File: DIGIDOC-XML1.3_hashcode.ddoc **Attention! This test is disabled: This tests fails in Travis. Has been executed locally DocumentFormatIT.java Open file TestCaseID: DocumentFormat-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Validation of pdf document acceptance Expected Result: Pdf is accepted and correct signature validation is given File: hellopades-pades-lt-sha256-sign.pdf TestCaseID: DocumentFormat-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Validation of bdoc document acceptance Expected Result: Bdoc is accepted and correct signature validation is given File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: DocumentFormat-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Validation of asice document acceptance Expected Result: asice is accepted and correct signature validation is given File: Vbdoc21-TS.asice TestCaseID: DocumentFormat-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Validation of asics document acceptance Expected Result: asics is accepted and correct signature validation is given File: ValidDDOCinsideAsics.asics TestCaseID: DocumentFormat-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Validation of xades acceptance Expected Result: xades is accepted and correct signature validation is given File: signatures0.xml TestCaseID: DocumentFormat-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Validation of cades acceptance Expected Result: cades is accepted and correct signature validation is given File: **Attention! This test is disabled: Test file needed DocumentValidationIT.java Open file TestCaseID: Document-Validation-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title:Bdoc with two signatures and one unsigned document. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2s_1f_unsigned.bdoc TestCaseID: Document-Validation-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with two signatures and one document signed by only one signature. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2s_1partly_signed.bdoc TestCaseID: Document-Validation-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with two signatures and two documents signed by only one signature. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2s_2partly_signed.bdoc TestCaseID: Document-Validation-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with two signatures, one unsigned and two partly signed documents. Expected Result: The document should fail the validation and warnings should be displayed. File:4f_2s_all_combinations.bdoc TestCaseID: Document-Validation-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with three unsigned documents. Expected Result: The document should pass the validation and warnings should be displayed. File:6f_2s_3unsigned.bdoc TestCaseID: Document-Validation-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with deleted document, named in manifest. Expected Result: The document should fail the validation and warning should be displayed. File:2f_2signed_1f_deleted.bdoc TestCaseID: Document-Validation-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with deleted document, also removed from manifest. Expected Result: The document should fail the validation without warning. File:2f_2signed_1f_totally_removed.bdoc TestCaseID: Document-Validation-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with one unsigned document, named in manifest. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2signed_1unsigned_all_in_manifest.bdoc TestCaseID: Document-Validation-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with one unsigned document, NOT named in manifest. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2signed_1unsigned_2in_manifest.bdoc TestCaseID: Document-Validation-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with signed documents. Expected Result: The document should pass the validation without warning. File:2f_all_signed.bdoc **Attention! This test is disabled: LargeFileIT.java Open file TestCaseID: PDF-LargeFiles-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/overview/#main-features-of-siva-validation-service Title: 9MB PDF files (PAdES Baseline LT). Expected Result: Validation report is returned File: 9MB_PDF.pdf TestCaseID: Bdoc-LargeFiles-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/overview/#main-features-of-siva-validation-service Title: 9MB ASIC-E file Expected Result: Validation report is returned File: 9MB_BDOC-TS.bdoc TestCaseID: Bdoc-LargeFiles-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/overview/#main-features-of-siva-validation-service Title: 9MB BDOC-TM Expected Result: Validation report is returned File: 9MB_BDOC-TM.bdoc TestCaseID: Ddoc-LargeFiles-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/overview/#main-features-of-siva-validation-service Title: 9MB DDOC Expected Result: Validation report is returned File: 9MB_DDOC.ddoc MonitoringIT.java Open file TestCaseID: WebApp-Monitoring-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#service-health-monitoring Title: Health monitor response structure Expected Result: response matches the expected structure of JSON File: not relevant PdfBaselineProfileIT.java Open file TestCaseID: PDF-BaselineProfile-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: The PDF has PAdES-B profile signature polv3 Expected Result: Document validation should fail as the profile is not supported with any policy File: hellopades-pades-b-sha256-auth.pdf TestCaseID: PDF-BaselineProfile-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: The PDF has PAdES-T profile signature polv3 Expected Result: Document validation should fail with any policy File: pades-baseline-t-live-aj.pdf TestCaseID: PDF-BaselineProfile-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: The PDF has PAdES-LT profile signature polv3 Expected Result: Document validation should pass with any policy File: hellopades-pades-lt-sha256-sign.pdf TestCaseID: PDF-BaselineProfile-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: The PDF has PAdES-LT profile signature polv4 Expected Result: Document validation should pass with any policy File: hellopades-pades-lt-sha256-sign.pdf TestCaseID: PDF-BaselineProfile-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: The PDF has PAdES-LTA profile signature polv3 Expected Result: Document validation should pass with any policy File: pades-baseline-lta-live-aj.pdf TestCaseID: PDF-BaselineProfile-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: The PDF has PAdES-LTA profile signature polv4 Expected Result: Document validation should pass with any policy File: pades-baseline-lta-live-aj.pdf TestCaseID: PDF-BaselineProfile-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: The PDF has PAdES-LT and B profile signature Expected Result: Document validation should fail File: hellopades-lt-b.pdf TestCaseID: PDF-BaselineProfile-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: PDF document message digest attribute value does not match calculate value Expected Result: Document validation should fail File: hellopades-lt1-lt2-wrongDigestValue.pdf TestCaseID: PDF-BaselineProfile-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: PDF file with a serial signature Expected Result: Document signed with multiple signers with serial signatures should pass File: hellopades-lt1-lt2-Serial.pdf PdfSignatureCryptographicAlgorithmIT.java Open file TestCaseID: PDF-SigCryptoAlg-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: SHA512 algorithms (PAdES Baseline LT) Expected Result: Document signed with SHA512 algorithm should pass File: hellopades-lt-sha512.pdf TestCaseID: PDF-SigCryptoAlg-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: SHA1 algorithms (PAdES Baseline LT) Expected Result: Document signed with SHA1 algorithm should pass File: hellopades-lt-sha1.pdf TestCaseID: PDF-SigCryptoAlg-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: ECDSA224 algorithms (PAdES Baseline LT) Expected Result: Document signed with ECDSA224 algorithm should pass File: hellopades-lt-sha256-ec224.pdf TestCaseID: PDF-SigCryptoAlg-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: ECDSA256 algorithms (PAdES Baseline LT) Expected Result: Document signed with ECDSA256 algorithm should pass File: hellopades-lt-sha256-ec256.pdf TestCaseID: PDF-SigCryptoAlg-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: RSA1024 algorithms (PAdES Baseline LT) Expected Result: Document signed with RSA1024 algorithm should pass File: hellopades-lt-sha256-rsa1024.pdf TestCaseID: PDF-SigCryptoAlg-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: RSA1023 algorithms (PAdES Baseline LT) Expected Result: Document signed with RSA1023 algorithm should fail File: hellopades-lt-sha256-rsa1023.pdf **Attention! This test is disabled: ug fixed in DSS version 5.1. https://ec.europa.eu/cefdigital/tracker/browse/DSS-1145 TestCaseID: PDF-SigCryptoAlg-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: RSA2047 algorithms (PAdES Baseline LT) Expected Result: Document signed with RSA2047 algorithm should pass File: hellopades-lt-sha256-rsa2047.pdf TestCaseID: PDF-SigCryptoAlg-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: RSA2048 algorithms (PAdES Baseline LT) Expected Result: Document signed with RSA2048 algorithm should pass File: PdfValidSingleSignature PdfValidationFailIT.java Open file TestCaseID: PDF-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: The PDF-file has been signed with expired certificate (PAdES Baseline T) Expected Result: Document signed with certificate that is expired should fail. File: hellopades-lt-rsa1024-sha1-expired.pdf TestCaseID: PDF-ValidationFail-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: The PDF-file has been signed with revoked certificate (PAdES Baseline LT) Expected Result: Document signed with certificate that is revoked should fail. File: pades_lt_revoked.pdf TestCaseID: PDF-ValidationFail-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: The PDF-file has been signed with certificate which has no non repudiation key usage attribute (PAdES Baseline LT) Expected Result: The PDF-file validation should fail with error. File: hellopades-pades-lt-sha256-auth.pdf TestCaseID: PDF-ValidationFail-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: hellopadess been signed with an expired certificate, where signing time is within the original validity Expected Result: Document signed with expired certificate should fail File: hellopades-lt-sha256-rsa2048-expired.pdf **Attention! This test is disabled: Needs new test file TestCaseID: PDF-ValidationFail-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: hellopadess been signed with an expired certificate, where signing time is within the original validity Expected Result: Document signed with expired certificate should fail File: hellopades-lt-sha256-rsa1024-expired2.pdf **Attention! This test is disabled: le needed TestCaseID: PDF-ValidationFail-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: OCSP is taken more than 24h after TS Expected Result: Document signed with expired certificate should fail File: hellopades-lt-sha256-rsa1024-expired2.pdf TestCaseID: PDF-ValidationFail-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: CRL is out of thisUpdate and nextUpdate range Expected Result: Validation should fail File: pades-lt-CRL-taken-days-later.pdf PdfValidationPassIT.java Open file TestCaseID: PDF-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: The PDF-file has been signed with certificate that is expired after signing (PAdES Baseline LT) Expected Result: Document signed with certificate that expired after signing should pass. File: hellopades-lt-sha256-rsa1024-not-expired.pdf TestCaseID: PDF-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: The PDF-file has been signed with certificate that will expire in 7 days after signing (PAdES Baseline LT) Expected Result: Document signed with certificate that expired after signing should pass. File: hellopades-lt-sha256-rsa2048-7d.pdf TestCaseID: PDF-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Pdf with single valid signature Expected Result: Document should pass. File: PdfValidSingleSignature.pdf TestCaseID: PDF-ValidationPass-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: The PDF-file has OCSP more than 15 minutes after TS but earlier than 24h Expected Result: Warning should be returned but validation should pass File: hellopades-lt-sha256-ocsp-15min1s.pdf TestCaseID: PDF-ValidationPass-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: The PDF-file has OCSP almost 24h before TS Expected Result: Warning should be returned but validation should pass File: hellopades-lt-sha256-rsa2048-ocsp-before-ts.pdf ReportSignatureIT.java Open file TestCaseID: Detailed-Report-Signature-1 TestType: Auto Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Simple report signature should not be in response Expected Result: Simple report response should not contain signature File: hellopades-pades-lt-sha256-sign.pdf TestCaseID: Detailed-Report-Signature-2 TestType: Auto Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Simple report signature should be in response Expected Result: Simple report response should contain signature File: hellopades-pades-lt-sha256-sign.pdf TestCaseID: Detailed-Report-Signature-3 TestType: Auto Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature Expected Result: Signed report is successfully validated File: hellopades-lt-sha256-rsa2048.pdf TestCaseID: Detailed-Report-Signature-4 TestType: Auto Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: In simple report reportSignatureEnabled parameter value true Expected Result: File hash in hex in report File: hellopades-lt-sha256-rsa2048.pdf TestCaseID: Detailed-Report-Signature-5 TestType: Auto Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: In simple report reportSignatureEnabled parameter value false Expected Result: File hash in hex not in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: est should be ran manually after configuring the report signature feature SignaturePolicyIT.java Open file TestCaseID: POLv4-Signature-Policy-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The PDF-file is Ades level Expected Result: Signatures are invalid according to policy File: soft-cert-signature.pdf TestCaseID: POLv4-Signature-Policy-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is Ades level Expected Result: Signatures are invalid according to policy File: allkiri_ades.asice TestCaseID: POLv4-Signature-Policy-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is Ades signature Expected Result: Signatures are invalid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv4-Signature-Policy-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The asice is Ades signature Expected Result: Signatures are invalid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv4-Signature-Policy-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is Ades seal Expected Result: Signatures are invalid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv4-Signature-Policy-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The asice is ades seal Expected Result: Signatures are valid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv4-Signature-Policy-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level signature, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, warning is returned about signature level File: testAdesQC.asice TestCaseID: POLv4-Signature-Policy-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level signature, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, warning is returned about signature level File: testAdesQC.asice TestCaseID: POLv4-Signature-Policy-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level seal, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, no warning about the signature level File: IB-4828_tempel_not_qscd_TS.asice TestCaseID: POLv4-Signature-Policy-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level seal, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, no warning about the signature level File: IB-4828_tempel_not_qscd_TM.bdoc TestCaseID: POLv4-Signature-Policy-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level, but do not have SSCD/QSCD compliance and type identifier Expected Result: Signatures are valid according to policy, no warning about the signature level File: **Attention! This test is disabled: file needed TestCaseID: POLv4-Signature-Policy-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level, but do not have SSCD/QSCD compliance and type identifier Expected Result: Signatures are valid according to policy, no warning about the signature level File: **Attention! This test is disabled: file needed TestCaseID: POLv4-Signature-Policy-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level signature Expected Result: Signatures are valid according to policy File: Valid_ID_sig.bdoc TestCaseID: POLv4-Signature-Policy-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level signature Expected Result: Signatures are valid according to policy File: ValidLiveSignature.asice TestCaseID: POLv4-Signature-Policy-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level seal Expected Result: Signatures are valid according to policy File: IB-4828_tempel_qscd_TM.bdoc TestCaseID: POLv4-Signature-Policy-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The asice is QES level seal Expected Result: Signatures are valid according to policy File: IB-4828_tempel_qscd_TS.asice TestCaseID: POLv4-Signature-Policy-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level Expected Result: Signatures are valid according to policy File: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc TestCaseID: POLv4-Signature-Policy-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The asice is QES level Expected Result: Signatures are valid according to policy File: EE_SER-AEX-B-LT-V-28.asice TestCaseID: POLv3-Signature-Policy-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-3-polv3 Title: The PDF-file is Ades level Expected Result: Signatures are not valid according to policy File: soft-cert-signature.pdf TestCaseID: POLv3-Signature-Policy-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-3-polv3 Title: The bdoc is Ades level Expected Result: Signatures are valid according to policy File: allkiri_ades.asice TestCaseID: POLv3-Signature-Policy-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-3-polv3 Title: The bdoc is ADES level signature Expected Result: Signatures are valid according to policy File: allkiri_ades.asice **Attention! This test is disabled: test file needed TestCaseID: POLv3-Signature-Policy-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-3-polv3 Title: The asice is Ades level signature Expected Result: Signatures are valid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv3-Signature-Policy-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-3-polv3 Title: The bdoc is Ades seal Expected Result: Signatures are valid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv3-Signature-Policy-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-3-polv3 Title: The asice is Ades level seal Expected Result: Signatures are valid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv3-Signature-Policy-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level signature, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, warning is returned about signature level File: testAdesQC.asice TestCaseID: POLv3-Signature-Policy-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level signature, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, warning is returned about signature level File: testAdesQC.asice TestCaseID: POLv3-Signature-Policy-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level seal, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, no warning about the signature level File: IB-4828_tempel_not_qscd_TS.asice TestCaseID: POLv3-Signature-Policy-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level seal, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, no warning about the signature level File: IB-4828_tempel_not_qscd_TM.bdoc TestCaseID: POLv3-Signature-Policy-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level, but do not have SSCD/QSCD compliance and type identifier Expected Result: Signatures are valid according to policy, no warning about the signature level File: **Attention! This test is disabled: file needed TestCaseID: POLv3-Signature-Policy-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level, but do not have SSCD/QSCD compliance and type identifier Expected Result: Signatures are valid according to policy, no warning about the signature level File: **Attention! This test is disabled: file needed TestCaseID: POLv3-Signature-Policy-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level signature Expected Result: Signatures are valid according to policy File: Valid_ID_sig.bdoc TestCaseID: POLv3-Signature-Policy-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level signature Expected Result: Signatures are valid according to policy File: ValidLiveSignature.asice TestCaseID: POLv3-Signature-Policy-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level seal Expected Result: Signatures are valid according to policy File: IB-4828_tempel_qscd_TM.bdoc TestCaseID: POLv3-Signature-Policy-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The asice is QES level seal Expected Result: Signatures are valid according to policy File: IB-4828_tempel_qscd_TS.asice TestCaseID: POLv3-Signature-Policy-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level Expected Result: Signatures are valid according to policy File: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc TestCaseID: POLv3-Signature-Policy-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The asice is QES level Expected Result: Signatures are valid according to policy File: EE_SER-AEX-B-LT-V-28.asice TestCaseID: Revocation-Signature-Policy-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The PDF-file is missing an OCSP or CRL Expected Result: Signatures are invalid according to policy File: PadesProfileT.pdf TestCaseID: Revocation-Signature-Policy-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The PDF-file with included CRL Expected Result: Signatures are valid according to policy File: PadesProfileLtWithCrl.pdf XadesHashcodeValidationFailIT.java Open file TestCaseID: Xades-Hashcode-Validation-Fail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Data file hash algorithm do not match signature hash algorithm Expected Result: Validation fails File: Valid_XAdES_LT_TM.xml TestCaseID: Xades-Hashcode-Validation-Fail-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Hashes do not match Expected Result: Validation fails File: Valid_XAdES_LT_TM.xml TestCaseID: Xades-Hashcode-Validation-Fail-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Wrong data file name is used Expected Result: Validation report is returned File: Valid_XAdES_LT_TM.xml TestCaseID: Xades-Hashcode-Validation-Fail-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Invalid signature in XAdES Expected Result: Validation report is returned File: Valid_XAdES_LT_TM.xml XadesHashcodeValidationPassIT.java Open file TestCaseID: Xades-Hashcode-Validation-Pass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: XAdES extracted from ASICE Expected Result: The document should pass the validation File: Valid_XAdES_LT_TS.xml TestCaseID: Xades-Hashcode-Validation-Pass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: XAdES extracted from BDOC Expected Result: The document should pass the validation File: Valid_XAdES_LT_TM.xml TestCaseID: Xades-Hashcode-Validation-Pass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: XAdES extracted from BDOC Expected Result: The document should pass the validation File: Valid_XADES_LT_TS_multiple_datafiles.xml XRoadValidationFailIT.java Open file TestCaseID: Xroad-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Simple xroad document with container fault Expected Result: Document should fail validation File: invalid-digest.asice XRoadValidationPassIT.java Open file TestCaseID: Xroad-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Simple xroad document Expected Result: Document should pass File: xroad-simple.asice TestCaseID: Xroad-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Batchsignature xroad document Expected Result: Document should pass File: xroad-batchsignature.asice TestCaseID: Xroad-ValidationPass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Attachment xroad document Expected Result: Document should pass File: xroad-attachment.asice DetailedReportValidationManualIT.java Open file TestCaseID: Detailed-Report-Validation-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: ValidationConclusion element Expected Result: Detailed report includes validationConclusion element File: ValidLiveSignature.asice **Attention! This test is disabled: TestCaseID: Detailed-Report-Validation-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: QmatrixBlock element Expected Result: Detailed report includes QmatrixBlock element and its values File: pades-baseline-lta-live-aj.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Validation-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Signatures element Expected Result: Detailed report includes signatures element and its sub-elements and its values File: hellopades-lt-sha256-ec256.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Validation-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: basicBuildingBlocks element Expected Result: Detailed report includes basicBuildingBlocks element and its sub-elements and its values File: pades-baseline-lta-live-aj.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Validation-5 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: BasicBuildingBlocks element Expected Result: Detailed report includes basicBuildingBlocks element and its sub-elements and its values File: pades-baseline-lta-live-aj.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Validation-6 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: BasicBuildingBlocks element Expected Result: Detailed report includes basicBuildingBlocks element and its sub-elements and its values File: pades-baseline-lta-live-aj.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Validation-7 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Wrong signature value Expected Result: Detailed report includes wrong signature value File: TS-02_23634_TS_wrong_SignatureValue.asice **Attention! This test is disabled: TestCaseID: Detailed-Report-Validation-8 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Wrong data file in manifest Expected Result: File: WrongDataFileInManifestAsics.asics **Attention! This test is disabled: TestCaseID: Detailed-Report-Validation-9 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report file hash if ReportSignatureEnabled value true Expected Result: fileHashInHex calculated File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Validation-10 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report file hash if ReportSignatureEnabled value false Expected Result: fileHashInHex no calculated File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: ReportSignatureManuallT.java Open file TestCaseID: Detailed-Report-Signatures-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_LTA signed with RSA key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Signatures-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_LT signed with RSA key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Signatures-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_T signed with RSA key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Signatures-5 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_B signed with RSA key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Signatures-6 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_LTA and signed with ECC key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Signatures-7 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_LT and signed with ECC key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Signatures-8 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_T and signed with ECC key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Signatures-9 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_B and signed with ECC key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Signatures-10 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature when configuration parameter OcspUrl empty Expected Result: No signature File: hellopades-lt-sha256-rsa2048.pdf TestCaseID: Detailed-Report-Signatures-11 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature when configuration parameter TspUrl empty Expected Result: No signature File: hellopades-lt-sha256-rsa2048.pdf TestCaseID: Detailed-Report-Signatures-12 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature when configuration parameter Pkcs11 wrong value Expected Result: Error message File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Signatures-13 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature when configuration parameter SignatureLevel empty Expected Result: No Signature File: hellopades-lt-sha256-rsa2048.pdf TestCaseID: Detailed-Report-Signatures-14 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature when using pks11 to sign Expected Result: Signature exists File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: StatisticsToGAManualIT.java Note All tests in this class expect manual configuration of Google Analytics before executing the tests. The test are made to prepare test data and ease the test execution, all results must be checked manually in GA! Check all the fields presence and correctness even though tests prepare data for specific cases. TestCaseID: Xauth-Statistics-GA-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf valid container is validated with x-authenticated-user set in header Expected Result: x-authenticated-user value is shown in GA File: pades_lt_two_valid_sig.pdf TestCaseID: Xauth-Statistics-GA-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf valid container is validated with x-authenticated-user set in header Expected Result: x-authenticated-user value is shown as N/A in GA File: pades_lt_two_valid_sig.pdf TestCaseID: Xauth-Statistics-GA-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf valid container is validated with x-authenticated-user set in header Expected Result: x-authenticated-user value is shown as N/A in GA File: pades_lt_two_valid_sig.pdf TestCaseID: Bdoc-Statistics-GA-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Bdoc with certificates from different countries. Expected Result: LT, EE and LV country codes are present in GA, Signature container type is ASIC-E TM File: Baltic MoU digital signing_EST_LT_LV.bdoc TestCaseID: Bdoc-Statistics-GA-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Asice-E TS is validated Expected Result: GA shows Signature container type as ASIC-E TS File: BDOC-TS.bdoc TestCaseID: Xroad-Statistics-GA-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Xroad valid container is validated Expected Result: Country code XX is sent to GA (GA shows ZZ as the XX is unknown code), Signature container type is ASiC-E (BatchSignature) File: xroad-batchsignature.asice TestCaseID: Ddoc-Statistics-GA-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Ddoc not supported file is inserted Expected Result: Not shown in GA statistics as the container is not validated File: xroad-simple.asice TestCaseID: Ddoc-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Ddoc invalid container is validated Expected Result: GA shows Signature container type as XAdES, TOTAL-FAILED indication File: ilma_kehtivuskinnituseta.ddoc TestCaseID: Xauth-Statistics-GA-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf valid container is validated with x-authenticated-user set in header Expected Result: x-authenticated-user value is shown in GA File: pades_lt_two_valid_sig.pdf StatisticsToLogsManualIT.java Note All tests in this class expect manual verification of responses in log! The tests are made to prepare test data and ease the test execution. TestCaseID: Bdoc-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Bdoc valid container is validated Expected Result: Correct data is shown in the log with correct structure File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Bdoc-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Bdoc invalid container is validated Expected Result: Correct data is shown in the log with correct structure File: SS-4_teadmataCA.4.asice TestCaseID: Bdoc-Statistics-Log-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Bdoc not supported file is inserted Expected Result: No message in statistics as the container is not validated File: xroad-simple.asice TestCaseID: Bdoc-Statistics-Log-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Bdoc with certificates from different countries. Expected Result: Correct data is shown in the log with correct structure File: Baltic MoU digital signing_EST_LT_LV.bdoc TestCaseID: Ddoc-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Ddoc valid container is validated Expected Result: Correct data is shown in the log with correct structure File: igasugust1.3.ddoc TestCaseID: Ddoc-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Ddoc invalid container is validated Expected Result: Correct data is shown in the log with correct structure File: ilma_kehtivuskinnituseta.ddoc TestCaseID: Ddoc-Statistics-Log-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Ddoc not supported file is inserted Expected Result: No message in statistics as the container is not validated File: xroad-simple.asice TestCaseID: Ddoc-Statistics-Log-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Ddoc with certificates from different countries. Expected Result: Correct data is shown in the log with correct structure File: Belgia_kandeavaldus_LIV.ddoc **Attention! This test is disabled: 2-126\") TestCaseID: Pdf-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf valid container is validated Expected Result: Correct data is shown in the log with correct structure File: pades_lt_two_valid_sig.pdf TestCaseID: Pdf-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf invalid container is validated Expected Result: Correct data is shown in the log with correct structure File: hellopades-lt1-lt2-wrongDigestValue.pdf TestCaseID: Pdf-Statistics-Log-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf with certificates from non Estonian countries. Expected Result: Correct data is shown in the log with correct structure File: Regulatione-signedbyco-legislators.pdf TestCaseID: Xroad-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Xroad valid container is validated Expected Result: Correct data is shown in the log with correct structure File: xroad-batchsignature.asice TestCaseID: Xroad-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Xroad invalid container is validated Expected Result: Correct data is shown in the log with correct structure File: invalid-digest.asice TestCaseID: Xroad-Statistics-Log-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Xroad not supported file is inserted Expected Result: No message in statistics as the container is not validated File: BDOC-TS.bdoc TestCaseID: Asics-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: ASiCs valid container is validated Expected Result: Correct data is shown in the log with correct structure File: ValidBDOCinsideAsics.asics TestCaseID: Asics-Statistics-Log-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: asics invalid container is validated Expected Result: No message in statistics as the container is not validated File: TwoDataFilesAsics.asics GetDataFileRequestIT.java Open file TestCaseID: Get-Data-Files-Request-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Input empty values Expected Result: Errors are returned stating the missing values File: not relevant TestCaseID: Get-Data-Files-Request-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Totally empty request body is sent Expected Result: Errors are given File: not relevant TestCaseID: Get-Data-Files-Request-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Order of elements is changed in request Expected Result: Order of elements is ignored, no error messages in response File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Additional elements are added Expected Result: Added elements ignored, no error messages and additional elements in response File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Mandatory element 'documentType' is duplicated, duplicated element with bdoc value Expected Result: Error message is returned File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Mandatory element 'document' is deleted Expected Result: Errors returned stating the missing element File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Low case for document type is used Expected Result: Data file is returned, no error messages File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Document Type is changed in request to BDOC, actual is DDOC Expected Result: Error is returned File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Document Type is changed in request to PDF, actual is DDOC Expected Result: Error is returned File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Document Type is changed in request to unsupported format (JPG), actual is DDOC Expected Result: Error is returned File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Document Type is changed in request to XROAD format, actual is DDOC Expected Result: Error is returned File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Document Type is changed in request to DDOC format, actual is BDOC Expected Result: Error is returned File: BDOC-TS.bdoc TestCaseID: Get-Data-Files-Request-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Document Type is changed in request to DDOC format, actual is PDF Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Get-Data-Files-Request-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: For Unsupported format Document Type is changed in request to DDOC format, actual is PNG Expected Result: Error is returned File: Picture.png HashcodeValidationRequestIT.java Open file TestCaseID: Get-Hascode-Validation-Request-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Input correct values for simple report Expected Result: Simple report is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Input correct values for detailed report Expected Result: Detailed report is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Input missing signature file Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Input missing signature file Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Input incorrect signature file Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Input file without signature Expected Result: Validation report is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Not correct file type Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Input missing filename Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Input empty filename Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Input whitespace filename Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Input too long filename Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Input invalid format filename Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Input wrong file type in filename Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Report type missing Expected Result: Default is used File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Report type case sensitivity Expected Result: Report type is case insensitive File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Report type is invalid Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Signature policy missing Expected Result: Default is used File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Signature policy is invalid Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-19 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Incorrect signature policy format Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-20 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Signature policy is empty Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-21 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Signature policy too long Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-22 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Data file missing Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-23 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Empty data files list Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-24 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Data file filename missing Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-25 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Data file filename empty Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-26 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Data file filename too long Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-27 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Data file filename invalid format Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-28 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Data file invalid hash algorithm Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-29 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Data file hash algorithm case sensitivity Expected Result: Validation report is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-30 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Data file hash missing Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-31 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Data file hash empty Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-32 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Data file hash wrong format Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-33 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Excess data files are ignored Expected Result: Validation report is returned File: hashAsiceXades.xml ValidationReportValueVerificationIT.java Open file TestCaseID: Bdoc-ValidationReportVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface#validation-request-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT_TM, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: Valid_ID_sig.bdoc TestCaseID: Bdoc-ValidationReportVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: 23635_bdoc_ts_OCSP_random_nonce.bdoc TestCaseID: Bdoc-ValidationReportVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc TestCaseID: Bdoc-ValidationReportVerification-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT-TM, AdESqc Expected Result: All required elements are present and meet the expected values. File: testAdesQCInvalid.asice TestCaseID: Bdoc-ValidationReportVerification-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: JSON structure has all elements (Bdoc valid multiple signatures) Expected Result: All required elements are present according to SimpleReportSchema.json File: Baltic MoU digital signing_EST_LT_LV.bdoc TestCaseID: Bdoc-ValidationReportVerification-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: JSON structure has all elements (Bdoc indeterminate status) Expected Result: All required elements are present according to BdocDocSimpleReportSchema.json File: SS-4_teadmataCA.4.asice TestCaseID: Bdoc-ValidationReportVerification-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Bdoc report with no signatures Expected Result: Report is returned with required elements File:BdocContainerNoSignature.bdoc TestCaseID: Pdf-ValidationReportVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: JSON structure has all elements (Pdf valid single signature) Expected Result: All required elements are present according to SimpleReportSchema.json File: hellopades-lt-sha256-ec256.pdf TestCaseID: Pdf-ValidationReportVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: JSON structure has all elements (Pdf valid Multiple signatures) Expected Result: All required elements are present according to SimpleReportSchema.json File: pades_lt_two_valid_sig.pdf TestCaseID: Pdf-ValidationReportVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: JSON structure has all elements (Pdf invalid signature) Expected Result: All required elements are present according to SimpleReportSchema.json File: hellopades-lt-b.pdf TestCaseID: Pdf-ValidationReportVerification-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: JSON structure has all elements (Pdf indeterminate status) Expected Result: All required elements are present according to SimpleReportSchema.json File: hellopades-lt-rsa1024-sha1-expired.pdf TestCaseID: Pdf-ValidationReportVerification-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Pdf report with no signatures Expected Result: Report is returned with required elements File: PdfNoSignature.pdf TestCaseID: Ddoc-ValidationReportVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: JSON structure has all elements (ddoc valid single signature) Expected Result: All required elements are present according to SimpleReportSchema.json File: DIGIDOC-XML1.3.ddoc TestCaseID: Ddoc-ValidationReportVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: JSON structure has all elements (ddoc invalid signature) Expected Result: All required elements are present according to SimpleReportSchema.json File: multipleInvalidSignatures.ddoc TestCaseID: Ddoc-ValidationReportVerification-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Check for optional warning element Expected Result: Warning element is present File: ns6t3cp7.ddoc TestCaseID: Ddoc-ValidationReportVerification-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Ddoc report with no signatures Expected Result: Report is returned with required elements File: DdocContainerNoSignature.ddoc TestCaseID: Ddoc-ValidationReportVerification-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.0, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: SK-XML1.0.ddoc **Attention! This test is disabled: https://github.com/open-eid/SiVa/issues/11 TestCaseID: Ddoc-ValidationReportVerification-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.1, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.1.ddoc TestCaseID: Ddoc-ValidationReportVerification-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.2, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.2.ddoc TestCaseID: Ddoc-ValidationReportVerification-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.3, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.3.ddoc TestCaseID: Xroad-ValidationReportVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-simple container Expected Result: Report is returned with required elements File: xroad-simple.asice TestCaseID: Xroad-ValidationReportVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-batchsignature container Expected Result: Report is returned with required elements File: xroad-batchsignature.asice TestCaseID: Xroad-ValidationReportVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-attachment container Expected Result: Report is returned with required elements File: xroad-attachment.asice TestCaseID: Xroad-ValidationReportVerification-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report with invalid xroad container Expected Result: Report is returned with required elements File: xroad-attachment.asice ValidationRequestIT.java Open file TestCaseID: ValidationRequest-Parameters-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Happy path valid mandatory input test Expected Result: Validation report is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Happy path valid all input test Expected Result: Validation report is returned File: xroad-simple.asice TestCaseID: ValidationRequest-Parameters-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Totally empty request body is sent Expected Result: Error is given File: not relevant TestCaseID: ValidationRequest-Parameters-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Input empty values Expected Result: Errors are returned stating the missing values File: not relevant TestCaseID: ValidationRequest-Parameters-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request with more parameters than expected is sent Expected Result: Error is given or extra parameters are ignored? File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request has invalid keys (capital letters) Expected Result: Error is returned stating wrong values File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Document parameter is missing Expected Result: Errors are returned stating missing Document values File: not relevant TestCaseID: ValidationRequest-Parameters-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Filename parameter is missing Expected Result: Errors are returned stating the missing values File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Happy path valid file encoding format Expected Result: Validation report is returned File: xroad-simple.asice TestCaseID: ValidationRequest-Parameters-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Happy path valid file encoding format Expected Result: Validation report is returned File: xroad-simple.asice TestCaseID: ValidationRequest-Parameters-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request with not base64 string as document Expected Result: Error is returned stating encoding problem File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Filename field should be case insensitive Expected Result: Validation report is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Filename field should ignore spaces Expected Result: Validation report is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request has invalid character in filename Expected Result: Correct error code is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Filename is in allowed length Expected Result: Report is returned with the same filename File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Filename is over allowed length Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: DocumentType parameter is missing Expected Result: Document type is selected automatically and validation report is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: DocumentType parameter is XROAD Expected Result: Xroad validatior is used for validation and report is returned File: xroad-simple.asice TestCaseID: ValidationRequest-Parameters-19 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: DocumentType parameter is XROAD Expected Result: Xroad validatior is used for validation and report is returned File: xroad-simple.asice TestCaseID: ValidationRequest-Parameters-20 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: SignaturePolicy parameter is missing, default is used Expected Result: Validation report is returned with POLv4 File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-21 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: SignaturePolicy is set as POLv3 Expected Result: Validation report is returned with POLv3 File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-22 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: SignaturePolicy is set as POLv4 Expected Result: Validation report is returned with POLv4 File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-23 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: SignaturePolicy has not allowed value Expected Result: error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-24 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: ReportType parameter is missing Expected Result: Simple report is returned as default File: TS-11_23634_TS_2_timestamps.asice TestCaseID: ValidationRequest-Parameters-25 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: ReportType parameter is missing Expected Result: Simple report is returned File: TS-11_23634_TS_2_timestamps.asice TestCaseID: ValidationRequest-Parameters-26 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: ReportType parameter is missing Expected Result: Simple report is returned File: TS-11_23634_TS_2_timestamps.asice TestCaseID: ValidationRequest-Parameters-27 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: ReportType parameter is invalid Expected Result: Error is returned File: xroad-simple.asice TestCaseID: ValidationRequest-Parameters-28 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Filename is under allowed length Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-29 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: SignaturePolicy is under allowed length Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-30 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Validator-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Mismatch in stated and actual document (bdoc and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: ValidationRequest-Validator-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Input random base64 string as bdoc Expected Result: Error is returned stating problem in document File: not relevant TestCaseID: ValidationRequest-Validator-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Acceptance of ASICE as BDOC document type Expected Result: Asice files are handled the same as bdoc File: bdoc21-TS.asice TestCaseID: ValidationRequest-Validator-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Input random base64 string as pdf Expected Result: Error is returned stating problem in document File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Validator-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Mismatch in stated and actual document (ddoc and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Validator-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Input random base64 string as ddoc Expected Result: Error is returned stating problem in document File: not relevant TestCaseID: ValidationRequest-Validator-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Mismatch in stated and actual document (xroad and ddoc) Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: ValidationRequest-Validator-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Input random base64 string as document with xroad document type Expected Result: Error is returned stating problem in document File: not relevant SoapGetDataFileReportIT.java Open file TestCaseID: SoapGetDataFile-Report-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-response-interface Title: Verification of values in Validation Report, checks for File name, Base64, Mimetype and Size Expected Result: All required elements are present and meet the expected values File: ddoc_1_3.xml.ddoc TestCaseID: SoapGetDataFile-Report-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-response-interface Title: Verification of values in Validation Report xml v1.1, checks for File name, Base64, Mimetype and Size Expected Result: All required elements are present and meet the expected values File: DIGIDOC-XML1.1.ddoc TestCaseID: SoapGetDataFile-Report-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-response-interface Title: Verification of values in Validation Report xml v1.2, checks for File name, Base64, Mimetype and Size Expected Result: All required elements are present and meet the expected values File: DIGIDOC-XML1.2.ddoc TestCaseID: SoapGetDataFile-Report-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-response-interface Title: Verification of values in Validation Report for container with a number of files, checks for File name, Base64, Mimetype and Size for each file Expected Result: All required elements are present and meet the expected values File: igasugust1.3.ddoc **Attention! This test is disabled: Run this test manually as it fails in Travis because of big response data SoapGetDataFileRequestIT.java Open file TestCaseID: Soap-Validation-Request-For-Data-Files-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Input empty values Expected Result: Error is returned File: not relevant TestCaseID: Soap-Validation-Request-For-Data-Files-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Input empty body Expected Result: Error is returned File: not relevant TestCaseID: Soap-Validation-Request-For-Data-Files-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Element DocumentType is removed from the body Expected Result: Error is returned File: ddoc_1_3.xml.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Element Document is removed from the body Expected Result: Error is returned File: ddoc_1_3.xml.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Element DocumentType is duplicated in the body with different value Expected Result: Error is returned File: ddoc_1_3.xml.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Additional element Filename is added to the body Expected Result: Error is returned File: ddoc_1_3.xml.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Value for element Document was changed Expected Result: Error is returned File: ddoc_1_3.xml.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: DocumentType was changed to BDOC when actual is DDOC Expected Result: Error is returned File: 18912.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: DocumentType was changed to PDF when actual is DDOC Expected Result: Error is returned File: 18912.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: DocumentType was changed to XROAD when actual is DDOC Expected Result: Error is returned File: 18912.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: DocumentType was changed to unsupported format JPG when actual is DDOC Expected Result: Error is returned File: 18912.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: DocumentType was changed to DDOC when actual is PDF Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Soap-Validation-Request-For-Data-Files-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: DocumentType was changed to DDOC when actual is BDOC Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc SoapValidationReportValueIT.java Open file TestCaseID: Bdoc-SoapValidationReportValue-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT_TM, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: Valid_ID_sig.bdoc TestCaseID: Bdoc-SoapValidationReportValue-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: 23635_bdoc_ts_OCSP_random_nonce.bdoc TestCaseID: Bdoc-SoapValidationReportValue-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT, AdES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc **Attention! This test is disabled: New testfile needed TestCaseID: Bdoc-SoapValidationReportValue-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT_TM, AdESqc, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: testAdesQC.bdoc **Attention! This test is disabled: Testfile needed TestCaseID: Bdoc-SoapValidationReportValue-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LTA, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: EE_SER-AEX-B-LTA-V-24.bdoc TestCaseID: Ddoc-SoapValidationReportValue-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.0, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: SK-XML1.0.ddoc **Attention! This test is disabled: https://github.com/open-eid/SiVa/issues/11 TestCaseID: Ddoc-SoapValidationReportValue-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.1, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.1.ddoc TestCaseID: Ddoc-SoapValidationReportValue-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.2, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.2.ddoc TestCaseID: Ddoc-SoapValidationReportValue-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.3, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.3.ddoc TestCaseID: Pdf-SoapValidationReportValue-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, PAdES_baseline_LT, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: pades_lt_two_valid_sig.pdf TestCaseID: Pdf-SoapValidationReportValue-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, PAdES_baseline_B, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: hellopades-pades-b-sha256-auth.pdf TestCaseID: Xroad-SoapValidationReportValue-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-simple container Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: xroad-simple.asice TestCaseID: Xroad-SoapValidationReportValue-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-simple invalid container Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: invalid-digest.asice SoapValidationRequestIT.java Open file TestCaseID: Soap-ValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Empty request body Expected Result: Error is returned stating mismatch with required elements File: not relevant TestCaseID: Soap-ValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request with not base64 string as document Expected Result: Error is returned stating encoding problem File: not relevant TestCaseID: Soap-ValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Verification of wrong document type as input Expected Result: Correct error code is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Verification of case sensitivity in document type Expected Result: Error is returned as WSDL defines the allowed values File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request has XML as document type (special case, XML is similar to ddoc and was a accepted document type in earlier versions) Expected Result: Error is given File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request has long filename field Expected Result: Report is returned with the same filename File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Totally empty request body is sent Expected Result: Error is given File: not relevant TestCaseID: Soap-ValidationRequest-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request with more parameters than expected is sent Expected Result: Error is given or extra parameters are ignored? File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request with more parameters than expected is sent Expected Result: Error is given or extra parameters are ignored? File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request with special chars is sent Expected Result: Validation report is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request with no optional SignaturePolicy field Expected Result: Validation report is returned using default policy File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request with XML expansion Expected Result: Error is returned and Entity is not handled File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request XML external entity attack Expected Result: Error message is returned and Doctype field is not handled File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request with empty document Expected Result: Error is returned File: not relevant TestCaseID: Soap-ValidationRequest-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request with empty filename Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request with not allowed signature policy characters Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: SignaturePolicy is over allowed length Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: SignaturePolicy is under allowed length Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-19 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Filename is under allowed length Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-20 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Filename is over allowed length Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-BdocValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Input random base64 string as document with bdoc document type Expected Result: Error is returned stating problem in document File: not relevant TestCaseID: Soap-BdocValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Verification of filename value (filename do not match the actual file) Expected Result: The same filename is returned as sent in the request File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-BdocValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Soap-BdocValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and ddoc) Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: Soap-BdocValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Bdoc file, not existing value in signaturePolicy Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-BdocValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Bdoc file, policy fiels should be case insensitive Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-DdocValidationRequest-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and xroad) Expected Result: Error is returned File: xroad-simple.asice TestCaseID: Soap-DdocValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Input random base64 string as document with ddoc document type Expected Result: Error is returned stating problem in document File: TestCaseID: Soap-DdocValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-DdocValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-DdocValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Soap-DdocValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Ddoc file, not existing value in signaturePolicy Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: Soap-DdocValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and xroad) Expected Result: Error is returned File: xroad-attachment.asice TestCaseID: Soap-PdfValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Input random base64 string as document with pdf document type Expected Result: Error is returned stating problem in document File: not relevant TestCaseID: Soap-PdfValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: PDF file, not existing value in signaturePolicy Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Soap-XroadValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: X-road file, not existing value in signaturePolicy Expected Result: Error is returned File: xroad-simple.asice TestCaseID: Soap-XroadValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (xroad and ddoc) Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: Soap-XroadValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (pdf and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-XroadValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf SoapXRoadRequestHeaderIT.java Open file TestCaseID: XroadSoap-RequestVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Soap headers are returned in response Expected Result: Same headers are in response as in request File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: XroadSoap-RequestVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Soap headers are returned in correct order Expected Result: Same headers are in response as in request File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: XroadSoap-RequestVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Soap headers are returned in error response Expected Result: Same headers are in response as in request File: not relevant TestCaseID: XroadSoap-GetDataFiles-RequestVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Soap headers are returned in response for Get Data Files Expected Result: Same headers are in response as in request File: susisevad1_3.ddoc TestCaseID: XroadSoap-GetDataFiles-RequestVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Soap headers are returned in correct order for Get Data Files Expected Result: Same headers are in response as in request File: susisevad1_3.ddoc TestCaseID: XroadSoap-GetDataFiles-RequestVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Soap headers are returned in error response for Get Data Files Expected Result: Same headers are in response as in request File: not relevant Sample Application Integration Test TestCaseID: Sample-Application-Elements-1 TestType: Manual Requirement: Title: Upload of correct file type Expected Result: Its possible to upload the file by dropping in download area or by browsing a file File: \u0160u\u017elikud s\u00f5id \u00fche \u00f5una \u00e4ra.bdoc TestCaseID: Sample-Application-Elements-2 TestType: Manual Requirement: Title: Upload of invalid file type Expected Result: File is not validated, corresponding errors are returned File: XML.xml TestCaseID: Sample-Application-Elements-3 TestType: Manual Requirement: Title: Upload file larger than 10MB Expected Result: File is not validated File: hellopades-lta-no-ocsp.pdf TestCaseID: Sample-Application-Elements-4 TestType: Manual Requirement: Title: Page layout Expected Result: All elements are properly displayed and can be used with different window sizes File: not relevant TestCaseID: Sample-Application-Validation-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Validate container with valid signatures Expected Result: Validation report is displayed correctly both for JSON and SOAP File: \u0160u\u017elikud s\u00f5id \u00fche \u00f5una \u00e4ra.bdoc TestCaseID: Sample-Application-Validation-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Validate container with valid signatures Expected Result: Validation report is displayed correctly both for JSON and SOAP File: \u0160u\u017elikud s\u00f5id \u00fche \u00f5una \u00e4ra.bdoc TestCaseID: Sample-Application-Validation-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Validate container with invalid signatures Expected Result: Validation report is displayed correctly both for JSON and SOAP File: IB-3960_bdoc2.1_TSA_SignatureValue_altered.bdoc TestCaseID: Sample-Application-Validation-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Validate container with not passing policy (POLv2) Expected Result: Validation report is displayed correctly (correct policy is returned) both for JSON and SOAP File: soft-cert-signature.pdf X-Road Soap System Test TestCaseID: Xroad-Validate-Ddoc-1 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate valid Ddoc Expected Result: The document should return validation report with one valid signature File: DIGIDOC-XML1.3.ddoc TestCaseID: Xroad-Validate-Ddoc-2 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate invalid Ddoc Expected Result: The document should return validation report with no valid signature File: test-non-repu1.ddoc TestCaseID: Xroad-Validate-Ddoc-3 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Invalid Request Expected Result: Soap error should be returned File: not relevant TestCaseID: Xroad-Validate-Bdoc-1 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate valid Bdoc Expected Result: The document should return validation report with one valid signature File: \u0160u\u017elikud s\u00f5id \u00fche \u00f5una \u00e4ra.bdoc TestCaseID: Xroad-Validate-Bdoc-2 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate invalid Bdoc Expected Result: The document should return validation report with no valid signature File: TM-15_revoked.4.asice TestCaseID: Xroad-Validate-Bdoc-3 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Invalid Request Expected Result: Soap error should be returned File: not relevant TestCaseID: Xroad-Validate-Pdf-1 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate valid Pdf Expected Result: The document should return validation report with one valid signature File: pades-baseline-lta-live-aj.pdf TestCaseID: Xroad-Validate-Pdf-2 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate invalid Pdf Expected Result: The document should return validation report with no valid signature File: pades-baseline-t-live-aj.pdf TestCaseID: Xroad-Validate-Pdf-3 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Invalid Request Expected Result: Soap error should be returned File: not relevant TestCaseID: Xroad-Validate-Xroad-1 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate valid Xroad Expected Result: The document should return validation report with one valid signature File: xroad-batchsignature.asice TestCaseID: Xroad-Validate-Xroad-2 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate invalid Xroad Expected Result: The document should return validation report with no valid signature File: invalid-digest.asice TestCaseID: Xroad-Validate-Xroad-3 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Invalid Request Expected Result: Soap error should be returned File: not relevant TestCaseID: Xroad-GetDataFiles-DDOC-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Get data files from valid DDOC Expected Result: Data files should be returned File: DIGIDOC-XML1.3.ddoc TestCaseID: Xroad-GetDataFiles-DDOC-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Get data files from invalid DDOC Expected Result: Data files should be returned even if the signatures are not valid File: test-non-repu1.ddoc TestCaseID: Xroad-GetDataFiles-DDOC-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Invalid request Expected Result: Error is returned as the document type is not supported File: test-non-repu1.ddoc Configuration System Test TestCaseID: Configuration-Webapp-TSL-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: TSL update over network Expected Result: TSL is updated from configured path File: not relevant TestCaseID: Configuration-Webapp-TSL-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: TSL update disabled Expected Result: Local cashe is used File: not relevant TestCaseID: Configuration-Webapp-TSL-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: TSL trusted territories Expected Result: only listed countries are allowed File: not relevant TestCaseID: Configuration-Webapp-TSL-5 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: TSL loader scheduler cron Expected Result: TSL renewal process is started File: not relevant TestCaseID: Configuration-Webapp-Keystore-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: Keystore change Expected Result: configured keystore is used File: not relevant TestCaseID: Configuration-Webapp-Scheduler-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: Update time is configured Expected Result: configured time is used File: not relevant TestCaseID: Configuration-Webapp-Xroad-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: X-Road validator service address is changed Expected Result: correct address is used File: not relevant TestCaseID: Configuration-Webapp-GA-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: Google Analytics is configured Expected Result: Data is transfered to GA File: not relevant TestCaseID: Configuration-Webapp-Policy-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: Configure policy for bdoc Expected Result: Configuration is used File: not relevant TestCaseID: Configuration-Webapp-Policy-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: Configure policy for pdf Expected Result: Configuration is used File: not relevant TestCaseID: Configuration-Webapp-Monitoring-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: Monitoring is enabled for webapp only Expected Result: Its possible to get \"heartbeat\" status with correct info File: not relevant TestCaseID: Configuration-Webapp-Monitoring-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: Monitoring is enabled for webapp and Xroad Service Expected Result: Its possible to get \"heartbeat\" status with correct info File: not relevant TestCaseID: Configuration-Webapp-Monitoring-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: Monitoring is enabled and custom links are configured Expected Result: Its possible to get \"heartbeat\" status with correct info File: not relevant TestCaseID: Configuration-XroadService-Monitoring-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: Monitoring is enabled Expected Result: Its possible to get \"heartbeat\" status with correct info for Xroad Service File: not relevant TestCaseID: Configuration-SampleApplication-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: Configuration of SiVa Web Service access Expected Result: Correct web service is used File: not relevant TestCaseID: Configuration-SampleApplication-Monitoring-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: Monitoring is enabled Expected Result: Its possible to get \"heartbeat\" status with correct info using basic authentication File: not relevant","title":"Appendix 2 - Test Case Descriptions"},{"location":"siva2/appendix/test_cases/#test-case-descriptions","text":"","title":"Test Case Descriptions"},{"location":"siva2/appendix/test_cases/#introduction","text":"This document gives overview of the test cases. This page is partially generated using a script, more info about the script can be found in SiVa GitHub . The structure and elements of test case is described in QA Strategy document. All the files used in the tests can be found in SiVa GitHub .","title":"Introduction"},{"location":"siva2/appendix/test_cases/#asicevalidationfailitjava","text":"Open file TestCaseID: Asice-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with single invalid signature Expected Result: The document should fail the validation File: InvalidLiveSignature.asice TestCaseID: Asice-ValidationFail-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice with multiple invalid signatures Expected Result: The document should fail the validation File: InvalidMultipleSignatures.bdoc TestCaseID: Asice-ValidationFail-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice with multiple signatures both valid and invalid Expected Result: The document should fail the validation File: InvalidAndValidSignatures.asice TestCaseID: Asice-ValidationFail-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice with no signatures Expected Result: The document should fail the validation File: AsiceContainerNoSignature.asice TestCaseID: Asice-ValidationFail-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Wrong signature timestamp Expected Result: The document should fail the validation File: TS-02_23634_TS_wrong_SignatureValue.asice TestCaseID: Asice-ValidationFail-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice No non-repudiation key usage value in the certificate, verification of AdES signature level Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-I-43.asice TestCaseID: Asice-ValidationFail-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice signers certificate does not have non-repudiation value in the certificates key usage field and it does not contain the QC and SSCD compliance information. Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-I-26.asice TestCaseID: Asice-ValidationFail-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: OCSP certificate is not trusted Expected Result: The document should fail the validation File: TM-01_bdoc21-unknown-resp.bdoc TestCaseID: Asice-ValidationFail-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice TSA certificate is not trusted Expected Result: The document should fail the validation File: TS-05_23634_TS_unknown_TSA.asice **Attention! This test is disabled: https://ec.europa.eu/cefdigital/tracker/browse/DSS-1221 TestCaseID: Asice-ValidationFail-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice OCSP response status is revoked Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-R-25.asice TestCaseID: Asice-ValidationFail-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice difference between OCSP and time-stamp issuing times is more than 24 hours Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-V-20.asice TestCaseID: Asice-ValidationFail-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice unsigned data files in the container Expected Result: The document should pass the validation with warning File: EE_SER-AEX-B-LT-V-34.asice TestCaseID: Asice-ValidationFail-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice SignatureValue does not correspond to the SignedInfo block Expected Result: The document should fail the validation File: REF-19_bdoc21-no-sig-asn1-pref.bdoc TestCaseID: Asice-ValidationFail-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice Baseline-BES file Expected Result: The document should fail the validation File: signWithIdCard_d4j_1.0.4_BES.asice TestCaseID: Asice-ValidationFail-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice Baseline-EPES file Expected Result: The document should fail the validation File: TM-04_kehtivuskinnituset.4.asice TestCaseID: Asice-ValidationFail-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice signers certificate is not trusted Expected Result: The document should fail the validation File: SS-4_teadmataCA.4.asice TestCaseID: Asice-ValidationFail-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice OCSP response status is revoked Expected Result: The document should fail the validation File: TM-15_revoked.4.asice TestCaseID: Asice-ValidationFail-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice OCSP response status is unknown Expected Result: The document should fail the validation File: TM-16_unknown.4.asice TestCaseID: Asice-ValidationFail-19 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice signed data file has been removed from the container Expected Result: The document should fail the validation File: KS-21_fileeemaldatud.4.asice TestCaseID: Asice-ValidationFail-20 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice no files in container Expected Result: The document should fail the validation File: KS-02_tyhi.bdoc TestCaseID: Asice-ValidationFail-21 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice signed data file(s) don't match the hash values in reference elements Expected Result: The document should fail the validation File: REF-14_filesisumuudetud.4.bdoc TestCaseID: Asice-ValidationFail-22 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice Baseline-T signature Expected Result: The document should fail the validation File: TS-06_23634_TS_missing_OCSP.asice TestCaseID: Asice-ValidationFail-23 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice certificate's validity time is not in the period of OCSP producedAt time Expected Result: The document should fail the validation File: **Attention! This test is disabled: test file is needed where certificate expiration end is before the OCSP produced at time","title":"AsiceValidationFailIT.java"},{"location":"siva2/appendix/test_cases/#asicevalidationpassitjava","text":"Open file TestCaseID: Asice-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice with single valid signature Expected Result: The document should pass the validation File: ValidLiveSignature.asice TestCaseID: Asice-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice TM with multiple valid signatures Expected Result: The document should pass the validation File: BDOC-TS.asice TestCaseID: Asice-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice One LT signature with certificates from different countries Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-30.asice TestCaseID: Asice-ValidationPass-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice Baseline-LT file Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-49.asice TestCaseID: Asice-ValidationPass-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice Baseline-LTA file Expected Result: The document should pass the validation File: EE_SER-AEX-B-LTA-V-24.asice TestCaseID: Asice-ValidationPass-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice file signed with Mobile-ID, ECC-SHA256 signature with prime256v1 key Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-2.asice TestCaseID: Asice-ValidationPass-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice file with ESTEID-SK 2015 certificate chain Expected Result: The document should pass the validation File: IB-4270_TS_ESTEID-SK 2015 SK OCSP RESPONDER 2011.asice TestCaseID: Asice-ValidationPass-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice file with KLASS3-SK 2010 (EECCRCA) certificate chain Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-28.asice TestCaseID: Asice-ValidationPass-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: *.sce file with TimeStamp Expected Result: The document should pass the validation File: ASICE_TS_LTA_content_as_sce.sce TestCaseID: Asice-ValidationPass-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice-TS with special characters in data file Expected Result: The document should pass the validation with correct signature scope File: Nonconventionalcharacters.asice TestCaseID: Asice-ValidationPass-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice unsigned data files in the container Expected Result: The document should pass the validation with warning File: EE_SER-AEX-B-LT-V-34.asice TestCaseID: Asice-ValidationPass-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: New Estonian ECC signature Expected Result: The document should pass the validation File: Mac_AS0099904_EsimeneAmetlikSKTestElliptilistega_TS.asice","title":"AsiceValidationPassIT.java"},{"location":"siva2/appendix/test_cases/#asicsvalidationfailitjava","text":"Open file TestCaseID: Asics-ValidationFail-1 TestType: Automated Requirement: Title: Only one datafile is allowed in ASIC-s Expected Result: The validation should fail File: TwoDataFilesAsics.asics TestCaseID: Asics-ValidationFail-2 TestType: Automated Requirement: Title: No data file in ASIC-s Expected Result: The validation should fail File: DataFileMissingAsics.asics TestCaseID: Asics-ValidationFail-3 TestType: Automated Requirement: Title: more folders that META-INF in ASIC-s Expected Result: The validation should fail File: FoldersInAsics.asics TestCaseID: Asics-ValidationFail-4 TestType: Automated Requirement: Title: META-INF folder not in root of container Expected Result: The validation should fail File: MetaInfNotInRoot.asics TestCaseID: Asics-ValidationFail-5 TestType: Automated Requirement: Title: Not allowed files in META-INF folder Expected Result: The validation should fail File: signatureMixedWithTST.asics TestCaseID: Asics-ValidationFail-6 TestType: Automated Requirement: Title: TST not intact Expected Result: The validation should fail File: AsicsTSTsignatureModified.asics TestCaseID: Asics-ValidationFail-7 TestType: Automated Requirement: Title: TST has been corrupted Expected Result: The validation should fail File: AsicsTSTsignatureBroken.asics TestCaseID: Asics-ValidationFail-8 TestType: Automated Requirement: Title: Data file changed Expected Result: The validation should fail File: DatafileAlteredButStillValid.asics TestCaseID: Asics-ValidationFail-9 TestType: Automated Requirement: Title: Exluding files in META-INF folder together with TST Expected Result: The validation should fail File: evidencerecordMixedWithTST.asics","title":"AsicsValidationFailIT.java"},{"location":"siva2/appendix/test_cases/#asicsvalidationpassitjava","text":"Open file TestCaseID: Asics-ValidationPass-1 TestType: Automated Requirement: Title: Validation of ASICs with DDOC inside Expected Result: TST and inner DDOC are valid File: ValidDDOCinsideAsics.asics TestCaseID: Asics-ValidationPass-2 TestType: Automated Requirement: Title: Validation of ASICs with DDOC inside SCS extension Expected Result: TST and inner DDOC are valid File: ValidDDOCinsideAsics.scs TestCaseID: Asics-ValidationPass-3 TestType: Automated Requirement: Title: Validation of ASICs with BDOC inside Expected Result: TST and inner BDOC are valid File: ValidBDOCinsideAsics.asics TestCaseID: Asics-ValidationPass-4 TestType: Automated Requirement: Title: Validation of ASICs with text document inside Expected Result: TST is valid File: TXTinsideAsics.asics TestCaseID: Asics-ValidationPass-5 TestType: Automated Requirement: Title: Validation of ASICs with ASICs inside Expected Result: TST is valid, no inner looping of ASICs File: ValidASICSinsideAsics.asics TestCaseID: Asics-ValidationPass-6 TestType: Automated Requirement: Title: Validation of ASICs with DDOC inside ZIP extension Expected Result: TST and inner DDOC are valid File: ValidDDOCinsideAsics.zip TestCaseID: Asics-ValidationPass-7 TestType: Automated Requirement: Title: Validation of ASICs with wrong mimetype with DDOC inside Expected Result: TST and inner DDOC are valid File: ValidDDOCinsideAsicsWrongMime.asics","title":"AsicsValidationPassIT.java"},{"location":"siva2/appendix/test_cases/#bdocvalidationfailitjava","text":"Open file TestCaseID: Bdoc-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with single invalid signature Expected Result: The document should fail the validation File: IB-3960_bdoc2.1_TSA_SignatureValue_altered.bdoc TestCaseID: Bdoc-ValidationFail-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with multiple invalid signatures Expected Result: The document should fail the validation File: BdocMultipleSignaturesInvalid.bdoc TestCaseID: Bdoc-ValidationFail-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with multiple signatures both valid and invalid Expected Result: The document should fail the validation File: BdocMultipleSignaturesMixedWithValidAndInvalid.bdoc TestCaseID: Bdoc-ValidationFail-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with no signatures Expected Result: The document should fail the validation File: BdocContainerNoSignature.bdoc TestCaseID: Bdoc-ValidationFail-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with invalid mimetype in manifest Expected Result: document malformed error should be returned File: 23147_weak-warning-sha1-invalid-mimetype-in-manifest.bdoc **Attention! This test is disabled: /jira.ria.ee/browse/DD4J-161\") TestCaseID: Bdoc-ValidationFail-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice with wrong slash character ('\\') in data file mime-type value Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-V-33.bdoc **Attention! This test is disabled: /jira.ria.ee/browse/DD4J-161\") TestCaseID: Bdoc-ValidationFail-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Wrong signature timestamp Expected Result: The document should fail the validation in DD4J File: TS-02_23634_TS_wrong_SignatureValue.asice TestCaseID: Bdoc-ValidationFail-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice No non-repudiation key usage value in the certificate, verification of AdES signature level Expected Result: The document should fail the validation in DD4J File: EE_SER-AEX-B-LT-I-43.asice TestCaseID: Bdoc-ValidationFail-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice signers certificate does not have non-repudiation value in the certificates key usage field and it does not contain the QC and SSCD compliance information. Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-I-26.asice TestCaseID: Bdoc-ValidationFail-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc OCSP certificate is not trusted Expected Result: The document should fail the validation File: TM-01_bdoc21-unknown-resp.bdoc TestCaseID: Bdoc-ValidationFail-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice TSA certificate is not trusted Expected Result: The document should fail the validation in DD4J File: TS-05_23634_TS_unknown_TSA.asice TestCaseID: Bdoc-ValidationFail-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice OCSP response status is revoked Expected Result: The document should fail the validation in DD4J File: EE_SER-AEX-B-LT-R-25.asice TestCaseID: Bdoc-ValidationFail-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice difference between OCSP and time-stamp issuing times is more than 24 hours Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-V-20.asice TestCaseID: Bdoc-ValidationFail-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc different data file mime-type values in signatures.xml and manifest.xml files Expected Result: The document should return warning regarding the mismatch File: 23613_TM_wrong-manifest-mimetype.bdoc TestCaseID: Bdoc-ValidationFail-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc SignatureValue does not correspond to the SignedInfo block Expected Result: The document should fail the validation File: REF-19_bdoc21-no-sig-asn1-pref.bdoc TestCaseID: Bdoc-ValidationFail-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc Baseline-BES file Expected Result: The document should fail the validation in DD4J File: signWithIdCard_d4j_1.0.4_BES.asice TestCaseID: Bdoc-ValidationFail-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc Baseline-EPES file Expected Result: The document should fail the validation File: TM-04_kehtivuskinnituset.4.asice TestCaseID: Bdoc-ValidationFail-19 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc signers certificate is not trusted Expected Result: The document should fail the validation File: SS-4_teadmataCA.4.asice TestCaseID: Bdoc-ValidationFail-20 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc OCSP response status is revoked Expected Result: The document should fail the validation File: TM-15_revoked.4.asice TestCaseID: Bdoc-ValidationFail-21 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc OCSP response status is unknown Expected Result: The document should fail the validation File: TM-16_unknown.4.asice TestCaseID: Bdoc-ValidationFail-22 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc signed data file has been removed from the container Expected Result: The document should fail the validation in DD4J File: KS-21_fileeemaldatud.4.asice TestCaseID: Bdoc-ValidationFail-23 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc no files in container Expected Result: The document should fail the validation File: KS-02_tyhi.bdoc TestCaseID: Bdoc-ValidationFail-24 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc wrong nonce Expected Result: The document should fail the validation File: TM-10_noncevale.4.asice TestCaseID: Bdoc-ValidationFail-25 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc signed data file(s) don't match the hash values in reference elements Expected Result: The document should fail the validation File: REF-14_filesisumuudetud.4.bdoc TestCaseID: Bdoc-ValidationFail-26 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice Baseline-T signature Expected Result: The document should fail the validation in DD4J File: TS-06_23634_TS_missing_OCSP.asice TestCaseID: Bdoc-ValidationFail-27 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc OCSP response is not the one expected Expected Result: The document should fail the validation File: 23608-bdoc21-TM-ocsp-bad-nonce.bdoc TestCaseID: Bdoc-ValidationFail-28 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc certificate's validity time is not in the period of OCSP producedAt time Expected Result: The document should fail the validation File: 23154_test1-old-sig-sigat-OK-prodat-NOK-1.bdoc TestCaseID: Bdoc-ValidationFail-29 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc BDOC-1.0 version container Expected Result: The document should fail the validation File: BDOC-1.0.bdoc","title":"BdocValidationFailIT.java"},{"location":"siva2/appendix/test_cases/#bdocvalidationpassitjava","text":"Open file TestCaseID: Bdoc-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Bdoc with single valid signature Expected Result: The document should pass the validation File: Valid_ID_sig.bdoc TestCaseID: Bdoc-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Bdoc TM with multiple valid signatures Expected Result: The document should pass the validation File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Bdoc-ValidationPass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Bdoc with warning on signature Expected Result: The document should pass the validation but warning should be returned File: bdoc_weak_warning_sha1.bdoc **Attention! This test is disabled: New file needed. This one has different mimetype value in manifest.xml and signature.xml TestCaseID: Bdoc-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice One LT signature with certificates from different countries Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-30.asice TestCaseID: Bdoc-ValidationPass-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Bdoc signed with Mobile-ID, ECC-SHA256 signature with prime256v1 key Expected Result: The document should pass the validation File: 24050_short_ecdsa_correct_file_mimetype.bdoc TestCaseID: Bdoc-ValidationPass-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice Baseline-LT file Expected Result: The document should pass the validation in DD4J File: EE_SER-AEX-B-LT-V-49.asice TestCaseID: Bdoc-ValidationPass-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice QES file Expected Result: The document should pass the validation File: ValidLiveSignature.asice TestCaseID: Bdoc-ValidationPass-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice Baseline-LTA file Expected Result: The document should pass the validation File: EE_SER-AEX-B-LTA-V-24.asice TestCaseID: Bdoc-ValidationPass-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice file signed with Mobile-ID, ECC-SHA256 signature with prime256v1 key Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-2.asice TestCaseID: Bdoc-ValidationPass-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice file with ESTEID-SK 2015 certificate chain Expected Result: The document should pass the validation File: IB-4270_TS_ESTEID-SK 2015 SK OCSP RESPONDER 2011.asice TestCaseID: Bdoc-ValidationPass-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Asice file with KLASS3-SK 2010 (EECCRCA) certificate chain Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-28.asice TestCaseID: Bdoc-ValidationPass-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Bdoc with Baseline-LT_TM and QES signature level and ESTEID-SK 2011 certificate chain with valid signature Expected Result: The document should pass the validation File: BDOC2.1.bdoc TestCaseID: Bdoc-ValidationPass-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Bdoc TS with multiple valid signatures Expected Result: The document should pass the validation File: Test_id_aa.asice TestCaseID: Bdoc-ValidationPass-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Bdoc-TM with special characters in data file Expected Result: The document should pass the validation File: \u0160u\u017elikud s\u00f5id \u00fche \u00f5una \u00e4ra.bdoc TestCaseID: Bdoc-ValidationPass-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: *.sce file with TimeMark Expected Result: The document should pass the validation File: BDOC2.1_content_as_sce.sce TestCaseID: Bdoc-ValidationPass-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: *.sce file with TimeStamp Expected Result: The document should pass the validation File: ASICE_TS_LTA_content_as_sce.sce TestCaseID: Bdoc-ValidationPass-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc-TS with special characters in data file Expected Result: The document should pass the validation with correct signature scope File: Nonconventionalcharacters.asice TestCaseID: Bdoc-ValidationPass-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Asice unsigned data files in the container Expected Result: The document should pass the validation with warning File: EE_SER-AEX-B-LT-V-34.asice TestCaseID: Bdoc-ValidationPass-19 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: ECC signature vith BDOC TM Expected Result: The document should pass the validation File: testECCDemo.bdoc TestCaseID: Bdoc-ValidationPass-20 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: ECC signature vith BDOC TS Expected Result: The document should pass the validation File: Mac_AS0099904_EsimeneAmetlikSKTestElliptilistega_TS.asice","title":"BdocValidationPassIT.java"},{"location":"siva2/appendix/test_cases/#ddocgetdatafilesitjava","text":"Open file TestCaseID: Ddoc-Get-Data-Files-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/use_cases/#ddoc-data-file-extraction-process Title: Valid DDOC with data file used Expected Result: The data file should be returned File: 18912.ddoc TestCaseID: Ddoc-Get-Data-Files-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/use_cases/#ddoc-data-file-extraction-process Title: Invalid DDOC with data file used Expected Result: The data file should be returned File: OCSP nonce vale.ddoc TestCaseID: Ddoc-Get-Data-Files-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/use_cases/#ddoc-data-file-extraction-process Title:DDOC with xml v1.1 is used Expected Result: The data file is returned File: DIGIDOC-XML1.1.ddoc TestCaseID: Ddoc-Get-Data-Files-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/use_cases/#ddoc-data-file-extraction-process Title: DDOC with xml v1.2 is used Expected Result: The data file is returned File: DIGIDOC-XML1.2.ddoc TestCaseID: Ddoc-Get-Data-Files-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/use_cases/#ddoc-data-file-extraction-process Title: DDOC with xml v1.3 is used Expected Result: The data file is returned File: DIGIDOC-XML1.3.ddoc TestCaseID: Ddoc-Get-Data-Files-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/use_cases/#ddoc-data-file-extraction-process Title: Hashcoded DDOC is used Expected Result: Null is returned File: DIGIDOC-XML1.3_hashcode.ddoc **Attention! This test is disabled: Run this test manually as it fails in Travis TestCaseID: Ddoc-Get-Data-Files-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/use_cases/#ddoc-data-file-extraction-process Title: DDOC with 12 different files of different types is used Expected Result: Data file returned for each file correctly File: igasugust1.3.ddoc TestCaseID: Ddoc-Get-Data-Files-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/use_cases/#ddoc-data-file-extraction-process Title: BDOC with data file used Expected Result: The error message should be returned File: BDOC-TS.bdoc TestCaseID: Ddoc-Get-Data-Files-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/use_cases/#ddoc-data-file-extraction-process Title: PDF file used Expected Result: The error message should be returned File: hellopades-lt-b.pdf","title":"DdocGetDataFilesIT.java"},{"location":"siva2/appendix/test_cases/#ddocvalidationfailitjava","text":"Open file TestCaseID: Ddoc-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc with single invalid signature Expected Result: The document should fail the validation File: AndmefailiAtribuudidMuudetud.ddoc TestCaseID: Ddoc-ValidationFail-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc with multiple invalid signatures Expected Result: The document should fail the validation File: multipleInvalidSignatures.ddoc TestCaseID: Ddoc-ValidationFail-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc with multiple signatures both valid and invalid Expected Result: The document should fail the validation File: multipleValidAndInvalidSignatures.ddoc TestCaseID: Ddoc-ValidationFail-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc with no signatures Expected Result: The document should fail the validation File: DdocContainerNoSignature.bdoc TestCaseID: Ddoc-ValidationFail-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc signature value has been changed (SignatureValue does not correspond to the SignedInfo block) Expected Result: The document should fail the validation File: test-inv-sig-inf.ddoc TestCaseID: Ddoc-ValidationFail-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc Data file(s) don't match the hash values in Reference elements Expected Result: The document should fail the validation File: AndmefailiAtribuudidMuudetud.ddoc TestCaseID: Ddoc-ValidationFail-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc Baseline-BES file, no OCSP response Expected Result: The document should fail the validation File: ilma_kehtivuskinnituseta.ddoc TestCaseID: Ddoc-ValidationFail-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc no non-repudiation key usage value in the certificate Expected Result: The document should fail the validation File: test-non-repu1.ddoc TestCaseID: Ddoc-ValidationFail-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc Signer's certificate is not trusted Expected Result: The document should fail the validation File: Belgia_kandeavaldus_LIV.ddoc TestCaseID: Ddoc-ValidationFail-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc OCSP certificate is not trusted Expected Result: The document should fail the validation File: Tundmatu_OCSP_responder.ddoc TestCaseID: Ddoc-ValidationFail-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc has unsigned data files in the container Expected Result: The document should fail the validation File: lisatud_andmefail.ddoc TestCaseID: Ddoc-ValidationFail-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc signed data file has been removed from the container Expected Result: The document should fail the validation File: faileemald1.ddoc TestCaseID: Ddoc-ValidationFail-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc wrong nonce Expected Result: The document should fail the validation File: OCSP nonce vale.ddoc TestCaseID: Ddoc-ValidationFail-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/ Title: Ddoc with XML Entity expansion attack Expected Result: The document should fail the validation with error File: xml_expansion.ddoc TestCaseID: Ddoc-ValidationFail-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/ Title: Ddoc with XML server side request forgery attack Expected Result: The document should fail the validation with error File: xml_entity.ddoc TestCaseID: Ddoc-ValidationFail-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc no files in container Expected Result: The document should fail the validation File: KS-02_tyhi.ddoc TestCaseID: Ddoc-ValidationFail-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc XML namespace error in container Expected Result: The document should pass with warning File: ns6t3cp7.ddoc","title":"DdocValidationFailIT.java"},{"location":"siva2/appendix/test_cases/#ddocvalidationpassitjava","text":"Open file TestCaseID: Ddoc-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Ddoc v1.0 with valid signatures Expected Result: The document should pass the validation File: SK-XML1.0.ddoc **Attention! This test is disabled: https://github.com/open-eid/SiVa/issues/11 TestCaseID: Ddoc-ValidationPass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Ddoc v1.1 with valid signature Expected Result: The document should pass the validation File: DIGIDOC-XML1.1.ddoc TestCaseID: Ddoc-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Ddoc v1.2 with valid signature Expected Result: The document should pass the validation File: DIGIDOC-XML1.2.ddoc TestCaseID: Ddoc-ValidationPass-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Ddoc v1.3 with valid signature with ESTEID-SK 2011 certificate chain Expected Result: The document should pass the validation File: DIGIDOC-XML1.3.ddoc TestCaseID: Ddoc-ValidationPass-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Ddoc v1.3 with valid signature, signed data file name has special characters and ESTEID-SK certificate chain Expected Result: The document should pass the validation File: susisevad1_3.ddoc TestCaseID: Ddoc-ValidationPass-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Ddoc v1.3 KLASS3-SK certificate chain with valid signature Expected Result: The document should pass the validation File: KLASS3-SK _ KLASS3-SK OCSP RESPONDER uus.ddoc TestCaseID: Ddoc-ValidationPass-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Ddoc v1.3 KLASS3-SK 2010 certificate chain with valid signature Expected Result: The document should pass the validation File: KLASS3-SK 2010 _ KLASS3-SK 2010 OCSP RESPONDER.ddoc TestCaseID: Ddoc-ValidationPass-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Ddoc v1.1 ESTEID-SK 2007 certificate chain with valid signature Expected Result: The document should pass the validation File: vaikesed1.1.ddoc TestCaseID: Ddoc-ValidationPass-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Ddoc v1.1 ESTEID-SK 2007 certificate chain with valid signature Expected Result: The document should pass the validation File: IB-4270_ESTEID-SK 2015 SK OCSP RESPONDER 2011.ddoc TestCaseID: Ddoc-ValidationPass-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Ddoc v1.1 ESTEID-SK certificate chain with valid signature Expected Result: The document should pass the validation File: EID-SK _ EID-SK OCSP RESPONDER.ddoc TestCaseID: Ddoc-ValidationPass-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Ddoc v1.1 ESTEID-SK 2007 and OCSP 2010 certificate chain with valid signature Expected Result: The document should pass the validation File: EID-SK 2007 _ EID-SK 2007 OCSP RESPONDER 2010.ddoc TestCaseID: Ddoc-ValidationPass-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Ddoc v1.3 ESTEID-SK 2007 and OCSP 2007 certificate chain with valid signature Expected Result: The document should pass the validation File: EID-SK 2007 _ EID-SK 2007 OCSP RESPONDER.ddoc TestCaseID: Ddoc-ValidationPass-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Ddoc v1.3 ESTEID-SK 2011 and OCSP 2011 certificate chain with valid signature Expected Result: The document should pass the validation File: EID-SK 2011 _ SK OCSP RESPONDER 2011.ddoc TestCaseID: Ddoc-ValidationPass-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Ddoc with warning should pass Expected Result: Document passes the validation File: 18912.ddoc TestCaseID: DdocHashcode-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Validation of DDOC Hashcode v1.0 Expected Result: Document passes the validation File: SK-XML1.0_hashcode.ddoc **Attention! This test is disabled: https://github.com/open-eid/SiVa/issues/11 TestCaseID: DdocHashcode-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Validation of DDOC Hashcode v1.1 Expected Result: Document passes the validation File: DIGIDOC-XML1.1_hashcode.ddoc **Attention! This test is disabled: This tests fails in Travis. Has been executed locally TestCaseID: DdocHashcode-ValidationPass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Validation of DDOC Hashcode v1.2 Expected Result: Document passes the validation File: DIGIDOC-XML1.2_hashcode.ddoc **Attention! This test is disabled: This tests fails in Travis. Has been executed locally TestCaseID: DdocHashcode-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Validation of DDOC Hashcode v1.3 Expected Result: Document passes the validation File: DIGIDOC-XML1.3_hashcode.ddoc **Attention! This test is disabled: This tests fails in Travis. Has been executed locally","title":"DdocValidationPassIT.java"},{"location":"siva2/appendix/test_cases/#documentformatitjava","text":"Open file TestCaseID: DocumentFormat-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Validation of pdf document acceptance Expected Result: Pdf is accepted and correct signature validation is given File: hellopades-pades-lt-sha256-sign.pdf TestCaseID: DocumentFormat-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Validation of bdoc document acceptance Expected Result: Bdoc is accepted and correct signature validation is given File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: DocumentFormat-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Validation of asice document acceptance Expected Result: asice is accepted and correct signature validation is given File: Vbdoc21-TS.asice TestCaseID: DocumentFormat-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Validation of asics document acceptance Expected Result: asics is accepted and correct signature validation is given File: ValidDDOCinsideAsics.asics TestCaseID: DocumentFormat-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Validation of xades acceptance Expected Result: xades is accepted and correct signature validation is given File: signatures0.xml TestCaseID: DocumentFormat-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Validation of cades acceptance Expected Result: cades is accepted and correct signature validation is given File: **Attention! This test is disabled: Test file needed","title":"DocumentFormatIT.java"},{"location":"siva2/appendix/test_cases/#documentvalidationitjava","text":"Open file TestCaseID: Document-Validation-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title:Bdoc with two signatures and one unsigned document. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2s_1f_unsigned.bdoc TestCaseID: Document-Validation-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with two signatures and one document signed by only one signature. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2s_1partly_signed.bdoc TestCaseID: Document-Validation-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with two signatures and two documents signed by only one signature. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2s_2partly_signed.bdoc TestCaseID: Document-Validation-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with two signatures, one unsigned and two partly signed documents. Expected Result: The document should fail the validation and warnings should be displayed. File:4f_2s_all_combinations.bdoc TestCaseID: Document-Validation-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with three unsigned documents. Expected Result: The document should pass the validation and warnings should be displayed. File:6f_2s_3unsigned.bdoc TestCaseID: Document-Validation-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with deleted document, named in manifest. Expected Result: The document should fail the validation and warning should be displayed. File:2f_2signed_1f_deleted.bdoc TestCaseID: Document-Validation-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with deleted document, also removed from manifest. Expected Result: The document should fail the validation without warning. File:2f_2signed_1f_totally_removed.bdoc TestCaseID: Document-Validation-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with one unsigned document, named in manifest. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2signed_1unsigned_all_in_manifest.bdoc TestCaseID: Document-Validation-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with one unsigned document, NOT named in manifest. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2signed_1unsigned_2in_manifest.bdoc TestCaseID: Document-Validation-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Bdoc with signed documents. Expected Result: The document should pass the validation without warning. File:2f_all_signed.bdoc **Attention! This test is disabled:","title":"DocumentValidationIT.java"},{"location":"siva2/appendix/test_cases/#largefileitjava","text":"Open file TestCaseID: PDF-LargeFiles-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/overview/#main-features-of-siva-validation-service Title: 9MB PDF files (PAdES Baseline LT). Expected Result: Validation report is returned File: 9MB_PDF.pdf TestCaseID: Bdoc-LargeFiles-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/overview/#main-features-of-siva-validation-service Title: 9MB ASIC-E file Expected Result: Validation report is returned File: 9MB_BDOC-TS.bdoc TestCaseID: Bdoc-LargeFiles-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/overview/#main-features-of-siva-validation-service Title: 9MB BDOC-TM Expected Result: Validation report is returned File: 9MB_BDOC-TM.bdoc TestCaseID: Ddoc-LargeFiles-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/overview/#main-features-of-siva-validation-service Title: 9MB DDOC Expected Result: Validation report is returned File: 9MB_DDOC.ddoc","title":"LargeFileIT.java"},{"location":"siva2/appendix/test_cases/#monitoringitjava","text":"Open file TestCaseID: WebApp-Monitoring-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#service-health-monitoring Title: Health monitor response structure Expected Result: response matches the expected structure of JSON File: not relevant","title":"MonitoringIT.java"},{"location":"siva2/appendix/test_cases/#pdfbaselineprofileitjava","text":"Open file TestCaseID: PDF-BaselineProfile-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: The PDF has PAdES-B profile signature polv3 Expected Result: Document validation should fail as the profile is not supported with any policy File: hellopades-pades-b-sha256-auth.pdf TestCaseID: PDF-BaselineProfile-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: The PDF has PAdES-T profile signature polv3 Expected Result: Document validation should fail with any policy File: pades-baseline-t-live-aj.pdf TestCaseID: PDF-BaselineProfile-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: The PDF has PAdES-LT profile signature polv3 Expected Result: Document validation should pass with any policy File: hellopades-pades-lt-sha256-sign.pdf TestCaseID: PDF-BaselineProfile-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: The PDF has PAdES-LT profile signature polv4 Expected Result: Document validation should pass with any policy File: hellopades-pades-lt-sha256-sign.pdf TestCaseID: PDF-BaselineProfile-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: The PDF has PAdES-LTA profile signature polv3 Expected Result: Document validation should pass with any policy File: pades-baseline-lta-live-aj.pdf TestCaseID: PDF-BaselineProfile-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: The PDF has PAdES-LTA profile signature polv4 Expected Result: Document validation should pass with any policy File: pades-baseline-lta-live-aj.pdf TestCaseID: PDF-BaselineProfile-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: The PDF has PAdES-LT and B profile signature Expected Result: Document validation should fail File: hellopades-lt-b.pdf TestCaseID: PDF-BaselineProfile-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: PDF document message digest attribute value does not match calculate value Expected Result: Document validation should fail File: hellopades-lt1-lt2-wrongDigestValue.pdf TestCaseID: PDF-BaselineProfile-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: PDF file with a serial signature Expected Result: Document signed with multiple signers with serial signatures should pass File: hellopades-lt1-lt2-Serial.pdf","title":"PdfBaselineProfileIT.java"},{"location":"siva2/appendix/test_cases/#pdfsignaturecryptographicalgorithmitjava","text":"Open file TestCaseID: PDF-SigCryptoAlg-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: SHA512 algorithms (PAdES Baseline LT) Expected Result: Document signed with SHA512 algorithm should pass File: hellopades-lt-sha512.pdf TestCaseID: PDF-SigCryptoAlg-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: SHA1 algorithms (PAdES Baseline LT) Expected Result: Document signed with SHA1 algorithm should pass File: hellopades-lt-sha1.pdf TestCaseID: PDF-SigCryptoAlg-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: ECDSA224 algorithms (PAdES Baseline LT) Expected Result: Document signed with ECDSA224 algorithm should pass File: hellopades-lt-sha256-ec224.pdf TestCaseID: PDF-SigCryptoAlg-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: ECDSA256 algorithms (PAdES Baseline LT) Expected Result: Document signed with ECDSA256 algorithm should pass File: hellopades-lt-sha256-ec256.pdf TestCaseID: PDF-SigCryptoAlg-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: RSA1024 algorithms (PAdES Baseline LT) Expected Result: Document signed with RSA1024 algorithm should pass File: hellopades-lt-sha256-rsa1024.pdf TestCaseID: PDF-SigCryptoAlg-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: RSA1023 algorithms (PAdES Baseline LT) Expected Result: Document signed with RSA1023 algorithm should fail File: hellopades-lt-sha256-rsa1023.pdf **Attention! This test is disabled: ug fixed in DSS version 5.1. https://ec.europa.eu/cefdigital/tracker/browse/DSS-1145 TestCaseID: PDF-SigCryptoAlg-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: RSA2047 algorithms (PAdES Baseline LT) Expected Result: Document signed with RSA2047 algorithm should pass File: hellopades-lt-sha256-rsa2047.pdf TestCaseID: PDF-SigCryptoAlg-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: RSA2048 algorithms (PAdES Baseline LT) Expected Result: Document signed with RSA2048 algorithm should pass File: PdfValidSingleSignature","title":"PdfSignatureCryptographicAlgorithmIT.java"},{"location":"siva2/appendix/test_cases/#pdfvalidationfailitjava","text":"Open file TestCaseID: PDF-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: The PDF-file has been signed with expired certificate (PAdES Baseline T) Expected Result: Document signed with certificate that is expired should fail. File: hellopades-lt-rsa1024-sha1-expired.pdf TestCaseID: PDF-ValidationFail-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: The PDF-file has been signed with revoked certificate (PAdES Baseline LT) Expected Result: Document signed with certificate that is revoked should fail. File: pades_lt_revoked.pdf TestCaseID: PDF-ValidationFail-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: The PDF-file has been signed with certificate which has no non repudiation key usage attribute (PAdES Baseline LT) Expected Result: The PDF-file validation should fail with error. File: hellopades-pades-lt-sha256-auth.pdf TestCaseID: PDF-ValidationFail-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: hellopadess been signed with an expired certificate, where signing time is within the original validity Expected Result: Document signed with expired certificate should fail File: hellopades-lt-sha256-rsa2048-expired.pdf **Attention! This test is disabled: Needs new test file TestCaseID: PDF-ValidationFail-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: hellopadess been signed with an expired certificate, where signing time is within the original validity Expected Result: Document signed with expired certificate should fail File: hellopades-lt-sha256-rsa1024-expired2.pdf **Attention! This test is disabled: le needed TestCaseID: PDF-ValidationFail-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: OCSP is taken more than 24h after TS Expected Result: Document signed with expired certificate should fail File: hellopades-lt-sha256-rsa1024-expired2.pdf TestCaseID: PDF-ValidationFail-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: CRL is out of thisUpdate and nextUpdate range Expected Result: Validation should fail File: pades-lt-CRL-taken-days-later.pdf","title":"PdfValidationFailIT.java"},{"location":"siva2/appendix/test_cases/#pdfvalidationpassitjava","text":"Open file TestCaseID: PDF-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: The PDF-file has been signed with certificate that is expired after signing (PAdES Baseline LT) Expected Result: Document signed with certificate that expired after signing should pass. File: hellopades-lt-sha256-rsa1024-not-expired.pdf TestCaseID: PDF-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: The PDF-file has been signed with certificate that will expire in 7 days after signing (PAdES Baseline LT) Expected Result: Document signed with certificate that expired after signing should pass. File: hellopades-lt-sha256-rsa2048-7d.pdf TestCaseID: PDF-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Pdf with single valid signature Expected Result: Document should pass. File: PdfValidSingleSignature.pdf TestCaseID: PDF-ValidationPass-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: The PDF-file has OCSP more than 15 minutes after TS but earlier than 24h Expected Result: Warning should be returned but validation should pass File: hellopades-lt-sha256-ocsp-15min1s.pdf TestCaseID: PDF-ValidationPass-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: The PDF-file has OCSP almost 24h before TS Expected Result: Warning should be returned but validation should pass File: hellopades-lt-sha256-rsa2048-ocsp-before-ts.pdf","title":"PdfValidationPassIT.java"},{"location":"siva2/appendix/test_cases/#reportsignatureitjava","text":"Open file TestCaseID: Detailed-Report-Signature-1 TestType: Auto Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Simple report signature should not be in response Expected Result: Simple report response should not contain signature File: hellopades-pades-lt-sha256-sign.pdf TestCaseID: Detailed-Report-Signature-2 TestType: Auto Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Simple report signature should be in response Expected Result: Simple report response should contain signature File: hellopades-pades-lt-sha256-sign.pdf TestCaseID: Detailed-Report-Signature-3 TestType: Auto Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature Expected Result: Signed report is successfully validated File: hellopades-lt-sha256-rsa2048.pdf TestCaseID: Detailed-Report-Signature-4 TestType: Auto Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: In simple report reportSignatureEnabled parameter value true Expected Result: File hash in hex in report File: hellopades-lt-sha256-rsa2048.pdf TestCaseID: Detailed-Report-Signature-5 TestType: Auto Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: In simple report reportSignatureEnabled parameter value false Expected Result: File hash in hex not in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: est should be ran manually after configuring the report signature feature","title":"ReportSignatureIT.java"},{"location":"siva2/appendix/test_cases/#signaturepolicyitjava","text":"Open file TestCaseID: POLv4-Signature-Policy-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The PDF-file is Ades level Expected Result: Signatures are invalid according to policy File: soft-cert-signature.pdf TestCaseID: POLv4-Signature-Policy-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is Ades level Expected Result: Signatures are invalid according to policy File: allkiri_ades.asice TestCaseID: POLv4-Signature-Policy-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is Ades signature Expected Result: Signatures are invalid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv4-Signature-Policy-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The asice is Ades signature Expected Result: Signatures are invalid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv4-Signature-Policy-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is Ades seal Expected Result: Signatures are invalid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv4-Signature-Policy-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The asice is ades seal Expected Result: Signatures are valid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv4-Signature-Policy-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level signature, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, warning is returned about signature level File: testAdesQC.asice TestCaseID: POLv4-Signature-Policy-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level signature, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, warning is returned about signature level File: testAdesQC.asice TestCaseID: POLv4-Signature-Policy-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level seal, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, no warning about the signature level File: IB-4828_tempel_not_qscd_TS.asice TestCaseID: POLv4-Signature-Policy-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level seal, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, no warning about the signature level File: IB-4828_tempel_not_qscd_TM.bdoc TestCaseID: POLv4-Signature-Policy-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level, but do not have SSCD/QSCD compliance and type identifier Expected Result: Signatures are valid according to policy, no warning about the signature level File: **Attention! This test is disabled: file needed TestCaseID: POLv4-Signature-Policy-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level, but do not have SSCD/QSCD compliance and type identifier Expected Result: Signatures are valid according to policy, no warning about the signature level File: **Attention! This test is disabled: file needed TestCaseID: POLv4-Signature-Policy-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level signature Expected Result: Signatures are valid according to policy File: Valid_ID_sig.bdoc TestCaseID: POLv4-Signature-Policy-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level signature Expected Result: Signatures are valid according to policy File: ValidLiveSignature.asice TestCaseID: POLv4-Signature-Policy-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level seal Expected Result: Signatures are valid according to policy File: IB-4828_tempel_qscd_TM.bdoc TestCaseID: POLv4-Signature-Policy-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The asice is QES level seal Expected Result: Signatures are valid according to policy File: IB-4828_tempel_qscd_TS.asice TestCaseID: POLv4-Signature-Policy-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level Expected Result: Signatures are valid according to policy File: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc TestCaseID: POLv4-Signature-Policy-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The asice is QES level Expected Result: Signatures are valid according to policy File: EE_SER-AEX-B-LT-V-28.asice TestCaseID: POLv3-Signature-Policy-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-3-polv3 Title: The PDF-file is Ades level Expected Result: Signatures are not valid according to policy File: soft-cert-signature.pdf TestCaseID: POLv3-Signature-Policy-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-3-polv3 Title: The bdoc is Ades level Expected Result: Signatures are valid according to policy File: allkiri_ades.asice TestCaseID: POLv3-Signature-Policy-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-3-polv3 Title: The bdoc is ADES level signature Expected Result: Signatures are valid according to policy File: allkiri_ades.asice **Attention! This test is disabled: test file needed TestCaseID: POLv3-Signature-Policy-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-3-polv3 Title: The asice is Ades level signature Expected Result: Signatures are valid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv3-Signature-Policy-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-3-polv3 Title: The bdoc is Ades seal Expected Result: Signatures are valid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv3-Signature-Policy-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-3-polv3 Title: The asice is Ades level seal Expected Result: Signatures are valid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv3-Signature-Policy-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level signature, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, warning is returned about signature level File: testAdesQC.asice TestCaseID: POLv3-Signature-Policy-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level signature, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, warning is returned about signature level File: testAdesQC.asice TestCaseID: POLv3-Signature-Policy-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level seal, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, no warning about the signature level File: IB-4828_tempel_not_qscd_TS.asice TestCaseID: POLv3-Signature-Policy-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level seal, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, no warning about the signature level File: IB-4828_tempel_not_qscd_TM.bdoc TestCaseID: POLv3-Signature-Policy-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level, but do not have SSCD/QSCD compliance and type identifier Expected Result: Signatures are valid according to policy, no warning about the signature level File: **Attention! This test is disabled: file needed TestCaseID: POLv3-Signature-Policy-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level, but do not have SSCD/QSCD compliance and type identifier Expected Result: Signatures are valid according to policy, no warning about the signature level File: **Attention! This test is disabled: file needed TestCaseID: POLv3-Signature-Policy-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level signature Expected Result: Signatures are valid according to policy File: Valid_ID_sig.bdoc TestCaseID: POLv3-Signature-Policy-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level signature Expected Result: Signatures are valid according to policy File: ValidLiveSignature.asice TestCaseID: POLv3-Signature-Policy-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level seal Expected Result: Signatures are valid according to policy File: IB-4828_tempel_qscd_TM.bdoc TestCaseID: POLv3-Signature-Policy-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The asice is QES level seal Expected Result: Signatures are valid according to policy File: IB-4828_tempel_qscd_TS.asice TestCaseID: POLv3-Signature-Policy-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level Expected Result: Signatures are valid according to policy File: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc TestCaseID: POLv3-Signature-Policy-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The asice is QES level Expected Result: Signatures are valid according to policy File: EE_SER-AEX-B-LT-V-28.asice TestCaseID: Revocation-Signature-Policy-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The PDF-file is missing an OCSP or CRL Expected Result: Signatures are invalid according to policy File: PadesProfileT.pdf TestCaseID: Revocation-Signature-Policy-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The PDF-file with included CRL Expected Result: Signatures are valid according to policy File: PadesProfileLtWithCrl.pdf","title":"SignaturePolicyIT.java"},{"location":"siva2/appendix/test_cases/#xadeshashcodevalidationfailitjava","text":"Open file TestCaseID: Xades-Hashcode-Validation-Fail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: Data file hash algorithm do not match signature hash algorithm Expected Result: Validation fails File: Valid_XAdES_LT_TM.xml TestCaseID: Xades-Hashcode-Validation-Fail-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Hashes do not match Expected Result: Validation fails File: Valid_XAdES_LT_TM.xml TestCaseID: Xades-Hashcode-Validation-Fail-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Wrong data file name is used Expected Result: Validation report is returned File: Valid_XAdES_LT_TM.xml TestCaseID: Xades-Hashcode-Validation-Fail-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Invalid signature in XAdES Expected Result: Validation report is returned File: Valid_XAdES_LT_TM.xml","title":"XadesHashcodeValidationFailIT.java"},{"location":"siva2/appendix/test_cases/#xadeshashcodevalidationpassitjava","text":"Open file TestCaseID: Xades-Hashcode-Validation-Pass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: XAdES extracted from ASICE Expected Result: The document should pass the validation File: Valid_XAdES_LT_TS.xml TestCaseID: Xades-Hashcode-Validation-Pass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: XAdES extracted from BDOC Expected Result: The document should pass the validation File: Valid_XAdES_LT_TM.xml TestCaseID: Xades-Hashcode-Validation-Pass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#siva-signature-validation-policy-version-2-polv4 Title: XAdES extracted from BDOC Expected Result: The document should pass the validation File: Valid_XADES_LT_TS_multiple_datafiles.xml","title":"XadesHashcodeValidationPassIT.java"},{"location":"siva2/appendix/test_cases/#xroadvalidationfailitjava","text":"Open file TestCaseID: Xroad-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Simple xroad document with container fault Expected Result: Document should fail validation File: invalid-digest.asice","title":"XRoadValidationFailIT.java"},{"location":"siva2/appendix/test_cases/#xroadvalidationpassitjava","text":"Open file TestCaseID: Xroad-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Simple xroad document Expected Result: Document should pass File: xroad-simple.asice TestCaseID: Xroad-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Batchsignature xroad document Expected Result: Document should pass File: xroad-batchsignature.asice TestCaseID: Xroad-ValidationPass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4 Title: Attachment xroad document Expected Result: Document should pass File: xroad-attachment.asice","title":"XRoadValidationPassIT.java"},{"location":"siva2/appendix/test_cases/#detailedreportvalidationmanualitjava","text":"Open file TestCaseID: Detailed-Report-Validation-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: ValidationConclusion element Expected Result: Detailed report includes validationConclusion element File: ValidLiveSignature.asice **Attention! This test is disabled: TestCaseID: Detailed-Report-Validation-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: QmatrixBlock element Expected Result: Detailed report includes QmatrixBlock element and its values File: pades-baseline-lta-live-aj.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Validation-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Signatures element Expected Result: Detailed report includes signatures element and its sub-elements and its values File: hellopades-lt-sha256-ec256.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Validation-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: basicBuildingBlocks element Expected Result: Detailed report includes basicBuildingBlocks element and its sub-elements and its values File: pades-baseline-lta-live-aj.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Validation-5 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: BasicBuildingBlocks element Expected Result: Detailed report includes basicBuildingBlocks element and its sub-elements and its values File: pades-baseline-lta-live-aj.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Validation-6 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: BasicBuildingBlocks element Expected Result: Detailed report includes basicBuildingBlocks element and its sub-elements and its values File: pades-baseline-lta-live-aj.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Validation-7 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Wrong signature value Expected Result: Detailed report includes wrong signature value File: TS-02_23634_TS_wrong_SignatureValue.asice **Attention! This test is disabled: TestCaseID: Detailed-Report-Validation-8 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Wrong data file in manifest Expected Result: File: WrongDataFileInManifestAsics.asics **Attention! This test is disabled: TestCaseID: Detailed-Report-Validation-9 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report file hash if ReportSignatureEnabled value true Expected Result: fileHashInHex calculated File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Validation-10 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report file hash if ReportSignatureEnabled value false Expected Result: fileHashInHex no calculated File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled:","title":"DetailedReportValidationManualIT.java"},{"location":"siva2/appendix/test_cases/#reportsignaturemanualltjava","text":"Open file TestCaseID: Detailed-Report-Signatures-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_LTA signed with RSA key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Signatures-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_LT signed with RSA key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Signatures-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_T signed with RSA key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Signatures-5 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_B signed with RSA key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Signatures-6 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_LTA and signed with ECC key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Signatures-7 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_LT and signed with ECC key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Signatures-8 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_T and signed with ECC key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Signatures-9 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_B and signed with ECC key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Signatures-10 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature when configuration parameter OcspUrl empty Expected Result: No signature File: hellopades-lt-sha256-rsa2048.pdf TestCaseID: Detailed-Report-Signatures-11 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature when configuration parameter TspUrl empty Expected Result: No signature File: hellopades-lt-sha256-rsa2048.pdf TestCaseID: Detailed-Report-Signatures-12 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature when configuration parameter Pkcs11 wrong value Expected Result: Error message File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: TestCaseID: Detailed-Report-Signatures-13 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature when configuration parameter SignatureLevel empty Expected Result: No Signature File: hellopades-lt-sha256-rsa2048.pdf TestCaseID: Detailed-Report-Signatures-14 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Validate detailed report signature when using pks11 to sign Expected Result: Signature exists File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled:","title":"ReportSignatureManuallT.java"},{"location":"siva2/appendix/test_cases/#statisticstogamanualitjava","text":"Note All tests in this class expect manual configuration of Google Analytics before executing the tests. The test are made to prepare test data and ease the test execution, all results must be checked manually in GA! Check all the fields presence and correctness even though tests prepare data for specific cases. TestCaseID: Xauth-Statistics-GA-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf valid container is validated with x-authenticated-user set in header Expected Result: x-authenticated-user value is shown in GA File: pades_lt_two_valid_sig.pdf TestCaseID: Xauth-Statistics-GA-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf valid container is validated with x-authenticated-user set in header Expected Result: x-authenticated-user value is shown as N/A in GA File: pades_lt_two_valid_sig.pdf TestCaseID: Xauth-Statistics-GA-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf valid container is validated with x-authenticated-user set in header Expected Result: x-authenticated-user value is shown as N/A in GA File: pades_lt_two_valid_sig.pdf TestCaseID: Bdoc-Statistics-GA-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Bdoc with certificates from different countries. Expected Result: LT, EE and LV country codes are present in GA, Signature container type is ASIC-E TM File: Baltic MoU digital signing_EST_LT_LV.bdoc TestCaseID: Bdoc-Statistics-GA-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Asice-E TS is validated Expected Result: GA shows Signature container type as ASIC-E TS File: BDOC-TS.bdoc TestCaseID: Xroad-Statistics-GA-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Xroad valid container is validated Expected Result: Country code XX is sent to GA (GA shows ZZ as the XX is unknown code), Signature container type is ASiC-E (BatchSignature) File: xroad-batchsignature.asice TestCaseID: Ddoc-Statistics-GA-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Ddoc not supported file is inserted Expected Result: Not shown in GA statistics as the container is not validated File: xroad-simple.asice TestCaseID: Ddoc-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Ddoc invalid container is validated Expected Result: GA shows Signature container type as XAdES, TOTAL-FAILED indication File: ilma_kehtivuskinnituseta.ddoc TestCaseID: Xauth-Statistics-GA-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf valid container is validated with x-authenticated-user set in header Expected Result: x-authenticated-user value is shown in GA File: pades_lt_two_valid_sig.pdf","title":"StatisticsToGAManualIT.java"},{"location":"siva2/appendix/test_cases/#statisticstologsmanualitjava","text":"Note All tests in this class expect manual verification of responses in log! The tests are made to prepare test data and ease the test execution. TestCaseID: Bdoc-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Bdoc valid container is validated Expected Result: Correct data is shown in the log with correct structure File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Bdoc-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Bdoc invalid container is validated Expected Result: Correct data is shown in the log with correct structure File: SS-4_teadmataCA.4.asice TestCaseID: Bdoc-Statistics-Log-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Bdoc not supported file is inserted Expected Result: No message in statistics as the container is not validated File: xroad-simple.asice TestCaseID: Bdoc-Statistics-Log-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Bdoc with certificates from different countries. Expected Result: Correct data is shown in the log with correct structure File: Baltic MoU digital signing_EST_LT_LV.bdoc TestCaseID: Ddoc-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Ddoc valid container is validated Expected Result: Correct data is shown in the log with correct structure File: igasugust1.3.ddoc TestCaseID: Ddoc-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Ddoc invalid container is validated Expected Result: Correct data is shown in the log with correct structure File: ilma_kehtivuskinnituseta.ddoc TestCaseID: Ddoc-Statistics-Log-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Ddoc not supported file is inserted Expected Result: No message in statistics as the container is not validated File: xroad-simple.asice TestCaseID: Ddoc-Statistics-Log-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Ddoc with certificates from different countries. Expected Result: Correct data is shown in the log with correct structure File: Belgia_kandeavaldus_LIV.ddoc **Attention! This test is disabled: 2-126\") TestCaseID: Pdf-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf valid container is validated Expected Result: Correct data is shown in the log with correct structure File: pades_lt_two_valid_sig.pdf TestCaseID: Pdf-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf invalid container is validated Expected Result: Correct data is shown in the log with correct structure File: hellopades-lt1-lt2-wrongDigestValue.pdf TestCaseID: Pdf-Statistics-Log-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Pdf with certificates from non Estonian countries. Expected Result: Correct data is shown in the log with correct structure File: Regulatione-signedbyco-legislators.pdf TestCaseID: Xroad-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Xroad valid container is validated Expected Result: Correct data is shown in the log with correct structure File: xroad-batchsignature.asice TestCaseID: Xroad-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Xroad invalid container is validated Expected Result: Correct data is shown in the log with correct structure File: invalid-digest.asice TestCaseID: Xroad-Statistics-Log-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: Xroad not supported file is inserted Expected Result: No message in statistics as the container is not validated File: BDOC-TS.bdoc TestCaseID: Asics-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: ASiCs valid container is validated Expected Result: Correct data is shown in the log with correct structure File: ValidBDOCinsideAsics.asics TestCaseID: Asics-Statistics-Log-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/pdf-files/SiVa_statistics.pdf Title: asics invalid container is validated Expected Result: No message in statistics as the container is not validated File: TwoDataFilesAsics.asics","title":"StatisticsToLogsManualIT.java"},{"location":"siva2/appendix/test_cases/#getdatafilerequestitjava","text":"Open file TestCaseID: Get-Data-Files-Request-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Input empty values Expected Result: Errors are returned stating the missing values File: not relevant TestCaseID: Get-Data-Files-Request-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Totally empty request body is sent Expected Result: Errors are given File: not relevant TestCaseID: Get-Data-Files-Request-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Order of elements is changed in request Expected Result: Order of elements is ignored, no error messages in response File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Additional elements are added Expected Result: Added elements ignored, no error messages and additional elements in response File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Mandatory element 'documentType' is duplicated, duplicated element with bdoc value Expected Result: Error message is returned File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Mandatory element 'document' is deleted Expected Result: Errors returned stating the missing element File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Low case for document type is used Expected Result: Data file is returned, no error messages File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Document Type is changed in request to BDOC, actual is DDOC Expected Result: Error is returned File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Document Type is changed in request to PDF, actual is DDOC Expected Result: Error is returned File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Document Type is changed in request to unsupported format (JPG), actual is DDOC Expected Result: Error is returned File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Document Type is changed in request to XROAD format, actual is DDOC Expected Result: Error is returned File: susisevad1_3.ddoc TestCaseID: Get-Data-Files-Request-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Document Type is changed in request to DDOC format, actual is BDOC Expected Result: Error is returned File: BDOC-TS.bdoc TestCaseID: Get-Data-Files-Request-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Document Type is changed in request to DDOC format, actual is PDF Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Get-Data-Files-Request-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: For Unsupported format Document Type is changed in request to DDOC format, actual is PNG Expected Result: Error is returned File: Picture.png","title":"GetDataFileRequestIT.java"},{"location":"siva2/appendix/test_cases/#hashcodevalidationrequestitjava","text":"Open file TestCaseID: Get-Hascode-Validation-Request-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Input correct values for simple report Expected Result: Simple report is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Input correct values for detailed report Expected Result: Detailed report is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Input missing signature file Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Input missing signature file Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Input incorrect signature file Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Input file without signature Expected Result: Validation report is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Not correct file type Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Input missing filename Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Input empty filename Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Input whitespace filename Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Input too long filename Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Input invalid format filename Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Input wrong file type in filename Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Report type missing Expected Result: Default is used File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Report type case sensitivity Expected Result: Report type is case insensitive File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Report type is invalid Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Signature policy missing Expected Result: Default is used File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Signature policy is invalid Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-19 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Incorrect signature policy format Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-20 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Signature policy is empty Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-21 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Signature policy too long Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-22 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Data file missing Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-23 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Empty data files list Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-24 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Data file filename missing Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-25 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Data file filename empty Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-26 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Data file filename too long Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-27 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Data file filename invalid format Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-28 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Data file invalid hash algorithm Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-29 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Data file hash algorithm case sensitivity Expected Result: Validation report is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-30 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Data file hash missing Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-31 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Data file hash empty Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-32 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Data file hash wrong format Expected Result: Error is returned File: hashAsiceXades.xml TestCaseID: Hascode-Validation-Request-33 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface-for-hashcode Title: Excess data files are ignored Expected Result: Validation report is returned File: hashAsiceXades.xml","title":"HashcodeValidationRequestIT.java"},{"location":"siva2/appendix/test_cases/#validationreportvalueverificationitjava","text":"Open file TestCaseID: Bdoc-ValidationReportVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface#validation-request-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT_TM, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: Valid_ID_sig.bdoc TestCaseID: Bdoc-ValidationReportVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: 23635_bdoc_ts_OCSP_random_nonce.bdoc TestCaseID: Bdoc-ValidationReportVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc TestCaseID: Bdoc-ValidationReportVerification-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT-TM, AdESqc Expected Result: All required elements are present and meet the expected values. File: testAdesQCInvalid.asice TestCaseID: Bdoc-ValidationReportVerification-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: JSON structure has all elements (Bdoc valid multiple signatures) Expected Result: All required elements are present according to SimpleReportSchema.json File: Baltic MoU digital signing_EST_LT_LV.bdoc TestCaseID: Bdoc-ValidationReportVerification-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: JSON structure has all elements (Bdoc indeterminate status) Expected Result: All required elements are present according to BdocDocSimpleReportSchema.json File: SS-4_teadmataCA.4.asice TestCaseID: Bdoc-ValidationReportVerification-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Bdoc report with no signatures Expected Result: Report is returned with required elements File:BdocContainerNoSignature.bdoc TestCaseID: Pdf-ValidationReportVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: JSON structure has all elements (Pdf valid single signature) Expected Result: All required elements are present according to SimpleReportSchema.json File: hellopades-lt-sha256-ec256.pdf TestCaseID: Pdf-ValidationReportVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: JSON structure has all elements (Pdf valid Multiple signatures) Expected Result: All required elements are present according to SimpleReportSchema.json File: pades_lt_two_valid_sig.pdf TestCaseID: Pdf-ValidationReportVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: JSON structure has all elements (Pdf invalid signature) Expected Result: All required elements are present according to SimpleReportSchema.json File: hellopades-lt-b.pdf TestCaseID: Pdf-ValidationReportVerification-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: JSON structure has all elements (Pdf indeterminate status) Expected Result: All required elements are present according to SimpleReportSchema.json File: hellopades-lt-rsa1024-sha1-expired.pdf TestCaseID: Pdf-ValidationReportVerification-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Pdf report with no signatures Expected Result: Report is returned with required elements File: PdfNoSignature.pdf TestCaseID: Ddoc-ValidationReportVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: JSON structure has all elements (ddoc valid single signature) Expected Result: All required elements are present according to SimpleReportSchema.json File: DIGIDOC-XML1.3.ddoc TestCaseID: Ddoc-ValidationReportVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: JSON structure has all elements (ddoc invalid signature) Expected Result: All required elements are present according to SimpleReportSchema.json File: multipleInvalidSignatures.ddoc TestCaseID: Ddoc-ValidationReportVerification-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Check for optional warning element Expected Result: Warning element is present File: ns6t3cp7.ddoc TestCaseID: Ddoc-ValidationReportVerification-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Ddoc report with no signatures Expected Result: Report is returned with required elements File: DdocContainerNoSignature.ddoc TestCaseID: Ddoc-ValidationReportVerification-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.0, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: SK-XML1.0.ddoc **Attention! This test is disabled: https://github.com/open-eid/SiVa/issues/11 TestCaseID: Ddoc-ValidationReportVerification-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.1, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.1.ddoc TestCaseID: Ddoc-ValidationReportVerification-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.2, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.2.ddoc TestCaseID: Ddoc-ValidationReportVerification-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.3, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.3.ddoc TestCaseID: Xroad-ValidationReportVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-simple container Expected Result: Report is returned with required elements File: xroad-simple.asice TestCaseID: Xroad-ValidationReportVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-batchsignature container Expected Result: Report is returned with required elements File: xroad-batchsignature.asice TestCaseID: Xroad-ValidationReportVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-attachment container Expected Result: Report is returned with required elements File: xroad-attachment.asice TestCaseID: Xroad-ValidationReportVerification-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report with invalid xroad container Expected Result: Report is returned with required elements File: xroad-attachment.asice","title":"ValidationReportValueVerificationIT.java"},{"location":"siva2/appendix/test_cases/#validationrequestitjava","text":"Open file TestCaseID: ValidationRequest-Parameters-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Happy path valid mandatory input test Expected Result: Validation report is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Happy path valid all input test Expected Result: Validation report is returned File: xroad-simple.asice TestCaseID: ValidationRequest-Parameters-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Totally empty request body is sent Expected Result: Error is given File: not relevant TestCaseID: ValidationRequest-Parameters-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Input empty values Expected Result: Errors are returned stating the missing values File: not relevant TestCaseID: ValidationRequest-Parameters-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request with more parameters than expected is sent Expected Result: Error is given or extra parameters are ignored? File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request has invalid keys (capital letters) Expected Result: Error is returned stating wrong values File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Document parameter is missing Expected Result: Errors are returned stating missing Document values File: not relevant TestCaseID: ValidationRequest-Parameters-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Filename parameter is missing Expected Result: Errors are returned stating the missing values File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Happy path valid file encoding format Expected Result: Validation report is returned File: xroad-simple.asice TestCaseID: ValidationRequest-Parameters-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Happy path valid file encoding format Expected Result: Validation report is returned File: xroad-simple.asice TestCaseID: ValidationRequest-Parameters-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request with not base64 string as document Expected Result: Error is returned stating encoding problem File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Filename field should be case insensitive Expected Result: Validation report is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Filename field should ignore spaces Expected Result: Validation report is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request has invalid character in filename Expected Result: Correct error code is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Filename is in allowed length Expected Result: Report is returned with the same filename File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Filename is over allowed length Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: DocumentType parameter is missing Expected Result: Document type is selected automatically and validation report is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: DocumentType parameter is XROAD Expected Result: Xroad validatior is used for validation and report is returned File: xroad-simple.asice TestCaseID: ValidationRequest-Parameters-19 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: DocumentType parameter is XROAD Expected Result: Xroad validatior is used for validation and report is returned File: xroad-simple.asice TestCaseID: ValidationRequest-Parameters-20 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: SignaturePolicy parameter is missing, default is used Expected Result: Validation report is returned with POLv4 File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-21 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: SignaturePolicy is set as POLv3 Expected Result: Validation report is returned with POLv3 File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-22 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: SignaturePolicy is set as POLv4 Expected Result: Validation report is returned with POLv4 File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-23 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: SignaturePolicy has not allowed value Expected Result: error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-24 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: ReportType parameter is missing Expected Result: Simple report is returned as default File: TS-11_23634_TS_2_timestamps.asice TestCaseID: ValidationRequest-Parameters-25 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: ReportType parameter is missing Expected Result: Simple report is returned File: TS-11_23634_TS_2_timestamps.asice TestCaseID: ValidationRequest-Parameters-26 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: ReportType parameter is missing Expected Result: Simple report is returned File: TS-11_23634_TS_2_timestamps.asice TestCaseID: ValidationRequest-Parameters-27 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: ReportType parameter is invalid Expected Result: Error is returned File: xroad-simple.asice TestCaseID: ValidationRequest-Parameters-28 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Filename is under allowed length Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-29 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: SignaturePolicy is under allowed length Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-30 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Validator-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Mismatch in stated and actual document (bdoc and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: ValidationRequest-Validator-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Input random base64 string as bdoc Expected Result: Error is returned stating problem in document File: not relevant TestCaseID: ValidationRequest-Validator-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Acceptance of ASICE as BDOC document type Expected Result: Asice files are handled the same as bdoc File: bdoc21-TS.asice TestCaseID: ValidationRequest-Validator-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Input random base64 string as pdf Expected Result: Error is returned stating problem in document File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Validator-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Mismatch in stated and actual document (ddoc and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Validator-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Input random base64 string as ddoc Expected Result: Error is returned stating problem in document File: not relevant TestCaseID: ValidationRequest-Validator-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Mismatch in stated and actual document (xroad and ddoc) Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: ValidationRequest-Validator-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Input random base64 string as document with xroad document type Expected Result: Error is returned stating problem in document File: not relevant","title":"ValidationRequestIT.java"},{"location":"siva2/appendix/test_cases/#soapgetdatafilereportitjava","text":"Open file TestCaseID: SoapGetDataFile-Report-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-response-interface Title: Verification of values in Validation Report, checks for File name, Base64, Mimetype and Size Expected Result: All required elements are present and meet the expected values File: ddoc_1_3.xml.ddoc TestCaseID: SoapGetDataFile-Report-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-response-interface Title: Verification of values in Validation Report xml v1.1, checks for File name, Base64, Mimetype and Size Expected Result: All required elements are present and meet the expected values File: DIGIDOC-XML1.1.ddoc TestCaseID: SoapGetDataFile-Report-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-response-interface Title: Verification of values in Validation Report xml v1.2, checks for File name, Base64, Mimetype and Size Expected Result: All required elements are present and meet the expected values File: DIGIDOC-XML1.2.ddoc TestCaseID: SoapGetDataFile-Report-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-response-interface Title: Verification of values in Validation Report for container with a number of files, checks for File name, Base64, Mimetype and Size for each file Expected Result: All required elements are present and meet the expected values File: igasugust1.3.ddoc **Attention! This test is disabled: Run this test manually as it fails in Travis because of big response data","title":"SoapGetDataFileReportIT.java"},{"location":"siva2/appendix/test_cases/#soapgetdatafilerequestitjava","text":"Open file TestCaseID: Soap-Validation-Request-For-Data-Files-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Input empty values Expected Result: Error is returned File: not relevant TestCaseID: Soap-Validation-Request-For-Data-Files-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Input empty body Expected Result: Error is returned File: not relevant TestCaseID: Soap-Validation-Request-For-Data-Files-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Element DocumentType is removed from the body Expected Result: Error is returned File: ddoc_1_3.xml.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Element Document is removed from the body Expected Result: Error is returned File: ddoc_1_3.xml.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Element DocumentType is duplicated in the body with different value Expected Result: Error is returned File: ddoc_1_3.xml.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Additional element Filename is added to the body Expected Result: Error is returned File: ddoc_1_3.xml.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Value for element Document was changed Expected Result: Error is returned File: ddoc_1_3.xml.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: DocumentType was changed to BDOC when actual is DDOC Expected Result: Error is returned File: 18912.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: DocumentType was changed to PDF when actual is DDOC Expected Result: Error is returned File: 18912.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: DocumentType was changed to XROAD when actual is DDOC Expected Result: Error is returned File: 18912.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: DocumentType was changed to unsupported format JPG when actual is DDOC Expected Result: Error is returned File: 18912.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: DocumentType was changed to DDOC when actual is PDF Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Soap-Validation-Request-For-Data-Files-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: DocumentType was changed to DDOC when actual is BDOC Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc","title":"SoapGetDataFileRequestIT.java"},{"location":"siva2/appendix/test_cases/#soapvalidationreportvalueitjava","text":"Open file TestCaseID: Bdoc-SoapValidationReportValue-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT_TM, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: Valid_ID_sig.bdoc TestCaseID: Bdoc-SoapValidationReportValue-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: 23635_bdoc_ts_OCSP_random_nonce.bdoc TestCaseID: Bdoc-SoapValidationReportValue-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT, AdES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc **Attention! This test is disabled: New testfile needed TestCaseID: Bdoc-SoapValidationReportValue-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT_TM, AdESqc, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: testAdesQC.bdoc **Attention! This test is disabled: Testfile needed TestCaseID: Bdoc-SoapValidationReportValue-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LTA, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: EE_SER-AEX-B-LTA-V-24.bdoc TestCaseID: Ddoc-SoapValidationReportValue-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.0, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: SK-XML1.0.ddoc **Attention! This test is disabled: https://github.com/open-eid/SiVa/issues/11 TestCaseID: Ddoc-SoapValidationReportValue-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.1, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.1.ddoc TestCaseID: Ddoc-SoapValidationReportValue-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.2, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.2.ddoc TestCaseID: Ddoc-SoapValidationReportValue-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.3, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.3.ddoc TestCaseID: Pdf-SoapValidationReportValue-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, PAdES_baseline_LT, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: pades_lt_two_valid_sig.pdf TestCaseID: Pdf-SoapValidationReportValue-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, PAdES_baseline_B, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: hellopades-pades-b-sha256-auth.pdf TestCaseID: Xroad-SoapValidationReportValue-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-simple container Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: xroad-simple.asice TestCaseID: Xroad-SoapValidationReportValue-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-simple invalid container Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: invalid-digest.asice","title":"SoapValidationReportValueIT.java"},{"location":"siva2/appendix/test_cases/#soapvalidationrequestitjava","text":"Open file TestCaseID: Soap-ValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Empty request body Expected Result: Error is returned stating mismatch with required elements File: not relevant TestCaseID: Soap-ValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request with not base64 string as document Expected Result: Error is returned stating encoding problem File: not relevant TestCaseID: Soap-ValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Verification of wrong document type as input Expected Result: Correct error code is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Verification of case sensitivity in document type Expected Result: Error is returned as WSDL defines the allowed values File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request has XML as document type (special case, XML is similar to ddoc and was a accepted document type in earlier versions) Expected Result: Error is given File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request has long filename field Expected Result: Report is returned with the same filename File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Totally empty request body is sent Expected Result: Error is given File: not relevant TestCaseID: Soap-ValidationRequest-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request with more parameters than expected is sent Expected Result: Error is given or extra parameters are ignored? File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request with more parameters than expected is sent Expected Result: Error is given or extra parameters are ignored? File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request with special chars is sent Expected Result: Validation report is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request with no optional SignaturePolicy field Expected Result: Validation report is returned using default policy File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request with XML expansion Expected Result: Error is returned and Entity is not handled File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request XML external entity attack Expected Result: Error message is returned and Doctype field is not handled File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request with empty document Expected Result: Error is returned File: not relevant TestCaseID: Soap-ValidationRequest-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request with empty filename Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Request with not allowed signature policy characters Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: SignaturePolicy is over allowed length Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: SignaturePolicy is under allowed length Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-19 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Filename is under allowed length Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-20 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Filename is over allowed length Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-BdocValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Input random base64 string as document with bdoc document type Expected Result: Error is returned stating problem in document File: not relevant TestCaseID: Soap-BdocValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Verification of filename value (filename do not match the actual file) Expected Result: The same filename is returned as sent in the request File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-BdocValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Soap-BdocValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and ddoc) Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: Soap-BdocValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Bdoc file, not existing value in signaturePolicy Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-BdocValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Bdoc file, policy fiels should be case insensitive Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-DdocValidationRequest-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and xroad) Expected Result: Error is returned File: xroad-simple.asice TestCaseID: Soap-DdocValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Input random base64 string as document with ddoc document type Expected Result: Error is returned stating problem in document File: TestCaseID: Soap-DdocValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-DdocValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-DdocValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Soap-DdocValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Ddoc file, not existing value in signaturePolicy Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: Soap-DdocValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and xroad) Expected Result: Error is returned File: xroad-attachment.asice TestCaseID: Soap-PdfValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Input random base64 string as document with pdf document type Expected Result: Error is returned stating problem in document File: not relevant TestCaseID: Soap-PdfValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: PDF file, not existing value in signaturePolicy Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Soap-XroadValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: X-road file, not existing value in signaturePolicy Expected Result: Error is returned File: xroad-simple.asice TestCaseID: Soap-XroadValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (xroad and ddoc) Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: Soap-XroadValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (pdf and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-XroadValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf","title":"SoapValidationRequestIT.java"},{"location":"siva2/appendix/test_cases/#soapxroadrequestheaderitjava","text":"Open file TestCaseID: XroadSoap-RequestVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Soap headers are returned in response Expected Result: Same headers are in response as in request File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: XroadSoap-RequestVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Soap headers are returned in correct order Expected Result: Same headers are in response as in request File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: XroadSoap-RequestVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#validation-request-interface Title: Soap headers are returned in error response Expected Result: Same headers are in response as in request File: not relevant TestCaseID: XroadSoap-GetDataFiles-RequestVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Soap headers are returned in response for Get Data Files Expected Result: Same headers are in response as in request File: susisevad1_3.ddoc TestCaseID: XroadSoap-GetDataFiles-RequestVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Soap headers are returned in correct order for Get Data Files Expected Result: Same headers are in response as in request File: susisevad1_3.ddoc TestCaseID: XroadSoap-GetDataFiles-RequestVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva2/interfaces/#data-files-request-interface Title: Soap headers are returned in error response for Get Data Files Expected Result: Same headers are in response as in request File: not relevant","title":"SoapXRoadRequestHeaderIT.java"},{"location":"siva2/appendix/test_cases/#sample-application-integration-test","text":"TestCaseID: Sample-Application-Elements-1 TestType: Manual Requirement: Title: Upload of correct file type Expected Result: Its possible to upload the file by dropping in download area or by browsing a file File: \u0160u\u017elikud s\u00f5id \u00fche \u00f5una \u00e4ra.bdoc TestCaseID: Sample-Application-Elements-2 TestType: Manual Requirement: Title: Upload of invalid file type Expected Result: File is not validated, corresponding errors are returned File: XML.xml TestCaseID: Sample-Application-Elements-3 TestType: Manual Requirement: Title: Upload file larger than 10MB Expected Result: File is not validated File: hellopades-lta-no-ocsp.pdf TestCaseID: Sample-Application-Elements-4 TestType: Manual Requirement: Title: Page layout Expected Result: All elements are properly displayed and can be used with different window sizes File: not relevant TestCaseID: Sample-Application-Validation-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Validate container with valid signatures Expected Result: Validation report is displayed correctly both for JSON and SOAP File: \u0160u\u017elikud s\u00f5id \u00fche \u00f5una \u00e4ra.bdoc TestCaseID: Sample-Application-Validation-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Validate container with valid signatures Expected Result: Validation report is displayed correctly both for JSON and SOAP File: \u0160u\u017elikud s\u00f5id \u00fche \u00f5una \u00e4ra.bdoc TestCaseID: Sample-Application-Validation-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Validate container with invalid signatures Expected Result: Validation report is displayed correctly both for JSON and SOAP File: IB-3960_bdoc2.1_TSA_SignatureValue_altered.bdoc TestCaseID: Sample-Application-Validation-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/#validation-request-interface Title: Validate container with not passing policy (POLv2) Expected Result: Validation report is displayed correctly (correct policy is returned) both for JSON and SOAP File: soft-cert-signature.pdf","title":"Sample Application Integration Test"},{"location":"siva2/appendix/test_cases/#x-road-soap-system-test","text":"TestCaseID: Xroad-Validate-Ddoc-1 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate valid Ddoc Expected Result: The document should return validation report with one valid signature File: DIGIDOC-XML1.3.ddoc TestCaseID: Xroad-Validate-Ddoc-2 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate invalid Ddoc Expected Result: The document should return validation report with no valid signature File: test-non-repu1.ddoc TestCaseID: Xroad-Validate-Ddoc-3 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Invalid Request Expected Result: Soap error should be returned File: not relevant TestCaseID: Xroad-Validate-Bdoc-1 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate valid Bdoc Expected Result: The document should return validation report with one valid signature File: \u0160u\u017elikud s\u00f5id \u00fche \u00f5una \u00e4ra.bdoc TestCaseID: Xroad-Validate-Bdoc-2 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate invalid Bdoc Expected Result: The document should return validation report with no valid signature File: TM-15_revoked.4.asice TestCaseID: Xroad-Validate-Bdoc-3 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Invalid Request Expected Result: Soap error should be returned File: not relevant TestCaseID: Xroad-Validate-Pdf-1 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate valid Pdf Expected Result: The document should return validation report with one valid signature File: pades-baseline-lta-live-aj.pdf TestCaseID: Xroad-Validate-Pdf-2 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate invalid Pdf Expected Result: The document should return validation report with no valid signature File: pades-baseline-t-live-aj.pdf TestCaseID: Xroad-Validate-Pdf-3 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Invalid Request Expected Result: Soap error should be returned File: not relevant TestCaseID: Xroad-Validate-Xroad-1 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate valid Xroad Expected Result: The document should return validation report with one valid signature File: xroad-batchsignature.asice TestCaseID: Xroad-Validate-Xroad-2 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Validate invalid Xroad Expected Result: The document should return validation report with no valid signature File: invalid-digest.asice TestCaseID: Xroad-Validate-Xroad-3 TestType: Automated SoapUI Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Invalid Request Expected Result: Soap error should be returned File: not relevant TestCaseID: Xroad-GetDataFiles-DDOC-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Get data files from valid DDOC Expected Result: Data files should be returned File: DIGIDOC-XML1.3.ddoc TestCaseID: Xroad-GetDataFiles-DDOC-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Get data files from invalid DDOC Expected Result: Data files should be returned even if the signatures are not valid File: test-non-repu1.ddoc TestCaseID: Xroad-GetDataFiles-DDOC-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva/v2/interfaces/ Title: Invalid request Expected Result: Error is returned as the document type is not supported File: test-non-repu1.ddoc","title":"X-Road Soap System Test"},{"location":"siva2/appendix/test_cases/#configuration-system-test","text":"TestCaseID: Configuration-Webapp-TSL-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: TSL update over network Expected Result: TSL is updated from configured path File: not relevant TestCaseID: Configuration-Webapp-TSL-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: TSL update disabled Expected Result: Local cashe is used File: not relevant TestCaseID: Configuration-Webapp-TSL-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: TSL trusted territories Expected Result: only listed countries are allowed File: not relevant TestCaseID: Configuration-Webapp-TSL-5 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: TSL loader scheduler cron Expected Result: TSL renewal process is started File: not relevant TestCaseID: Configuration-Webapp-Keystore-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: Keystore change Expected Result: configured keystore is used File: not relevant TestCaseID: Configuration-Webapp-Scheduler-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: Update time is configured Expected Result: configured time is used File: not relevant TestCaseID: Configuration-Webapp-Xroad-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: X-Road validator service address is changed Expected Result: correct address is used File: not relevant TestCaseID: Configuration-Webapp-GA-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: Google Analytics is configured Expected Result: Data is transfered to GA File: not relevant TestCaseID: Configuration-Webapp-Policy-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: Configure policy for bdoc Expected Result: Configuration is used File: not relevant TestCaseID: Configuration-Webapp-Policy-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: Configure policy for pdf Expected Result: Configuration is used File: not relevant TestCaseID: Configuration-Webapp-Monitoring-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: Monitoring is enabled for webapp only Expected Result: Its possible to get \"heartbeat\" status with correct info File: not relevant TestCaseID: Configuration-Webapp-Monitoring-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: Monitoring is enabled for webapp and Xroad Service Expected Result: Its possible to get \"heartbeat\" status with correct info File: not relevant TestCaseID: Configuration-Webapp-Monitoring-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: Monitoring is enabled and custom links are configured Expected Result: Its possible to get \"heartbeat\" status with correct info File: not relevant TestCaseID: Configuration-XroadService-Monitoring-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: Monitoring is enabled Expected Result: Its possible to get \"heartbeat\" status with correct info for Xroad Service File: not relevant TestCaseID: Configuration-SampleApplication-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: Configuration of SiVa Web Service access Expected Result: Correct web service is used File: not relevant TestCaseID: Configuration-SampleApplication-Monitoring-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva2/systemintegrators_guide/ Title: Monitoring is enabled Expected Result: Its possible to get \"heartbeat\" status with correct info using basic authentication File: not relevant","title":"Configuration System Test"},{"location":"siva2/appendix/validation_policy/","text":"SiVa Signature Validation Policy Introduction This signature validation policy document specifies signature validation rules used for validating signatures in SiVa digital signature validation service (hereinafter: Service). Versioning Different policy versions may be used by the service in the following conditions: different validation policies may be in use simultaneously, enabling the Service's user to choose the most suitable policy for a specific business context; validation policies are subject to change, i.e. there may be an update to a policy which causes the previous version to become no longer used (obsolete); for later reference, the validation report returned by the Service must indicate the specific version of validation policy that was used during validation process. for later reference, previous versions of validation policy documents should remain available for the Service's users. The following validation policy versions are supported in SiVa 2.0 service: SiVA Signature Validation Policy - Version 3 (POLv3) SiVA Signature Validation Policy - Version 4 (POLv4) The following validation policy versions are marked as obsolete in SiVa 2.0 service: SiVA Signature Validation Policy - Version 1 (POLv1) SiVA Signature Validation Policy - Version 2 (POLv2) General principles of SiVa validation policies The validation policy documents describe validation rules for all digital signature formats that are supported in SiVa. All rules described for electronic signatures also apply for electronic seals and digital stamps if not explicitly stated otherwise. The set of signature validation constraints that are used by the Service are a combination of constraints defined in the Service itself and constraints that are implicitly defined in base components of the service, including: Validation rules defined by the standard or specification documents of the digital signature formats supported in SiVa (described in Signature format constraints section). Validation rules defined by base libraries used in SiVa that implement the supported digital signature formats, i.e. the validation constraints that are imposed by the source code implementation or configuration of the base libraries (described in Base libraries' constraints section). Note When no specific validation rule is set in the present document, the requirements and rules from the abovementioned implicit sources for validation requirements shall apply in their entirety. When specific requirements and rules are set in the present validation policy document, they shall prevail over the corresponding requirements set in the implicit resources. SiVA Signature Validation Policy - Version 3 (POLv3) Description Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. URL http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv3 POLv3 validation constraints The signature may be a Qualified Electronic Signature (QES), Advanced electronic Signature (AdES) or AdES supported by a Qualified Certificate (AdES/QC) taking account of the following requirements: Qualified Certificate (QC) requirement The signer\u2019s certificate may be a qualified or non-qualified certificate, as meant by the eIDAS regulation. The signer's certificate is considered acceptable by the validation process even if it is not possible to determine the certificate's QC compliance. SSCD/QSCD (Secure/Qualified Signature Creation Device) requirement Signer certificate may or may not comply with SSCD/QSCD criteria. The signer's certificate is considered acceptable by the validation process even if it is not possible to determine the certificate's SSCD/QSCD compliance. Constraints defined in the Common validation constraints (POLv3, POLv4) section SiVA Signature Validation Policy - Version 4 (POLv4) Description Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result. URL http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv4 POLv4 validation constraints The requirements for the signature level depend on signature type. Qualified Certificate (QC) requirement The signer\u2019s certificate must be a qualified certificate, as meant by the eIDAS regulation. If Trusted Lists are used during signature validation then also the signer certificate\u2019s qualification information in the Trusted List is taken into account. SSCD/QSCD (Secure/Qualified Signature Creation Device) requirement In case of Signatures, signer certificate should comply with SSCD/QSCD criteria, otherwise warning is returned. In case of Seals, there is no requirement for SSCD/QSCD criteria. If it is not possible to determine the signature type, it must comply with SSCD/QSCD criteria. If Trusted Lists are used during signature validation then the also signer certificate\u2019s SSCD/QSCD qualification information in the Trusted List is taken into account. The signer's certificate is not considered acceptable by the validation process if it is not possible to determine the certificate's QC and SSCD/QSCD compliance, with the following exception: In case of DIGIDOC-XML 1.0...1.3 and the respective hashcode formats, it is assumed that the signer's certificate complies with QC and SSCD/QSCD requirements, if the certificate is issued by SK and if the nonRepudiation bit has been set in the certificate's Key Usage field. See also Certificate Profile documents of certificates issued by SK, ETSI EN 319 412-2 and ETSI EN 319 412-3 . Constraints defined in the Common validation constraints (POLv3, POLv4) section Common validation constraints (POLv3, POLv4) General constraints The validation result returned by SiVa determines whether a signature is technically valid and depending of a container type also conforms to a set of validation constraints that are specific to Estonian legislation and local practices of digital signing. The policy may not be suitable for signatures created in other territories. The validation result returned by SiVa comprises validation results of all the signatures in a single signature container (in case of detached signatures) or all signatures in a signed document (in case of enveloped or enveloping signatures). I.e. in case of multiple detached/enveloped/enveloping signatures, overall validation result correspoinding to the collection of signatures is not determined. Signature format constraints SiVa implicitly implements constraints that are specified in the specification documents of the signature formats supported by the Service: BDOC 2.1 ASiC-E/XAdES signatures X-Road ASiC-E/XAdES signatures PAdES signatures XAdES signatures CAdES signatures DIGIDOC-XML 1.0, 1.1, 1.2, 1.3 signatures DIGIDOC-XML 1.0, 1.1, 1.2 and 1.3 signatures in hashcode format Base libraries' constraints SiVa implicitly implements constraints that are imposed by the base software libraries that are used by the service. For more information, see the documentation and source code of the base libraries: JDigiDoc - is used to validate signatures in DIGIDOC-XML 1.0...1.3 format, including documents in hashcode form. DigiDoc4J - is used to validate signatures in BDOC 2.1 format asicverifier - is used for validating ASiC-E/XAdES signatures created in X-Road system. Open-eID DSS fork - is used to validate all other signature formats than mentioned above Baseline Profile constraints The signature must comply with Baseline Profile of the respective signature format: XAdES Baseline Profile PAdES Baseline Profile CAdES Baseline Profile In case of Baseline LT-level signature with time-mark, the notation BASELINE_LT_TM is used. The following table describes supported Baseline Profile levels, according to signature formats: Signature format BASELINE_B BASELINE_T BASELINE_LT BASELINE_LT_TM BASELINE_LTA BDOC NOK NOK OK OK OK X-Road signature (simple form) NOK NOK OK NOK NOK X-Road signature (batch signature) OK NOK NOK NOK NOK PAdES NOK NOK OK NOK OK XAdES NOK NOK OK NOK OK CAdES NOK NOK OK NOK OK DIGIDOC-XML 1.0...1.3 NOK NOK NOK OK NOK DIGIDOC-XML 1.0...1.3 hashcode NOK NOK NOK OK NOK Legend: OK - the respective Baseline Profile level is supported and acceptable. NOK - the respective Baseline Profile level is not supported or is considered insufficient for the signature format. X.509 validation constraints The signer certificate\u2019s Key Usage field must have nonRepudiation bit set (also referred to as contentCommitment). Cryptographic algorithm constraints Hash algorithm constraints: In case of BDOC format: when validating a signature where SHA-1 function has been used then a validation warning about weak digest method is returned. Asymmetric cryptographic algorithm contraints: RSA and ECC cryptographic algorithms are supported In case of PAdES/XAdES(also BDOC)/CAdES formats, the RSA key lenght must be at least 1024 bits and ECC key length at least 192 bits. Trust anchor constraints The signature must contain the certificate of the trust anchor and all certificates necessary for the signature validator to build a certification path up to the trust anchor. This applies to the signer\u2019s certificate and the certificates of trust service providers that have issued the time-stamp token and revocation data that are incorporated in the signature. Trust Anchors are: In case of XAdES/CAdES/PAdES formats: EU Member State Trusted Lists . In case of DIGIDOC-XML 1.0...1.3 and respective hashcode formats: Estonian CA certificates issued by SK , defined in local configuration file. In case of X-Road ASiC-E signatures, SK issued KLASS3-SK 2010, and KLASS3-SK 2010 OCSP RESPONDER and SK TIMESTAMPING AUTHORITY certificates, defined in local configuration file. Revocation data constraints The signature must contain evidence record to confirm that certificate was valid at the time of signing. The evidence record of signer certificate must be in the form of an OCSP confirmation or as a Certificate Revocation List. No additional revocation data other than the data that was originally incorporated in the signature shall be requested during validation time. Checking revocation of certificates regarded as Trust Anchors: In case of DIGIDOC-XML 1.0...1.3 and X-Road formats: revocation of Trust Anchor certificates is not checked. In case of XAdES/CAdES/PAdES formats: revocation of Trust Anchor certificates is checked on the basis of the data in Trusted Lists. Signer certificate's revocation freshness constraints In case of BDOC and DIGIDOC-XML 1.0...1.3 BASELINE_LT_TM signatures with time-mark: revocation data is always considered fresh as the revocation data is issued at the trusted signing time. In case of XAdES/CAdES/PAdES BASELINE_LT and BASELINE_LTA signatures with signature time-stamp: revocation data freshness is checked according to the following rules: In case of OCSP responce if difference between signature time-stamp's production time (genTime field) and signer certificate OCSP confirmation\u2019s production time (producedAt field) is more than 24 hours then the signature is considered invalid. If the difference is more than 15 minutes and less then 24h then a validation warning is returned. In case of Certificate Revocation List the signature time-stamp's production time (genTime field) must be within validity range of the CRL (between thisUpdate and nextUpdate) Trusted signing time constraints Trusted signing time, denoting the earliest time when it can be trusted (because proven by some Proof-of-Existence present in the signature) that a signature has existed, is determined as follows: In case of signature with time-mark (BASELINE_LT_TM level) - the producedAt value of the earliest valid time-mark (OCSP confirmation of the signer's certificate) in the signature. In case of signature with time-stamp (BASELINE_T, BASELINE_LT or BASELINE_LTA level) - the genTime value of the earliest valid signature time-stamp token in the signature. In case of basic signature (BASELINE_B) - the trusted signing time value cannot be determined as there is no Proof-of-Existence of the signature. BDOC container spceific requirements The BDOC container must conform with BDOC 2.1 standard. 1. File extension * \".bdoc\" file extension is supported during signature validation. 2. Only one signature shall be stored in one signatures.xml file. 3. All signatures in the container must sign all of the data files. 4. All data files in the container must be signed, i.e. all files in the container, except of \"mimetype\" file and the files in META-INF/ folder, must be signed. 5. Two data files with the same name and same path shall not be allowed in the container as the signed data file must be uniquely identifiable in the container. To avoid conflicts in some operating system environments, file names shall be case insensitive. 6. Only relative file paths are supported, for example \"META-INF/signatures.xml\" and \"document.txt\" instead of \"/META-INF/signatures.xml\" and \"/document.txt\". 7. \"META-INF/manifest.xml\" file shall be conformant to OASIS Open Document Format version 1.0 or 1.2 . ASICE container spceific requirements The ASICE container must conform with ETSI EN 319 162-1 standard. 1. Warning is returned when signatures in the container do not sign all of the data files. 2. Manifest file must be present. ASICS container spceific requirements The service supports both signature and Time Stamp Token (TST) based ASIC-S containers. Evidence record based containers are not supported. The ASIC-S container must conform with ETSI EN 319 162-1 and ETSI EN 319 162-2 standards. Manifest file can not be present in case of signature based ASIC-S containers. Only one TimeStampToken per container is supported. No AsicArchiveManifest.xml support. No TSL based verification of certificates is done in case of TimeStampToken based containers.","title":"Appendix 1 - Validation Policy"},{"location":"siva2/appendix/validation_policy/#siva-signature-validation-policy","text":"","title":"SiVa Signature Validation Policy"},{"location":"siva2/appendix/validation_policy/#introduction","text":"This signature validation policy document specifies signature validation rules used for validating signatures in SiVa digital signature validation service (hereinafter: Service).","title":"Introduction"},{"location":"siva2/appendix/validation_policy/#versioning","text":"Different policy versions may be used by the service in the following conditions: different validation policies may be in use simultaneously, enabling the Service's user to choose the most suitable policy for a specific business context; validation policies are subject to change, i.e. there may be an update to a policy which causes the previous version to become no longer used (obsolete); for later reference, the validation report returned by the Service must indicate the specific version of validation policy that was used during validation process. for later reference, previous versions of validation policy documents should remain available for the Service's users. The following validation policy versions are supported in SiVa 2.0 service: SiVA Signature Validation Policy - Version 3 (POLv3) SiVA Signature Validation Policy - Version 4 (POLv4) The following validation policy versions are marked as obsolete in SiVa 2.0 service: SiVA Signature Validation Policy - Version 1 (POLv1) SiVA Signature Validation Policy - Version 2 (POLv2)","title":"Versioning"},{"location":"siva2/appendix/validation_policy/#general-principles-of-siva-validation-policies","text":"The validation policy documents describe validation rules for all digital signature formats that are supported in SiVa. All rules described for electronic signatures also apply for electronic seals and digital stamps if not explicitly stated otherwise. The set of signature validation constraints that are used by the Service are a combination of constraints defined in the Service itself and constraints that are implicitly defined in base components of the service, including: Validation rules defined by the standard or specification documents of the digital signature formats supported in SiVa (described in Signature format constraints section). Validation rules defined by base libraries used in SiVa that implement the supported digital signature formats, i.e. the validation constraints that are imposed by the source code implementation or configuration of the base libraries (described in Base libraries' constraints section). Note When no specific validation rule is set in the present document, the requirements and rules from the abovementioned implicit sources for validation requirements shall apply in their entirety. When specific requirements and rules are set in the present validation policy document, they shall prevail over the corresponding requirements set in the implicit resources.","title":"General principles of SiVa validation policies"},{"location":"siva2/appendix/validation_policy/#siva-signature-validation-policy-version-3-polv3","text":"","title":"SiVA Signature Validation Policy - Version 3 (POLv3)"},{"location":"siva2/appendix/validation_policy/#description","text":"Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature.","title":"Description"},{"location":"siva2/appendix/validation_policy/#url","text":"http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv3","title":"URL"},{"location":"siva2/appendix/validation_policy/#polv3-validation-constraints","text":"The signature may be a Qualified Electronic Signature (QES), Advanced electronic Signature (AdES) or AdES supported by a Qualified Certificate (AdES/QC) taking account of the following requirements: Qualified Certificate (QC) requirement The signer\u2019s certificate may be a qualified or non-qualified certificate, as meant by the eIDAS regulation. The signer's certificate is considered acceptable by the validation process even if it is not possible to determine the certificate's QC compliance. SSCD/QSCD (Secure/Qualified Signature Creation Device) requirement Signer certificate may or may not comply with SSCD/QSCD criteria. The signer's certificate is considered acceptable by the validation process even if it is not possible to determine the certificate's SSCD/QSCD compliance. Constraints defined in the Common validation constraints (POLv3, POLv4) section","title":"POLv3 validation constraints"},{"location":"siva2/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4","text":"","title":"SiVA Signature Validation Policy - Version 4 (POLv4)"},{"location":"siva2/appendix/validation_policy/#description_1","text":"Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result.","title":"Description"},{"location":"siva2/appendix/validation_policy/#url_1","text":"http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#POLv4","title":"URL"},{"location":"siva2/appendix/validation_policy/#polv4-validation-constraints","text":"The requirements for the signature level depend on signature type. Qualified Certificate (QC) requirement The signer\u2019s certificate must be a qualified certificate, as meant by the eIDAS regulation. If Trusted Lists are used during signature validation then also the signer certificate\u2019s qualification information in the Trusted List is taken into account. SSCD/QSCD (Secure/Qualified Signature Creation Device) requirement In case of Signatures, signer certificate should comply with SSCD/QSCD criteria, otherwise warning is returned. In case of Seals, there is no requirement for SSCD/QSCD criteria. If it is not possible to determine the signature type, it must comply with SSCD/QSCD criteria. If Trusted Lists are used during signature validation then the also signer certificate\u2019s SSCD/QSCD qualification information in the Trusted List is taken into account. The signer's certificate is not considered acceptable by the validation process if it is not possible to determine the certificate's QC and SSCD/QSCD compliance, with the following exception: In case of DIGIDOC-XML 1.0...1.3 and the respective hashcode formats, it is assumed that the signer's certificate complies with QC and SSCD/QSCD requirements, if the certificate is issued by SK and if the nonRepudiation bit has been set in the certificate's Key Usage field. See also Certificate Profile documents of certificates issued by SK, ETSI EN 319 412-2 and ETSI EN 319 412-3 . Constraints defined in the Common validation constraints (POLv3, POLv4) section","title":"POLv4 validation constraints"},{"location":"siva2/appendix/validation_policy/#common-validation-constraints-polv3-polv4","text":"","title":"Common validation constraints (POLv3, POLv4)"},{"location":"siva2/appendix/validation_policy/#general-constraints","text":"The validation result returned by SiVa determines whether a signature is technically valid and depending of a container type also conforms to a set of validation constraints that are specific to Estonian legislation and local practices of digital signing. The policy may not be suitable for signatures created in other territories. The validation result returned by SiVa comprises validation results of all the signatures in a single signature container (in case of detached signatures) or all signatures in a signed document (in case of enveloped or enveloping signatures). I.e. in case of multiple detached/enveloped/enveloping signatures, overall validation result correspoinding to the collection of signatures is not determined.","title":"General constraints"},{"location":"siva2/appendix/validation_policy/#signature-format-constraints","text":"SiVa implicitly implements constraints that are specified in the specification documents of the signature formats supported by the Service: BDOC 2.1 ASiC-E/XAdES signatures X-Road ASiC-E/XAdES signatures PAdES signatures XAdES signatures CAdES signatures DIGIDOC-XML 1.0, 1.1, 1.2, 1.3 signatures DIGIDOC-XML 1.0, 1.1, 1.2 and 1.3 signatures in hashcode format","title":"Signature format constraints"},{"location":"siva2/appendix/validation_policy/#base-libraries-constraints","text":"SiVa implicitly implements constraints that are imposed by the base software libraries that are used by the service. For more information, see the documentation and source code of the base libraries: JDigiDoc - is used to validate signatures in DIGIDOC-XML 1.0...1.3 format, including documents in hashcode form. DigiDoc4J - is used to validate signatures in BDOC 2.1 format asicverifier - is used for validating ASiC-E/XAdES signatures created in X-Road system. Open-eID DSS fork - is used to validate all other signature formats than mentioned above","title":"Base libraries' constraints"},{"location":"siva2/appendix/validation_policy/#baseline-profile-constraints","text":"The signature must comply with Baseline Profile of the respective signature format: XAdES Baseline Profile PAdES Baseline Profile CAdES Baseline Profile In case of Baseline LT-level signature with time-mark, the notation BASELINE_LT_TM is used. The following table describes supported Baseline Profile levels, according to signature formats: Signature format BASELINE_B BASELINE_T BASELINE_LT BASELINE_LT_TM BASELINE_LTA BDOC NOK NOK OK OK OK X-Road signature (simple form) NOK NOK OK NOK NOK X-Road signature (batch signature) OK NOK NOK NOK NOK PAdES NOK NOK OK NOK OK XAdES NOK NOK OK NOK OK CAdES NOK NOK OK NOK OK DIGIDOC-XML 1.0...1.3 NOK NOK NOK OK NOK DIGIDOC-XML 1.0...1.3 hashcode NOK NOK NOK OK NOK Legend: OK - the respective Baseline Profile level is supported and acceptable. NOK - the respective Baseline Profile level is not supported or is considered insufficient for the signature format.","title":"Baseline Profile constraints"},{"location":"siva2/appendix/validation_policy/#x509-validation-constraints","text":"The signer certificate\u2019s Key Usage field must have nonRepudiation bit set (also referred to as contentCommitment).","title":"X.509 validation constraints"},{"location":"siva2/appendix/validation_policy/#cryptographic-algorithm-constraints","text":"Hash algorithm constraints: In case of BDOC format: when validating a signature where SHA-1 function has been used then a validation warning about weak digest method is returned. Asymmetric cryptographic algorithm contraints: RSA and ECC cryptographic algorithms are supported In case of PAdES/XAdES(also BDOC)/CAdES formats, the RSA key lenght must be at least 1024 bits and ECC key length at least 192 bits.","title":"Cryptographic algorithm constraints"},{"location":"siva2/appendix/validation_policy/#trust-anchor-constraints","text":"The signature must contain the certificate of the trust anchor and all certificates necessary for the signature validator to build a certification path up to the trust anchor. This applies to the signer\u2019s certificate and the certificates of trust service providers that have issued the time-stamp token and revocation data that are incorporated in the signature. Trust Anchors are: In case of XAdES/CAdES/PAdES formats: EU Member State Trusted Lists . In case of DIGIDOC-XML 1.0...1.3 and respective hashcode formats: Estonian CA certificates issued by SK , defined in local configuration file. In case of X-Road ASiC-E signatures, SK issued KLASS3-SK 2010, and KLASS3-SK 2010 OCSP RESPONDER and SK TIMESTAMPING AUTHORITY certificates, defined in local configuration file.","title":"Trust anchor constraints"},{"location":"siva2/appendix/validation_policy/#revocation-data-constraints","text":"The signature must contain evidence record to confirm that certificate was valid at the time of signing. The evidence record of signer certificate must be in the form of an OCSP confirmation or as a Certificate Revocation List. No additional revocation data other than the data that was originally incorporated in the signature shall be requested during validation time. Checking revocation of certificates regarded as Trust Anchors: In case of DIGIDOC-XML 1.0...1.3 and X-Road formats: revocation of Trust Anchor certificates is not checked. In case of XAdES/CAdES/PAdES formats: revocation of Trust Anchor certificates is checked on the basis of the data in Trusted Lists.","title":"Revocation data constraints"},{"location":"siva2/appendix/validation_policy/#signer-certificates-revocation-freshness-constraints","text":"In case of BDOC and DIGIDOC-XML 1.0...1.3 BASELINE_LT_TM signatures with time-mark: revocation data is always considered fresh as the revocation data is issued at the trusted signing time. In case of XAdES/CAdES/PAdES BASELINE_LT and BASELINE_LTA signatures with signature time-stamp: revocation data freshness is checked according to the following rules: In case of OCSP responce if difference between signature time-stamp's production time (genTime field) and signer certificate OCSP confirmation\u2019s production time (producedAt field) is more than 24 hours then the signature is considered invalid. If the difference is more than 15 minutes and less then 24h then a validation warning is returned. In case of Certificate Revocation List the signature time-stamp's production time (genTime field) must be within validity range of the CRL (between thisUpdate and nextUpdate)","title":"Signer certificate's revocation freshness constraints"},{"location":"siva2/appendix/validation_policy/#trusted-signing-time-constraints","text":"Trusted signing time, denoting the earliest time when it can be trusted (because proven by some Proof-of-Existence present in the signature) that a signature has existed, is determined as follows: In case of signature with time-mark (BASELINE_LT_TM level) - the producedAt value of the earliest valid time-mark (OCSP confirmation of the signer's certificate) in the signature. In case of signature with time-stamp (BASELINE_T, BASELINE_LT or BASELINE_LTA level) - the genTime value of the earliest valid signature time-stamp token in the signature. In case of basic signature (BASELINE_B) - the trusted signing time value cannot be determined as there is no Proof-of-Existence of the signature.","title":"Trusted signing time constraints"},{"location":"siva2/appendix/validation_policy/#bdoc-container-spceific-requirements","text":"The BDOC container must conform with BDOC 2.1 standard. 1. File extension * \".bdoc\" file extension is supported during signature validation. 2. Only one signature shall be stored in one signatures.xml file. 3. All signatures in the container must sign all of the data files. 4. All data files in the container must be signed, i.e. all files in the container, except of \"mimetype\" file and the files in META-INF/ folder, must be signed. 5. Two data files with the same name and same path shall not be allowed in the container as the signed data file must be uniquely identifiable in the container. To avoid conflicts in some operating system environments, file names shall be case insensitive. 6. Only relative file paths are supported, for example \"META-INF/signatures.xml\" and \"document.txt\" instead of \"/META-INF/signatures.xml\" and \"/document.txt\". 7. \"META-INF/manifest.xml\" file shall be conformant to OASIS Open Document Format version 1.0 or 1.2 .","title":"BDOC container spceific requirements"},{"location":"siva2/appendix/validation_policy/#asice-container-spceific-requirements","text":"The ASICE container must conform with ETSI EN 319 162-1 standard. 1. Warning is returned when signatures in the container do not sign all of the data files. 2. Manifest file must be present.","title":"ASICE container spceific requirements"},{"location":"siva2/appendix/validation_policy/#asics-container-spceific-requirements","text":"The service supports both signature and Time Stamp Token (TST) based ASIC-S containers. Evidence record based containers are not supported. The ASIC-S container must conform with ETSI EN 319 162-1 and ETSI EN 319 162-2 standards. Manifest file can not be present in case of signature based ASIC-S containers. Only one TimeStampToken per container is supported. No AsicArchiveManifest.xml support. No TSL based verification of certificates is done in case of TimeStampToken based containers.","title":"ASICS container spceific requirements"},{"location":"siva2/appendix/wsdl/","text":"See also Interfaces for more information about the SOAP interfaces. Validation web service wsdl <wsdl:definitions xmlns:wsdl= \"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:soap= \"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:xrd= \"http://x-road.eu/xsd/xroad.xsd\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" xmlns:external= \"http://dss.esig.europa.eu/validation/detailed-report\" name= \"SignatureValidationService\" > <wsdl:types> <xs:schema xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" > <xs:import namespace= \"http://x-road.eu/xsd/xroad.xsd\" schemaLocation= \"xroad.xsd\" /> <xs:import namespace= \"http://dss.esig.europa.eu/validation/detailed-report\" schemaLocation= \"DetailedReport.xsd\" /> <xs:element name= \"ValidateDocument\" type= \"tns:ValidateDocument\" /> <xs:element name= \"ValidationRequest\" type= \"tns:SoapValidationRequest\" /> <xs:element name= \"ValidateDocumentResponse\" type= \"tns:ValidateDocumentResponse\" /> <xs:element name= \"ValidationReport\" type= \"tns:ValidationReport\" /> <xs:element name= \"ValidationProcess\" substitutionGroup= \"external:DetailedReport\" /> <xs:element name= \"ValidationConclusion\" type= \"tns:ValidationConclusion\" /> <xs:complexType name= \"ValidateDocument\" > <xs:sequence> <xs:element ref= \"tns:ValidationRequest\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"SoapValidationRequest\" > <xs:sequence> <xs:element name= \"Document\" type= \"xs:string\" /> <xs:element name= \"Filename\" type= \"xs:string\" /> <xs:element minOccurs= \"0\" maxOccurs= \"1\" name= \"ReportType\" type= \"xs:string\" /> <xs:element minOccurs= \"0\" maxOccurs= \"1\" name= \"DocumentType\" type= \"tns:DocumentType\" /> <xs:element minOccurs= \"0\" name= \"SignaturePolicy\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"ValidateDocumentResponse\" > <xs:sequence> <xs:element minOccurs= \"1\" ref= \"tns:ValidationReport\" /> <xs:element minOccurs= \"0\" name= \"ValidationReportSignature\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"ValidationReport\" > <xs:sequence> <xs:element minOccurs= \"1\" ref= \"tns:ValidationConclusion\" /> <xs:element minOccurs= \"0\" ref= \"tns:ValidationProcess\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"ValidationConclusion\" > <xs:sequence> <xs:element name= \"Policy\" type= \"tns:Policy\" /> <xs:element name= \"ValidationTime\" type= \"xs:string\" /> <xs:element name= \"ValidatedDocument\" type= \"tns:ValidatedDocumentData\" /> <xs:element name= \"ValidationLevel\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"ValidationWarnings\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"ValidationWarning\" type= \"tns:ValidationWarning\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"SignatureForm\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"Signatures\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"Signature\" type= \"tns:SignatureValidationData\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"TimeStampTokens\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element minOccurs= \"0\" maxOccurs= \"unbounded\" name= \"TimeStampToken\" type= \"tns:TimeStampTokenData\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"ValidSignaturesCount\" minOccurs= \"0\" type= \"xs:int\" /> <xs:element name= \"SignaturesCount\" minOccurs= \"0\" type= \"xs:int\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"Policy\" > <xs:sequence> <xs:element name= \"PolicyDescription\" type= \"xs:string\" /> <xs:element name= \"PolicyName\" type= \"xs:string\" /> <xs:element name= \"PolicyUrl\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"TimeStampTokenData\" > <xs:sequence> <xs:element name= \"Indication\" type= \"tns:Indication\" /> <xs:element name= \"SignedBy\" type= \"xs:string\" /> <xs:element name= \"SignedTime\" type= \"xs:string\" /> <xs:element name= \"Errors\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"Error\" type= \"tns:Error\" /> </xs:sequence> </xs:complexType> </xs:element> </xs:sequence> </xs:complexType> <xs:complexType name= \"ValidatedDocumentData\" > <xs:sequence> <xs:element name= \"Filename\" type= \"xs:string\" /> <xs:element name= \"FileHash\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"HashAlgo\" minOccurs= \"0\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"SignatureValidationData\" > <xs:sequence> <xs:element name= \"Id\" type= \"xs:string\" /> <xs:element name= \"SignatureFormat\" type= \"xs:string\" /> <xs:element name= \"SignatureLevel\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"SignedBy\" type= \"xs:string\" /> <xs:element name= \"Indication\" type= \"tns:Indication\" /> <xs:element name= \"SubIndication\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"Errors\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"Error\" type= \"tns:Error\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"SignatureScopes\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" name= \"SignatureScope\" type= \"tns:SignatureScope\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"ClaimedSigningTime\" type= \"xs:string\" /> <xs:element name= \"Warnings\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"Warning\" type= \"tns:Warning\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"Info\" minOccurs= \"0\" type= \"tns:Info\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"Error\" > <xs:sequence> <xs:element name= \"Content\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"ValidationWarning\" > <xs:sequence> <xs:element name= \"Content\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"SignatureScope\" > <xs:sequence> <xs:element name= \"Name\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"Scope\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"Content\" minOccurs= \"0\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"Warning\" > <xs:sequence> <xs:element name= \"Content\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"Info\" > <xs:sequence> <xs:element minOccurs= \"0\" name= \"BestSignatureTime\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:simpleType name= \"DocumentType\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"XROAD\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"Indication\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"TOTAL-PASSED\" /> <xs:enumeration value= \"TOTAL-FAILED\" /> <xs:enumeration value= \"INDETERMINATE\" /> </xs:restriction> </xs:simpleType> </xs:schema> </wsdl:types> <wsdl:message name= \"ValidateDocument\" > <wsdl:part element= \"tns:ValidateDocument\" name= \"parameters\" /> </wsdl:message> <wsdl:message name= \"ValidateDocumentResponse\" > <wsdl:part element= \"tns:ValidateDocumentResponse\" name= \"parameters\" /> </wsdl:message> <wsdl:message name= \"requestHeader\" > <wsdl:part name= \"client\" element= \"xrd:client\" /> <wsdl:part name= \"service\" element= \"xrd:service\" /> <wsdl:part name= \"id\" element= \"xrd:id\" /> <wsdl:part name= \"userId\" element= \"xrd:userId\" /> <wsdl:part name= \"issue\" element= \"xrd:issue\" /> <wsdl:part name= \"protocolVersion\" element= \"xrd:protocolVersion\" /> </wsdl:message> <wsdl:portType name= \"ValidationWebService\" > <wsdl:operation name= \"ValidateDocument\" > <wsdl:input message= \"tns:ValidateDocument\" name= \"ValidateDocument\" /> <wsdl:output message= \"tns:ValidateDocumentResponse\" name= \"ValidateDocumentResponse\" /> </wsdl:operation> </wsdl:portType> <wsdl:binding name= \"SignatureValidationServiceSoapBinding\" type= \"tns:ValidationWebService\" > <soap:binding style= \"document\" transport= \"http://schemas.xmlsoap.org/soap/http\" /> <wsdl:operation name= \"ValidateDocument\" > <soap:operation soapAction= \"\" style= \"document\" /> <wsdl:input name= \"ValidateDocument\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:input> <wsdl:output name= \"ValidateDocumentResponse\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:output> </wsdl:operation> </wsdl:binding> <wsdl:service name= \"SignatureValidationService\" > <wsdl:port binding= \"tns:SignatureValidationServiceSoapBinding\" name= \"ValidationWebServiceImplPort\" > <soap:address location= \"http://localhost:8080/soap/validationWebService\" /> </wsdl:port> </wsdl:service> </wsdl:definitions> Data files web service wsdl <wsdl:definitions xmlns:wsdl= \"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:soap= \"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:xrd= \"http://x-road.eu/xsd/xroad.xsd\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" name= \"DataFilesService\" > <wsdl:types> <xs:schema xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" > <xs:import namespace= \"http://x-road.eu/xsd/xroad.xsd\" schemaLocation= \"xroad.xsd\" /> <xs:element name= \"GetDocumentDataFiles\" type= \"tns:GetDocumentDataFiles\" /> <xs:element name= \"GetDocumentDataFilesResponse\" type= \"tns:GetDocumentDataFilesResponse\" /> <xs:element name= \"DataFilesReport\" type= \"tns:DataFilesReport\" /> <xs:element name= \"DataFilesRequest\" type= \"tns:SoapDataFilesRequest\" /> <xs:complexType name= \"GetDocumentDataFiles\" > <xs:sequence> <xs:element ref= \"tns:DataFilesRequest\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"SoapDataFilesRequest\" > <xs:sequence> <xs:element name= \"Document\" type= \"xs:string\" /> <xs:element minOccurs= \"0\" maxOccurs= \"1\" name= \"Filename\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"GetDocumentDataFilesResponse\" > <xs:sequence> <xs:element minOccurs= \"0\" ref= \"tns:DataFilesReport\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"DataFilesReport\" > <xs:sequence> <xs:element name= \"DataFiles\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"DataFile\" type= \"tns:DataFile\" /> </xs:sequence> </xs:complexType> </xs:element> </xs:sequence> </xs:complexType> <xs:complexType name= \"DataFile\" > <xs:sequence> <xs:element name= \"Base64\" type= \"xs:string\" /> <xs:element name= \"Filename\" type= \"xs:string\" /> <xs:element name= \"MimeType\" type= \"xs:string\" /> <xs:element name= \"Size\" type= \"xs:long\" /> </xs:sequence> </xs:complexType> <xs:simpleType name= \"DocumentType\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"PDF\" /> <xs:enumeration value= \"XROAD\" /> <xs:enumeration value= \"BDOC\" /> <xs:enumeration value= \"DDOC\" /> </xs:restriction> </xs:simpleType> </xs:schema> </wsdl:types> <wsdl:message name= \"GetDocumentDataFiles\" > <wsdl:part element= \"tns:GetDocumentDataFiles\" name= \"parameters\" /> </wsdl:message> <wsdl:message name= \"GetDocumentDataFilesResponse\" > <wsdl:part element= \"tns:GetDocumentDataFilesResponse\" name= \"parameters\" /> </wsdl:message> <wsdl:message name= \"requestHeader\" > <wsdl:part name= \"client\" element= \"xrd:client\" /> <wsdl:part name= \"service\" element= \"xrd:service\" /> <wsdl:part name= \"id\" element= \"xrd:id\" /> <wsdl:part name= \"userId\" element= \"xrd:userId\" /> <wsdl:part name= \"issue\" element= \"xrd:issue\" /> <wsdl:part name= \"protocolVersion\" element= \"xrd:protocolVersion\" /> </wsdl:message> <wsdl:portType name= \"DataFilesWebService\" > <wsdl:operation name= \"GetDocumentDataFiles\" > <wsdl:input message= \"tns:GetDocumentDataFiles\" name= \"GetDocumentDataFiles\" /> <wsdl:output message= \"tns:GetDocumentDataFilesResponse\" name= \"GetDocumentDataFilesResponse\" /> </wsdl:operation> </wsdl:portType> <wsdl:binding name= \"DataFilesServiceSoapBinding\" type= \"tns:DataFilesWebService\" > <soap:binding style= \"document\" transport= \"http://schemas.xmlsoap.org/soap/http\" /> <wsdl:operation name= \"GetDocumentDataFiles\" > <soap:operation soapAction= \"\" style= \"document\" /> <wsdl:input name= \"GetDocumentDataFiles\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:input> <wsdl:output name= \"GetDocumentDataFilesResponse\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:output> </wsdl:operation> </wsdl:binding> <wsdl:service name= \"DataFilesWebService\" > <wsdl:port binding= \"tns:DataFilesServiceSoapBinding\" name= \"DataFilesWebServiceImplPort\" > <soap:address location= \"http://localhost:8080/soap/dataFilesWebService\" /> </wsdl:port> </wsdl:service> </wsdl:definitions> DSS detailed report XSD <?xml version=\"1.0\" encoding=\"UTF-8\"?> <xs:schema attributeFormDefault= \"unqualified\" elementFormDefault= \"qualified\" targetNamespace= \"http://dss.esig.europa.eu/validation/detailed-report\" xmlns= \"http://dss.esig.europa.eu/validation/detailed-report\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" > <xs:element name= \"DetailedReport\" > <xs:complexType> <xs:sequence> <xs:element type= \"Signature\" name= \"Signatures\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element type= \"BasicBuildingBlocks\" name= \"BasicBuildingBlocks\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element type= \"QMatrixBlock\" name= \"QMatrixBlock\" minOccurs= \"0\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:complexType name= \"Signature\" > <xs:sequence> <xs:element type= \"ValidationProcessBasicSignatures\" name= \"ValidationProcessBasicSignatures\" minOccurs= \"0\" /> <xs:element type= \"ValidationProcessTimestamps\" name= \"ValidationProcessTimestamps\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element type= \"ValidationProcessLongTermData\" name= \"ValidationProcessLongTermData\" minOccurs= \"0\" /> <xs:element type= \"ValidationProcessArchivalData\" name= \"ValidationProcessArchivalData\" minOccurs= \"0\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"Type\" type= \"xs:string\" use= \"optional\" /> </xs:complexType> <xs:complexType name= \"BasicBuildingBlocks\" > <xs:sequence> <xs:element type= \"FC\" name= \"FC\" minOccurs= \"0\" /> <xs:element type= \"ISC\" name= \"ISC\" minOccurs= \"0\" /> <xs:element type= \"VCI\" name= \"VCI\" minOccurs= \"0\" /> <xs:element type= \"CV\" name= \"CV\" minOccurs= \"0\" /> <xs:element type= \"SAV\" name= \"SAV\" minOccurs= \"0\" /> <xs:element type= \"XCV\" name= \"XCV\" minOccurs= \"0\" /> <xs:element type= \"PSV\" name= \"PSV\" minOccurs= \"0\" /> <xs:element type= \"PCV\" name= \"PCV\" minOccurs= \"0\" /> <xs:element type= \"VTS\" name= \"VTS\" minOccurs= \"0\" /> <xs:element type= \"Conclusion\" name= \"Conclusion\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"Type\" type= \"xs:string\" use= \"required\" /> </xs:complexType> <xs:complexType name= \"QMatrixBlock\" > <xs:sequence> <xs:element type= \"TLAnalysis\" name= \"TLAnalysis\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element type= \"SignatureAnalysis\" name= \"SignatureAnalysis\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"TLAnalysis\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:attribute name= \"CountryCode\" type= \"xs:string\" use= \"required\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"SignatureAnalysis\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"SignatureQualification\" type= \"SignatureQualification\" use= \"optional\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ConstraintsConclusion\" > <xs:sequence> <xs:element type= \"Constraint\" name= \"Constraint\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element type= \"Conclusion\" name= \"Conclusion\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"ValidationProcessBasicSignatures\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ValidationProcessTimestamps\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"Type\" type= \"xs:string\" use= \"required\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ValidationProcessLongTermData\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ValidationProcessArchivalData\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"FC\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ISC\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"VCI\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"RFC\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"CV\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"SAV\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"XCV\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:sequence> <xs:element name= \"SubXCV\" type= \"SubXCV\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"SubXCV\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:sequence> <xs:element name= \"RFC\" type= \"RFC\" minOccurs= \"0\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"TrustAnchor\" type= \"xs:boolean\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"VTS\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:sequence> <xs:element name= \"ControlTime\" type= \"xs:dateTime\" /> </xs:sequence> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"PCV\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:sequence> <xs:element name= \"ControlTime\" type= \"xs:dateTime\" minOccurs= \"0\" /> </xs:sequence> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"PSV\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ERV\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"Constraint\" > <xs:sequence> <xs:element type= \"Name\" name= \"Name\" /> <xs:element type= \"Status\" name= \"Status\" /> <xs:element type= \"Name\" name= \"Error\" minOccurs= \"0\" /> <xs:element type= \"Name\" name= \"Warning\" minOccurs= \"0\" /> <xs:element type= \"Name\" name= \"Info\" minOccurs= \"0\" /> <xs:element type= \"xs:string\" name= \"AdditionalInfo\" minOccurs= \"0\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"optional\" /> <!-- In case of constraint with a BBB --> </xs:complexType> <xs:complexType name= \"Conclusion\" > <xs:sequence> <xs:element type= \"Indication\" name= \"Indication\" /> <xs:element type= \"SubIndication\" name= \"SubIndication\" minOccurs= \"0\" /> <xs:element type= \"Name\" name= \"Errors\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element type= \"Name\" name= \"Warnings\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element type= \"Name\" name= \"Infos\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"Name\" > <xs:simpleContent> <xs:extension base= \"xs:string\" > <xs:attribute name= \"NameId\" type= \"xs:string\" /> </xs:extension> </xs:simpleContent> </xs:complexType> <xs:simpleType name= \"Status\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"OK\" /> <xs:enumeration value= \"NOT OK\" /> <xs:enumeration value= \"IGNORED\" /> <xs:enumeration value= \"INFORMATION\" /> <xs:enumeration value= \"WARNING\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"Indication\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"PASSED\" /> <xs:enumeration value= \"INDETERMINATE\" /> <xs:enumeration value= \"FAILED\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"SubIndication\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"NO_SIGNING_CERTIFICATE_FOUND\" /> <xs:enumeration value= \"FORMAT_FAILURE\" /> <xs:enumeration value= \"SIGNATURE_POLICY_NOT_AVAILABLE\" /> <xs:enumeration value= \"POLICY_PROCESSING_ERROR\" /> <xs:enumeration value= \"OUT_OF_BOUNDS_NO_POE\" /> <xs:enumeration value= \"NO_CERTIFICATE_CHAIN_FOUND\" /> <xs:enumeration value= \"TRY_LATER\" /> <xs:enumeration value= \"REVOKED_NO_POE\" /> <xs:enumeration value= \"REVOKED_CA_NO_POE\" /> <xs:enumeration value= \"CHAIN_CONSTRAINTS_FAILURE\" /> <xs:enumeration value= \"CRYPTO_CONSTRAINTS_FAILURE\" /> <xs:enumeration value= \"CRYPTO_CONSTRAINTS_FAILURE_NO_POE\" /> <xs:enumeration value= \"SIGNED_DATA_NOT_FOUND\" /> <xs:enumeration value= \"HASH_FAILURE\" /> <xs:enumeration value= \"SIG_CRYPTO_FAILURE\" /> <xs:enumeration value= \"SIG_CONSTRAINTS_FAILURE\" /> <xs:enumeration value= \"NOT_YET_VALID\" /> <xs:enumeration value= \"TIMESTAMP_ORDER_FAILURE\" /> <xs:enumeration value= \"REVOKED\" /> <xs:enumeration value= \"EXPIRED\" /> <xs:enumeration value= \"NO_POE\" /> <xs:enumeration value= \"CERTIFICATE_CHAIN_GENERAL_FAILURE\" /> <xs:enumeration value= \"UNEXPECTED_ERROR\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"SignatureQualification\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"QESig\" /> <xs:enumeration value= \"QESeal\" /> <xs:enumeration value= \"QES?\" /> <xs:enumeration value= \"AdESig-QC\" /> <xs:enumeration value= \"AdESeal-QC\" /> <xs:enumeration value= \"AdES?-QC\" /> <xs:enumeration value= \"AdESig\" /> <xs:enumeration value= \"AdESeal\" /> <xs:enumeration value= \"AdES?\" /> <xs:enumeration value= \"Indeterminate QESig\" /> <xs:enumeration value= \"Indeterminate QESeal\" /> <xs:enumeration value= \"Indeterminate QES?\" /> <xs:enumeration value= \"Indeterminate AdESig-QC\" /> <xs:enumeration value= \"Indeterminate AdESeal-QC\" /> <xs:enumeration value= \"Indeterminate AdES?-QC\" /> <xs:enumeration value= \"Indeterminate AdESig\" /> <xs:enumeration value= \"Indeterminate AdESeal\" /> <xs:enumeration value= \"Indeterminate AdES?\" /> <xs:enumeration value= \"Not AdES but QC with QSCD\" /> <xs:enumeration value= \"Not AdES but QC\" /> <xs:enumeration value= \"Not AdES\" /> <xs:enumeration value= \"N/A\" /> </xs:restriction> </xs:simpleType> </xs:schema>","title":"Appendix 3 - WSDL/XSD of SOAP Interface"},{"location":"siva2/appendix/wsdl/#validation-web-service-wsdl","text":"<wsdl:definitions xmlns:wsdl= \"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:soap= \"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:xrd= \"http://x-road.eu/xsd/xroad.xsd\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" xmlns:external= \"http://dss.esig.europa.eu/validation/detailed-report\" name= \"SignatureValidationService\" > <wsdl:types> <xs:schema xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" > <xs:import namespace= \"http://x-road.eu/xsd/xroad.xsd\" schemaLocation= \"xroad.xsd\" /> <xs:import namespace= \"http://dss.esig.europa.eu/validation/detailed-report\" schemaLocation= \"DetailedReport.xsd\" /> <xs:element name= \"ValidateDocument\" type= \"tns:ValidateDocument\" /> <xs:element name= \"ValidationRequest\" type= \"tns:SoapValidationRequest\" /> <xs:element name= \"ValidateDocumentResponse\" type= \"tns:ValidateDocumentResponse\" /> <xs:element name= \"ValidationReport\" type= \"tns:ValidationReport\" /> <xs:element name= \"ValidationProcess\" substitutionGroup= \"external:DetailedReport\" /> <xs:element name= \"ValidationConclusion\" type= \"tns:ValidationConclusion\" /> <xs:complexType name= \"ValidateDocument\" > <xs:sequence> <xs:element ref= \"tns:ValidationRequest\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"SoapValidationRequest\" > <xs:sequence> <xs:element name= \"Document\" type= \"xs:string\" /> <xs:element name= \"Filename\" type= \"xs:string\" /> <xs:element minOccurs= \"0\" maxOccurs= \"1\" name= \"ReportType\" type= \"xs:string\" /> <xs:element minOccurs= \"0\" maxOccurs= \"1\" name= \"DocumentType\" type= \"tns:DocumentType\" /> <xs:element minOccurs= \"0\" name= \"SignaturePolicy\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"ValidateDocumentResponse\" > <xs:sequence> <xs:element minOccurs= \"1\" ref= \"tns:ValidationReport\" /> <xs:element minOccurs= \"0\" name= \"ValidationReportSignature\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"ValidationReport\" > <xs:sequence> <xs:element minOccurs= \"1\" ref= \"tns:ValidationConclusion\" /> <xs:element minOccurs= \"0\" ref= \"tns:ValidationProcess\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"ValidationConclusion\" > <xs:sequence> <xs:element name= \"Policy\" type= \"tns:Policy\" /> <xs:element name= \"ValidationTime\" type= \"xs:string\" /> <xs:element name= \"ValidatedDocument\" type= \"tns:ValidatedDocumentData\" /> <xs:element name= \"ValidationLevel\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"ValidationWarnings\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"ValidationWarning\" type= \"tns:ValidationWarning\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"SignatureForm\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"Signatures\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"Signature\" type= \"tns:SignatureValidationData\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"TimeStampTokens\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element minOccurs= \"0\" maxOccurs= \"unbounded\" name= \"TimeStampToken\" type= \"tns:TimeStampTokenData\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"ValidSignaturesCount\" minOccurs= \"0\" type= \"xs:int\" /> <xs:element name= \"SignaturesCount\" minOccurs= \"0\" type= \"xs:int\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"Policy\" > <xs:sequence> <xs:element name= \"PolicyDescription\" type= \"xs:string\" /> <xs:element name= \"PolicyName\" type= \"xs:string\" /> <xs:element name= \"PolicyUrl\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"TimeStampTokenData\" > <xs:sequence> <xs:element name= \"Indication\" type= \"tns:Indication\" /> <xs:element name= \"SignedBy\" type= \"xs:string\" /> <xs:element name= \"SignedTime\" type= \"xs:string\" /> <xs:element name= \"Errors\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"Error\" type= \"tns:Error\" /> </xs:sequence> </xs:complexType> </xs:element> </xs:sequence> </xs:complexType> <xs:complexType name= \"ValidatedDocumentData\" > <xs:sequence> <xs:element name= \"Filename\" type= \"xs:string\" /> <xs:element name= \"FileHash\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"HashAlgo\" minOccurs= \"0\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"SignatureValidationData\" > <xs:sequence> <xs:element name= \"Id\" type= \"xs:string\" /> <xs:element name= \"SignatureFormat\" type= \"xs:string\" /> <xs:element name= \"SignatureLevel\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"SignedBy\" type= \"xs:string\" /> <xs:element name= \"Indication\" type= \"tns:Indication\" /> <xs:element name= \"SubIndication\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"Errors\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"Error\" type= \"tns:Error\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"SignatureScopes\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" name= \"SignatureScope\" type= \"tns:SignatureScope\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"ClaimedSigningTime\" type= \"xs:string\" /> <xs:element name= \"Warnings\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"Warning\" type= \"tns:Warning\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"Info\" minOccurs= \"0\" type= \"tns:Info\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"Error\" > <xs:sequence> <xs:element name= \"Content\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"ValidationWarning\" > <xs:sequence> <xs:element name= \"Content\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"SignatureScope\" > <xs:sequence> <xs:element name= \"Name\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"Scope\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"Content\" minOccurs= \"0\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"Warning\" > <xs:sequence> <xs:element name= \"Content\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"Info\" > <xs:sequence> <xs:element minOccurs= \"0\" name= \"BestSignatureTime\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:simpleType name= \"DocumentType\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"XROAD\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"Indication\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"TOTAL-PASSED\" /> <xs:enumeration value= \"TOTAL-FAILED\" /> <xs:enumeration value= \"INDETERMINATE\" /> </xs:restriction> </xs:simpleType> </xs:schema> </wsdl:types> <wsdl:message name= \"ValidateDocument\" > <wsdl:part element= \"tns:ValidateDocument\" name= \"parameters\" /> </wsdl:message> <wsdl:message name= \"ValidateDocumentResponse\" > <wsdl:part element= \"tns:ValidateDocumentResponse\" name= \"parameters\" /> </wsdl:message> <wsdl:message name= \"requestHeader\" > <wsdl:part name= \"client\" element= \"xrd:client\" /> <wsdl:part name= \"service\" element= \"xrd:service\" /> <wsdl:part name= \"id\" element= \"xrd:id\" /> <wsdl:part name= \"userId\" element= \"xrd:userId\" /> <wsdl:part name= \"issue\" element= \"xrd:issue\" /> <wsdl:part name= \"protocolVersion\" element= \"xrd:protocolVersion\" /> </wsdl:message> <wsdl:portType name= \"ValidationWebService\" > <wsdl:operation name= \"ValidateDocument\" > <wsdl:input message= \"tns:ValidateDocument\" name= \"ValidateDocument\" /> <wsdl:output message= \"tns:ValidateDocumentResponse\" name= \"ValidateDocumentResponse\" /> </wsdl:operation> </wsdl:portType> <wsdl:binding name= \"SignatureValidationServiceSoapBinding\" type= \"tns:ValidationWebService\" > <soap:binding style= \"document\" transport= \"http://schemas.xmlsoap.org/soap/http\" /> <wsdl:operation name= \"ValidateDocument\" > <soap:operation soapAction= \"\" style= \"document\" /> <wsdl:input name= \"ValidateDocument\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:input> <wsdl:output name= \"ValidateDocumentResponse\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:output> </wsdl:operation> </wsdl:binding> <wsdl:service name= \"SignatureValidationService\" > <wsdl:port binding= \"tns:SignatureValidationServiceSoapBinding\" name= \"ValidationWebServiceImplPort\" > <soap:address location= \"http://localhost:8080/soap/validationWebService\" /> </wsdl:port> </wsdl:service> </wsdl:definitions>","title":"Validation web service wsdl"},{"location":"siva2/appendix/wsdl/#data-files-web-service-wsdl","text":"<wsdl:definitions xmlns:wsdl= \"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:soap= \"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:xrd= \"http://x-road.eu/xsd/xroad.xsd\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" name= \"DataFilesService\" > <wsdl:types> <xs:schema xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" > <xs:import namespace= \"http://x-road.eu/xsd/xroad.xsd\" schemaLocation= \"xroad.xsd\" /> <xs:element name= \"GetDocumentDataFiles\" type= \"tns:GetDocumentDataFiles\" /> <xs:element name= \"GetDocumentDataFilesResponse\" type= \"tns:GetDocumentDataFilesResponse\" /> <xs:element name= \"DataFilesReport\" type= \"tns:DataFilesReport\" /> <xs:element name= \"DataFilesRequest\" type= \"tns:SoapDataFilesRequest\" /> <xs:complexType name= \"GetDocumentDataFiles\" > <xs:sequence> <xs:element ref= \"tns:DataFilesRequest\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"SoapDataFilesRequest\" > <xs:sequence> <xs:element name= \"Document\" type= \"xs:string\" /> <xs:element minOccurs= \"0\" maxOccurs= \"1\" name= \"Filename\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"GetDocumentDataFilesResponse\" > <xs:sequence> <xs:element minOccurs= \"0\" ref= \"tns:DataFilesReport\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"DataFilesReport\" > <xs:sequence> <xs:element name= \"DataFiles\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"DataFile\" type= \"tns:DataFile\" /> </xs:sequence> </xs:complexType> </xs:element> </xs:sequence> </xs:complexType> <xs:complexType name= \"DataFile\" > <xs:sequence> <xs:element name= \"Base64\" type= \"xs:string\" /> <xs:element name= \"Filename\" type= \"xs:string\" /> <xs:element name= \"MimeType\" type= \"xs:string\" /> <xs:element name= \"Size\" type= \"xs:long\" /> </xs:sequence> </xs:complexType> <xs:simpleType name= \"DocumentType\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"PDF\" /> <xs:enumeration value= \"XROAD\" /> <xs:enumeration value= \"BDOC\" /> <xs:enumeration value= \"DDOC\" /> </xs:restriction> </xs:simpleType> </xs:schema> </wsdl:types> <wsdl:message name= \"GetDocumentDataFiles\" > <wsdl:part element= \"tns:GetDocumentDataFiles\" name= \"parameters\" /> </wsdl:message> <wsdl:message name= \"GetDocumentDataFilesResponse\" > <wsdl:part element= \"tns:GetDocumentDataFilesResponse\" name= \"parameters\" /> </wsdl:message> <wsdl:message name= \"requestHeader\" > <wsdl:part name= \"client\" element= \"xrd:client\" /> <wsdl:part name= \"service\" element= \"xrd:service\" /> <wsdl:part name= \"id\" element= \"xrd:id\" /> <wsdl:part name= \"userId\" element= \"xrd:userId\" /> <wsdl:part name= \"issue\" element= \"xrd:issue\" /> <wsdl:part name= \"protocolVersion\" element= \"xrd:protocolVersion\" /> </wsdl:message> <wsdl:portType name= \"DataFilesWebService\" > <wsdl:operation name= \"GetDocumentDataFiles\" > <wsdl:input message= \"tns:GetDocumentDataFiles\" name= \"GetDocumentDataFiles\" /> <wsdl:output message= \"tns:GetDocumentDataFilesResponse\" name= \"GetDocumentDataFilesResponse\" /> </wsdl:operation> </wsdl:portType> <wsdl:binding name= \"DataFilesServiceSoapBinding\" type= \"tns:DataFilesWebService\" > <soap:binding style= \"document\" transport= \"http://schemas.xmlsoap.org/soap/http\" /> <wsdl:operation name= \"GetDocumentDataFiles\" > <soap:operation soapAction= \"\" style= \"document\" /> <wsdl:input name= \"GetDocumentDataFiles\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:input> <wsdl:output name= \"GetDocumentDataFilesResponse\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:output> </wsdl:operation> </wsdl:binding> <wsdl:service name= \"DataFilesWebService\" > <wsdl:port binding= \"tns:DataFilesServiceSoapBinding\" name= \"DataFilesWebServiceImplPort\" > <soap:address location= \"http://localhost:8080/soap/dataFilesWebService\" /> </wsdl:port> </wsdl:service> </wsdl:definitions>","title":"Data files web service wsdl"},{"location":"siva2/appendix/wsdl/#dss-detailed-report-xsd","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <xs:schema attributeFormDefault= \"unqualified\" elementFormDefault= \"qualified\" targetNamespace= \"http://dss.esig.europa.eu/validation/detailed-report\" xmlns= \"http://dss.esig.europa.eu/validation/detailed-report\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" > <xs:element name= \"DetailedReport\" > <xs:complexType> <xs:sequence> <xs:element type= \"Signature\" name= \"Signatures\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element type= \"BasicBuildingBlocks\" name= \"BasicBuildingBlocks\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element type= \"QMatrixBlock\" name= \"QMatrixBlock\" minOccurs= \"0\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:complexType name= \"Signature\" > <xs:sequence> <xs:element type= \"ValidationProcessBasicSignatures\" name= \"ValidationProcessBasicSignatures\" minOccurs= \"0\" /> <xs:element type= \"ValidationProcessTimestamps\" name= \"ValidationProcessTimestamps\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element type= \"ValidationProcessLongTermData\" name= \"ValidationProcessLongTermData\" minOccurs= \"0\" /> <xs:element type= \"ValidationProcessArchivalData\" name= \"ValidationProcessArchivalData\" minOccurs= \"0\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"Type\" type= \"xs:string\" use= \"optional\" /> </xs:complexType> <xs:complexType name= \"BasicBuildingBlocks\" > <xs:sequence> <xs:element type= \"FC\" name= \"FC\" minOccurs= \"0\" /> <xs:element type= \"ISC\" name= \"ISC\" minOccurs= \"0\" /> <xs:element type= \"VCI\" name= \"VCI\" minOccurs= \"0\" /> <xs:element type= \"CV\" name= \"CV\" minOccurs= \"0\" /> <xs:element type= \"SAV\" name= \"SAV\" minOccurs= \"0\" /> <xs:element type= \"XCV\" name= \"XCV\" minOccurs= \"0\" /> <xs:element type= \"PSV\" name= \"PSV\" minOccurs= \"0\" /> <xs:element type= \"PCV\" name= \"PCV\" minOccurs= \"0\" /> <xs:element type= \"VTS\" name= \"VTS\" minOccurs= \"0\" /> <xs:element type= \"Conclusion\" name= \"Conclusion\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"Type\" type= \"xs:string\" use= \"required\" /> </xs:complexType> <xs:complexType name= \"QMatrixBlock\" > <xs:sequence> <xs:element type= \"TLAnalysis\" name= \"TLAnalysis\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element type= \"SignatureAnalysis\" name= \"SignatureAnalysis\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"TLAnalysis\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:attribute name= \"CountryCode\" type= \"xs:string\" use= \"required\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"SignatureAnalysis\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"SignatureQualification\" type= \"SignatureQualification\" use= \"optional\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ConstraintsConclusion\" > <xs:sequence> <xs:element type= \"Constraint\" name= \"Constraint\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element type= \"Conclusion\" name= \"Conclusion\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"ValidationProcessBasicSignatures\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ValidationProcessTimestamps\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"Type\" type= \"xs:string\" use= \"required\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ValidationProcessLongTermData\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ValidationProcessArchivalData\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"FC\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ISC\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"VCI\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"RFC\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"CV\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"SAV\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"XCV\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:sequence> <xs:element name= \"SubXCV\" type= \"SubXCV\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"SubXCV\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:sequence> <xs:element name= \"RFC\" type= \"RFC\" minOccurs= \"0\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"TrustAnchor\" type= \"xs:boolean\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"VTS\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:sequence> <xs:element name= \"ControlTime\" type= \"xs:dateTime\" /> </xs:sequence> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"PCV\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:sequence> <xs:element name= \"ControlTime\" type= \"xs:dateTime\" minOccurs= \"0\" /> </xs:sequence> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"PSV\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ERV\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"Constraint\" > <xs:sequence> <xs:element type= \"Name\" name= \"Name\" /> <xs:element type= \"Status\" name= \"Status\" /> <xs:element type= \"Name\" name= \"Error\" minOccurs= \"0\" /> <xs:element type= \"Name\" name= \"Warning\" minOccurs= \"0\" /> <xs:element type= \"Name\" name= \"Info\" minOccurs= \"0\" /> <xs:element type= \"xs:string\" name= \"AdditionalInfo\" minOccurs= \"0\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"optional\" /> <!-- In case of constraint with a BBB --> </xs:complexType> <xs:complexType name= \"Conclusion\" > <xs:sequence> <xs:element type= \"Indication\" name= \"Indication\" /> <xs:element type= \"SubIndication\" name= \"SubIndication\" minOccurs= \"0\" /> <xs:element type= \"Name\" name= \"Errors\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element type= \"Name\" name= \"Warnings\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element type= \"Name\" name= \"Infos\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"Name\" > <xs:simpleContent> <xs:extension base= \"xs:string\" > <xs:attribute name= \"NameId\" type= \"xs:string\" /> </xs:extension> </xs:simpleContent> </xs:complexType> <xs:simpleType name= \"Status\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"OK\" /> <xs:enumeration value= \"NOT OK\" /> <xs:enumeration value= \"IGNORED\" /> <xs:enumeration value= \"INFORMATION\" /> <xs:enumeration value= \"WARNING\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"Indication\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"PASSED\" /> <xs:enumeration value= \"INDETERMINATE\" /> <xs:enumeration value= \"FAILED\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"SubIndication\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"NO_SIGNING_CERTIFICATE_FOUND\" /> <xs:enumeration value= \"FORMAT_FAILURE\" /> <xs:enumeration value= \"SIGNATURE_POLICY_NOT_AVAILABLE\" /> <xs:enumeration value= \"POLICY_PROCESSING_ERROR\" /> <xs:enumeration value= \"OUT_OF_BOUNDS_NO_POE\" /> <xs:enumeration value= \"NO_CERTIFICATE_CHAIN_FOUND\" /> <xs:enumeration value= \"TRY_LATER\" /> <xs:enumeration value= \"REVOKED_NO_POE\" /> <xs:enumeration value= \"REVOKED_CA_NO_POE\" /> <xs:enumeration value= \"CHAIN_CONSTRAINTS_FAILURE\" /> <xs:enumeration value= \"CRYPTO_CONSTRAINTS_FAILURE\" /> <xs:enumeration value= \"CRYPTO_CONSTRAINTS_FAILURE_NO_POE\" /> <xs:enumeration value= \"SIGNED_DATA_NOT_FOUND\" /> <xs:enumeration value= \"HASH_FAILURE\" /> <xs:enumeration value= \"SIG_CRYPTO_FAILURE\" /> <xs:enumeration value= \"SIG_CONSTRAINTS_FAILURE\" /> <xs:enumeration value= \"NOT_YET_VALID\" /> <xs:enumeration value= \"TIMESTAMP_ORDER_FAILURE\" /> <xs:enumeration value= \"REVOKED\" /> <xs:enumeration value= \"EXPIRED\" /> <xs:enumeration value= \"NO_POE\" /> <xs:enumeration value= \"CERTIFICATE_CHAIN_GENERAL_FAILURE\" /> <xs:enumeration value= \"UNEXPECTED_ERROR\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"SignatureQualification\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"QESig\" /> <xs:enumeration value= \"QESeal\" /> <xs:enumeration value= \"QES?\" /> <xs:enumeration value= \"AdESig-QC\" /> <xs:enumeration value= \"AdESeal-QC\" /> <xs:enumeration value= \"AdES?-QC\" /> <xs:enumeration value= \"AdESig\" /> <xs:enumeration value= \"AdESeal\" /> <xs:enumeration value= \"AdES?\" /> <xs:enumeration value= \"Indeterminate QESig\" /> <xs:enumeration value= \"Indeterminate QESeal\" /> <xs:enumeration value= \"Indeterminate QES?\" /> <xs:enumeration value= \"Indeterminate AdESig-QC\" /> <xs:enumeration value= \"Indeterminate AdESeal-QC\" /> <xs:enumeration value= \"Indeterminate AdES?-QC\" /> <xs:enumeration value= \"Indeterminate AdESig\" /> <xs:enumeration value= \"Indeterminate AdESeal\" /> <xs:enumeration value= \"Indeterminate AdES?\" /> <xs:enumeration value= \"Not AdES but QC with QSCD\" /> <xs:enumeration value= \"Not AdES but QC\" /> <xs:enumeration value= \"Not AdES\" /> <xs:enumeration value= \"N/A\" /> </xs:restriction> </xs:simpleType> </xs:schema>","title":"DSS detailed report XSD"},{"location":"siva3/definitions/","text":"BDOC A digital signature format that was created in order to replace the DDOC (DigiDoc) digital signature format that is specific to Estonia. DDOC A format of digitally signed files based on the ETSI TS 101 903 Standard that is called \u2018XML Advanced Electronic Signatures (XAdES)\u2019. The standard describes the structure of digitally signed documents on various levels of incorporation of additional validity verification information. DigiDoc corresponds to the XAdES profile \u2018XAdES-X-L\u2019. DSS Digital Signature Services is Java library to sign and validate European digital signature formats Fat JAR The fat JAR is the JAR, which contains classes from all the libraries, on which your project depends and, the classes of built project. JAR Java Archive is a package file format typically used to aggregate many Java class files and associated metadata and resources (text, images, etc.) into one file to distribute application software or libraries on the Java platform. JVM The Java Virtual Machine is the runtime engine of the Java Platform, which allows any program written in Java or other language compiled into Java bytecode to run on any computer that has a native JVM. Linux an operating system, based on UNIX, that runs on many different hardware platforms and whose source code is available to the public. PDF Portable document format is a file format that provides an electronic image of text or text and graphics that looks like a printed document and can be viewed, printed, and electronically transmitted. SiVa is RESTful web service providing digital signature validation services for BDOC, DDOC, PDF and X-Road files Spring Boot is a framework from the team at Pivotal, designed to simplify the bootstrapping and development of a new Spring application. The framework takes an opinionated approach to configuration, freeing developers from the need to define boilerplate configuration X-Road X-Road, the data exchange layer for information systems, is a technological and organizational environment enabling a secure Internet-based data exchange between information systems.","title":"1. DEFINITIONS"},{"location":"siva3/deployment/","text":"The deployment view of the architecture describes the various physical nodes in the most typical configuration for SiVa service provider. Nodes In the following section, a description of each network node element is described in detail. Node Setup description Load balancer server Load balancer distributes traffic between SiVa server nodes when there is more than one Siva server instance running. SiVa does not set any specific requirements for load balancer. As an example, the nginx reverse proxy is used. Siva server Two separate services are set up to run on SiVa server: the SiVa webapp itself and the X-road validation webapp , to provide X-road support SiVa webapp SiVa web appliction is executable Spring Boot JAR file. This means all the dependencies and servlet containers are packaged inside single JAR file. The JAR file can be placed anywhere in server and the JAR must be marked executable if its not already. There also should be separate user created to run executalbe JAR as Linux service. Read more about running Spring Boot applications as Linux system service X-road validation webapp SiVa X-Road validation service is also Spring Boot executable JAR application and also should be installed as Linux service. X-Road validation service communicates with SiVa web application over HTTP and default port is 8081 Note that X-Road separate installation is required to avoid BouncyCastle library version conflicts and class loader issues. X-road security server A standard X-road security server setup. The SiVa validation service wsdl has to be registered to provide service to other organisations using XRoad infrastructure. Setting up XRoad Security server is out of scope for SiVa documentaton (see the official installation instructions ). Demo server Demo server hosts the Demo webapp provided within SiVa project as a reference client implementation. Demo webapp - single Java web application that provides a simple form to upload and validate a signed file in Siva webapp. Demo webapp serves as a tool for evaluating and testing the validation service. Horizontal scaling Neither the Siva webapp , X-road validation webapp , nor Demo wbapp persist their state in sessions between requests. Therefore it is possible to install multiple instances of these services behind respective load balancers.","title":"5.1 Deployment model"},{"location":"siva3/deployment/#nodes","text":"In the following section, a description of each network node element is described in detail. Node Setup description Load balancer server Load balancer distributes traffic between SiVa server nodes when there is more than one Siva server instance running. SiVa does not set any specific requirements for load balancer. As an example, the nginx reverse proxy is used. Siva server Two separate services are set up to run on SiVa server: the SiVa webapp itself and the X-road validation webapp , to provide X-road support SiVa webapp SiVa web appliction is executable Spring Boot JAR file. This means all the dependencies and servlet containers are packaged inside single JAR file. The JAR file can be placed anywhere in server and the JAR must be marked executable if its not already. There also should be separate user created to run executalbe JAR as Linux service. Read more about running Spring Boot applications as Linux system service X-road validation webapp SiVa X-Road validation service is also Spring Boot executable JAR application and also should be installed as Linux service. X-Road validation service communicates with SiVa web application over HTTP and default port is 8081 Note that X-Road separate installation is required to avoid BouncyCastle library version conflicts and class loader issues. X-road security server A standard X-road security server setup. The SiVa validation service wsdl has to be registered to provide service to other organisations using XRoad infrastructure. Setting up XRoad Security server is out of scope for SiVa documentaton (see the official installation instructions ). Demo server Demo server hosts the Demo webapp provided within SiVa project as a reference client implementation. Demo webapp - single Java web application that provides a simple form to upload and validate a signed file in Siva webapp. Demo webapp serves as a tool for evaluating and testing the validation service.","title":"Nodes"},{"location":"siva3/deployment/#horizontal-scaling","text":"Neither the Siva webapp , X-road validation webapp , nor Demo wbapp persist their state in sessions between requests. Therefore it is possible to install multiple instances of these services behind respective load balancers.","title":"Horizontal scaling"},{"location":"siva3/deployment_guide/","text":"The following guide is for system integrators who need to set-up, configure, manage and troubleshoot SiVa service. System requirements Following are the minimum requirements to build and deploy SiVa webapps as a service: Java 11 or above is supported Git version control system version 1.8 or above is recommended Minimum 2 GB of RAM. Recommended at least 4 GB of RAM Minimum 1 processor core Open internet connection 2GB of free disk space Supported operating system is Ubuntu 16.04 LTS Building Building SiVa webapps It is recommended to build the project with Maven Wrapper. Run following command in the projects main directory: ./mvnw clean install Note The first time build can take up to 45 minutes because of downloading the required dependencies, running vulnerability checks and unit tests. To verify that SiVa project built successfully look for BUILD SUCCESS in build compilation output last lines. The last lines of build output should look very similar to below image: [INFO] Reactor Summary: [INFO] [INFO] SiVa Digitally signed documents validation service 3.3.0 SUCCESS [ 2.089 s] [INFO] validation-services-parent ......................... SUCCESS [ 0.380 s] [INFO] validation-commons ................................. SUCCESS [ 13.782 s] [INFO] tsl-loader ......................................... SUCCESS [ 9.372 s] [INFO] Generic Validation Service ......................... SUCCESS [ 41.723 s] [INFO] TimeStampToken Validation Service .................. SUCCESS [ 8.400 s] [INFO] Time-mark container Validation Service ............. SUCCESS [ 36.508 s] [INFO] SiVa webapp and other core modules ................. SUCCESS [ 0.374 s] [INFO] siva-monitoring .................................... SUCCESS [ 11.982 s] [INFO] xroad-validation-service ........................... SUCCESS [ 19.587 s] [INFO] siva-statistics .................................... SUCCESS [ 9.816 s] [INFO] SiVa validation service proxy ...................... SUCCESS [ 14.861 s] [INFO] SiVa signature service ............................. SUCCESS [ 7.801 s] [INFO] siva-webapp ........................................ SUCCESS [ 42.451 s] [INFO] SiVa Sample Web application ........................ SUCCESS [ 42.236 s] [INFO] SiVa Web Service integration tests ................. SUCCESS [ 18.830 s] [INFO] siva-distribution 3.3.0 ............................ SUCCESS [ 5.763 s] [INFO] ------------------------------------------------------------------------ [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------ [INFO] Total time: 04:46 min [INFO] Finished at: 2020-07-03T14:22:02+03:00 [INFO] ------------------------------------------------------------------------ Deploying OPTION 1 - starting webapps from command line SiVa project compiles 3 fat executable JAR files that you can run after successfully building the project by issuing below commands: First start the Siva webapp ./siva-parent/siva-webapp/target/siva-webapp-3.3.0.jar Secondly start X-road validation webapp ./validation-services-parent/xroad-validation-service/target/xroad-validation-service-3.3.0.jar The SiVa webapp by default runs on port 8080 and XRoad validation service starts up on port 8081 . Easiest way to test out the deployment is to run SiVa demo application and use it for validation. Start the Demo webapp ./siva-parent/siva-sample-application/target/siva-sample-application-3.3.0.jar Now point Your browser to URL: http://localhost:9000 OPTION 2 - running webapps as systemd services Maven build generates executable JAR files. This means web container and all its dependencies are package inside single JAR file. It makes a lot easier to deploy it into servers. Easiest option to setup SiVa is as systemd service in Ubuntu servers. For that we first need to create service file: vim siva-webapp.service Inside it we need to paste below text. You need to change few things in service setup file. First you must not run service as root . So it's strongly recommended to change line User=root Second You can change Java JVM options by modifying the JAVA_OPTS inside the siva-webapp.service file. Also You can change the SiVa application configuration options by modifying RUN_ARGS section in file [Unit] Description = siva-webapp After = syslog.target [Service] User = root ExecStart = /var/apps/siva-webapp.jar Environment = JAVA_OPTS=-Xmx320m RUN_ARGS=--server.port=80 SuccessExitStatus = 143 [Install] WantedBy = multi-user.target Save and close the siva-webapp.service file. Next we need to move siva-webapp-3.3.0.jar into newly created /var/apps directory and rename to JAR file to siva-webapp.jar . match Note The copied JAR filename must match option ExecStart in siva-webapp.service file sudo mkdir /var/apps sudo cp siva-parent/siva-webapp/target/executable/siva-webapp-3.3.0.jar /var/apps/siva-webapp.jar Next we need to copy the siva-webapp.service file into /lib/systemd/system directory. Then we are ready to start the siva-webapp service. sudo cp siva-webapp.service /lib/systemd/system sudo systemctl start siva-webapp Final step of setting up the siva-webapp service is to verify that service started correctly by issuing below command. systemctl status siva-webapp It should print out similar to below picture: \u25cf siva - webapp . service - siva - webapp Loaded : loaded ( / lib / systemd / system / siva - webapp . service ; disabled ; vendor preset : enabled ) Active : active ( running ) since Thu 2016 - 07 - 21 08 : 48 : 14 EDT ; 1 day 2 h ago Main PID : 15965 ( siva - webapp . jar ) Tasks : 34 Memory : 429.6 M CPU : 2 min 5.721 s CGroup : / system . slice / siva - webapp . service \u251c\u2500 15965 / bin / bash / var / apps / stage / siva - webapp . jar \u2514\u2500 15982 / usr / bin / java - Dsun . misc . URLClassPath . disableJarChecking = true - Xmx320m - jar / var / apps / stage / siva - webapp . jar Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: at eu . europa . esig . dss . tsl . service . TSLParser . getTslModel ( TSLParser . java : 143 ) Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: at eu . europa . esig . dss . tsl . service . TSLParser . call ( TSLParser . java : 129 ) Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: ... 5 common frames omitted Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: 20.07 . 2016 03 : 00 : 01.450 INFO [ pool - 3 - thread - 1 ] [ e . e . e . dss . tsl . service . TSLRepository . sync Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: 20.07 . 2016 03 : 00 : 01.450 INFO [ pool - 3 - thread - 1 ] [ e . e . e . dss . tsl . service . TSLRepository . sync OPTION 3 - deploy webapps as war files (Tomcat setup for legacy systems) NOTE 1 : Each SiVa service must be deployed to separate instance of Tomcat to avoid Java JAR library version conflicts. NOTE 2 : To limit your webapp request size (this is set automatically when deploying service as jar) one needs to configure the container manually. For example, when using Tomcat 8 - the http connector parameter maxPostSize should be configured with the desired limit. NOTE 3 : The war file must be deployed to Tomcat ROOT. First we need to download Tomcat web servlet container as of the writing latest version available in version 8 branch is 8.5.24. We will download it with wget wget http://www-eu.apache.org/dist/tomcat/tomcat-8/v8.5.24/bin/apache-tomcat-8.5.24.tar.gz Unpack it somewhere: tar xf apache-tomcat-8.5.24.tar.gz Now we should build the WAR file. We have created helper script with all the correct Maven parameters. ./war-build.sh Final steps would be copying built WAR file into Tomcat webapps directory and starting the servlet container. cp siva-parent/siva-webapp/target/siva-webapp-3.3.0.war apache-tomcat-8.5.24/webapps ./apache-tomcat-7.0.77/bin/catalina.sh run IMPORTANT siva-webapp on startup creates etc directory where it copies the TSL validaiton certificates siva-keystore.jks . Default location for this directory is application root or $CATALINA_HOME . To change this default behavior you should set environment variable DSS_DATA_FOLDER . IMPORTANT When updating the siva-keystore.jks it is needed to delete the \"temp\" keystore from default/specified location. Deleting the \"temp\" keystore is also needed when upgrading your deployment to newer SIVA version! How-to set WAR deployed SiVa application.properties SiVa override properties can be set using application.properties file. The file can locate anywhare in the host system. To make properties file accessible for SiVa you need to create or edit setenv.sh placed inside bin directory. Contents of the setenv.sh file should look like: export CATALINA_OPTS = \"-Dspring.config.location=file:/path/to/application.properties\" Smoke testing your deployed system Step 1 . Install HTTPIE httpie is more user friendly version of curl and we will use to verify that SiVa was installed and started correctly on our server. If you have Python and its package manager pip installed. Then You can issue below command: pip install httpie Step 2 . Download a sample JSON request file. http --download https://raw.githubusercontent.com/open-eid/SiVa/develop/build-helpers/sample-requests/bdocPass.json Step 3 . After successful download issue below command in same directory where you downloaded the file using the command below. http POST http://localhost:8080/validate < bdocPass.json Step 4 . Verify the output. The output of previous command should have similar data as below screenshot. Look for signatureCount and validSignatureCount , they must be equal. Logging By default, logging works on the INFO level and logs are directed to the system console only. Logging functionality is handled by the SLF4J logging facade and on top of the Logback framework. As a result, logging can be configured via the standard Logback configuration file through Spring boot. Additional logging appenders can be added. Consult logback documentation for more details on log file structure. For example, adding application.properties to classpath with the logging.config property logging.config = /path/to/logback.xml Statistics For every validation a statistical report is composed that contains the following data: Property Type Description stats Object Object containing statistic info stats.type String Container type ( text value that identifies the container type) of the validated document: ASiC-E, ASIC-S, PAdES, DIGIDOC_XML, N/A stats.sigType String Signature type in validated document: XAdES, CAdES, PAdES, XROAD_XAdES, N/A stats.usrId String (Text data that contains the SiVa user identifier for reports (from the HTTP x-authenticated-user header) or N/A) stats.dur Number The time it takes to process an incoming request - measured in milliseconds stats.sigCt Number The value of the \"signaturesCount\" element in the validation report stats.vSigCt Number The value of the \"validSignaturesCount\" element in the validation report stats.sigRslt Array Array of signature statistic objects stats.sigRslt[0] Object Object containing signature statistic info stats.sigRslt[0].i String Value of signature indication field from the validation report stats.sigRslt[0].si String Value of signature subindication field from the validation report. Element not present if not in validation report stats.sigRslt[0].cc String Country code extracted from the signer cert subject field. The ISO-3166-1 alpha-2 country code that is associated with signature (the signing certificate or XX if the country cannot be determined. stats.sigRslt[0].sf String Values of signatureFormat field from the validation report Example of statistic { \"stats\": { \"type\": \"PAdES\", \"sigType\": \"PAdES\", \"usrId\": \"sample_user1\", \"dur\": 4021, \"sigCt\": 2, \"vSigCt\": 1, \"sigRslt\": [ {\"i\":\"TOTAL-PASSED\", \"cc\":\"EE\", \"sf\":\"PAdES_BASELINE_LT\"}, {\"i\":\"INDETERMINATE\", \"si\":\"NO_CERTIFICATE_CHAIN_FOUND\", \"cc\":\"EE\", \"sf\":\"PAdES_BASELINE_LT\"} ] } } This information is sent to log feeds (at INFO level) which can be redirected to files or to a syslog feed. Monitoring SiVa webapps provide an endpoint for external monitoring tools to periodically check the generic service health status. Note Note that this endpoint is disabled by default. The url for accessing JSON formatted health information with HTTP GET is /monitoring/health . See the Interfaces section for response structure and details. Enabling and disabling the monitoring endpoint To enable the endpoint, use the following configuration parameter: management.endpoints.web.exposure.include = health External service health indicators The endpoint is implemented as a customized Spring boot health endpoint , which allows to add custom health indicators. Demo webapp and Siva webapp include additional information about the health of their dependent services. These links to dependent web services have been preconfigured. For example, the Demo webapp is preset to check whether the Siva webapp is accessible from the following url (parameter siva.service.serviceHost value)/monitoring/health and the Siva webapp verifies that the X-road validation service webapp is accessible by checking the default url (configured by parameter siva.proxy.xroadUrl value)/monitoring/health url. Validation Report Signature SiVa provides the ability to sign the validation report. The idea of supplementing the validation report with a validation report signature is to prove the authority's authenticity and integrity over the validation. Note Signing of validation report is disabled by default To enable it, use the following configuration parameter: siva.report.reportSignatureEnabled = true When validation report signature is enabled, only detailed validation reports will be signed, simple reports will not be signed. The validation report's digital signature is composed out of response's validationReport object. The target format of the signature is ASiC-E (signature level is configurable). The ASiC-E container contents are encoded into Base64 and put on the same level int the response as the validation report itself. Note Enabling the validation report signing will affect the performance of the service. Example structure of the response containing report signature: { \"validationReport\" : { ... }, \"validationReportSignature\" : \"ZHNmYmhkZmdoZGcgZmRmMTM0NTM...\" } Supported interfaces for signature creation: PKCS#11 - a platform-independent API for cryptographic tokens, such as hardware security modules (HSM) and smart cards PKCS#12 - for files bundled with private key and certificate Report signature configuration parameters: Property Description siva.report.reportSignatureEnabled Enables signing of the validation report. Validation report will only be signed when requesting detailed report. Default: false siva.signatureService.signatureLevel The level of the validation report signature. Example values: * XAdES_BASELINE_B * XAdES_BASELINE_T * XAdES_BASELINE_LT * XAdES_BASELINE_LTA siva.signatureService.tspUrl URL of the timestamp provider. Only needed when the configured signature level is at least XAdES_BASELINE_T siva.signatureService.ocspUrl URL of the OCSP provider. Only needed when the configured signature level is at least XAdES_BASELINE_LT siva.signatureService.pkcs11.path path to PKCS#11 module (depends on your installed smart card or hardware token library, for example: /usr/local/lib/opensc-pkcs11.so) siva.signatureService.pkcs11.password pin/password of the smart card or hardware token siva.signatureService.pkcs11.slotIndex depends on the hardware token. E.g. Estonian Smart Card uses 2, USB eToken uses 0. Default: 0 siva.signatureService.pkcs12.path path to keystore file containing certificate and private key siva.signatureService.pkcs12.password password of the keystore file containing certificate and private key Note When configuring report signature, either PKCS#11 or PKCS#12 should be configured, no need to configure both. Configuration parameters All SiVa webapps have been designed to run with predetermined defaults after building and without additional configuration. However, all the properties can be overridden on the service or embedded web server level, if necessary. By default, the service loads it's global configuration from the application.yml file that is packaged inside the jar file. Default configuration parameters can be overridden by providing custom application.yml in the following locations , or using command line parameters or by using other externalized configuration methods methods. For example, to configure the embedded Tomcat web server inside a fat jar to run on different port (default is 8080), change the server.port following property: server.port = 8080 Or to increase or modify the default http request limit, override the server.max-http-post-size property: server.max-http-post-size: 13981016 See the reference list of all common application properties provided by Spring boot Siva webapp parameters Updating TSL Property Description siva.tsl.loader.loadFromCache A boolean value that determines, whether the TSL disk cache is updated by downloading a new TSL in a predetermined interval Note that the cache is by default stored in a system temporary folder (can be set with system property java.io.tmpdir ) in a subdirectory named dss_cache_tsl When set to false the cache is refreshed periodically by SiVa in a predetermined interval specified by siva.tsl.loader.schedulerCron using siva.tsl.loader.url When set to true the siva uses existing cache as it's TSL. No direct polling for updates are performed. Default: false siva.tsl.loader.url A url value that points to the external TSL Default: https://ec.europa.eu/tools/lotl/eu-lotl.xml siva.tsl.loader.ojUrl A url value that points to the legal act in Official Journal of the European Union Default: https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=uriserv:OJ.C_.2019.276.01.0001.01.ENG siva.tsl.loader.lotlRootSchemeInfoUri A url value that points to the European Unions' disclaimer regarding LOTL Default: https://ec.europa.eu/tools/lotl/eu-lotl-legalnotice.html siva.tsl.loader.code Sets the LOTL code in DSS Default: EU siva.tsl.loader.trustedTerritories Sets the trusted territories by countries Default: \"AT\", \"BE\", \"BG\", \"CY\", \"CZ\", \"DE\", \"DK\", \"EE\", \"ES\", \"FI\", \"FR\", \"GR\", \"HU\", \"HR\", \"IE\", \"IS\", \"IT\", \"LT\", \"LU\", \"LV\", \"LI\", \"MT\", \"NO\", \"NL\", \"PL\", \"PT\", \"RO\", \"SE\", \"SI\", \"SK\", \"UK\" siva.tsl.loader.schedulerCron A string in a Crontab expression format that defines the interval at which the TSL renewal process is started. The default is 03:00 every day (local time) Default: 0 0 3 * * ? siva.tsl.loader.sslTruststorePath Path to truststore containing trusted CA certificates used in HTTPS connection to retrieve member states TSLs Default: classpath:tsl-ssl-truststore.p12 siva.tsl.loader.sslTruststoreType Truststore type Default: PKCS12 siva.tsl.loader.sslTruststorePassword Truststore password Default: digidoc4j-password siva.keystore.type Keystore type Default: JKS siva.keystore.filename Keystore that contains public keys of trusted LOTL signers for LOTL signature validation Default: siva-keystore.jks siva.keystore.password Keystore password Default: siva-keystore-password Note Note that the keystore file location can be overriden using environment variable DSS_DATA_FOLDER . By default the keystore file location, is expected to be on local filesystem in etc directory which is at the same level with the fat jar file (one is created, if no such directory exists). Note When updating the siva-keystore.jks it is needed to delete the \"temp\" keystore from default/specified location. Deleting the \"temp\" keystore is also needed when upgrading your deployment to newer SIVA version! Note TSL is currently used only by Generic and BDOC validators Forward to custom X-road webapp instance Property Description siva.proxy.xroadUrl A URL where the X-Road validation requests are forwarded Default: http://localhost:8081 Configure SOAP services endpoint URL-s displayed in WSDL Property Description siva.wsdl.endpoint-url SOAP services endpoint URL to what specific service name is added within the application. Must contain only scheme, host and/or port and optional path. Service name must not be added to the url. TimeMark validation - customizing policies Property Description siva.bdoc.digidoc4JConfigurationFile Path to Digidoc4j configuration override Default: N/A Property Description siva.bdoc.signaturePolicy.defaultPolicy Selected default policy name Default: N/A siva.bdoc.signaturePolicy.policies[index].name Policy name Default: N/A siva.bdoc.signaturePolicy.policies[index].description Policy description Default: N/A siva.bdoc.signaturePolicy.policies[index].constraintPath Constraint XML file path for the policy. An absolute path or a reference to a resource on the classpath Default: N/A siva.bdoc.signaturePolicy.policies[index].url Policy URL Default: N/A By default, the following configuration is used siva.bdoc.signaturePolicy.policies[0].name=POLv3 siva.bdoc.signaturePolicy.policies[0].description=Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. siva.bdoc.signaturePolicy.policies[0].url=http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv3 siva.bdoc.signaturePolicy.policies[0].constraintPath=bdoc_constraint_ades.xml siva.bdoc.signaturePolicy.policies[1].name=POLv4 siva.bdoc.signaturePolicy.policies[1].description=Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result. siva.bdoc.signaturePolicy.policies[1].url=http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 siva.bdoc.signaturePolicy.policies[1].constraintPath=bdoc_constraint_qes.xml Note Default policy configuration is lost when policy detail properties (name, description, url or constraintPath) are overridden or new custom policies added in custom configuration files (in this case, the existing default policies must be redefined in configuration files explicitly) Generic validation - customize validation policies Property Description siva.europe.signaturePolicy.defaultPolicy Selected default policy name Default: N/A siva.europe.signaturePolicy.policies[index].name Policy name Default: N/A siva.europe.signaturePolicy.policies[index].description Policy description Default: N/A siva.europe.signaturePolicy.policies[index].constraintPath Constraint XML file path for the policy. An absolute path or a reference to a resource on the classpath Default: N/A siva.europe.signaturePolicy.policies[index].url Policy URL Default: N/A By default, the following configuration is used siva.europe.signaturePolicy.policies[0].name=POLv3 siva.europe.signaturePolicy.policies[0].description=Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. siva.europe.signaturePolicy.policies[0].url=http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv3 siva.europe.signaturePolicy.policies[0].constraintPath=generic_constraint_ades.xml siva.europe.signaturePolicy.policies[1].name=POLv4 siva.europe.signaturePolicy.policies[1].description=Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result. siva.europe.signaturePolicy.policies[1].url=http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 siva.europe.signaturePolicy.policies[1].constraintPath=generic_constraint_qes.xml Note Default policy configuration is lost when policy detail properties (name, description, url or constraintPath) are overridden or new custom policies added in custom configuration files (in this case, the existing default policies must be redefined in configuration files explicitly) X-road validation Property Description siva.xroad.validation.service.configurationDirectoryPath Directory that contains the certs of approved CA's, TSA's and list of members Default: /verificationconf Property Description siva.xroad.signaturePolicy.defaultPolicy Selected default policy name Default: N/A siva.xroad.signaturePolicy.policies[index].name Policy name Default: N/A siva.xroad.signaturePolicy.policies[index].description Policy description Default: N/A siva.xroad.signaturePolicy.policies[index].constraintPath Constraint XML file path for the policy. An absolute path or a reference to a resource on the classpath Default: N/A siva.xroad.signaturePolicy.policies[index].url Policy URL Default: N/A By default, the following configuration is used siva.xroad.signaturePolicy.policies[0].name=POLv3 siva.xroad.signaturePolicy.policies[0].description=Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. siva.xroad.signaturePolicy.policies[0].url=http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv3 siva.xroad.signaturePolicy.policies[0].constraintPath=xroad_constraint_no_type.xml Note Default policy configuration is lost when policy detail properties (name, description, url or constraintPath) are overridden or new custom policies added in custom configuration files (in this case, the existing default policies must be redefined in configuration files explicitly) Note By default, X-road validation currently supports only POLv3 Demo webapp parameters Linking to SiVa webapp Property Description siva.service.serviceHost An HTTP URL link to the Siva webapp Default: http://localhost:8080 siva.service.jsonServicePath Service path in Siva webapp to access the REST/JSON API Default: /validate siva.service.soapServicePath Service path in Siva webapp to access the SOAP API Default: /soap/validationWebService/validateDocument siva.service.jsonDataFilesServicePath Data file service path in Siva webapp to access the REST/JSON API Default: /getDataFiles siva.service.soapDataFilesServicePath Data file service path in Siva webapp to access the SOAP API Default: /soap/dataFilesWebService/getDocumentDataFiles siva.service.trustStore Path to Siva webapp truststore on classpath Default: siva_server_truststore.p12 siva.service.trustStorePassword Siva webapp truststore password Default: password","title":"5.2 Deployment guide"},{"location":"siva3/deployment_guide/#system-requirements","text":"Following are the minimum requirements to build and deploy SiVa webapps as a service: Java 11 or above is supported Git version control system version 1.8 or above is recommended Minimum 2 GB of RAM. Recommended at least 4 GB of RAM Minimum 1 processor core Open internet connection 2GB of free disk space Supported operating system is Ubuntu 16.04 LTS","title":"System requirements"},{"location":"siva3/deployment_guide/#building","text":"","title":"Building"},{"location":"siva3/deployment_guide/#building-siva-webapps","text":"It is recommended to build the project with Maven Wrapper. Run following command in the projects main directory: ./mvnw clean install Note The first time build can take up to 45 minutes because of downloading the required dependencies, running vulnerability checks and unit tests. To verify that SiVa project built successfully look for BUILD SUCCESS in build compilation output last lines. The last lines of build output should look very similar to below image: [INFO] Reactor Summary: [INFO] [INFO] SiVa Digitally signed documents validation service 3.3.0 SUCCESS [ 2.089 s] [INFO] validation-services-parent ......................... SUCCESS [ 0.380 s] [INFO] validation-commons ................................. SUCCESS [ 13.782 s] [INFO] tsl-loader ......................................... SUCCESS [ 9.372 s] [INFO] Generic Validation Service ......................... SUCCESS [ 41.723 s] [INFO] TimeStampToken Validation Service .................. SUCCESS [ 8.400 s] [INFO] Time-mark container Validation Service ............. SUCCESS [ 36.508 s] [INFO] SiVa webapp and other core modules ................. SUCCESS [ 0.374 s] [INFO] siva-monitoring .................................... SUCCESS [ 11.982 s] [INFO] xroad-validation-service ........................... SUCCESS [ 19.587 s] [INFO] siva-statistics .................................... SUCCESS [ 9.816 s] [INFO] SiVa validation service proxy ...................... SUCCESS [ 14.861 s] [INFO] SiVa signature service ............................. SUCCESS [ 7.801 s] [INFO] siva-webapp ........................................ SUCCESS [ 42.451 s] [INFO] SiVa Sample Web application ........................ SUCCESS [ 42.236 s] [INFO] SiVa Web Service integration tests ................. SUCCESS [ 18.830 s] [INFO] siva-distribution 3.3.0 ............................ SUCCESS [ 5.763 s] [INFO] ------------------------------------------------------------------------ [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------ [INFO] Total time: 04:46 min [INFO] Finished at: 2020-07-03T14:22:02+03:00 [INFO] ------------------------------------------------------------------------","title":"Building SiVa webapps"},{"location":"siva3/deployment_guide/#deploying","text":"","title":"Deploying"},{"location":"siva3/deployment_guide/#option-1-starting-webapps-from-command-line","text":"SiVa project compiles 3 fat executable JAR files that you can run after successfully building the project by issuing below commands: First start the Siva webapp ./siva-parent/siva-webapp/target/siva-webapp-3.3.0.jar Secondly start X-road validation webapp ./validation-services-parent/xroad-validation-service/target/xroad-validation-service-3.3.0.jar The SiVa webapp by default runs on port 8080 and XRoad validation service starts up on port 8081 . Easiest way to test out the deployment is to run SiVa demo application and use it for validation. Start the Demo webapp ./siva-parent/siva-sample-application/target/siva-sample-application-3.3.0.jar Now point Your browser to URL: http://localhost:9000","title":"OPTION 1 - starting webapps from command line"},{"location":"siva3/deployment_guide/#option-2-running-webapps-as-systemd-services","text":"Maven build generates executable JAR files. This means web container and all its dependencies are package inside single JAR file. It makes a lot easier to deploy it into servers. Easiest option to setup SiVa is as systemd service in Ubuntu servers. For that we first need to create service file: vim siva-webapp.service Inside it we need to paste below text. You need to change few things in service setup file. First you must not run service as root . So it's strongly recommended to change line User=root Second You can change Java JVM options by modifying the JAVA_OPTS inside the siva-webapp.service file. Also You can change the SiVa application configuration options by modifying RUN_ARGS section in file [Unit] Description = siva-webapp After = syslog.target [Service] User = root ExecStart = /var/apps/siva-webapp.jar Environment = JAVA_OPTS=-Xmx320m RUN_ARGS=--server.port=80 SuccessExitStatus = 143 [Install] WantedBy = multi-user.target Save and close the siva-webapp.service file. Next we need to move siva-webapp-3.3.0.jar into newly created /var/apps directory and rename to JAR file to siva-webapp.jar . match Note The copied JAR filename must match option ExecStart in siva-webapp.service file sudo mkdir /var/apps sudo cp siva-parent/siva-webapp/target/executable/siva-webapp-3.3.0.jar /var/apps/siva-webapp.jar Next we need to copy the siva-webapp.service file into /lib/systemd/system directory. Then we are ready to start the siva-webapp service. sudo cp siva-webapp.service /lib/systemd/system sudo systemctl start siva-webapp Final step of setting up the siva-webapp service is to verify that service started correctly by issuing below command. systemctl status siva-webapp It should print out similar to below picture: \u25cf siva - webapp . service - siva - webapp Loaded : loaded ( / lib / systemd / system / siva - webapp . service ; disabled ; vendor preset : enabled ) Active : active ( running ) since Thu 2016 - 07 - 21 08 : 48 : 14 EDT ; 1 day 2 h ago Main PID : 15965 ( siva - webapp . jar ) Tasks : 34 Memory : 429.6 M CPU : 2 min 5.721 s CGroup : / system . slice / siva - webapp . service \u251c\u2500 15965 / bin / bash / var / apps / stage / siva - webapp . jar \u2514\u2500 15982 / usr / bin / java - Dsun . misc . URLClassPath . disableJarChecking = true - Xmx320m - jar / var / apps / stage / siva - webapp . jar Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: at eu . europa . esig . dss . tsl . service . TSLParser . getTslModel ( TSLParser . java : 143 ) Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: at eu . europa . esig . dss . tsl . service . TSLParser . call ( TSLParser . java : 129 ) Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: ... 5 common frames omitted Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: 20.07 . 2016 03 : 00 : 01.450 INFO [ pool - 3 - thread - 1 ] [ e . e . e . dss . tsl . service . TSLRepository . sync Jul 20 03 : 00 : 01 siva siva - webapp . jar [ 15965 ]: 20.07 . 2016 03 : 00 : 01.450 INFO [ pool - 3 - thread - 1 ] [ e . e . e . dss . tsl . service . TSLRepository . sync","title":"OPTION 2 - running webapps as systemd services"},{"location":"siva3/deployment_guide/#option-3-deploy-webapps-as-war-files-tomcat-setup-for-legacy-systems","text":"NOTE 1 : Each SiVa service must be deployed to separate instance of Tomcat to avoid Java JAR library version conflicts. NOTE 2 : To limit your webapp request size (this is set automatically when deploying service as jar) one needs to configure the container manually. For example, when using Tomcat 8 - the http connector parameter maxPostSize should be configured with the desired limit. NOTE 3 : The war file must be deployed to Tomcat ROOT. First we need to download Tomcat web servlet container as of the writing latest version available in version 8 branch is 8.5.24. We will download it with wget wget http://www-eu.apache.org/dist/tomcat/tomcat-8/v8.5.24/bin/apache-tomcat-8.5.24.tar.gz Unpack it somewhere: tar xf apache-tomcat-8.5.24.tar.gz Now we should build the WAR file. We have created helper script with all the correct Maven parameters. ./war-build.sh Final steps would be copying built WAR file into Tomcat webapps directory and starting the servlet container. cp siva-parent/siva-webapp/target/siva-webapp-3.3.0.war apache-tomcat-8.5.24/webapps ./apache-tomcat-7.0.77/bin/catalina.sh run IMPORTANT siva-webapp on startup creates etc directory where it copies the TSL validaiton certificates siva-keystore.jks . Default location for this directory is application root or $CATALINA_HOME . To change this default behavior you should set environment variable DSS_DATA_FOLDER . IMPORTANT When updating the siva-keystore.jks it is needed to delete the \"temp\" keystore from default/specified location. Deleting the \"temp\" keystore is also needed when upgrading your deployment to newer SIVA version!","title":"OPTION 3  - deploy webapps as war files (Tomcat setup for legacy systems)"},{"location":"siva3/deployment_guide/#how-to-set-war-deployed-siva-applicationproperties","text":"SiVa override properties can be set using application.properties file. The file can locate anywhare in the host system. To make properties file accessible for SiVa you need to create or edit setenv.sh placed inside bin directory. Contents of the setenv.sh file should look like: export CATALINA_OPTS = \"-Dspring.config.location=file:/path/to/application.properties\"","title":"How-to set WAR deployed SiVa application.properties"},{"location":"siva3/deployment_guide/#smoke-testing-your-deployed-system","text":"Step 1 . Install HTTPIE httpie is more user friendly version of curl and we will use to verify that SiVa was installed and started correctly on our server. If you have Python and its package manager pip installed. Then You can issue below command: pip install httpie Step 2 . Download a sample JSON request file. http --download https://raw.githubusercontent.com/open-eid/SiVa/develop/build-helpers/sample-requests/bdocPass.json Step 3 . After successful download issue below command in same directory where you downloaded the file using the command below. http POST http://localhost:8080/validate < bdocPass.json Step 4 . Verify the output. The output of previous command should have similar data as below screenshot. Look for signatureCount and validSignatureCount , they must be equal.","title":"Smoke testing your deployed system"},{"location":"siva3/deployment_guide/#logging","text":"By default, logging works on the INFO level and logs are directed to the system console only. Logging functionality is handled by the SLF4J logging facade and on top of the Logback framework. As a result, logging can be configured via the standard Logback configuration file through Spring boot. Additional logging appenders can be added. Consult logback documentation for more details on log file structure. For example, adding application.properties to classpath with the logging.config property logging.config = /path/to/logback.xml","title":"Logging"},{"location":"siva3/deployment_guide/#statistics","text":"For every validation a statistical report is composed that contains the following data: Property Type Description stats Object Object containing statistic info stats.type String Container type ( text value that identifies the container type) of the validated document: ASiC-E, ASIC-S, PAdES, DIGIDOC_XML, N/A stats.sigType String Signature type in validated document: XAdES, CAdES, PAdES, XROAD_XAdES, N/A stats.usrId String (Text data that contains the SiVa user identifier for reports (from the HTTP x-authenticated-user header) or N/A) stats.dur Number The time it takes to process an incoming request - measured in milliseconds stats.sigCt Number The value of the \"signaturesCount\" element in the validation report stats.vSigCt Number The value of the \"validSignaturesCount\" element in the validation report stats.sigRslt Array Array of signature statistic objects stats.sigRslt[0] Object Object containing signature statistic info stats.sigRslt[0].i String Value of signature indication field from the validation report stats.sigRslt[0].si String Value of signature subindication field from the validation report. Element not present if not in validation report stats.sigRslt[0].cc String Country code extracted from the signer cert subject field. The ISO-3166-1 alpha-2 country code that is associated with signature (the signing certificate or XX if the country cannot be determined. stats.sigRslt[0].sf String Values of signatureFormat field from the validation report Example of statistic { \"stats\": { \"type\": \"PAdES\", \"sigType\": \"PAdES\", \"usrId\": \"sample_user1\", \"dur\": 4021, \"sigCt\": 2, \"vSigCt\": 1, \"sigRslt\": [ {\"i\":\"TOTAL-PASSED\", \"cc\":\"EE\", \"sf\":\"PAdES_BASELINE_LT\"}, {\"i\":\"INDETERMINATE\", \"si\":\"NO_CERTIFICATE_CHAIN_FOUND\", \"cc\":\"EE\", \"sf\":\"PAdES_BASELINE_LT\"} ] } } This information is sent to log feeds (at INFO level) which can be redirected to files or to a syslog feed.","title":"Statistics"},{"location":"siva3/deployment_guide/#monitoring","text":"SiVa webapps provide an endpoint for external monitoring tools to periodically check the generic service health status. Note Note that this endpoint is disabled by default. The url for accessing JSON formatted health information with HTTP GET is /monitoring/health . See the Interfaces section for response structure and details. Enabling and disabling the monitoring endpoint To enable the endpoint, use the following configuration parameter: management.endpoints.web.exposure.include = health External service health indicators The endpoint is implemented as a customized Spring boot health endpoint , which allows to add custom health indicators. Demo webapp and Siva webapp include additional information about the health of their dependent services. These links to dependent web services have been preconfigured. For example, the Demo webapp is preset to check whether the Siva webapp is accessible from the following url (parameter siva.service.serviceHost value)/monitoring/health and the Siva webapp verifies that the X-road validation service webapp is accessible by checking the default url (configured by parameter siva.proxy.xroadUrl value)/monitoring/health url.","title":"Monitoring"},{"location":"siva3/deployment_guide/#validation-report-signature","text":"SiVa provides the ability to sign the validation report. The idea of supplementing the validation report with a validation report signature is to prove the authority's authenticity and integrity over the validation. Note Signing of validation report is disabled by default To enable it, use the following configuration parameter: siva.report.reportSignatureEnabled = true When validation report signature is enabled, only detailed validation reports will be signed, simple reports will not be signed. The validation report's digital signature is composed out of response's validationReport object. The target format of the signature is ASiC-E (signature level is configurable). The ASiC-E container contents are encoded into Base64 and put on the same level int the response as the validation report itself. Note Enabling the validation report signing will affect the performance of the service. Example structure of the response containing report signature: { \"validationReport\" : { ... }, \"validationReportSignature\" : \"ZHNmYmhkZmdoZGcgZmRmMTM0NTM...\" } Supported interfaces for signature creation: PKCS#11 - a platform-independent API for cryptographic tokens, such as hardware security modules (HSM) and smart cards PKCS#12 - for files bundled with private key and certificate Report signature configuration parameters: Property Description siva.report.reportSignatureEnabled Enables signing of the validation report. Validation report will only be signed when requesting detailed report. Default: false siva.signatureService.signatureLevel The level of the validation report signature. Example values: * XAdES_BASELINE_B * XAdES_BASELINE_T * XAdES_BASELINE_LT * XAdES_BASELINE_LTA siva.signatureService.tspUrl URL of the timestamp provider. Only needed when the configured signature level is at least XAdES_BASELINE_T siva.signatureService.ocspUrl URL of the OCSP provider. Only needed when the configured signature level is at least XAdES_BASELINE_LT siva.signatureService.pkcs11.path path to PKCS#11 module (depends on your installed smart card or hardware token library, for example: /usr/local/lib/opensc-pkcs11.so) siva.signatureService.pkcs11.password pin/password of the smart card or hardware token siva.signatureService.pkcs11.slotIndex depends on the hardware token. E.g. Estonian Smart Card uses 2, USB eToken uses 0. Default: 0 siva.signatureService.pkcs12.path path to keystore file containing certificate and private key siva.signatureService.pkcs12.password password of the keystore file containing certificate and private key Note When configuring report signature, either PKCS#11 or PKCS#12 should be configured, no need to configure both.","title":"Validation Report Signature"},{"location":"siva3/deployment_guide/#configuration-parameters","text":"All SiVa webapps have been designed to run with predetermined defaults after building and without additional configuration. However, all the properties can be overridden on the service or embedded web server level, if necessary. By default, the service loads it's global configuration from the application.yml file that is packaged inside the jar file. Default configuration parameters can be overridden by providing custom application.yml in the following locations , or using command line parameters or by using other externalized configuration methods methods. For example, to configure the embedded Tomcat web server inside a fat jar to run on different port (default is 8080), change the server.port following property: server.port = 8080 Or to increase or modify the default http request limit, override the server.max-http-post-size property: server.max-http-post-size: 13981016 See the reference list of all common application properties provided by Spring boot","title":"Configuration parameters"},{"location":"siva3/deployment_guide/#siva-webapp-parameters","text":"Updating TSL Property Description siva.tsl.loader.loadFromCache A boolean value that determines, whether the TSL disk cache is updated by downloading a new TSL in a predetermined interval Note that the cache is by default stored in a system temporary folder (can be set with system property java.io.tmpdir ) in a subdirectory named dss_cache_tsl When set to false the cache is refreshed periodically by SiVa in a predetermined interval specified by siva.tsl.loader.schedulerCron using siva.tsl.loader.url When set to true the siva uses existing cache as it's TSL. No direct polling for updates are performed. Default: false siva.tsl.loader.url A url value that points to the external TSL Default: https://ec.europa.eu/tools/lotl/eu-lotl.xml siva.tsl.loader.ojUrl A url value that points to the legal act in Official Journal of the European Union Default: https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=uriserv:OJ.C_.2019.276.01.0001.01.ENG siva.tsl.loader.lotlRootSchemeInfoUri A url value that points to the European Unions' disclaimer regarding LOTL Default: https://ec.europa.eu/tools/lotl/eu-lotl-legalnotice.html siva.tsl.loader.code Sets the LOTL code in DSS Default: EU siva.tsl.loader.trustedTerritories Sets the trusted territories by countries Default: \"AT\", \"BE\", \"BG\", \"CY\", \"CZ\", \"DE\", \"DK\", \"EE\", \"ES\", \"FI\", \"FR\", \"GR\", \"HU\", \"HR\", \"IE\", \"IS\", \"IT\", \"LT\", \"LU\", \"LV\", \"LI\", \"MT\", \"NO\", \"NL\", \"PL\", \"PT\", \"RO\", \"SE\", \"SI\", \"SK\", \"UK\" siva.tsl.loader.schedulerCron A string in a Crontab expression format that defines the interval at which the TSL renewal process is started. The default is 03:00 every day (local time) Default: 0 0 3 * * ? siva.tsl.loader.sslTruststorePath Path to truststore containing trusted CA certificates used in HTTPS connection to retrieve member states TSLs Default: classpath:tsl-ssl-truststore.p12 siva.tsl.loader.sslTruststoreType Truststore type Default: PKCS12 siva.tsl.loader.sslTruststorePassword Truststore password Default: digidoc4j-password siva.keystore.type Keystore type Default: JKS siva.keystore.filename Keystore that contains public keys of trusted LOTL signers for LOTL signature validation Default: siva-keystore.jks siva.keystore.password Keystore password Default: siva-keystore-password Note Note that the keystore file location can be overriden using environment variable DSS_DATA_FOLDER . By default the keystore file location, is expected to be on local filesystem in etc directory which is at the same level with the fat jar file (one is created, if no such directory exists). Note When updating the siva-keystore.jks it is needed to delete the \"temp\" keystore from default/specified location. Deleting the \"temp\" keystore is also needed when upgrading your deployment to newer SIVA version! Note TSL is currently used only by Generic and BDOC validators Forward to custom X-road webapp instance Property Description siva.proxy.xroadUrl A URL where the X-Road validation requests are forwarded Default: http://localhost:8081 Configure SOAP services endpoint URL-s displayed in WSDL Property Description siva.wsdl.endpoint-url SOAP services endpoint URL to what specific service name is added within the application. Must contain only scheme, host and/or port and optional path. Service name must not be added to the url. TimeMark validation - customizing policies Property Description siva.bdoc.digidoc4JConfigurationFile Path to Digidoc4j configuration override Default: N/A Property Description siva.bdoc.signaturePolicy.defaultPolicy Selected default policy name Default: N/A siva.bdoc.signaturePolicy.policies[index].name Policy name Default: N/A siva.bdoc.signaturePolicy.policies[index].description Policy description Default: N/A siva.bdoc.signaturePolicy.policies[index].constraintPath Constraint XML file path for the policy. An absolute path or a reference to a resource on the classpath Default: N/A siva.bdoc.signaturePolicy.policies[index].url Policy URL Default: N/A By default, the following configuration is used siva.bdoc.signaturePolicy.policies[0].name=POLv3 siva.bdoc.signaturePolicy.policies[0].description=Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. siva.bdoc.signaturePolicy.policies[0].url=http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv3 siva.bdoc.signaturePolicy.policies[0].constraintPath=bdoc_constraint_ades.xml siva.bdoc.signaturePolicy.policies[1].name=POLv4 siva.bdoc.signaturePolicy.policies[1].description=Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result. siva.bdoc.signaturePolicy.policies[1].url=http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 siva.bdoc.signaturePolicy.policies[1].constraintPath=bdoc_constraint_qes.xml Note Default policy configuration is lost when policy detail properties (name, description, url or constraintPath) are overridden or new custom policies added in custom configuration files (in this case, the existing default policies must be redefined in configuration files explicitly) Generic validation - customize validation policies Property Description siva.europe.signaturePolicy.defaultPolicy Selected default policy name Default: N/A siva.europe.signaturePolicy.policies[index].name Policy name Default: N/A siva.europe.signaturePolicy.policies[index].description Policy description Default: N/A siva.europe.signaturePolicy.policies[index].constraintPath Constraint XML file path for the policy. An absolute path or a reference to a resource on the classpath Default: N/A siva.europe.signaturePolicy.policies[index].url Policy URL Default: N/A By default, the following configuration is used siva.europe.signaturePolicy.policies[0].name=POLv3 siva.europe.signaturePolicy.policies[0].description=Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. siva.europe.signaturePolicy.policies[0].url=http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv3 siva.europe.signaturePolicy.policies[0].constraintPath=generic_constraint_ades.xml siva.europe.signaturePolicy.policies[1].name=POLv4 siva.europe.signaturePolicy.policies[1].description=Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result. siva.europe.signaturePolicy.policies[1].url=http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 siva.europe.signaturePolicy.policies[1].constraintPath=generic_constraint_qes.xml Note Default policy configuration is lost when policy detail properties (name, description, url or constraintPath) are overridden or new custom policies added in custom configuration files (in this case, the existing default policies must be redefined in configuration files explicitly) X-road validation Property Description siva.xroad.validation.service.configurationDirectoryPath Directory that contains the certs of approved CA's, TSA's and list of members Default: /verificationconf Property Description siva.xroad.signaturePolicy.defaultPolicy Selected default policy name Default: N/A siva.xroad.signaturePolicy.policies[index].name Policy name Default: N/A siva.xroad.signaturePolicy.policies[index].description Policy description Default: N/A siva.xroad.signaturePolicy.policies[index].constraintPath Constraint XML file path for the policy. An absolute path or a reference to a resource on the classpath Default: N/A siva.xroad.signaturePolicy.policies[index].url Policy URL Default: N/A By default, the following configuration is used siva.xroad.signaturePolicy.policies[0].name=POLv3 siva.xroad.signaturePolicy.policies[0].description=Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. siva.xroad.signaturePolicy.policies[0].url=http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv3 siva.xroad.signaturePolicy.policies[0].constraintPath=xroad_constraint_no_type.xml Note Default policy configuration is lost when policy detail properties (name, description, url or constraintPath) are overridden or new custom policies added in custom configuration files (in this case, the existing default policies must be redefined in configuration files explicitly) Note By default, X-road validation currently supports only POLv3","title":"Siva webapp parameters"},{"location":"siva3/deployment_guide/#demo-webapp-parameters","text":"Linking to SiVa webapp Property Description siva.service.serviceHost An HTTP URL link to the Siva webapp Default: http://localhost:8080 siva.service.jsonServicePath Service path in Siva webapp to access the REST/JSON API Default: /validate siva.service.soapServicePath Service path in Siva webapp to access the SOAP API Default: /soap/validationWebService/validateDocument siva.service.jsonDataFilesServicePath Data file service path in Siva webapp to access the REST/JSON API Default: /getDataFiles siva.service.soapDataFilesServicePath Data file service path in Siva webapp to access the SOAP API Default: /soap/dataFilesWebService/getDocumentDataFiles siva.service.trustStore Path to Siva webapp truststore on classpath Default: siva_server_truststore.p12 siva.service.trustStorePassword Siva webapp truststore password Default: password","title":"Demo webapp parameters"},{"location":"siva3/interfaces/","text":"In this section the SiVa external interfaces are described. For information of internal components and their interfaces, please refer to Structure and activities . SiVa service provides REST JSON and SOAP interfaces that enable the service users to: Request validation of signatures in a digitally signed document (i.e. signature container like BDOC,ASiC-E/PDF/...); Request validation of XAdES signature without datafiles. Request datafiles inside of DDOC container SiVa service SOAP interface supports X-Road v6. However, it is optional whether to integrate SiVa service using X-Road or using \"plain\" SOAP interface. This document only describes the SiVa service part of the interface, for the X-Road specifics visit Riigi Infos\u00fcsteemi Amet webpage . In the following subsections, the SiVa validation request and response interfaces are described in detail. Validation request interface REST JSON Endpoint POST https://<server url>/validate SOAP Endpoint POST https://<server url>/soap/validationWebService/validateDocument SOAP WSDL POST https://<server url>/soap/validationWebService/validateDocument?wsdl Validation request parameters Validation request parameters for JSON and SOAP interfaces are described in the table below. Data types of SOAP parameters are defined in the SiVa WSDL document . JSON parameter SOAP parameter Mandatory JSON data type Description document Document + String Base64 encoded string of digitally signed document to be validated filename Filename + String File name of the digitally signed document (i.e. sample.bdoc), max length 255 characters. documentType DocumentType - String If not present document type is determined automatically based on the file extension used in the filename. This parameter is necessary to differentiate XROAD ASIC-E containers from standard ASIC-E containers. Possible values: XROAD - for documents created in the X-Road information system, see also specification document of the signature format. signaturePolicy SignaturePolicy - String Can be used to change the default signature validation policy that is used by the service. See also SiVa Validation Policy for more detailed information on given policy constraints. Possible values: POLv3 - signatures with all legal levels are accepted (i.e. QES, AdESqc and AdES, according to Regulation (EU) No 910/2014.) POLv4 - the default policy. Accepted signatures depend on their type (i.e. signature, seal or unknown) and legal level (i.e. QES, AdESqc and Ades) reportType ReportType - String Can be used to change the default returned report type. Possible values: Simple - default report type. Returns overall validation result (validationConclusion block) Detailed - returns detailed information about the signatures and their validation results (validationConclusion, validationProcess and validationReportSignature. Two later ones are optionally present). Diagnostic - returns diagnostic data about the information contained in the signature itself, it's revocation data and mathematical validity (validationConclusion, diagnosticData block) Sample JSON request with mandatory parameters { \"filename\" : \"sample.bdoc\" , \"document\" : \"PD94bWwgdmVyc2lvbj0iMS4....\" } Sample JSON request with all parameters { \"filename\" : \"sample.asice\" , \"document\" : \"PD94bWwgdmVyc2lvbj0iMS4....\" , \"documentType\" : \"XROAD\" , \"signaturePolicy\" : \"POLv3\" , \"reportType\" : \"Detailed\" } Sample SOAP request <?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <ns2:ValidateDocument xmlns:ns2= \"http://soap.webapp.siva.openeid.ee/\" > <ns2:ValidationRequest> <Document> PD94bWwgdmVyc2lvbj0iMS4.... </Document> <Filename> sample.asice </Filename> <DocumentType> XROAD </DocumentType> <SignaturePolicy> POLv3 </SignaturePolicy> <ReportType> Detailed </ReportType> </ns2:ValidationRequest> </ns2:ValidateDocument> </soap:Body> </soap:Envelope> Validation request interface for hashcode Hashcode XAdES validation is supported for REST JSON and SOAP interfaces. REST JSON Endpoint POST https://<server url>/validateHashcode SOAP Endpoint POST https://<server url>/soap/hashcodeValidationWebService SOAP WSDL POST https://<server url>/soap/hashcodeValidationWebService?wsdl Validation request parameters Two different use cases are supported for the hashcode validation. 1) Providing the data file name, hash algorithm and hash on validation. 2) Providing only signature file. NB! This method requires validation result change on integrator side when the local datafile hashes do not match with hashes returned in validation result! Validation request parameters for JSON interface are described in the table below. JSON parameter SOAP parameter Mandatory JSON data type Description signatureFiles SignatureFiles + Array Array containing the signature objects. signatureFiles[0] SignatureFiles.SignatureFile + Object Object containing one signature file. signatureFiles[0].signature SignatureFiles.SignatureFile.Signature + String Base64 encoded string of signature file signatureFiles[0].datafiles SignatureFiles.SignatureFile.Signature.DataFiles - Array Array containing the information for datafiles that signature is covering signatureFiles[0].datafiles[0] SignatureFiles.SignatureFile.Signature.DataFiles.DataFile + Object Object containing data file information signatureFiles[0].datafiles[0].filename SignatureFiles.SignatureFile.Signature.DataFiles.DataFile.Filename + String File name of the hashed data file, max length 255 characters. signatureFiles[0].datafiles[0].hashAlgo SignatureFiles.SignatureFile.Signature.DataFiles.DataFile.HashAlgo + String Hash algorithm used for hashing the data file (must match with algorithm in signature file). Accepted values are dependant of validation policy signatureFiles[0].datafiles[0].hash SignatureFiles.SignatureFile.Signature.DataFiles.DataFile.Hash + String Data file hash in Base64 encoded format. signaturePolicy SignaturePolicy - String Can be used to change the default signature validation policy that is used by the service. See also SiVa Validation Policy for more detailed information on given policy constraints. Possible values: POLv3 - signatures with all legal levels are accepted (i.e. QES, AdESqc and AdES, according to Regulation (EU) No 910/2014.) POLv4 - the default policy. Accepted signatures depend on their type (i.e. signature, seal or unknown) and legal level (i.e. QES, AdESqc and Ades) reportType ReportType - String Possible values: Simple - default report type. Returns overall validation result (validationConclusion block) Detailed - returns detailed information about the signatures and their validation results (validationConclusion, validationProcess and validationReportSignature. Two later ones are not supported for hashcode). Diagnostic - returns diagnostic data about the information contained in the signature itself, it's revocation data and mathematical validity (validationConclusion, diagnosticData block. Last one is not support for hashcode) Sample JSON request with mandatory parameters (datafile hashcode match verification done on integrators side) { \"signatureFiles\" : [ { \"signature\" : \"PD9094wskjd...\" }, { \"signature\" : \"AD9sa4wsfsd...\" } ] } Sample JSON request with all parameters (datafile hashcode match verification done on SIVA side) { \"signatureFiles\" : [ { \"signature\" : \"PD94bWwgdmVyc2lvbj...\" , \"datafiles\" : [ { \"filename\" : \"leping.pdf\" , \"hashAlgo\" : \"SHA256\" , \"hash\" : \"WRlczpSZXZvY2F0aW9uVmFsd...\" }, { \"filename\" : \"leping2.pdf\" , \"hashAlgo\" : \"SHA256\" , \"hash\" : \"WRlpzaF0F0sda2vaW9uVmFsd...\" } ] }, { \"signature\" : \"PDadw4mVyc2lvbj...\" , \"datafiles\" : [ { \"filename\" : \"leping.pdf\" , \"hashAlgo\" : \"SHA256\" , \"hash\" : \"WRlczpSZXZvY2F0aW9uVmFsd...\" }, { \"filename\" : \"leping2.pdf\" , \"hashAlgo\" : \"SHA256\" , \"hash\" : \"WRlpzaF0F0sda2vaW9uVmFsd...\" } ] } ], \"reportType\" : \"Simple\" , \"signaturePolicy\" : \"POLv4\" } Sample SOAP request with mandatory parameters <soapenv:Envelope xmlns:soapenv= \"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:soap= \"http://soap.webapp.siva.openeid.ee/\" > <soapenv:Body> <soap:HashcodeValidationDocument> <soap:HashcodeValidationRequest> <SignatureFiles> <SignatureFile> <Signature> PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGlu... </Signature> </SignatureFile> <SignatureFile> <Signature> PD94bW2lvbj0wgdmVyciMS4wIvZG2lvbj0lu... </Signature> </SignatureFile> </SignatureFiles> </soap:HashcodeValidationRequest> </soap:HashcodeValidationDocument> </soapenv:Body> </soapenv:Envelope> Sample SOAP request with all parameters and multiple datafiles <soapenv:Envelope xmlns:soapenv= \"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:soap= \"http://soap.webapp.siva.openeid.ee/\" > <soapenv:Body> <soap:HashcodeValidationDocument> <soap:HashcodeValidationRequest> <SignatureFiles> <SignatureFile> <Signature> PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGlu... </Signature> <DataFiles> <DataFile> <Filename> test.pdf </Filename> <HashAlgo> SHA256 </HashAlgo> <Hash> IucjUcbRo9Rke0bZLiHcwiIiplP9pSrSPr7LKln1EiI= </Hash> </DataFile> <DataFile> <Filename> test2.pdf </Filename> <HashAlgo> SHA256 </HashAlgo> <Hash> IucjUcbRo9Rke0bZLiHcwiIiplP9pSrSPr7LKln1EiI= </Hash> </DataFile> </DataFiles> </SignatureFile> <SignatureFile> <Signature> PiBlbmNvZD94bWwgdmVyc2lvbj0PD94bWwGlu... </Signature> <DataFiles> <DataFile> <Filename> test.pdf </Filename> <HashAlgo> SHA256 </HashAlgo> <Hash> IucjUcbRo9Rke0bZLiHcwiIiplP9pSrSPr7LKln1EiI= </Hash> </DataFile> <DataFile> <Filename> test2.pdf </Filename> <HashAlgo> SHA256 </HashAlgo> <Hash> IucjUcbRo9Rke0bZLiHcwiIiplP9pSrSPr7LKln1EiI= </Hash> </DataFile> </DataFiles> </SignatureFile> </SignatureFiles> </soap:HashcodeValidationRequest> </soap:HashcodeValidationDocument> </soapenv:Body> </soapenv:Envelope> Validation response interface The signature validation report (i.e. the validation response) for JSON and SOAP interfaces depends on what type of validation report was requested. Data types of SOAP parameters are defined in the SiVa WSDL document . Validation response parameters Simple Report (successful scenario) General structure of validation response. JSON parameter SOAP parameter Mandatory JSON data type Description validationReport ValidationReport + Object Object containing SIVA validation report validationReport. validationConclusion ValidationReport. ValidationConclusion + Object Object containing information of the validation conclusion Structure of validationConclusion block JSON parameter SOAP parameter Mandatory JSON data type Description policy Policy + Object Object containing information of the SiVa signature validation policy that was used for validation. policy.policyName Policy.PolicyName + String Name of the validation policy policy. policyDescription Policy. PolicyDescription + String Short description of the validation policy. policy.policyUrl Policy.PolicyUrl + String URL where the signature validation policy document can be downloaded. The validation policy document shall include information about validation of all the document formats, including the different validation policies that are used in case of different file formats and base libraries. signaturesCount SignaturesCount + Number Number of signatures found inside digitally signed file. validSignaturesCount ValidSignaturesCount + Number Signatures count that have validated to TOTAL-PASSED . See also Signature.Indication field. validationLevel ValidationLevel - Date Validation process against what the document is validated, only applicable on DSS based validations. Possible values: ARCHIVAL_DATA validationTime ValidationTime + Date Time of validating the signature by the service. validationWarnings ValidationWarnings - Array Array of SiVa validation warnings that do not affect the overall validation result. See also signatures.warnings parameter. validationWarnings[0] ValidationWarning + Object Object containing the warning. validationWarnings[0]. content ValidationWarning. Content + String Description of the warning. validatedDocument ValidatedDocument - Object Object containing information about validated document. validatedDocument. filename ValidatedDocument. Filename - String Digitally signed document's file name. Not present for hashcode validation. validatedDocument. fileHash ValidatedDocument. FileHash - String Calculated hash for validated document in Base64. Present when report signing is enabled. validatedDocument. hashAlgo ValidatedDocument. HashAlgo - String Hash algorithm used. Present when report signing is enabled. signatureForm SignatureForm - String Format (and optionally version) of the digitally signed document container. In case of documents in DIGIDOC-XML (DDOC) format, the \"hashcode\" suffix is used to denote that the container was validated in hashcode mode , i.e. without original data files. Possible values: DIGIDOC_XML_1.0 DIGIDOC_XML_1.0_hashcode DIGIDOC_XML_1.1 DIGIDOC_XML_1.1_hashcode DIGIDOC_XML_1.2 DIGIDOC_XML_1.2_hashcode DIGIDOC_XML_1.3 DIGIDOC_XML_1.3_hashcode ASiC_E - used in case of all ASIC-E ( BDOC ) documents and X-Road simple containers that don't use batch time-stamping (see specification document ) ASiC_E_batchsignature - used in case of X-Road containers with batch signature (see specification document ) ASiC_S - used in case of all ASIC-S documents signatures Signatures - Array Collection of signatures found in digitally signed document signatures[0] Signature + Object Signature information object signatures[0]. claimedSigningTime Signature. ClaimedSigningTime + Date Claimed signing time, i.e. signer's computer time during signature creation signatures[0].id Signature.Id + String Signature ID attribute signatures[0].indication Signature.Indication + String Overall result of the signature's validation process, according to ETSI EN 319 102-1 \"Table 5: Status indications of the signature validation process\". Note that the validation results of different signatures in one signed document (signature container) may vary. See also validSignaturesCount and SignaturesCount fields. Possible values: TOTAL-PASSED TOTAL-FAILED INDETERMINATE signatures[0]. subIndication Signature. SubIndication - String Additional subindication in case of failed or indeterminate validation result, according to ETSI EN 319 102-1 \"Table 6: Validation Report Structure and Semantics\" signatures[0].errors Signature.Errors - Array Information about validation error(s), array of error messages. signatures[0].errors[0] Signature.Errors. Error + Object Object containing the error signatures[0].errors[0]. content Signature.Errors. Error.Content + String Error message, as returned by the base library that was used for signature validation. signatures[0].info Signature.Info - Object Object containing trusted signing time information and user added additional signing info. signatures[0].info. bestSignatureTime Signature.Info. BestSignatureTime + Date Time value that is regarded as trusted signing time, denoting the earliest time when it can be trusted by the validation application (because proven by some Proof-of-Existence present in the signature) that a signature has existed. The source of the value depends on the signature profile (see also SignatureFormat parameter): - Signature with time-mark (LT_TM level) - the producedAt value of the earliest valid time-mark (OCSP confirmation of the signer's certificate) in the signature. - Signature with time-stamp (LT or LTA level) - the genTime value of the earliest valid signature time-stamp token in the signature. - Signature with BES or EPES level - the value is empty, i.e. there is no trusted signing time value available. signatures[0].info. timeAssertionMessageImprint Signature.Info. TimeAssertionMessageImprint - String Base64 encoded value of message imprint retrieved from time assertion. In case of LT_TM (TimeMark) signatures, OCSP nonce value is returned. In case of T, LT or LTA (TimeStamp) signatures, TimeStamp message imprint is returned. signatures[0].info. ocspResponseCreationTime Signatures.Info. OcspResponseCreationTime - Date Time value that is regarded as the original OCSP response creation time. signatures[0].info. timestampCreationTime Signatures.Info. TimestampCreationTime - Date Time value of the timestamp creation signatures[0].info. signerRole Signature.Info. SignerRole - Array Array of roles attached to the signature. signatures[0].info. signerRole[0] Signature.Info. SignerRole[0] + Object Object containing claimed roles. signatures[0].info. signerRole[0]. claimedRole Signature.Info. SignerRole[0].ClaimedRole + String Role stated by signer on signing. signatures[0].info. signatureProductionPlace Signature.Info. SignatureProductionPlace - Object Object containing stated signing location info. signatures[0].info. signatureProductionPlace.countryName Signature.Info. SignatureProductionPlace.CountryName - String Stated signing country. signatures[0].info. signatureProductionPlace.stateOrProvince Signature.Info. SignatureProductionPlace.StateOrProvince - String Stated state or province. signatures[0].info. signatureProductionPlace.city Signature.Info. SignatureProductionPlace.City - String Stated city. signatures[0].info. signatureProductionPlace.postalCode Signature.Info. SignatureProductionPlace.PostalCode - String Stated postal code. signatures[0].info. signingReason Signature.Info SigningReason - String Free text field for PAdES type signatures for stating the signing reason signatures[0]. signatureFormat Signature. SignatureFormat + String Format and profile (according to Baseline Profile) of the signature. See XAdES Baseline Profile , CAdES Baseline Profile and PAdES Baseline Profile for detailed description of the Baseline Profile levels. Levels that are accepted in SiVa validation policy are described in SiVa signature validation policy Possible values: XAdES_BASELINE_B XAdES_BASELINE_B_BES XAdES_BASELINE_B_EPES XAdES_BASELINE_T XAdES_BASELINE_LT - long-term level XAdES signature where time-stamp is used as a assertion of trusted signing time XAdES_BASELINE_LT_TM - long-term level XAdES signature where time-mark is used as a assertion of trusted signing time. Used in case of BDOC signatures with time-mark profile and DIGIDOC-XML (DDOC) signatures. XAdES_BASELINE_LTA CAdES_BASELINE_B CAdES_BASELINE_T CAdES_BASELINE_LT CAdES_BASELINE_LTA PAdES_BASELINE_B PAdES_BASELINE_T PAdES_BASELINE_LT PAdES_BASELINE_LTA signatures[0]. signatureMethod Signature. SignatureMethod + String Signature method specification URI used in signature creation. signatures[0]. signatureLevel Signature. SignatureLevel - String Legal level of the signature, according to Regulation (EU) No 910/2014. - Possible values on positive validation result: QESIG QESEAL QES ADESIG_QC ADESEAL_QC ADES_QC ADESIG ADESEAL ADES - Possible values on indeterminate validation result: prefix INDETERMINATE is added to the level described in positive result. For example INDETERMINATE_QESIG - Possible values on negative validation result: In addition to abovementioned NOT_ADES_QC_QSCD NOT_ADES_QC NOT_ADES NA - In case of DIGIDOC-XML 1.0..1.3 formats, value is missing as the signature level is not checked by the JDigiDoc base library that is used for validation. However, the signatures can be indirectly regarded as QES level signatures, see also SiVa Validation Policy - In case of XROAD ASICE containers the value is missing as the asicverifier base library do not check the signature level. signatures[0].signedBy Signature.SignedBy + String Signers name and identification number, i.e. value of the CN field of the signer's certificate signatures[0].subjectDistinguishedName.serialNumber Signature.SubjectDistinguishedName.SerialNumber - String SERIALNUMBER value portion in signer's certificate's subject distinguished name signatures[0].subjectDistinguishedName.commonName Signature.SubjectDistinguishedName.CommonName - String CN (common name) value portion in signer's certificate's subject distinguished name signatures[0]. signatureScopes Signature. SignatureScopes - Array Contains information of the original data that is covered by the signature. signatures[0]. signatureScopes[0]. name Signature. SignatureScopes. SignatureScope.Name + String Name of the signature scope. signatures[0]. signatureScopes[0]. scope Signature. SignatureScopes. SignatureScope. Scope + String Type of the signature scope. signatures[0]. signatureScopes[0]. content Signature. SignatureScopes. SignatureScope. Content + String Description of the scope. signatures[0]. signatureScopes[0]. hashAlgo Signature. SignatureScopes. SignatureScope. HashAlgo - String Hash algorithm used for datafile hash calculation. Present for hashcode validation. signatures[0]. signatureScopes[0]. hash Signature. SignatureScopes. SignatureScope. Hash - String Hash of data file encoded in Base64. Present for hashcode validation. signatures[0]. warnings Signature.Warnings - Array Block of validation warnings that do not affect the overall validation result. signatures[0]. warnings[0] Signature.Warnings. Warning + Object Object containing the warning signatures[0]. warnings[0]. content Signature.Warnings. Warning.Description + String Warning description, as retuned by the base library that was used for validation. signatures[0].certificates Signature.Certificates - Array Array containing certificates that are present in the signature or can be fetched from TSL. signatures[0].certificates[0] Signature.Certificates.Certificate + Object Object containinig certificate type, common name and certificate. Minimal object is signer certificate. If present contains certificates for TimeStamps and OCSP as well. signatures[0].certificates[0].commonName Signature.Certificates.Certificate.CommonName + String CN (common name) value in certificate. signatures[0].certificates[0].type Signature.Certificates.Certificate.Type + String Type of the certificate. Can be SIGNING, REVOCATION, SIGNATURE_TIMESTAMP, ARCHIVE_TIMESTAMP or CONTENT_TIMESTAMP. signatures[0].certificates[0].content Signature.Certificates.Certificate.Content + String DER encoded X.509 certificate in Base64. signatures[0].certificates[0].issuer Signature.Certificates.Certificate.Issuer + String Object containing issuer certificate information. Can create chain til the trust anchor. timeStampTokens TimeStampTokens - Array Array containing the time stamp tokens timeStampTokens[0]. TimeStampToken + Object Object containing the time stamp token (TST) timeStampTokens[0]. indication TimeStampToken. Indication + String Result of the time stamp token validation. Possible values: TOTAL-PASSED TOTAL-FAILED timeStampTokens[0]. signedBy TimeStampToken. SignedBy + String Signer of the time stamp token. timeStampTokens[0]. signedTime TimeStampToken. SignedTime + String Time when the time stamp token was given. timeStampTokens[0]. error TimeStampToken. Errors - Array Errors returned in time stamp token validation. timeStampTokens[0]. error[0] Errors. Error + Object Object containing the error. timeStampTokens[0]. error[0]. content Error. Content + String Error description. Sample JSON response Simple Report (successful scenario) { \"validationReport\" : { \"validationConclusion\" : { \"validationTime\" : \"2020-06-15T11:45:52Z\" , \"signaturesCount\" : 1 , \"validationLevel\" : \"ARCHIVAL_DATA\" , \"validatedDocument\" : { \"filename\" : \"singleValidSignatureTS.asice\" }, \"validSignaturesCount\" : 1 , \"signatures\" : [{ \"signatureFormat\" : \"XAdES_BASELINE_LT\" , \"subjectDistinguishedName\" : { \"commonName\" : \"J\u00d5EORG,JAAK-KRISTJAN,38001085718\" , \"serialNumber\" : \"PNOEE-38001085718\" }, \"certificates\" : [ { \"commonName\" : \"DEMO of SK TSA 2014\" , \"type\" : \"SIGNATURE_TIMESTAMP\" , \"content\" : \"MII...\" }, { \"commonName\" : \"J\u00d5EORG,JAAK-KRISTJAN,38001085718\" , \"type\" : \"SIGNING\" , \"content\" : \"MII...\" , \"issuer\" : { \"commonName\" : \"TEST of ESTEID2018\" , \"content\" : \"MII...\" } }, { \"commonName\" : \"TEST of SK OCSP RESPONDER 2011\" , \"type\" : \"REVOCATION\" , \"content\" : \"MII...\" } ], \"signedBy\" : \"J\u00d5EORG,JAAK-KRISTJAN,38001085718\" , \"claimedSigningTime\" : \"2020-05-21T13:56:52Z\" , \"signatureLevel\" : \"QESIG\" , \"signatureScopes\" : [{ \"scope\" : \"FULL\" , \"name\" : \"test.txt\" , \"content\" : \"Full document\" }], \"signatureMethod\" : \"http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256\" , \"id\" : \"id-a9ce7f66cff1d17ddaab37c46a88f5f4\" , \"indication\" : \"TOTAL-PASSED\" , \"info\" : { \"timestampCreationTime\" : \"2020-05-21T13:56:48Z\" , \"timeAssertionMessageImprint\" : \"MDEwDQYJYIZIAWUDBAIBBQAEID3j1ceryQp4ZNP8iVfd50l/0JXvpry+XS+ajiAUA+Su\" , \"bestSignatureTime\" : \"2020-05-21T13:56:48Z\" , \"ocspResponseCreationTime\" : \"2020-05-21T13:56:49Z\" } }], \"policy\" : { \"policyDescription\" : \"Policy according most common requirements of Estonian Public Administration, to validate Qualified Electronic Signatures and Electronic Seals with Qualified Certificates (according to Regulation (EU) No 910/2014, aka eIDAS). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result, with exception for seals, where AdES/QC and above will produce positive result. Signatures and Seals which are not compliant with ETSI standards (referred by eIDAS) may produce unknown or invalid validation result. Validation process is based on eIDAS Article 32 and referred ETSI standards.\" , \"policyUrl\" : \"http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4\" , \"policyName\" : \"POLv4\" }, \"signatureForm\" : \"ASiC-E\" }}} Sample SOAP response Simple Report (successful scenario) <?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <ns2:ValidateDocumentResponse xmlns:ns2= \"http://soap.webapp.siva.openeid.ee/\" xmlns:ns3= \"http://soap.webapp.siva.openeid.ee/response/\" xmlns:ns4= \"http://dss.esig.europa.eu/validation/detailed-report\" xmlns:ns5= \"http://dss.esig.europa.eu/validation/diagnostic\" xmlns:ns6= \"http://x-road.eu/xsd/identifiers\" xmlns:ns7= \"http://x-road.eu/xsd/xroad.xsd\" > <ns3:ValidationReport> <ns3:ValidationConclusion> <ns3:Policy> <ns3:PolicyDescription> Policy according most common requirements of Estonian Public Administration, to validate Qualified Electronic Signatures and Electronic Seals with Qualified Certificates (according to Regulation (EU) No 910/2014, aka eIDAS). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result, with exception for seals, where AdES/QC and above will produce positive result. Signatures and Seals which are not compliant with ETSI standards (referred by eIDAS) may produce unknown or invalid validation result. Validation process is based on eIDAS Article 32 and referred ETSI standards. </ns3:PolicyDescription> <ns3:PolicyName> POLv4 </ns3:PolicyName> <ns3:PolicyUrl> http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 </ns3:PolicyUrl> </ns3:Policy> <ns3:ValidationTime> 2020-06-15T11:45:52Z </ns3:ValidationTime> <ns3:ValidatedDocument> <ns3:Filename> singleValidSignatureTS.asice </ns3:Filename> </ns3:ValidatedDocument> <ns3:ValidationLevel> ARCHIVAL_DATA </ns3:ValidationLevel> <ns3:ValidationWarnings/> <ns3:SignatureForm> ASiC-E </ns3:SignatureForm> <ns3:Signatures> <ns3:Signature> <ns3:Id> id-a9ce7f66cff1d17ddaab37c46a88f5f4 </ns3:Id> <ns3:SignatureFormat> XAdES_BASELINE_LT </ns3:SignatureFormat> <ns3:SignatureMethod> http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256 </ns3:SignatureMethod> <ns3:SignatureLevel> QESIG </ns3:SignatureLevel> <ns3:SignedBy> J\u00d5EORG,JAAK-KRISTJAN,38001085718 </ns3:SignedBy> <ns3:SubjectDistinguishedName> <ns3:SerialNumber> PNOEE-38001085718 </ns3:SerialNumber> <ns3:CommonName> J\u00d5EORG,JAAK-KRISTJAN,38001085718 </ns3:CommonName> </ns3:SubjectDistinguishedName> <ns3:Certificates> <ns3:Certificate> <ns3:Content> MIIE... </ns3:Content> <ns3:CommonName> DEMO of SK TSA 2014 </ns3:CommonName> <ns3:Type> SIGNATURE_TIMESTAMP </ns3:Type> </ns3:Certificate> <ns3:Certificate> <ns3:Content> MIIE... </ns3:Content> <ns3:CommonName> J\u00d5EORG,JAAK-KRISTJAN,38001085718 </ns3:CommonName> <ns3:Issuer> <ns3:Content> MIIE... </ns3:Content> <ns3:CommonName> TEST of ESTEID2018 </ns3:CommonName> </ns3:Issuer> <ns3:Type> SIGNING </ns3:Type> </ns3:Certificate> <ns3:Certificate> <ns3:Content> MIIE... </ns3:Content> <ns3:CommonName> TEST of SK OCSP RESPONDER 2011 </ns3:CommonName> <ns3:Type> REVOCATION </ns3:Type> </ns3:Certificate> </ns3:Certificates> <ns3:Indication> TOTAL-PASSED </ns3:Indication> <ns3:SubIndication/> <ns3:Errors/> <ns3:SignatureScopes> <ns3:SignatureScope> <ns3:Name> test.txt </ns3:Name> <ns3:Scope> FULL </ns3:Scope> <ns3:Content> Full document </ns3:Content> </ns3:SignatureScope> </ns3:SignatureScopes> <ns3:ClaimedSigningTime> 2020-05-21T13:56:52Z </ns3:ClaimedSigningTime> <ns3:Warnings/> <ns3:Info> <ns3:OcspResponseCreationTime> 2020-05-21T13:56:49Z </ns3:OcspResponseCreationTime> <ns3:TimestampCreationTime> 2020-05-21T13:56:48Z </ns3:TimestampCreationTime> <ns3:BestSignatureTime> 2020-05-21T13:56:48Z </ns3:BestSignatureTime> <ns3:TimeAssertionMessageImprint> MDEwDQYJYIZIAWUDBAIBBQAEID3j1ceryQp4ZNP8iVfd50l/0JXvpry+XS+ajiAUA+Su </ns3:TimeAssertionMessageImprint> </ns3:Info> </ns3:Signature> </ns3:Signatures> <ns3:ValidSignaturesCount> 1 </ns3:ValidSignaturesCount> <ns3:SignaturesCount> 1 </ns3:SignaturesCount> </ns3:ValidationConclusion> </ns3:ValidationReport> </ns2:ValidateDocumentResponse> </soap:Body> </soap:Envelope> Validation response parameters Detailed Report (successful scenario) General structure of validation response. JSON parameter SOAP parameter Mandatory JSON data type Description validationReport ValidationReport + Object Object containing SIVA validation report. validationReport. validationConclusion ValidationReport. ValidationConclusion + Object Object containing information of the validation conclusion. The same object that is present in Simple Report. validationReport. validationProcess ValidationReport. ValidationProcess - Object Object containing information of the validation process. This block is present only on DSS library based validations and is built on DSS detailed report. For more information visit DSS documentation . validationReportSignature ValidationReportSignature - String Base64 string of ASIC-E container that includes the detailed report and is signed by the validation service provider Validation response parameters for Diagnostic Data Report (successful scenario) General structure of validation response. JSON parameter SOAP parameter Mandatory JSON data type Description validationReport ValidationReport + Object Object containing SIVA validation report. validationReport. validationConclusion ValidationReport. ValidationConclusion + Object Object containing information of the validation conclusion. The same object that is present in Simple Report and Detailed Report. validationReport. diagnosticData ValidationReport. DiagnosticData - Object Object containing diagnostic data about the information contained in the signature itself, it's revocation data and mathematical validity. This block is present only on DSS library based validations (excluding hashcode validation) and is built on DSS diagnostic data. For more information visit DSS documentation . Sample JSON response (error situation) In case of error (when validation report is not returned) status code 400 is returned together with following message body: { \"requestErrors\" : [{ \"message\" : \"Document malformed or not matching documentType\" , \"key\" : \"document\" }]} Sample SOAP response (error situation) <?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <soap:Fault> <faultcode> soap:Server </faultcode> <faultstring> Document malformed or not matching documentType </faultstring> </soap:Fault> </soap:Body> </soap:Envelope> Data files request interface REST JSON Endpoint POST https://<server url>/getDataFiles SOAP Endpoint POST https://<server url>/soap/dataFilesWebService/getDocumentDataFiles SOAP WSDL POST https://<server url>/soap/dataFilesWebService/getDocumentDataFiles?wsdl Data files request parameters Data files request parameters for JSON and SOAP interfaces are described in the table below. Data types of SOAP parameters are defined in the SiVa WSDL document . JSON parameter SOAP parameter Mandatory JSON data type Description document Document + String Base64 encoded string of digitally signed DDOC document filename Filename + String File name of the digitally signed document (i.e. sample.ddoc), max length 255 characters. Currently only DDOC file format is supported for this operation Sample JSON request { \"filename\" : \"sample.ddoc\" , \"document\" : \"PD94bWwgdmVyc2lvbj0iMS4....\" } Sample SOAP request <soapenv:Envelope xmlns:soapenv= \"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:soap= \"http://soap.webapp.siva.openeid.ee/\" > <soapenv:Header/> <soapenv:Body> <soap:GetDocumentDataFiles> <soap:DataFilesRequest> <Document> PD94bWwgdmVyc2lvbj0iMS4wI... </Document> <Filename> sample.ddoc </Filename> </soap:DataFilesRequest> </soap:GetDocumentDataFiles> </soapenv:Body> </soapenv:Envelope> Data files response interface Data files response parameters (successful scenario) The data file extraction report (i.e. the data files response) for JSON and SOAP interfaces is described in the table below. Data types of SOAP parameters are defined in the SiVa WSDL document . SiVa returns all data files as they are extracted by JDigiDoc library in an as is form. No extra operations or validations are done. JSON parameter SOAP parameter Mandatory JSON data type Description dataFiles DataFiles - Array Collection of data files found in digitally signed document dataFiles[0] DataFile + Object Extracted data file object dataFiles[0].fileName DataFile.FileName - String File name of the extracted data file dataFiles[0].size DataFile.Size - Long Extracted data file size in bytes dataFiles[0].base64 DataFile.Base64 - String Base64 encoded string of extracted data file dataFiles[0].mimeType DataFile.MimeType - String MIME type of the extracted data file Sample JSON response (successful scenario) { \"dataFiles\" : [{ \"fileName\" : \"Glitter-rock-4_gallery.jpg\" , \"size\" : 41114 , \"base64\" : \"/9j/4AAQSkZJ...\" , \"mimeType\" : \"application/octet-stream\" }] } Sample SOAP response (successful scenario) <?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <ns2:GetDocumentDataFilesResponse xmlns:ns2= \"http://soap.webapp.siva.openeid.ee/\" xmlns:ns3= \"http://x-road.eu/xsd/identifiers\" xmlns:ns4= \"http://x-road.eu/xsd/xroad.xsd\" > <ns2:DataFilesReport> <DataFiles> <DataFile> <Base64> UCgUCgUCgUCgUCgUCgUCgUCgUCgUCgUCgUH... </Base64> <FileName> Glitter-rock-4_gallery.jpg </FileName> <MimeType> application/octet-stream </MimeType> <Size> 41114 </Size> </DataFile> </DataFiles> </ns2:DataFilesReport> </ns2:GetDocumentDataFilesResponse> </soap:Body> </soap:Envelope> Sample JSON response (error situation) In case of error (when datafiles are not returned) status code 400 is returned together with following message body: { \"requestErrors\" : [{ \"message\" : \"Invalid document type. Can only return data files for DDOC type containers.\" , \"key\" : \"documentType\" }]} Sample SOAP response (error situation) <?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <soap:Fault> <faultcode> soap:Client </faultcode> <faultstring> Invalid document type. Can only return data files for DDOC type containers. </faultstring> </soap:Fault> </soap:Body> </soap:Envelope> Service health monitoring SiVa webapps provide an interface for external monitoring tools (to periodically check the generic service health status). The request The monitoring endpoint is accessible via HTTP GET at /monitoring/health or /monitoring/health.json url. Sample request: GET https://<server url>/monitoring/health The response As a response, a JSON object is returned with the following information: Field Description status General status of the webapp. Possible values: DOWN - when some of the dependent indicators status are down (ie when link{number}.status is DOWN, the overall service status is DOWN) UP - the default value. components.health.status Status of current webapp - constant value UP components.health.details.webappName The artifact name of the webapp. Taken from the MANIFEST.MF file (inside the jar/war file). components.health.details.version The release version fo the webapp. Taken from the MANIFEST.MF (inside the jar/war file). components.health.details.buildTime Build date and time (format yyyy-MM-dd'T'HH:mm:ss'Z') of the webapp. Taken from the MANIFEST.MF (inside the jar/war file). components.health.details.startTime Webapp startup date and time (format yyyy-MM-dd'T'HH:mm:ss'Z') components.health.details.currentTime Current server date and time (format yyyy-MM-dd'T'HH:mm:ss'Z') components.link{number}.status (OPTIONAL) Represents the status of a link to the external system that the webapp depends on. DOWN when the webapp does not respond (within a specified timeout limit - default 10 seconds) or the response is in invalid format (default Spring boot actuator /health endpoint format is expected). UP if the service responds with HTTP status code 200 and returns a valid JSON object with status \"UP\" components.link{number}.details.name (OPTIONAL) Descriptive name for the link to the external system Sample response: { \"status\" : \"UP\" , \"components\" : { \"health\" : { \"details\" : { \"webappName\" : \"siva-sample-application\" , \"version\" : \"3.3.0\" , \"buildTime\" : \"2016-10-21T15:56:21Z\" , \"startTime\" : \"2016-10-21T15:57:48Z\" , \"currentTime\" : \"2016-10-21T15:58:39Z\" }, \"status\" : \"UP\" }, \"link1\" : { \"details\" : { \"name\" : \"sivaService\" }, \"status\" : \"UP\" } } } Changes in API compared to V3 v3.3.0 Changes are described using notation from REST endpoint. Changes in response Report Parameter Change Link Comment validationConclusion signatures[0].info.timestampCreationTime Parameter added Link Date containing timestamp creation time added validationConclusion signatures[0].info.ocspResponseCreationTime Parameter added Link Date containing OCSP response creation time added validationConclusion signatures[0].info.signingReason Parameter added Link String containing signing reason for PAdES added Changes in API compared to V3 v3.2.0 (non breaking additions to protocol) Changes are described using notation from REST endpoint. Changes in response Report Parameter Change Link Comment validationConclusion signatures[0].signatureMethod Parameter added Link Used signature method is now returned validationConclusion signatures[0].info.timeAssertionMessageImprint Parameter added Link Base64 encoded value of message imprint retrieved from time assertion. In case of LT_TM (TimeMark) signatures, OCSP nonce value is returned. In case of T, LT or LTA (TimeStamp) signatures, TimeStamp message imprint is returned. validationConclusion signatures[0].info.signatureProductionPlace Parameter added Link Object containing optional signing location info added validationConclusion signatures[0].info.signerRole Parameter added Link Array containing optional signer roles added validationConclusion signatures[0].certificates Parameter added Link Array containing certificates that are present in the signature or in TSL. Changes in API compared to V2 Changes are described using notation from REST endpoint. Changes in request Endpoint Parameter Change Link Comment /validateDocument reportType parameter added Link Diagnostic report type added /validateHashcode whole request request changed Link Request changed to support validation of multiple signatures with one request Changes in response Response type Parameter Change Link Comment Simple validatedDocument now optional Link Object now optional Simple validatedDocument.filename now optional Link String now optional Simple validatedDocument.fileHash changed Link Previously validatedDocument.fileHashInHex. Now contains Base64 value Simple signatures[0].subjectDistinguishedName.serialNumber added Link Added signers serial number field Simple signatures[0].subjectDistinguishedName.commonName added Link Added signers common name field Simple signatures[0].signatureScopes[0].hashAlgo added Link Added datafile hash algo field for hashcode validation Simple signatures[0].signatureScopes[0].hash added Link Added datafile hash field for hashcode validation Diagnostic whole response added Link New report type added","title":"4. INTERFACES"},{"location":"siva3/interfaces/#validation-request-interface","text":"REST JSON Endpoint POST https://<server url>/validate SOAP Endpoint POST https://<server url>/soap/validationWebService/validateDocument SOAP WSDL POST https://<server url>/soap/validationWebService/validateDocument?wsdl","title":"Validation request interface"},{"location":"siva3/interfaces/#validation-request-parameters","text":"Validation request parameters for JSON and SOAP interfaces are described in the table below. Data types of SOAP parameters are defined in the SiVa WSDL document . JSON parameter SOAP parameter Mandatory JSON data type Description document Document + String Base64 encoded string of digitally signed document to be validated filename Filename + String File name of the digitally signed document (i.e. sample.bdoc), max length 255 characters. documentType DocumentType - String If not present document type is determined automatically based on the file extension used in the filename. This parameter is necessary to differentiate XROAD ASIC-E containers from standard ASIC-E containers. Possible values: XROAD - for documents created in the X-Road information system, see also specification document of the signature format. signaturePolicy SignaturePolicy - String Can be used to change the default signature validation policy that is used by the service. See also SiVa Validation Policy for more detailed information on given policy constraints. Possible values: POLv3 - signatures with all legal levels are accepted (i.e. QES, AdESqc and AdES, according to Regulation (EU) No 910/2014.) POLv4 - the default policy. Accepted signatures depend on their type (i.e. signature, seal or unknown) and legal level (i.e. QES, AdESqc and Ades) reportType ReportType - String Can be used to change the default returned report type. Possible values: Simple - default report type. Returns overall validation result (validationConclusion block) Detailed - returns detailed information about the signatures and their validation results (validationConclusion, validationProcess and validationReportSignature. Two later ones are optionally present). Diagnostic - returns diagnostic data about the information contained in the signature itself, it's revocation data and mathematical validity (validationConclusion, diagnosticData block)","title":"Validation request parameters"},{"location":"siva3/interfaces/#sample-json-request-with-mandatory-parameters","text":"{ \"filename\" : \"sample.bdoc\" , \"document\" : \"PD94bWwgdmVyc2lvbj0iMS4....\" }","title":"Sample JSON request with mandatory parameters"},{"location":"siva3/interfaces/#sample-json-request-with-all-parameters","text":"{ \"filename\" : \"sample.asice\" , \"document\" : \"PD94bWwgdmVyc2lvbj0iMS4....\" , \"documentType\" : \"XROAD\" , \"signaturePolicy\" : \"POLv3\" , \"reportType\" : \"Detailed\" }","title":"Sample JSON request with all parameters"},{"location":"siva3/interfaces/#sample-soap-request","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <ns2:ValidateDocument xmlns:ns2= \"http://soap.webapp.siva.openeid.ee/\" > <ns2:ValidationRequest> <Document> PD94bWwgdmVyc2lvbj0iMS4.... </Document> <Filename> sample.asice </Filename> <DocumentType> XROAD </DocumentType> <SignaturePolicy> POLv3 </SignaturePolicy> <ReportType> Detailed </ReportType> </ns2:ValidationRequest> </ns2:ValidateDocument> </soap:Body> </soap:Envelope>","title":"Sample SOAP request"},{"location":"siva3/interfaces/#validation-request-interface-for-hashcode","text":"Hashcode XAdES validation is supported for REST JSON and SOAP interfaces. REST JSON Endpoint POST https://<server url>/validateHashcode SOAP Endpoint POST https://<server url>/soap/hashcodeValidationWebService SOAP WSDL POST https://<server url>/soap/hashcodeValidationWebService?wsdl","title":"Validation request interface for hashcode"},{"location":"siva3/interfaces/#validation-request-parameters_1","text":"Two different use cases are supported for the hashcode validation. 1) Providing the data file name, hash algorithm and hash on validation. 2) Providing only signature file. NB! This method requires validation result change on integrator side when the local datafile hashes do not match with hashes returned in validation result! Validation request parameters for JSON interface are described in the table below. JSON parameter SOAP parameter Mandatory JSON data type Description signatureFiles SignatureFiles + Array Array containing the signature objects. signatureFiles[0] SignatureFiles.SignatureFile + Object Object containing one signature file. signatureFiles[0].signature SignatureFiles.SignatureFile.Signature + String Base64 encoded string of signature file signatureFiles[0].datafiles SignatureFiles.SignatureFile.Signature.DataFiles - Array Array containing the information for datafiles that signature is covering signatureFiles[0].datafiles[0] SignatureFiles.SignatureFile.Signature.DataFiles.DataFile + Object Object containing data file information signatureFiles[0].datafiles[0].filename SignatureFiles.SignatureFile.Signature.DataFiles.DataFile.Filename + String File name of the hashed data file, max length 255 characters. signatureFiles[0].datafiles[0].hashAlgo SignatureFiles.SignatureFile.Signature.DataFiles.DataFile.HashAlgo + String Hash algorithm used for hashing the data file (must match with algorithm in signature file). Accepted values are dependant of validation policy signatureFiles[0].datafiles[0].hash SignatureFiles.SignatureFile.Signature.DataFiles.DataFile.Hash + String Data file hash in Base64 encoded format. signaturePolicy SignaturePolicy - String Can be used to change the default signature validation policy that is used by the service. See also SiVa Validation Policy for more detailed information on given policy constraints. Possible values: POLv3 - signatures with all legal levels are accepted (i.e. QES, AdESqc and AdES, according to Regulation (EU) No 910/2014.) POLv4 - the default policy. Accepted signatures depend on their type (i.e. signature, seal or unknown) and legal level (i.e. QES, AdESqc and Ades) reportType ReportType - String Possible values: Simple - default report type. Returns overall validation result (validationConclusion block) Detailed - returns detailed information about the signatures and their validation results (validationConclusion, validationProcess and validationReportSignature. Two later ones are not supported for hashcode). Diagnostic - returns diagnostic data about the information contained in the signature itself, it's revocation data and mathematical validity (validationConclusion, diagnosticData block. Last one is not support for hashcode)","title":"Validation request parameters"},{"location":"siva3/interfaces/#sample-json-request-with-mandatory-parameters-datafile-hashcode-match-verification-done-on-integrators-side","text":"{ \"signatureFiles\" : [ { \"signature\" : \"PD9094wskjd...\" }, { \"signature\" : \"AD9sa4wsfsd...\" } ] }","title":"Sample JSON request with mandatory parameters (datafile hashcode match verification done on integrators side)"},{"location":"siva3/interfaces/#sample-json-request-with-all-parameters-datafile-hashcode-match-verification-done-on-siva-side","text":"{ \"signatureFiles\" : [ { \"signature\" : \"PD94bWwgdmVyc2lvbj...\" , \"datafiles\" : [ { \"filename\" : \"leping.pdf\" , \"hashAlgo\" : \"SHA256\" , \"hash\" : \"WRlczpSZXZvY2F0aW9uVmFsd...\" }, { \"filename\" : \"leping2.pdf\" , \"hashAlgo\" : \"SHA256\" , \"hash\" : \"WRlpzaF0F0sda2vaW9uVmFsd...\" } ] }, { \"signature\" : \"PDadw4mVyc2lvbj...\" , \"datafiles\" : [ { \"filename\" : \"leping.pdf\" , \"hashAlgo\" : \"SHA256\" , \"hash\" : \"WRlczpSZXZvY2F0aW9uVmFsd...\" }, { \"filename\" : \"leping2.pdf\" , \"hashAlgo\" : \"SHA256\" , \"hash\" : \"WRlpzaF0F0sda2vaW9uVmFsd...\" } ] } ], \"reportType\" : \"Simple\" , \"signaturePolicy\" : \"POLv4\" }","title":"Sample JSON request with all parameters (datafile hashcode match verification done on SIVA side)"},{"location":"siva3/interfaces/#sample-soap-request-with-mandatory-parameters","text":"<soapenv:Envelope xmlns:soapenv= \"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:soap= \"http://soap.webapp.siva.openeid.ee/\" > <soapenv:Body> <soap:HashcodeValidationDocument> <soap:HashcodeValidationRequest> <SignatureFiles> <SignatureFile> <Signature> PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGlu... </Signature> </SignatureFile> <SignatureFile> <Signature> PD94bW2lvbj0wgdmVyciMS4wIvZG2lvbj0lu... </Signature> </SignatureFile> </SignatureFiles> </soap:HashcodeValidationRequest> </soap:HashcodeValidationDocument> </soapenv:Body> </soapenv:Envelope>","title":"Sample SOAP request with mandatory parameters"},{"location":"siva3/interfaces/#sample-soap-request-with-all-parameters-and-multiple-datafiles","text":"<soapenv:Envelope xmlns:soapenv= \"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:soap= \"http://soap.webapp.siva.openeid.ee/\" > <soapenv:Body> <soap:HashcodeValidationDocument> <soap:HashcodeValidationRequest> <SignatureFiles> <SignatureFile> <Signature> PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGlu... </Signature> <DataFiles> <DataFile> <Filename> test.pdf </Filename> <HashAlgo> SHA256 </HashAlgo> <Hash> IucjUcbRo9Rke0bZLiHcwiIiplP9pSrSPr7LKln1EiI= </Hash> </DataFile> <DataFile> <Filename> test2.pdf </Filename> <HashAlgo> SHA256 </HashAlgo> <Hash> IucjUcbRo9Rke0bZLiHcwiIiplP9pSrSPr7LKln1EiI= </Hash> </DataFile> </DataFiles> </SignatureFile> <SignatureFile> <Signature> PiBlbmNvZD94bWwgdmVyc2lvbj0PD94bWwGlu... </Signature> <DataFiles> <DataFile> <Filename> test.pdf </Filename> <HashAlgo> SHA256 </HashAlgo> <Hash> IucjUcbRo9Rke0bZLiHcwiIiplP9pSrSPr7LKln1EiI= </Hash> </DataFile> <DataFile> <Filename> test2.pdf </Filename> <HashAlgo> SHA256 </HashAlgo> <Hash> IucjUcbRo9Rke0bZLiHcwiIiplP9pSrSPr7LKln1EiI= </Hash> </DataFile> </DataFiles> </SignatureFile> </SignatureFiles> </soap:HashcodeValidationRequest> </soap:HashcodeValidationDocument> </soapenv:Body> </soapenv:Envelope>","title":"Sample SOAP request with all parameters and multiple datafiles"},{"location":"siva3/interfaces/#validation-response-interface","text":"The signature validation report (i.e. the validation response) for JSON and SOAP interfaces depends on what type of validation report was requested. Data types of SOAP parameters are defined in the SiVa WSDL document .","title":"Validation response interface"},{"location":"siva3/interfaces/#validation-response-parameters-simple-report-successful-scenario","text":"General structure of validation response. JSON parameter SOAP parameter Mandatory JSON data type Description validationReport ValidationReport + Object Object containing SIVA validation report validationReport. validationConclusion ValidationReport. ValidationConclusion + Object Object containing information of the validation conclusion Structure of validationConclusion block JSON parameter SOAP parameter Mandatory JSON data type Description policy Policy + Object Object containing information of the SiVa signature validation policy that was used for validation. policy.policyName Policy.PolicyName + String Name of the validation policy policy. policyDescription Policy. PolicyDescription + String Short description of the validation policy. policy.policyUrl Policy.PolicyUrl + String URL where the signature validation policy document can be downloaded. The validation policy document shall include information about validation of all the document formats, including the different validation policies that are used in case of different file formats and base libraries. signaturesCount SignaturesCount + Number Number of signatures found inside digitally signed file. validSignaturesCount ValidSignaturesCount + Number Signatures count that have validated to TOTAL-PASSED . See also Signature.Indication field. validationLevel ValidationLevel - Date Validation process against what the document is validated, only applicable on DSS based validations. Possible values: ARCHIVAL_DATA validationTime ValidationTime + Date Time of validating the signature by the service. validationWarnings ValidationWarnings - Array Array of SiVa validation warnings that do not affect the overall validation result. See also signatures.warnings parameter. validationWarnings[0] ValidationWarning + Object Object containing the warning. validationWarnings[0]. content ValidationWarning. Content + String Description of the warning. validatedDocument ValidatedDocument - Object Object containing information about validated document. validatedDocument. filename ValidatedDocument. Filename - String Digitally signed document's file name. Not present for hashcode validation. validatedDocument. fileHash ValidatedDocument. FileHash - String Calculated hash for validated document in Base64. Present when report signing is enabled. validatedDocument. hashAlgo ValidatedDocument. HashAlgo - String Hash algorithm used. Present when report signing is enabled. signatureForm SignatureForm - String Format (and optionally version) of the digitally signed document container. In case of documents in DIGIDOC-XML (DDOC) format, the \"hashcode\" suffix is used to denote that the container was validated in hashcode mode , i.e. without original data files. Possible values: DIGIDOC_XML_1.0 DIGIDOC_XML_1.0_hashcode DIGIDOC_XML_1.1 DIGIDOC_XML_1.1_hashcode DIGIDOC_XML_1.2 DIGIDOC_XML_1.2_hashcode DIGIDOC_XML_1.3 DIGIDOC_XML_1.3_hashcode ASiC_E - used in case of all ASIC-E ( BDOC ) documents and X-Road simple containers that don't use batch time-stamping (see specification document ) ASiC_E_batchsignature - used in case of X-Road containers with batch signature (see specification document ) ASiC_S - used in case of all ASIC-S documents signatures Signatures - Array Collection of signatures found in digitally signed document signatures[0] Signature + Object Signature information object signatures[0]. claimedSigningTime Signature. ClaimedSigningTime + Date Claimed signing time, i.e. signer's computer time during signature creation signatures[0].id Signature.Id + String Signature ID attribute signatures[0].indication Signature.Indication + String Overall result of the signature's validation process, according to ETSI EN 319 102-1 \"Table 5: Status indications of the signature validation process\". Note that the validation results of different signatures in one signed document (signature container) may vary. See also validSignaturesCount and SignaturesCount fields. Possible values: TOTAL-PASSED TOTAL-FAILED INDETERMINATE signatures[0]. subIndication Signature. SubIndication - String Additional subindication in case of failed or indeterminate validation result, according to ETSI EN 319 102-1 \"Table 6: Validation Report Structure and Semantics\" signatures[0].errors Signature.Errors - Array Information about validation error(s), array of error messages. signatures[0].errors[0] Signature.Errors. Error + Object Object containing the error signatures[0].errors[0]. content Signature.Errors. Error.Content + String Error message, as returned by the base library that was used for signature validation. signatures[0].info Signature.Info - Object Object containing trusted signing time information and user added additional signing info. signatures[0].info. bestSignatureTime Signature.Info. BestSignatureTime + Date Time value that is regarded as trusted signing time, denoting the earliest time when it can be trusted by the validation application (because proven by some Proof-of-Existence present in the signature) that a signature has existed. The source of the value depends on the signature profile (see also SignatureFormat parameter): - Signature with time-mark (LT_TM level) - the producedAt value of the earliest valid time-mark (OCSP confirmation of the signer's certificate) in the signature. - Signature with time-stamp (LT or LTA level) - the genTime value of the earliest valid signature time-stamp token in the signature. - Signature with BES or EPES level - the value is empty, i.e. there is no trusted signing time value available. signatures[0].info. timeAssertionMessageImprint Signature.Info. TimeAssertionMessageImprint - String Base64 encoded value of message imprint retrieved from time assertion. In case of LT_TM (TimeMark) signatures, OCSP nonce value is returned. In case of T, LT or LTA (TimeStamp) signatures, TimeStamp message imprint is returned. signatures[0].info. ocspResponseCreationTime Signatures.Info. OcspResponseCreationTime - Date Time value that is regarded as the original OCSP response creation time. signatures[0].info. timestampCreationTime Signatures.Info. TimestampCreationTime - Date Time value of the timestamp creation signatures[0].info. signerRole Signature.Info. SignerRole - Array Array of roles attached to the signature. signatures[0].info. signerRole[0] Signature.Info. SignerRole[0] + Object Object containing claimed roles. signatures[0].info. signerRole[0]. claimedRole Signature.Info. SignerRole[0].ClaimedRole + String Role stated by signer on signing. signatures[0].info. signatureProductionPlace Signature.Info. SignatureProductionPlace - Object Object containing stated signing location info. signatures[0].info. signatureProductionPlace.countryName Signature.Info. SignatureProductionPlace.CountryName - String Stated signing country. signatures[0].info. signatureProductionPlace.stateOrProvince Signature.Info. SignatureProductionPlace.StateOrProvince - String Stated state or province. signatures[0].info. signatureProductionPlace.city Signature.Info. SignatureProductionPlace.City - String Stated city. signatures[0].info. signatureProductionPlace.postalCode Signature.Info. SignatureProductionPlace.PostalCode - String Stated postal code. signatures[0].info. signingReason Signature.Info SigningReason - String Free text field for PAdES type signatures for stating the signing reason signatures[0]. signatureFormat Signature. SignatureFormat + String Format and profile (according to Baseline Profile) of the signature. See XAdES Baseline Profile , CAdES Baseline Profile and PAdES Baseline Profile for detailed description of the Baseline Profile levels. Levels that are accepted in SiVa validation policy are described in SiVa signature validation policy Possible values: XAdES_BASELINE_B XAdES_BASELINE_B_BES XAdES_BASELINE_B_EPES XAdES_BASELINE_T XAdES_BASELINE_LT - long-term level XAdES signature where time-stamp is used as a assertion of trusted signing time XAdES_BASELINE_LT_TM - long-term level XAdES signature where time-mark is used as a assertion of trusted signing time. Used in case of BDOC signatures with time-mark profile and DIGIDOC-XML (DDOC) signatures. XAdES_BASELINE_LTA CAdES_BASELINE_B CAdES_BASELINE_T CAdES_BASELINE_LT CAdES_BASELINE_LTA PAdES_BASELINE_B PAdES_BASELINE_T PAdES_BASELINE_LT PAdES_BASELINE_LTA signatures[0]. signatureMethod Signature. SignatureMethod + String Signature method specification URI used in signature creation. signatures[0]. signatureLevel Signature. SignatureLevel - String Legal level of the signature, according to Regulation (EU) No 910/2014. - Possible values on positive validation result: QESIG QESEAL QES ADESIG_QC ADESEAL_QC ADES_QC ADESIG ADESEAL ADES - Possible values on indeterminate validation result: prefix INDETERMINATE is added to the level described in positive result. For example INDETERMINATE_QESIG - Possible values on negative validation result: In addition to abovementioned NOT_ADES_QC_QSCD NOT_ADES_QC NOT_ADES NA - In case of DIGIDOC-XML 1.0..1.3 formats, value is missing as the signature level is not checked by the JDigiDoc base library that is used for validation. However, the signatures can be indirectly regarded as QES level signatures, see also SiVa Validation Policy - In case of XROAD ASICE containers the value is missing as the asicverifier base library do not check the signature level. signatures[0].signedBy Signature.SignedBy + String Signers name and identification number, i.e. value of the CN field of the signer's certificate signatures[0].subjectDistinguishedName.serialNumber Signature.SubjectDistinguishedName.SerialNumber - String SERIALNUMBER value portion in signer's certificate's subject distinguished name signatures[0].subjectDistinguishedName.commonName Signature.SubjectDistinguishedName.CommonName - String CN (common name) value portion in signer's certificate's subject distinguished name signatures[0]. signatureScopes Signature. SignatureScopes - Array Contains information of the original data that is covered by the signature. signatures[0]. signatureScopes[0]. name Signature. SignatureScopes. SignatureScope.Name + String Name of the signature scope. signatures[0]. signatureScopes[0]. scope Signature. SignatureScopes. SignatureScope. Scope + String Type of the signature scope. signatures[0]. signatureScopes[0]. content Signature. SignatureScopes. SignatureScope. Content + String Description of the scope. signatures[0]. signatureScopes[0]. hashAlgo Signature. SignatureScopes. SignatureScope. HashAlgo - String Hash algorithm used for datafile hash calculation. Present for hashcode validation. signatures[0]. signatureScopes[0]. hash Signature. SignatureScopes. SignatureScope. Hash - String Hash of data file encoded in Base64. Present for hashcode validation. signatures[0]. warnings Signature.Warnings - Array Block of validation warnings that do not affect the overall validation result. signatures[0]. warnings[0] Signature.Warnings. Warning + Object Object containing the warning signatures[0]. warnings[0]. content Signature.Warnings. Warning.Description + String Warning description, as retuned by the base library that was used for validation. signatures[0].certificates Signature.Certificates - Array Array containing certificates that are present in the signature or can be fetched from TSL. signatures[0].certificates[0] Signature.Certificates.Certificate + Object Object containinig certificate type, common name and certificate. Minimal object is signer certificate. If present contains certificates for TimeStamps and OCSP as well. signatures[0].certificates[0].commonName Signature.Certificates.Certificate.CommonName + String CN (common name) value in certificate. signatures[0].certificates[0].type Signature.Certificates.Certificate.Type + String Type of the certificate. Can be SIGNING, REVOCATION, SIGNATURE_TIMESTAMP, ARCHIVE_TIMESTAMP or CONTENT_TIMESTAMP. signatures[0].certificates[0].content Signature.Certificates.Certificate.Content + String DER encoded X.509 certificate in Base64. signatures[0].certificates[0].issuer Signature.Certificates.Certificate.Issuer + String Object containing issuer certificate information. Can create chain til the trust anchor. timeStampTokens TimeStampTokens - Array Array containing the time stamp tokens timeStampTokens[0]. TimeStampToken + Object Object containing the time stamp token (TST) timeStampTokens[0]. indication TimeStampToken. Indication + String Result of the time stamp token validation. Possible values: TOTAL-PASSED TOTAL-FAILED timeStampTokens[0]. signedBy TimeStampToken. SignedBy + String Signer of the time stamp token. timeStampTokens[0]. signedTime TimeStampToken. SignedTime + String Time when the time stamp token was given. timeStampTokens[0]. error TimeStampToken. Errors - Array Errors returned in time stamp token validation. timeStampTokens[0]. error[0] Errors. Error + Object Object containing the error. timeStampTokens[0]. error[0]. content Error. Content + String Error description.","title":"Validation response parameters Simple Report (successful scenario)"},{"location":"siva3/interfaces/#sample-json-response-simple-report-successful-scenario","text":"{ \"validationReport\" : { \"validationConclusion\" : { \"validationTime\" : \"2020-06-15T11:45:52Z\" , \"signaturesCount\" : 1 , \"validationLevel\" : \"ARCHIVAL_DATA\" , \"validatedDocument\" : { \"filename\" : \"singleValidSignatureTS.asice\" }, \"validSignaturesCount\" : 1 , \"signatures\" : [{ \"signatureFormat\" : \"XAdES_BASELINE_LT\" , \"subjectDistinguishedName\" : { \"commonName\" : \"J\u00d5EORG,JAAK-KRISTJAN,38001085718\" , \"serialNumber\" : \"PNOEE-38001085718\" }, \"certificates\" : [ { \"commonName\" : \"DEMO of SK TSA 2014\" , \"type\" : \"SIGNATURE_TIMESTAMP\" , \"content\" : \"MII...\" }, { \"commonName\" : \"J\u00d5EORG,JAAK-KRISTJAN,38001085718\" , \"type\" : \"SIGNING\" , \"content\" : \"MII...\" , \"issuer\" : { \"commonName\" : \"TEST of ESTEID2018\" , \"content\" : \"MII...\" } }, { \"commonName\" : \"TEST of SK OCSP RESPONDER 2011\" , \"type\" : \"REVOCATION\" , \"content\" : \"MII...\" } ], \"signedBy\" : \"J\u00d5EORG,JAAK-KRISTJAN,38001085718\" , \"claimedSigningTime\" : \"2020-05-21T13:56:52Z\" , \"signatureLevel\" : \"QESIG\" , \"signatureScopes\" : [{ \"scope\" : \"FULL\" , \"name\" : \"test.txt\" , \"content\" : \"Full document\" }], \"signatureMethod\" : \"http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256\" , \"id\" : \"id-a9ce7f66cff1d17ddaab37c46a88f5f4\" , \"indication\" : \"TOTAL-PASSED\" , \"info\" : { \"timestampCreationTime\" : \"2020-05-21T13:56:48Z\" , \"timeAssertionMessageImprint\" : \"MDEwDQYJYIZIAWUDBAIBBQAEID3j1ceryQp4ZNP8iVfd50l/0JXvpry+XS+ajiAUA+Su\" , \"bestSignatureTime\" : \"2020-05-21T13:56:48Z\" , \"ocspResponseCreationTime\" : \"2020-05-21T13:56:49Z\" } }], \"policy\" : { \"policyDescription\" : \"Policy according most common requirements of Estonian Public Administration, to validate Qualified Electronic Signatures and Electronic Seals with Qualified Certificates (according to Regulation (EU) No 910/2014, aka eIDAS). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result, with exception for seals, where AdES/QC and above will produce positive result. Signatures and Seals which are not compliant with ETSI standards (referred by eIDAS) may produce unknown or invalid validation result. Validation process is based on eIDAS Article 32 and referred ETSI standards.\" , \"policyUrl\" : \"http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4\" , \"policyName\" : \"POLv4\" }, \"signatureForm\" : \"ASiC-E\" }}}","title":"Sample JSON response Simple Report (successful scenario)"},{"location":"siva3/interfaces/#sample-soap-response-simple-report-successful-scenario","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <ns2:ValidateDocumentResponse xmlns:ns2= \"http://soap.webapp.siva.openeid.ee/\" xmlns:ns3= \"http://soap.webapp.siva.openeid.ee/response/\" xmlns:ns4= \"http://dss.esig.europa.eu/validation/detailed-report\" xmlns:ns5= \"http://dss.esig.europa.eu/validation/diagnostic\" xmlns:ns6= \"http://x-road.eu/xsd/identifiers\" xmlns:ns7= \"http://x-road.eu/xsd/xroad.xsd\" > <ns3:ValidationReport> <ns3:ValidationConclusion> <ns3:Policy> <ns3:PolicyDescription> Policy according most common requirements of Estonian Public Administration, to validate Qualified Electronic Signatures and Electronic Seals with Qualified Certificates (according to Regulation (EU) No 910/2014, aka eIDAS). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result, with exception for seals, where AdES/QC and above will produce positive result. Signatures and Seals which are not compliant with ETSI standards (referred by eIDAS) may produce unknown or invalid validation result. Validation process is based on eIDAS Article 32 and referred ETSI standards. </ns3:PolicyDescription> <ns3:PolicyName> POLv4 </ns3:PolicyName> <ns3:PolicyUrl> http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 </ns3:PolicyUrl> </ns3:Policy> <ns3:ValidationTime> 2020-06-15T11:45:52Z </ns3:ValidationTime> <ns3:ValidatedDocument> <ns3:Filename> singleValidSignatureTS.asice </ns3:Filename> </ns3:ValidatedDocument> <ns3:ValidationLevel> ARCHIVAL_DATA </ns3:ValidationLevel> <ns3:ValidationWarnings/> <ns3:SignatureForm> ASiC-E </ns3:SignatureForm> <ns3:Signatures> <ns3:Signature> <ns3:Id> id-a9ce7f66cff1d17ddaab37c46a88f5f4 </ns3:Id> <ns3:SignatureFormat> XAdES_BASELINE_LT </ns3:SignatureFormat> <ns3:SignatureMethod> http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256 </ns3:SignatureMethod> <ns3:SignatureLevel> QESIG </ns3:SignatureLevel> <ns3:SignedBy> J\u00d5EORG,JAAK-KRISTJAN,38001085718 </ns3:SignedBy> <ns3:SubjectDistinguishedName> <ns3:SerialNumber> PNOEE-38001085718 </ns3:SerialNumber> <ns3:CommonName> J\u00d5EORG,JAAK-KRISTJAN,38001085718 </ns3:CommonName> </ns3:SubjectDistinguishedName> <ns3:Certificates> <ns3:Certificate> <ns3:Content> MIIE... </ns3:Content> <ns3:CommonName> DEMO of SK TSA 2014 </ns3:CommonName> <ns3:Type> SIGNATURE_TIMESTAMP </ns3:Type> </ns3:Certificate> <ns3:Certificate> <ns3:Content> MIIE... </ns3:Content> <ns3:CommonName> J\u00d5EORG,JAAK-KRISTJAN,38001085718 </ns3:CommonName> <ns3:Issuer> <ns3:Content> MIIE... </ns3:Content> <ns3:CommonName> TEST of ESTEID2018 </ns3:CommonName> </ns3:Issuer> <ns3:Type> SIGNING </ns3:Type> </ns3:Certificate> <ns3:Certificate> <ns3:Content> MIIE... </ns3:Content> <ns3:CommonName> TEST of SK OCSP RESPONDER 2011 </ns3:CommonName> <ns3:Type> REVOCATION </ns3:Type> </ns3:Certificate> </ns3:Certificates> <ns3:Indication> TOTAL-PASSED </ns3:Indication> <ns3:SubIndication/> <ns3:Errors/> <ns3:SignatureScopes> <ns3:SignatureScope> <ns3:Name> test.txt </ns3:Name> <ns3:Scope> FULL </ns3:Scope> <ns3:Content> Full document </ns3:Content> </ns3:SignatureScope> </ns3:SignatureScopes> <ns3:ClaimedSigningTime> 2020-05-21T13:56:52Z </ns3:ClaimedSigningTime> <ns3:Warnings/> <ns3:Info> <ns3:OcspResponseCreationTime> 2020-05-21T13:56:49Z </ns3:OcspResponseCreationTime> <ns3:TimestampCreationTime> 2020-05-21T13:56:48Z </ns3:TimestampCreationTime> <ns3:BestSignatureTime> 2020-05-21T13:56:48Z </ns3:BestSignatureTime> <ns3:TimeAssertionMessageImprint> MDEwDQYJYIZIAWUDBAIBBQAEID3j1ceryQp4ZNP8iVfd50l/0JXvpry+XS+ajiAUA+Su </ns3:TimeAssertionMessageImprint> </ns3:Info> </ns3:Signature> </ns3:Signatures> <ns3:ValidSignaturesCount> 1 </ns3:ValidSignaturesCount> <ns3:SignaturesCount> 1 </ns3:SignaturesCount> </ns3:ValidationConclusion> </ns3:ValidationReport> </ns2:ValidateDocumentResponse> </soap:Body> </soap:Envelope>","title":"Sample SOAP response Simple Report (successful scenario)"},{"location":"siva3/interfaces/#validation-response-parameters-detailed-report-successful-scenario","text":"General structure of validation response. JSON parameter SOAP parameter Mandatory JSON data type Description validationReport ValidationReport + Object Object containing SIVA validation report. validationReport. validationConclusion ValidationReport. ValidationConclusion + Object Object containing information of the validation conclusion. The same object that is present in Simple Report. validationReport. validationProcess ValidationReport. ValidationProcess - Object Object containing information of the validation process. This block is present only on DSS library based validations and is built on DSS detailed report. For more information visit DSS documentation . validationReportSignature ValidationReportSignature - String Base64 string of ASIC-E container that includes the detailed report and is signed by the validation service provider","title":"Validation response parameters Detailed Report (successful scenario)"},{"location":"siva3/interfaces/#validation-response-parameters-for-diagnostic-data-report-successful-scenario","text":"General structure of validation response. JSON parameter SOAP parameter Mandatory JSON data type Description validationReport ValidationReport + Object Object containing SIVA validation report. validationReport. validationConclusion ValidationReport. ValidationConclusion + Object Object containing information of the validation conclusion. The same object that is present in Simple Report and Detailed Report. validationReport. diagnosticData ValidationReport. DiagnosticData - Object Object containing diagnostic data about the information contained in the signature itself, it's revocation data and mathematical validity. This block is present only on DSS library based validations (excluding hashcode validation) and is built on DSS diagnostic data. For more information visit DSS documentation .","title":"Validation response parameters for Diagnostic Data Report (successful scenario)"},{"location":"siva3/interfaces/#sample-json-response-error-situation","text":"In case of error (when validation report is not returned) status code 400 is returned together with following message body: { \"requestErrors\" : [{ \"message\" : \"Document malformed or not matching documentType\" , \"key\" : \"document\" }]}","title":"Sample JSON response (error situation)"},{"location":"siva3/interfaces/#sample-soap-response-error-situation","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <soap:Fault> <faultcode> soap:Server </faultcode> <faultstring> Document malformed or not matching documentType </faultstring> </soap:Fault> </soap:Body> </soap:Envelope>","title":"Sample SOAP response (error situation)"},{"location":"siva3/interfaces/#data-files-request-interface","text":"REST JSON Endpoint POST https://<server url>/getDataFiles SOAP Endpoint POST https://<server url>/soap/dataFilesWebService/getDocumentDataFiles SOAP WSDL POST https://<server url>/soap/dataFilesWebService/getDocumentDataFiles?wsdl","title":"Data files request interface"},{"location":"siva3/interfaces/#data-files-request-parameters","text":"Data files request parameters for JSON and SOAP interfaces are described in the table below. Data types of SOAP parameters are defined in the SiVa WSDL document . JSON parameter SOAP parameter Mandatory JSON data type Description document Document + String Base64 encoded string of digitally signed DDOC document filename Filename + String File name of the digitally signed document (i.e. sample.ddoc), max length 255 characters. Currently only DDOC file format is supported for this operation","title":"Data files request parameters"},{"location":"siva3/interfaces/#sample-json-request","text":"{ \"filename\" : \"sample.ddoc\" , \"document\" : \"PD94bWwgdmVyc2lvbj0iMS4....\" }","title":"Sample JSON request"},{"location":"siva3/interfaces/#sample-soap-request_1","text":"<soapenv:Envelope xmlns:soapenv= \"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:soap= \"http://soap.webapp.siva.openeid.ee/\" > <soapenv:Header/> <soapenv:Body> <soap:GetDocumentDataFiles> <soap:DataFilesRequest> <Document> PD94bWwgdmVyc2lvbj0iMS4wI... </Document> <Filename> sample.ddoc </Filename> </soap:DataFilesRequest> </soap:GetDocumentDataFiles> </soapenv:Body> </soapenv:Envelope>","title":"Sample SOAP request"},{"location":"siva3/interfaces/#data-files-response-interface","text":"","title":"Data files response interface"},{"location":"siva3/interfaces/#data-files-response-parameters-successful-scenario","text":"The data file extraction report (i.e. the data files response) for JSON and SOAP interfaces is described in the table below. Data types of SOAP parameters are defined in the SiVa WSDL document . SiVa returns all data files as they are extracted by JDigiDoc library in an as is form. No extra operations or validations are done. JSON parameter SOAP parameter Mandatory JSON data type Description dataFiles DataFiles - Array Collection of data files found in digitally signed document dataFiles[0] DataFile + Object Extracted data file object dataFiles[0].fileName DataFile.FileName - String File name of the extracted data file dataFiles[0].size DataFile.Size - Long Extracted data file size in bytes dataFiles[0].base64 DataFile.Base64 - String Base64 encoded string of extracted data file dataFiles[0].mimeType DataFile.MimeType - String MIME type of the extracted data file","title":"Data files response parameters (successful scenario)"},{"location":"siva3/interfaces/#sample-json-response-successful-scenario","text":"{ \"dataFiles\" : [{ \"fileName\" : \"Glitter-rock-4_gallery.jpg\" , \"size\" : 41114 , \"base64\" : \"/9j/4AAQSkZJ...\" , \"mimeType\" : \"application/octet-stream\" }] }","title":"Sample JSON response (successful scenario)"},{"location":"siva3/interfaces/#sample-soap-response-successful-scenario","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <ns2:GetDocumentDataFilesResponse xmlns:ns2= \"http://soap.webapp.siva.openeid.ee/\" xmlns:ns3= \"http://x-road.eu/xsd/identifiers\" xmlns:ns4= \"http://x-road.eu/xsd/xroad.xsd\" > <ns2:DataFilesReport> <DataFiles> <DataFile> <Base64> UCgUCgUCgUCgUCgUCgUCgUCgUCgUCgUCgUH... </Base64> <FileName> Glitter-rock-4_gallery.jpg </FileName> <MimeType> application/octet-stream </MimeType> <Size> 41114 </Size> </DataFile> </DataFiles> </ns2:DataFilesReport> </ns2:GetDocumentDataFilesResponse> </soap:Body> </soap:Envelope>","title":"Sample SOAP response (successful scenario)"},{"location":"siva3/interfaces/#sample-json-response-error-situation_1","text":"In case of error (when datafiles are not returned) status code 400 is returned together with following message body: { \"requestErrors\" : [{ \"message\" : \"Invalid document type. Can only return data files for DDOC type containers.\" , \"key\" : \"documentType\" }]}","title":"Sample JSON response (error situation)"},{"location":"siva3/interfaces/#sample-soap-response-error-situation_1","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" > <soap:Body> <soap:Fault> <faultcode> soap:Client </faultcode> <faultstring> Invalid document type. Can only return data files for DDOC type containers. </faultstring> </soap:Fault> </soap:Body> </soap:Envelope>","title":"Sample SOAP response (error situation)"},{"location":"siva3/interfaces/#service-health-monitoring","text":"SiVa webapps provide an interface for external monitoring tools (to periodically check the generic service health status).","title":"Service health monitoring"},{"location":"siva3/interfaces/#the-request","text":"The monitoring endpoint is accessible via HTTP GET at /monitoring/health or /monitoring/health.json url. Sample request: GET https://<server url>/monitoring/health","title":"The request"},{"location":"siva3/interfaces/#the-response","text":"As a response, a JSON object is returned with the following information: Field Description status General status of the webapp. Possible values: DOWN - when some of the dependent indicators status are down (ie when link{number}.status is DOWN, the overall service status is DOWN) UP - the default value. components.health.status Status of current webapp - constant value UP components.health.details.webappName The artifact name of the webapp. Taken from the MANIFEST.MF file (inside the jar/war file). components.health.details.version The release version fo the webapp. Taken from the MANIFEST.MF (inside the jar/war file). components.health.details.buildTime Build date and time (format yyyy-MM-dd'T'HH:mm:ss'Z') of the webapp. Taken from the MANIFEST.MF (inside the jar/war file). components.health.details.startTime Webapp startup date and time (format yyyy-MM-dd'T'HH:mm:ss'Z') components.health.details.currentTime Current server date and time (format yyyy-MM-dd'T'HH:mm:ss'Z') components.link{number}.status (OPTIONAL) Represents the status of a link to the external system that the webapp depends on. DOWN when the webapp does not respond (within a specified timeout limit - default 10 seconds) or the response is in invalid format (default Spring boot actuator /health endpoint format is expected). UP if the service responds with HTTP status code 200 and returns a valid JSON object with status \"UP\" components.link{number}.details.name (OPTIONAL) Descriptive name for the link to the external system Sample response: { \"status\" : \"UP\" , \"components\" : { \"health\" : { \"details\" : { \"webappName\" : \"siva-sample-application\" , \"version\" : \"3.3.0\" , \"buildTime\" : \"2016-10-21T15:56:21Z\" , \"startTime\" : \"2016-10-21T15:57:48Z\" , \"currentTime\" : \"2016-10-21T15:58:39Z\" }, \"status\" : \"UP\" }, \"link1\" : { \"details\" : { \"name\" : \"sivaService\" }, \"status\" : \"UP\" } } }","title":"The response"},{"location":"siva3/interfaces/#changes-in-api-compared-to-v3-v330","text":"Changes are described using notation from REST endpoint.","title":"Changes in API compared to V3 v3.3.0"},{"location":"siva3/interfaces/#changes-in-response","text":"Report Parameter Change Link Comment validationConclusion signatures[0].info.timestampCreationTime Parameter added Link Date containing timestamp creation time added validationConclusion signatures[0].info.ocspResponseCreationTime Parameter added Link Date containing OCSP response creation time added validationConclusion signatures[0].info.signingReason Parameter added Link String containing signing reason for PAdES added","title":"Changes in response"},{"location":"siva3/interfaces/#changes-in-api-compared-to-v3-v320-non-breaking-additions-to-protocol","text":"Changes are described using notation from REST endpoint.","title":"Changes in API compared to V3 v3.2.0 (non breaking additions to protocol)"},{"location":"siva3/interfaces/#changes-in-response_1","text":"Report Parameter Change Link Comment validationConclusion signatures[0].signatureMethod Parameter added Link Used signature method is now returned validationConclusion signatures[0].info.timeAssertionMessageImprint Parameter added Link Base64 encoded value of message imprint retrieved from time assertion. In case of LT_TM (TimeMark) signatures, OCSP nonce value is returned. In case of T, LT or LTA (TimeStamp) signatures, TimeStamp message imprint is returned. validationConclusion signatures[0].info.signatureProductionPlace Parameter added Link Object containing optional signing location info added validationConclusion signatures[0].info.signerRole Parameter added Link Array containing optional signer roles added validationConclusion signatures[0].certificates Parameter added Link Array containing certificates that are present in the signature or in TSL.","title":"Changes in response"},{"location":"siva3/interfaces/#changes-in-api-compared-to-v2","text":"Changes are described using notation from REST endpoint.","title":"Changes in API compared to V2"},{"location":"siva3/interfaces/#changes-in-request","text":"Endpoint Parameter Change Link Comment /validateDocument reportType parameter added Link Diagnostic report type added /validateHashcode whole request request changed Link Request changed to support validation of multiple signatures with one request","title":"Changes in request"},{"location":"siva3/interfaces/#changes-in-response_2","text":"Response type Parameter Change Link Comment Simple validatedDocument now optional Link Object now optional Simple validatedDocument.filename now optional Link String now optional Simple validatedDocument.fileHash changed Link Previously validatedDocument.fileHashInHex. Now contains Base64 value Simple signatures[0].subjectDistinguishedName.serialNumber added Link Added signers serial number field Simple signatures[0].subjectDistinguishedName.commonName added Link Added signers common name field Simple signatures[0].signatureScopes[0].hashAlgo added Link Added datafile hash algo field for hashcode validation Simple signatures[0].signatureScopes[0].hash added Link Added datafile hash field for hashcode validation Diagnostic whole response added Link New report type added","title":"Changes in response"},{"location":"siva3/overview/","text":"What is SiVa? SiVa (Signature Validation) web service provides JSON and SOAP based API web interface to validate digital signatures. Please take a look in Validation Policy section for supported formats and applied constraints. SiVa uses following Java libraries and command line utilities: DigiDoc4J Java library to validate BDOC (supported signature types are TimeStamp and TimeMark ) and DDOC containers. X-Road ASiCE containers are validated using X-Road security server project provided command line utility EU DSS (Digital Signature Service) library is used to validate all other types of digital signatures that are not covered above. Validation libraries DigiDoc4j EU DSS fork DigiDoc4J EU DSS fork is used as the main validation library. The fork includes Estonian specific changes and may not be suitable for all signatures. SiVa will use the following functionality of EU DSS library: XAdES/CAdES/PAdES Validation Functionality ASIC-E and ASIC-S container validation TSL loading functionality DigiDoc4J DigiDoc4J is used to validate both TimeMark and TimeStamp based BDOC and DDOC containers. For more information on DigiDoc4J visit Github SiVa will use the following functionality of DigiDoc4J: BDOC validation functionality DDOC validation functionality X-Road signature validation utility X-Road signature validation utility is command line tool to validate X-Road Security server generated ASiCe files. For more information on this utility visit GitHub Main features of SiVa validation service: SOAP and REST/JSON API to validate signatures. SOAP and REST/JSON API to retrieve data files from DDOC containers. SOAP API is compadible with X-Road v6. Signing of validation report.","title":"2. BACKGROUND"},{"location":"siva3/overview/#what-is-siva","text":"SiVa (Signature Validation) web service provides JSON and SOAP based API web interface to validate digital signatures. Please take a look in Validation Policy section for supported formats and applied constraints. SiVa uses following Java libraries and command line utilities: DigiDoc4J Java library to validate BDOC (supported signature types are TimeStamp and TimeMark ) and DDOC containers. X-Road ASiCE containers are validated using X-Road security server project provided command line utility EU DSS (Digital Signature Service) library is used to validate all other types of digital signatures that are not covered above.","title":"What is SiVa?"},{"location":"siva3/overview/#validation-libraries","text":"","title":"Validation libraries"},{"location":"siva3/overview/#digidoc4j-eu-dss-fork","text":"DigiDoc4J EU DSS fork is used as the main validation library. The fork includes Estonian specific changes and may not be suitable for all signatures. SiVa will use the following functionality of EU DSS library: XAdES/CAdES/PAdES Validation Functionality ASIC-E and ASIC-S container validation TSL loading functionality","title":"DigiDoc4j EU DSS fork"},{"location":"siva3/overview/#digidoc4j","text":"DigiDoc4J is used to validate both TimeMark and TimeStamp based BDOC and DDOC containers. For more information on DigiDoc4J visit Github SiVa will use the following functionality of DigiDoc4J: BDOC validation functionality DDOC validation functionality","title":"DigiDoc4J"},{"location":"siva3/overview/#x-road-signature-validation-utility","text":"X-Road signature validation utility is command line tool to validate X-Road Security server generated ASiCe files. For more information on this utility visit GitHub","title":"X-Road signature validation utility"},{"location":"siva3/overview/#main-features-of-siva-validation-service","text":"SOAP and REST/JSON API to validate signatures. SOAP and REST/JSON API to retrieve data files from DDOC containers. SOAP API is compadible with X-Road v6. Signing of validation report.","title":"Main features of SiVa validation service:"},{"location":"siva3/qa_strategy/","text":"Introduction The goal of this document is to give general overview of the used infrastructure, processes, schedule and actions to ensure good quality delivery. The document describes activities in the whole software development process. Analysis, development and testing are separated for the sake of structure and transparency although they are integral parts of the development cycle. This is living document and will be constantly updated as the project evolves. Environments and infrastructure There are different test environments for quality assurance, depending on the nature and aim. TravisCI environment for public CI - Platform: Linux Test environment for local test and load test - Platform: Linux Instructions how to set up test enviroment and run tests together with more info can be found in SiVa GitHub page System requirements: At least 4GB of RAM on machine where the build is executed Minimum required Java version is Java 8 SiVa project provided Maven Wrapper (./mvnw) Tools used: TravisCI \u2013 is a continuous integration service used to build and test software projects hosted at GitHub Jenkins \u2013 is an open source continuous integration tool written in Java. JMeter \u2013 tool for creating and running load tests. IntelliJ IDEA \u2013 is a Java integrated development environment(IDE) for developing and executing automated tests locally Apache Tomcat - is an open source servlet container developed by the Apache Software Foundation. Rest-Assured - is a Java DSL(Domain-specific language) for simplifying testing of REST based Services built on top of HTTP Builder. Analysis Analysis will be tagged with identificators to enable cross-reference between requirements and corresponding tests. This includes both functional and non-functional requirements. See documents (2) and (3) in References Development Development process Customized process based on Kanban is used in the development. The process consists of following elements: Product backlog is maintained JIRA Tasks are maintained through JIRA Kanban board Daily team stand-ups are held Tasks marked done are developed, tested and ready to be shipped Bi-weekly meetings are held to give status on progress and discuss open questions Issue lifecycle Each ticket in JIRA Kanban board goes through the following states that correspond the development procedure described in previous chapter. Description of states: Awaiting analysis - ticket to be dealt with, product backlog. Awaiting implementation - ticket analysed and ready to be implemented. In progress - ticket is being handled (feature coding, document writing, ...). In Review - ticket is ready for review Resolved - ticket is ready for test Closed - ticket has been tested and found ready for release QA activities and quality criterias in the development Process improvement The development process is constantly monitored and adjusted to the changing situations. Retrospective meetings for process feedback are held. Unit tests It is responsibility of developer to write, maintain and execute the unit tests on developed features. The code must compile and pass unit tests before it is allowed to be submitted to the code repository. The code of the unit tests is integral part of the source code and is maintained on the same principles. Unit tests are also automatically executed on each build, if the unit tests do not pass further test execution is stopped. Static testing/code reviews All changes (including changes in unit test code) are reviewed by another development team member using GitHub. The code must pass review before it is submitted to testing. SonarLint is used to validate code automatically. It integrates both suggested tools mentioned in reference document (3) References Testing Approach Testing follows the principles described in reference document (1) in References The goal is to automate as much of the testing process as possible, however some aspects of the testing will be carried out manually. As the development is carried out by the backlog priority the testing follows the same principle. After each feature release test cases, test automation code and test results will be available through GitHub. Testing process All automatic tests, except load tests will follow the same execution process. The tests are ran automatically during the project build process by Travis CI after each push in GitHub. Test case management Test cases are handled as integral part of test automation code. The same applies on manual tests, in manual test cases some portion of automation may be used to execute the tests but the results are verified manually. All the test cases and test code will be maintained in the GitHub. Test cases are developed and maintained together with test automation code by the QA specialist for Integration and System Testing. Following elements will be present in test cases: TestCaseID: unique ID that makes possible to identify specific test case TestType: Automated, Automated SoapUI or Manual Requirement: Reference to the requirement that is tested Title: Description of the test Expected Result: expected outcome of the test (pass criteria for the test) File: input test file that is used Test case sample Automatic and manual test cases will have the same description principles (shown below). /** * TestCaseID: Bdoc-ValidationFail-27 * * TestType: Automated * * Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 * * Title: Bdoc OCSP response doesn ' t correspond to the signers certificate * * Expected Result: The document should fail the validation * * File: NS28_WrongSignerCertInOCSPResp.bdoc */ @Test public void bdocWrongSignersCertInOcspResponse () { setTestFilesDirectory ( \"bdoc/live/timemark/\" ) ; post ( validationRequestFor ( \"NS28_WrongSignerCertInOCSPResp.bdoc\" )) .then () .body ( \"signatures[0].indication\" , Matchers.is ( \"TOTAL-FAILED\" )) .body ( \"signatures[0].subIndication\" , Matchers.is ( \"TRY_LATER\" )) .body ( \"signatures[0].errors.content\" , Matchers.hasItem ( \"No revocation data for the certificate\" )) .body ( \"validSignaturesCount\" , Matchers.is ( 0 )) ; } Defect management All found defects will be reported and handled in Jira. The defect report will follow similar lifecycle in JIRA Kanban board as tasks. The report will have at least the following elements: Title: Short, precise description of the problem Details: Type, Priority, Epic Link Description: Steps to reproduce bug - sequence for reproduction, link to test case if applicable. Expected behavior - expected outcome of the test sequence. Actual behavior - actual result of the test sequence. The description should be thorough enough to enable the debugging of the problem and to give objective base for severity assessment. File attachments - Test files, logs, images, ... Test levels Integration testing The scope of the tests is illustrated on the image below. The goal is to test the SiVA application API (both X-Road and REST/JSON) and to test the independent module capability for validation of specific type of file. Both valid and invalid inputs are tested. More info about testing specifics can be found in Test Plan Integration testing section. System testing The scope of the tests is illustrated on the image below. The goal of the test is to test the entire length of signature validation process and to test supportive functions. In addition Demo application is tested. More info about testing specifics can be found in Test Plan System testing section. Regression testing Regression testing will consist of two parts: Running all automated tests (unit, integration and system tests) Manual testing of the areas that are not covered by automatic tests based on the regression test checklist","title":"6.1 QA Strategy"},{"location":"siva3/qa_strategy/#introduction","text":"The goal of this document is to give general overview of the used infrastructure, processes, schedule and actions to ensure good quality delivery. The document describes activities in the whole software development process. Analysis, development and testing are separated for the sake of structure and transparency although they are integral parts of the development cycle. This is living document and will be constantly updated as the project evolves.","title":"Introduction"},{"location":"siva3/qa_strategy/#environments-and-infrastructure","text":"There are different test environments for quality assurance, depending on the nature and aim. TravisCI environment for public CI - Platform: Linux Test environment for local test and load test - Platform: Linux Instructions how to set up test enviroment and run tests together with more info can be found in SiVa GitHub page System requirements: At least 4GB of RAM on machine where the build is executed Minimum required Java version is Java 8 SiVa project provided Maven Wrapper (./mvnw) Tools used: TravisCI \u2013 is a continuous integration service used to build and test software projects hosted at GitHub Jenkins \u2013 is an open source continuous integration tool written in Java. JMeter \u2013 tool for creating and running load tests. IntelliJ IDEA \u2013 is a Java integrated development environment(IDE) for developing and executing automated tests locally Apache Tomcat - is an open source servlet container developed by the Apache Software Foundation. Rest-Assured - is a Java DSL(Domain-specific language) for simplifying testing of REST based Services built on top of HTTP Builder.","title":"Environments and infrastructure"},{"location":"siva3/qa_strategy/#analysis","text":"Analysis will be tagged with identificators to enable cross-reference between requirements and corresponding tests. This includes both functional and non-functional requirements. See documents (2) and (3) in References","title":"Analysis"},{"location":"siva3/qa_strategy/#development","text":"","title":"Development"},{"location":"siva3/qa_strategy/#development-process","text":"Customized process based on Kanban is used in the development. The process consists of following elements: Product backlog is maintained JIRA Tasks are maintained through JIRA Kanban board Daily team stand-ups are held Tasks marked done are developed, tested and ready to be shipped Bi-weekly meetings are held to give status on progress and discuss open questions","title":"Development process"},{"location":"siva3/qa_strategy/#issue-lifecycle","text":"Each ticket in JIRA Kanban board goes through the following states that correspond the development procedure described in previous chapter. Description of states: Awaiting analysis - ticket to be dealt with, product backlog. Awaiting implementation - ticket analysed and ready to be implemented. In progress - ticket is being handled (feature coding, document writing, ...). In Review - ticket is ready for review Resolved - ticket is ready for test Closed - ticket has been tested and found ready for release","title":"Issue lifecycle"},{"location":"siva3/qa_strategy/#qa-activities-and-quality-criterias-in-the-development","text":"Process improvement The development process is constantly monitored and adjusted to the changing situations. Retrospective meetings for process feedback are held. Unit tests It is responsibility of developer to write, maintain and execute the unit tests on developed features. The code must compile and pass unit tests before it is allowed to be submitted to the code repository. The code of the unit tests is integral part of the source code and is maintained on the same principles. Unit tests are also automatically executed on each build, if the unit tests do not pass further test execution is stopped. Static testing/code reviews All changes (including changes in unit test code) are reviewed by another development team member using GitHub. The code must pass review before it is submitted to testing. SonarLint is used to validate code automatically. It integrates both suggested tools mentioned in reference document (3) References","title":"QA activities and quality criterias in the development"},{"location":"siva3/qa_strategy/#testing","text":"","title":"Testing"},{"location":"siva3/qa_strategy/#approach","text":"Testing follows the principles described in reference document (1) in References The goal is to automate as much of the testing process as possible, however some aspects of the testing will be carried out manually. As the development is carried out by the backlog priority the testing follows the same principle. After each feature release test cases, test automation code and test results will be available through GitHub.","title":"Approach"},{"location":"siva3/qa_strategy/#testing-process","text":"All automatic tests, except load tests will follow the same execution process. The tests are ran automatically during the project build process by Travis CI after each push in GitHub.","title":"Testing process"},{"location":"siva3/qa_strategy/#test-case-management","text":"Test cases are handled as integral part of test automation code. The same applies on manual tests, in manual test cases some portion of automation may be used to execute the tests but the results are verified manually. All the test cases and test code will be maintained in the GitHub. Test cases are developed and maintained together with test automation code by the QA specialist for Integration and System Testing. Following elements will be present in test cases: TestCaseID: unique ID that makes possible to identify specific test case TestType: Automated, Automated SoapUI or Manual Requirement: Reference to the requirement that is tested Title: Description of the test Expected Result: expected outcome of the test (pass criteria for the test) File: input test file that is used Test case sample Automatic and manual test cases will have the same description principles (shown below). /** * TestCaseID: Bdoc-ValidationFail-27 * * TestType: Automated * * Requirement: http://open-eid.github.io/SiVa/siva/appendix/validation_policy/#common-validation-constraints-polv1-polv2 * * Title: Bdoc OCSP response doesn ' t correspond to the signers certificate * * Expected Result: The document should fail the validation * * File: NS28_WrongSignerCertInOCSPResp.bdoc */ @Test public void bdocWrongSignersCertInOcspResponse () { setTestFilesDirectory ( \"bdoc/live/timemark/\" ) ; post ( validationRequestFor ( \"NS28_WrongSignerCertInOCSPResp.bdoc\" )) .then () .body ( \"signatures[0].indication\" , Matchers.is ( \"TOTAL-FAILED\" )) .body ( \"signatures[0].subIndication\" , Matchers.is ( \"TRY_LATER\" )) .body ( \"signatures[0].errors.content\" , Matchers.hasItem ( \"No revocation data for the certificate\" )) .body ( \"validSignaturesCount\" , Matchers.is ( 0 )) ; }","title":"Test case management"},{"location":"siva3/qa_strategy/#defect-management","text":"All found defects will be reported and handled in Jira. The defect report will follow similar lifecycle in JIRA Kanban board as tasks. The report will have at least the following elements: Title: Short, precise description of the problem Details: Type, Priority, Epic Link Description: Steps to reproduce bug - sequence for reproduction, link to test case if applicable. Expected behavior - expected outcome of the test sequence. Actual behavior - actual result of the test sequence. The description should be thorough enough to enable the debugging of the problem and to give objective base for severity assessment. File attachments - Test files, logs, images, ...","title":"Defect management"},{"location":"siva3/qa_strategy/#test-levels","text":"Integration testing The scope of the tests is illustrated on the image below. The goal is to test the SiVA application API (both X-Road and REST/JSON) and to test the independent module capability for validation of specific type of file. Both valid and invalid inputs are tested. More info about testing specifics can be found in Test Plan Integration testing section. System testing The scope of the tests is illustrated on the image below. The goal of the test is to test the entire length of signature validation process and to test supportive functions. In addition Demo application is tested. More info about testing specifics can be found in Test Plan System testing section. Regression testing Regression testing will consist of two parts: Running all automated tests (unit, integration and system tests) Manual testing of the areas that are not covered by automatic tests based on the regression test checklist","title":"Test levels"},{"location":"siva3/references/","text":"References (1) Lisa_6_Osa_I_SiVa_Testimise_korraldus.pdf (2) Lisa_4_Osa_I_SiVa_Valideerimisteenuse_analuus MUUDETUD.pdf (3) Lisa_3_RIA_Mittefunktsionaalsed_nouded.pdf","title":"7. REFERENCES"},{"location":"siva3/references/#references","text":"(1) Lisa_6_Osa_I_SiVa_Testimise_korraldus.pdf (2) Lisa_4_Osa_I_SiVa_Valideerimisteenuse_analuus MUUDETUD.pdf (3) Lisa_3_RIA_Mittefunktsionaalsed_nouded.pdf","title":"References"},{"location":"siva3/structure_and_activities/","text":"The following chapter depicts SiVa software on a component diagram. Note that not all of the external base libraries are included in the component model to avoid duplicity with other documentation. Only relevant base libraries and dependencies are listed and described in the documentation. Information about additional and transitive dependencies of the respective validation service components can be found via the references provided. System components Siva webapp All validation services use different Java library to validate given document in request. The used validation library is described in each of the validation service section. Component Description Web gateway service Web gateway service is a single access point to the whole SiVa webapp application. Web service is implemented as a standard Spring Boot Web application module, that accepts valid JSON or SOAP requests (see the Interfaces section ) sent by the client systems. Web service module is responsible for basic request and response handling. This includes basic validation of incoming requests (existence of required fields, permitted values, etc) and unmarshaling the request to a Java object before passing it to the next component \u2013 the Proxy service. Response from the proxy service is marshalled and sent back to the client according to respective API. Report signing service Provides signing services for report. Supported interfaces for signature creation: PKCS11, PKCS12. Validation proxy service Acts as a router for the request and response. It is responsible for selecting the appropriate validation service for incoming document. - Proxy service accepts an in memory representation of a document and finds a matching validation service based on document type. The incoming request is converted to validation request and forwarded to the specific validation service. - The report returned by the specific validation service is passed to the statistics service before returning it to Web service. Hashcode validation proxy service Acts as a router for the request and response. It is responsible for selecting the appropriate hashcode validation service for incoming document. - The incoming request is converted to validation request and forwarded to the specific validation service. - The report returned by the specific validation service is passed to the statistics service before returning it to Web service. Data files proxy service Acts as a router for the request and response. It is responsible for selecting the appropriate data files extraction service for incoming document. - Proxy service accepts an in memory representation of a document and finds a matching validation service based on document type. Statistics service A component for collecting statistics data to log. It is Spring Boot module and main purpose for it is to collect data about: incoming request, validation reports and errors that have been reported during validation process. - When HTTP authentication header have been set the reporting service will also add this info to statistics report. - After the report object has been created the data will be logged. Generic validation service Provides validation services for detached signatures and ASIC containers along with PAdES, CAdES and XAdES signatures. Uses Maven released DigiDoc4J EU DSS fork library Timemark container validation service Provides validation services for BDOC and DDOC containers. BDOC for ASiC compliant containers both TM and TS is supported. Uses Maven released DigiDoc4J library TST validation service Provides validation service for Time Stamp Token based ASIC-S containers with Estonian specific validation policy DDOC data files service Provides files extraction services for DigiDoc containers. DDOC for previous generation digitally signed files. Uses latest Maven release of JDigiDoc X-Road validation service X-Road containers are similar to ASiCE containers but are not valid ASiCE containers. There we could not use DSS nor DigiDoc4J provided ASiCE validation functionality but need to X-Road developed asicverifier Java command line utility to validate these containers. Source code for asicverifier can be found in GitHub xroad-public repository : Asicverfier has been integrated into SiVa as Java library. Making possible to use all the Java libraries packaged into asicverifier fat JAR. Configurable functionality: - In SiVa configuration application.yml file You can define alternative location for globalconf directory to be loaded in using input stream. PS! X-road validation service is no longer distributed as a separate webapp installation since SiVa 2.0 Dss Dss library implementations are used for ASICE, XAdES, CAdES and PAdES validation and TSL loading. SiVa uses Digidoc4J DSS fork Java library . Asicverifier X-road signature validation utility (see github project for details). A command line tool to validate X-Road Security server generated ASiCe files. The utility was chosen because it's only available packaged to tool to validate X-Road signature file. TSL loader TSL loader loads the contents of TSL file from given URL in online mode or from directory when using offline mode in predefined interval. Logger Logging functionality is handled by the SLF4J logging facade and on top of the Logback framework. As a result, logging can be configured via the standard Logback configuration file. By default, logging works on the INFO level and logs are directed to the system console. Additional logging appenders can be added (consult logback documentation for more details ) Configuration Configuration is a global component used throughout the webapp. Responsible for reading and handling the application configuration management Validation commons Common interfaces and utilities for all validation services (ie utilities for default and additional policies and constraints) Monitoring service Service that provides generic information about the webapp - it's name, version, uptime and link status. (The service is disabled by default) Siva webapp interfaces Provided: Validation service REST interface - interface for handling validation queries. JSON formatted POST requests Validation service SOAP interface - interface for handling validation queries X-Road compliant and non-compliant SOAP requests (without the X-Road required headers) Hashcode validation service REST interface - interface for handling hashcode validation queries. JSON formatted POST requests Hashcode validation service SOAP interface - interface for handling hashcode validation queries X-Road compliant and non-compliant SOAP requests (without the X-Road required headers) Data file service REST interface - interface for handling data file extraction queries. JSON formatted POST requests Data file service SOAP interface - interface for handling data file extraction queries X-Road compliant and non-compliant SOAP requests (without the X-Road required headers) Monitoring service REST interface - interface for retrieving the webapp's health information HTTP GET that returns JSON formatted resp\u00f3nses Required: X-road validation webapp - interface for validating X-road signed requests EU TSL provider interface - interface for loading the TSL Demo webapp Component Description Demo webapp A Spring boot based web application that provides a web interface to the SiVa system for initial access and testing purposes. Offers a simple and user friendly presentation layer for the whole SiVa webapp. Contains a simple form, that can be used to send signed documents to be validated in SiVa. Demo webapp interfaces Provided: Web interface - interface for handling X-Road signed requests. JSON formatted POST queries Required: Siva webapp REST interface Siva webapp SOAP interface External configuration Component Description Policies and constraints (Optional) By default, two policies are supported and integrated into SiVa - see SiVa Validation Policy . However, it is possible to customize the validation policies and their constraints. Configuration is validation service specific. See the overriding configuration section for details. Externalized configuration Application specific configuration (property files, command line variables, etc) that allow overriding the default values set within the webapp. External subsystems Component Description Digidoc3 client DigiDoc3 client is a program that can be used to sign digitally with ID-card and Mobile-ID, check the validity of digital signatures and open and save documents inside the signature container. See the github project for further details. XROAD security server A client subsystem that, once connected, allows SiVa to be integrated into the X-Road data exchange layer EU TSL provider A subsystem that provides SiVa with a current TSL. An HTTPS endpoint, that provides an XML formatted file that lists all trusted service providers along with their certificates. Monitoring (Optional) A subsystem that tracks the health and uptime of SiVa webapps","title":"3.1 Component model"},{"location":"siva3/structure_and_activities/#system-components","text":"","title":"System components"},{"location":"siva3/structure_and_activities/#siva-webapp","text":"All validation services use different Java library to validate given document in request. The used validation library is described in each of the validation service section. Component Description Web gateway service Web gateway service is a single access point to the whole SiVa webapp application. Web service is implemented as a standard Spring Boot Web application module, that accepts valid JSON or SOAP requests (see the Interfaces section ) sent by the client systems. Web service module is responsible for basic request and response handling. This includes basic validation of incoming requests (existence of required fields, permitted values, etc) and unmarshaling the request to a Java object before passing it to the next component \u2013 the Proxy service. Response from the proxy service is marshalled and sent back to the client according to respective API. Report signing service Provides signing services for report. Supported interfaces for signature creation: PKCS11, PKCS12. Validation proxy service Acts as a router for the request and response. It is responsible for selecting the appropriate validation service for incoming document. - Proxy service accepts an in memory representation of a document and finds a matching validation service based on document type. The incoming request is converted to validation request and forwarded to the specific validation service. - The report returned by the specific validation service is passed to the statistics service before returning it to Web service. Hashcode validation proxy service Acts as a router for the request and response. It is responsible for selecting the appropriate hashcode validation service for incoming document. - The incoming request is converted to validation request and forwarded to the specific validation service. - The report returned by the specific validation service is passed to the statistics service before returning it to Web service. Data files proxy service Acts as a router for the request and response. It is responsible for selecting the appropriate data files extraction service for incoming document. - Proxy service accepts an in memory representation of a document and finds a matching validation service based on document type. Statistics service A component for collecting statistics data to log. It is Spring Boot module and main purpose for it is to collect data about: incoming request, validation reports and errors that have been reported during validation process. - When HTTP authentication header have been set the reporting service will also add this info to statistics report. - After the report object has been created the data will be logged. Generic validation service Provides validation services for detached signatures and ASIC containers along with PAdES, CAdES and XAdES signatures. Uses Maven released DigiDoc4J EU DSS fork library Timemark container validation service Provides validation services for BDOC and DDOC containers. BDOC for ASiC compliant containers both TM and TS is supported. Uses Maven released DigiDoc4J library TST validation service Provides validation service for Time Stamp Token based ASIC-S containers with Estonian specific validation policy DDOC data files service Provides files extraction services for DigiDoc containers. DDOC for previous generation digitally signed files. Uses latest Maven release of JDigiDoc X-Road validation service X-Road containers are similar to ASiCE containers but are not valid ASiCE containers. There we could not use DSS nor DigiDoc4J provided ASiCE validation functionality but need to X-Road developed asicverifier Java command line utility to validate these containers. Source code for asicverifier can be found in GitHub xroad-public repository : Asicverfier has been integrated into SiVa as Java library. Making possible to use all the Java libraries packaged into asicverifier fat JAR. Configurable functionality: - In SiVa configuration application.yml file You can define alternative location for globalconf directory to be loaded in using input stream. PS! X-road validation service is no longer distributed as a separate webapp installation since SiVa 2.0 Dss Dss library implementations are used for ASICE, XAdES, CAdES and PAdES validation and TSL loading. SiVa uses Digidoc4J DSS fork Java library . Asicverifier X-road signature validation utility (see github project for details). A command line tool to validate X-Road Security server generated ASiCe files. The utility was chosen because it's only available packaged to tool to validate X-Road signature file. TSL loader TSL loader loads the contents of TSL file from given URL in online mode or from directory when using offline mode in predefined interval. Logger Logging functionality is handled by the SLF4J logging facade and on top of the Logback framework. As a result, logging can be configured via the standard Logback configuration file. By default, logging works on the INFO level and logs are directed to the system console. Additional logging appenders can be added (consult logback documentation for more details ) Configuration Configuration is a global component used throughout the webapp. Responsible for reading and handling the application configuration management Validation commons Common interfaces and utilities for all validation services (ie utilities for default and additional policies and constraints) Monitoring service Service that provides generic information about the webapp - it's name, version, uptime and link status. (The service is disabled by default)","title":"Siva webapp"},{"location":"siva3/structure_and_activities/#siva-webapp-interfaces","text":"Provided: Validation service REST interface - interface for handling validation queries. JSON formatted POST requests Validation service SOAP interface - interface for handling validation queries X-Road compliant and non-compliant SOAP requests (without the X-Road required headers) Hashcode validation service REST interface - interface for handling hashcode validation queries. JSON formatted POST requests Hashcode validation service SOAP interface - interface for handling hashcode validation queries X-Road compliant and non-compliant SOAP requests (without the X-Road required headers) Data file service REST interface - interface for handling data file extraction queries. JSON formatted POST requests Data file service SOAP interface - interface for handling data file extraction queries X-Road compliant and non-compliant SOAP requests (without the X-Road required headers) Monitoring service REST interface - interface for retrieving the webapp's health information HTTP GET that returns JSON formatted resp\u00f3nses Required: X-road validation webapp - interface for validating X-road signed requests EU TSL provider interface - interface for loading the TSL","title":"Siva webapp interfaces"},{"location":"siva3/structure_and_activities/#demo-webapp","text":"Component Description Demo webapp A Spring boot based web application that provides a web interface to the SiVa system for initial access and testing purposes. Offers a simple and user friendly presentation layer for the whole SiVa webapp. Contains a simple form, that can be used to send signed documents to be validated in SiVa.","title":"Demo webapp"},{"location":"siva3/structure_and_activities/#demo-webapp-interfaces","text":"Provided: Web interface - interface for handling X-Road signed requests. JSON formatted POST queries Required: Siva webapp REST interface Siva webapp SOAP interface","title":"Demo webapp interfaces"},{"location":"siva3/structure_and_activities/#external-configuration","text":"Component Description Policies and constraints (Optional) By default, two policies are supported and integrated into SiVa - see SiVa Validation Policy . However, it is possible to customize the validation policies and their constraints. Configuration is validation service specific. See the overriding configuration section for details. Externalized configuration Application specific configuration (property files, command line variables, etc) that allow overriding the default values set within the webapp.","title":"External configuration"},{"location":"siva3/structure_and_activities/#external-subsystems","text":"Component Description Digidoc3 client DigiDoc3 client is a program that can be used to sign digitally with ID-card and Mobile-ID, check the validity of digital signatures and open and save documents inside the signature container. See the github project for further details. XROAD security server A client subsystem that, once connected, allows SiVa to be integrated into the X-Road data exchange layer EU TSL provider A subsystem that provides SiVa with a current TSL. An HTTPS endpoint, that provides an XML formatted file that lists all trusted service providers along with their certificates. Monitoring (Optional) A subsystem that tracks the health and uptime of SiVa webapps","title":"External subsystems"},{"location":"siva3/test_plan/","text":"Test execution Execution of tests in SiVa is divided in three categories: Automated, Automated SoapUI, Manual. The method is also indicated in test case description with TestType field. Execution of Automated type of tests These tests are run automatically by Maven every time SiVa project is built. These tests must pass for the build to be successful. Its also possible to execute the tests separately with Maven wrapper using the command: ./mvnw verify These tests are part of SiVa project and can also be executed using IntellJ IDEA. To do that, SiVa project must be loaded into IDEA. Tests are located in following packages: ee.openeid.siva.integrationtest ee.openeid.siva.resttest ee.openeid.siva.soaptest To run the tests in IDEA right click on package name and select \"Run tests in\". Its also possible to run individual tests by right clicking on specific test code and selecting \"Run\". Execution of Automated SoapUI type of tests The description how to execute the tests together with SoapUI project file to be used can be found in SiVa GitHub Execution of Manual type of tests Most of the manual tests require that SiVa service is set up together with SiVa Sample application. The instructions how to set up SiVa are given in System integrator's guide Execution of manual tests depends on testable area. These tests can be divided into following categories: Statistics tests - test data can be prepeared with exectuting ee.openeid.siva.manualtest package. It can be also generated by uploading files into SiVa Sample application. Results have to be verified in logs. Report tests - test data can be prepeared with exectuting ee.openeid.siva.manualtest package. Results have to be verified manually. Configuration tests - SiVa configuration files have to be modified by hand and service must be set up. Correct behavior of the service must be checked. Other tests - tests are executed by loading files into SiVa Sample application and validating the results shown in the SiVa Sample application. Files to use in manual tests can be found in SiVa GitHub Integration Test introduction This section of the document gives overview of Integration Testing carried out on SiVa web service and SiVa Sample application. SiVa web service Integration Testing is using IO RestAssured library v3.3.0 to implement automatic checks for REST/SOAP based tests. The testing of the SiVa web service is divided into sections based on the software architecture and functionalities provided to the users. The sections are: REST API SOAP API DDOC container signature validation BDOC container signature validation ASICE container signature validation ASIC-S container signature validation PDF signature validation X-Road ASIC-E signature validation XAdES hashcode validation The goal is to focus testing on functionalities implemented in SiVa web service application. Functionalities provided by Validation libraries are not explicitly tested. In addition SiVa Sample Application is tested. These tests are carried out manually. Testing of REST API The goal of the REST API testing is to check that the API is accepting the requests based on the specification and the output result is in correct format and has all the required elements. Validation request tests Following areas are tested on input: Wrong (not accepted) values in input parameters Empty values in input paramters Too many parameters Too few parameters Inconsistencies on stated parameters and actual data (wrong document type) Case insensitivity on parameter names Empty request In all of the negative cases correctness of returned error message is checked. Specific test cases and input files can be found in: ValidationRequestIT.java DocumentFormatIT.java HashcodeValidationRequestIT.java Get Data Files request tests Following areas are tested on input: Empty request Empty values in input parameters Too many parameters Too few parameters Changed order of parameters Case insensitivity on parameter names Inconsistencies on stated parameters and actual data In all of the negative cases correctness of returned error message is checked. Specific test cases and input files can be found in: GetDataFileRequestIT.java Validation report and report siganture tests SiVa web service returns uniform Validation Report on all the supported document types. This also includes correct document types without actual signature (for example PDF document without signature). Following areas are tested on output (Validation Report): JSON structure on DDOC, BDOC, PDF, ASIC-E, ASIC-S, XAdES hashcode and ASICE-E X-Road document types Presence of the mandatory elements on DDOC, BDOC, PDF, ASIC-E, ASIC-S, XAdES hashcode and ASICE-E X-Road document types Presence of optional elements on DDOC, BDOC, PDF, ASIC-E, ASIC-S, XAdES hashcode and ASICE-E X-Road document types Verification of expected values JSON structure on containers without signatures Specific test cases and input files can be found in: ValidationReportValueVerificationIT.java ReportSignatureManualIT.java DetailedReportValidationManualIT.java DiagnosticReportValidationManualIT.java Testing of SOAP API The goal of the SOAP API testing is to check that the API is accepting the requests based on the specification and the output result (Validation Report) is in correct format and has all the required elements. In general the tests follow the same principles as with REST API. Compatibility with X-Road security server is out of scope for these tests and will be covered in X-Road System Test plan. Validation request tests Following areas are tested on input: Wrong (not accepted) values in input parameters Empty values in input paramters Too many parameters Too few parameters Inconsistencies on stated parameters and actual data (wrong document type) Case insensitivity on parameter names Empty request In all of the negative cases correctness of returned error message is checked. Specific test cases and input files can be found in: SoapValidationRequestIT.java SoapHashcodeValidationRequestIT.java Get Data Files request tests Following areas are tested on input: Empty request Empty values in input parameters Too many parameters Too few parameters Changed order of parameters Case insensitivity on parameter names Inconsistencies on stated parameters and actual data In all of the negative cases correctness of returned error message is checked. Specific test cases and input files can be found in: SoapGetDataFileRequestIT.java Validation report tests SiVa web service returns uniform Validation Report on all the supported document types. This also includes correct document types without actual signature (for example PDF document without signature). However not all values may be present for all the document types. Following areas are tested on output (Validation Report): Presence of the mandatory elements on DDOC, BDOC, PDF, ASIC-S ASIC-E, XAdES hashcode and ASICE-E X-Road document types Presence of optional elements on DDOC, BDOC, PDF, ASIC-S, ASIC-E, XAdES hashcode and ASICE-E X-Road document types Verification of expected values Specific test cases and input files can be found in: SoapValidationReportValueIT.java Get Data Files report tests Following areas are tested on output: Presence of the mandatory elements Verification of expected values Extraction of all data files Specific test cases and input files can be found in: SoapGetDataFileReportIT.java Testing of DDOC container signature validation The goal of the DDOC container signature validation testing is to check that the validation results given by JDigiDoc library are properly presented in validation report. The testing of DDOC signatures consists of following main cases: Containers with valid signature(s) are validated. Containers with invalid signature(s) or no signature are validated Containers sizes near maximum are validated Containers with DDOC v1.0 - 1.3 are validated Specific test cases and input files can be found in: DdocValidationFailIT.java DdocValidationPassIT.java LargeFileIT.java What is not tested: Verification of different causes in container for invalid result is out of scope. Testing of BDOC container signature validation The goal of the BDOC container signature validation testing is to check that the validation results given by DigiDoc4J library are properly presented in validation report. The testing of BDOC container signatures consists of following main cases: Containers with valid signature(s) are validated Containers with invalid signature(s) or no signature are validated Containers sizes near maximum are validated Containers with baseline B, T, LT, LT_TM and LTA profile (files with BDOC extension) Specific test cases and input files can be found in: BdocValidationFailIT.java BdocValidationPassIT.java LargeFileIT.java What is not tested: Verification of different causes in container for invalid result is out of scope. Testing of ASIC-E container signature validation The goal of the ASIC-E container signature validation testing is to check that the validation results given by DSS library are properly presented in validation report. The testing of ASIC-E container signatures consists of following main cases: Containers with valid signature(s) are validated Containers with invalid signature(s) or no signature are validated Containers with baseline B, T, LT and LTA profile Specific test cases and input files can be found in: AsiceValidationFailIT.java AsiceValidationPassIT.java What is not tested: Verification of different causes in container for invalid result is out of scope. Testing of ASIC-S container signature validation The goal of the ASIC-S container signature validation testing is to check that the validation results given by DSS library are properly presented in validation report. The testing of ASIC-S container signatures consists of following main cases: Containers with valid signature(s) are validated Containers with invalid signature(s) or no signature are validated Containers sizes near maximum are validated Specific test cases and input files can be found in: AsicsValidationFailIT.java AsicsValidationPassIT.java What is not tested: Verification of different causes in container for invalid result is out of scope. Testing of XAdES hashcode signature validation The goal of the XAdES hashcode signature validation testing is to check that the validation results given by DSS library are properly presented in validation report. The testing of XAdES hashcode signatures consists of following main cases: XAdES signatures with valid signature(s) are validated XAdES signatures with invalid signature(s) or no signature are validated XAdES signatures extracted from BDOC and ASIC-E XAdES signatures with baseline B, T, LT and LTA profile Specific test cases and input files can be found in: XadesHashcodeValidationFailIT.java XadesHashcodeValidationPassIT.java What is not tested: Verification of different causes in container for invalid result is out of scope. Testing of PDF signature validation Portion of the validation rules for PDF documents are implemented in SiVa web apllication itself. Therefor different test area selection is used for PDF compared to other containers. The testing of PDF signatures consists of following main cases: Containers with invalid signature(s) (different reasons for failure) are validated Containers with no signature are validated Containers sizes near maximum are validated Containers with different baseline profiles are validated Containers with serial and parallel signatures are validated Containers with different signature cryptocaphic algorithms are validated Containers with OCSP values inside and outside bounds are validated Containers with baseline B, T, LT and LTA profile Specific test cases and input files can be found in: PdfBaselineProfileIT.java PdfSignatureCryptographicAlgorithmIT.java PdfValidationFailIT.java PdfValidationPassIT.java LargeFileIT.java Testing of X-Road ASIC-E container signature validation The goal of the ASICE container signature validation testing is to check that the validation results given by X-Road signature validation utility are properly presented in validation report. The testing of ASICE signatures consists of following main cases: Containers with valid signature(s) are validated Containers with invalid signature(s) are validated Specific test cases and input files can be found in: XroadValidationPassIT.java XroadValidationFailIT.java What is not tested: Verification of different causes in container for invalid result is out of scope. Testing of Data Files Extraction The goal of the Data Files Extraction testing is to check if right data files returned for DDOC container and error messages for other types of containers. The testing of Data Files Extraction consists of following main cases: Extracting the data files from valid DDOC container Extracting the data files from Hashcoded DDOC returns null for Base64 encoded String Extracting the data files from DDOC container with 12 different types of files Extracting the data files from not DDOC container Extracting the data files from DDOC container with wrong Document Type Specific test cases and input files can be found in: DdocGetDataFilesIT.java Testing of user statistics Testing of user statistics is carried out in combination of automatic data preparation and generation by integration tests and manual verification of the results. SiVa supports the following way of gathering user statistics: Validation results are printed to system log and can be gathered by any suitable means Following areas are covered: Statistics values are checked in log for all container types (this also includes parameters not present in validation report) Valid and invalid signatures are validated Error situations on signature validation (instead of validation report, error message is returned) Specific test cases and input files can be found in: StatisticsToLogsManualIT.java SiVa Sample Application tests Testing of SiVa Sample Application is done manually. The main cases are: Cross browser usage (IE, Edge, Chrome, Firefox and Safari) File upload (different sizes, suported and unsupported file types) Displayment of Validation Report both for REST and SOAP Layout of the page Error representation Sample test cases with input files can be found in: Sample Application Integration Test System Test introduction While Integration Tests were mostly carried out automatically then System Testing is mostly depending on manual testing. System testing is carried out using two access points: Testing through SiVa Sample Application Testing through X-Road security server using SoapUI Note Testing through X-Road security server requires presence and configuration of X-Road security server to use SiVa service. Tests are run using SoapUI that simulates request to X-Road security server. Testing through X-Road security server Following areas are covered for document validation: Validation of valid signature Validation of invalid signatur Validation that returns Soap error All of the above test cases are run with BDOC, DDOC, PDF, ASIC-S and X-Road ASiC-E containers. Following areas are covered for file extraction: Extraction of data files from valid ddoc Extraction of data files from invalid ddoc Error response from data file extraction Tests along with test case descriptions are available for rerun in github . Specific test cases and input files can be found in: X-Road Soap System Test Configuration/administration testing Following areas are covered: SiVa Web Application configuration X-Road validation service configuration Sample application configuration Specific test cases can be found in: Configuration System Test Load Test introduction The goals of the load test was to: Determine the throughput capabilities of a single Siva node and how it handles requests under increasing load. Test whether the SiVa service throughput is horizontally scalable up to 50 requests per second. Each container type was load-tested separately since the business logic and underlying mechanics for validating specific container types are vastly different. Load tests were run in three stages \u2013 firstly a single Siva service node was tested to determine the baseline performance metrics. Second and third stage involved adding additional service node to previous setup and testing the horizontal scalability performance. All three target Siva service nodes had identical virtual machine set-up. Virtual machines were installed on separate physical hardware. Siva web service nodes on a target Linux virtual machine were packaged inside a Docker container (along with Java with 4 GB allocated for Heap). The test runner (JMeter plugin used by Maven) resided on a separate machine on local area network. Simple reverse proxy was used as a load balancer to distribute the load between nodes (using round robin algorithm). Load testing is carried out on following environments: System under test enviroment (processor: Intel(R) Xeon(R) CPU E5-2620 v3 @ 2.40GHz memory: 6GB (4GB allocated for Java heap)) Load balancer enviroment (processor: Intel(R) Xeon(R) CPU E5-2620 v3 @ 1.60GHz memory: 4GB) Jmeter executer enviroment (processor: Intel(R) Xeon(R) CPU E5-2620 v2 @ 2.10GHz memory: 10GB) Following test data is used in load test: BDOC-TS file with two valid signatures (~100KB and 5MB) BDOC-TM file with two valid signatures (~100KB and 5MB) PDF file with two valid signatures (~200KB and 5MB) DDOC file with two valid signatures (~300KB and 5MB) ASIC-E X-Road container with one valid signature (~10KB) ASIC-S file with two valid signatures (~20KB and 50KB) Each of the files are validated through REST interface. SOAP interface is used with small files for a comparison. It is evaluated that the interface (REST or SOAP) do not play noticeable effect on overall results. Each of the tested files follow the same test plan: Five concurrent requests are made per second This load is held for period of time Concurrent requests are increased by five until 50 concurrent requests per second is achieved Latency and throughput is measured on each concurrent request steps","title":"6.2 Test Plan"},{"location":"siva3/test_plan/#test-execution","text":"Execution of tests in SiVa is divided in three categories: Automated, Automated SoapUI, Manual. The method is also indicated in test case description with TestType field.","title":"Test execution"},{"location":"siva3/test_plan/#execution-of-automated-type-of-tests","text":"These tests are run automatically by Maven every time SiVa project is built. These tests must pass for the build to be successful. Its also possible to execute the tests separately with Maven wrapper using the command: ./mvnw verify These tests are part of SiVa project and can also be executed using IntellJ IDEA. To do that, SiVa project must be loaded into IDEA. Tests are located in following packages: ee.openeid.siva.integrationtest ee.openeid.siva.resttest ee.openeid.siva.soaptest To run the tests in IDEA right click on package name and select \"Run tests in\". Its also possible to run individual tests by right clicking on specific test code and selecting \"Run\".","title":"Execution of Automated type of tests"},{"location":"siva3/test_plan/#execution-of-automated-soapui-type-of-tests","text":"The description how to execute the tests together with SoapUI project file to be used can be found in SiVa GitHub","title":"Execution of Automated SoapUI type of tests"},{"location":"siva3/test_plan/#execution-of-manual-type-of-tests","text":"Most of the manual tests require that SiVa service is set up together with SiVa Sample application. The instructions how to set up SiVa are given in System integrator's guide Execution of manual tests depends on testable area. These tests can be divided into following categories: Statistics tests - test data can be prepeared with exectuting ee.openeid.siva.manualtest package. It can be also generated by uploading files into SiVa Sample application. Results have to be verified in logs. Report tests - test data can be prepeared with exectuting ee.openeid.siva.manualtest package. Results have to be verified manually. Configuration tests - SiVa configuration files have to be modified by hand and service must be set up. Correct behavior of the service must be checked. Other tests - tests are executed by loading files into SiVa Sample application and validating the results shown in the SiVa Sample application. Files to use in manual tests can be found in SiVa GitHub","title":"Execution of Manual type of tests"},{"location":"siva3/test_plan/#integration-test-introduction","text":"This section of the document gives overview of Integration Testing carried out on SiVa web service and SiVa Sample application. SiVa web service Integration Testing is using IO RestAssured library v3.3.0 to implement automatic checks for REST/SOAP based tests. The testing of the SiVa web service is divided into sections based on the software architecture and functionalities provided to the users. The sections are: REST API SOAP API DDOC container signature validation BDOC container signature validation ASICE container signature validation ASIC-S container signature validation PDF signature validation X-Road ASIC-E signature validation XAdES hashcode validation The goal is to focus testing on functionalities implemented in SiVa web service application. Functionalities provided by Validation libraries are not explicitly tested. In addition SiVa Sample Application is tested. These tests are carried out manually.","title":"Integration Test introduction"},{"location":"siva3/test_plan/#testing-of-rest-api","text":"The goal of the REST API testing is to check that the API is accepting the requests based on the specification and the output result is in correct format and has all the required elements.","title":"Testing of REST API"},{"location":"siva3/test_plan/#validation-request-tests","text":"Following areas are tested on input: Wrong (not accepted) values in input parameters Empty values in input paramters Too many parameters Too few parameters Inconsistencies on stated parameters and actual data (wrong document type) Case insensitivity on parameter names Empty request In all of the negative cases correctness of returned error message is checked. Specific test cases and input files can be found in: ValidationRequestIT.java DocumentFormatIT.java HashcodeValidationRequestIT.java","title":"Validation request tests"},{"location":"siva3/test_plan/#get-data-files-request-tests","text":"Following areas are tested on input: Empty request Empty values in input parameters Too many parameters Too few parameters Changed order of parameters Case insensitivity on parameter names Inconsistencies on stated parameters and actual data In all of the negative cases correctness of returned error message is checked. Specific test cases and input files can be found in: GetDataFileRequestIT.java","title":"Get Data Files request tests"},{"location":"siva3/test_plan/#validation-report-and-report-siganture-tests","text":"SiVa web service returns uniform Validation Report on all the supported document types. This also includes correct document types without actual signature (for example PDF document without signature). Following areas are tested on output (Validation Report): JSON structure on DDOC, BDOC, PDF, ASIC-E, ASIC-S, XAdES hashcode and ASICE-E X-Road document types Presence of the mandatory elements on DDOC, BDOC, PDF, ASIC-E, ASIC-S, XAdES hashcode and ASICE-E X-Road document types Presence of optional elements on DDOC, BDOC, PDF, ASIC-E, ASIC-S, XAdES hashcode and ASICE-E X-Road document types Verification of expected values JSON structure on containers without signatures Specific test cases and input files can be found in: ValidationReportValueVerificationIT.java ReportSignatureManualIT.java DetailedReportValidationManualIT.java DiagnosticReportValidationManualIT.java","title":"Validation report and report siganture tests"},{"location":"siva3/test_plan/#testing-of-soap-api","text":"The goal of the SOAP API testing is to check that the API is accepting the requests based on the specification and the output result (Validation Report) is in correct format and has all the required elements. In general the tests follow the same principles as with REST API. Compatibility with X-Road security server is out of scope for these tests and will be covered in X-Road System Test plan.","title":"Testing of SOAP API"},{"location":"siva3/test_plan/#validation-request-tests_1","text":"Following areas are tested on input: Wrong (not accepted) values in input parameters Empty values in input paramters Too many parameters Too few parameters Inconsistencies on stated parameters and actual data (wrong document type) Case insensitivity on parameter names Empty request In all of the negative cases correctness of returned error message is checked. Specific test cases and input files can be found in: SoapValidationRequestIT.java SoapHashcodeValidationRequestIT.java","title":"Validation request tests"},{"location":"siva3/test_plan/#get-data-files-request-tests_1","text":"Following areas are tested on input: Empty request Empty values in input parameters Too many parameters Too few parameters Changed order of parameters Case insensitivity on parameter names Inconsistencies on stated parameters and actual data In all of the negative cases correctness of returned error message is checked. Specific test cases and input files can be found in: SoapGetDataFileRequestIT.java","title":"Get Data Files request tests"},{"location":"siva3/test_plan/#validation-report-tests","text":"SiVa web service returns uniform Validation Report on all the supported document types. This also includes correct document types without actual signature (for example PDF document without signature). However not all values may be present for all the document types. Following areas are tested on output (Validation Report): Presence of the mandatory elements on DDOC, BDOC, PDF, ASIC-S ASIC-E, XAdES hashcode and ASICE-E X-Road document types Presence of optional elements on DDOC, BDOC, PDF, ASIC-S, ASIC-E, XAdES hashcode and ASICE-E X-Road document types Verification of expected values Specific test cases and input files can be found in: SoapValidationReportValueIT.java","title":"Validation report tests"},{"location":"siva3/test_plan/#get-data-files-report-tests","text":"Following areas are tested on output: Presence of the mandatory elements Verification of expected values Extraction of all data files Specific test cases and input files can be found in: SoapGetDataFileReportIT.java","title":"Get Data Files report tests"},{"location":"siva3/test_plan/#testing-of-ddoc-container-signature-validation","text":"The goal of the DDOC container signature validation testing is to check that the validation results given by JDigiDoc library are properly presented in validation report. The testing of DDOC signatures consists of following main cases: Containers with valid signature(s) are validated. Containers with invalid signature(s) or no signature are validated Containers sizes near maximum are validated Containers with DDOC v1.0 - 1.3 are validated Specific test cases and input files can be found in: DdocValidationFailIT.java DdocValidationPassIT.java LargeFileIT.java What is not tested: Verification of different causes in container for invalid result is out of scope.","title":"Testing of DDOC container signature validation"},{"location":"siva3/test_plan/#testing-of-bdoc-container-signature-validation","text":"The goal of the BDOC container signature validation testing is to check that the validation results given by DigiDoc4J library are properly presented in validation report. The testing of BDOC container signatures consists of following main cases: Containers with valid signature(s) are validated Containers with invalid signature(s) or no signature are validated Containers sizes near maximum are validated Containers with baseline B, T, LT, LT_TM and LTA profile (files with BDOC extension) Specific test cases and input files can be found in: BdocValidationFailIT.java BdocValidationPassIT.java LargeFileIT.java What is not tested: Verification of different causes in container for invalid result is out of scope.","title":"Testing of BDOC container signature validation"},{"location":"siva3/test_plan/#testing-of-asic-e-container-signature-validation","text":"The goal of the ASIC-E container signature validation testing is to check that the validation results given by DSS library are properly presented in validation report. The testing of ASIC-E container signatures consists of following main cases: Containers with valid signature(s) are validated Containers with invalid signature(s) or no signature are validated Containers with baseline B, T, LT and LTA profile Specific test cases and input files can be found in: AsiceValidationFailIT.java AsiceValidationPassIT.java What is not tested: Verification of different causes in container for invalid result is out of scope.","title":"Testing of ASIC-E container signature validation"},{"location":"siva3/test_plan/#testing-of-asic-s-container-signature-validation","text":"The goal of the ASIC-S container signature validation testing is to check that the validation results given by DSS library are properly presented in validation report. The testing of ASIC-S container signatures consists of following main cases: Containers with valid signature(s) are validated Containers with invalid signature(s) or no signature are validated Containers sizes near maximum are validated Specific test cases and input files can be found in: AsicsValidationFailIT.java AsicsValidationPassIT.java What is not tested: Verification of different causes in container for invalid result is out of scope.","title":"Testing of ASIC-S container signature validation"},{"location":"siva3/test_plan/#testing-of-xades-hashcode-signature-validation","text":"The goal of the XAdES hashcode signature validation testing is to check that the validation results given by DSS library are properly presented in validation report. The testing of XAdES hashcode signatures consists of following main cases: XAdES signatures with valid signature(s) are validated XAdES signatures with invalid signature(s) or no signature are validated XAdES signatures extracted from BDOC and ASIC-E XAdES signatures with baseline B, T, LT and LTA profile Specific test cases and input files can be found in: XadesHashcodeValidationFailIT.java XadesHashcodeValidationPassIT.java What is not tested: Verification of different causes in container for invalid result is out of scope.","title":"Testing of XAdES hashcode signature validation"},{"location":"siva3/test_plan/#testing-of-pdf-signature-validation","text":"Portion of the validation rules for PDF documents are implemented in SiVa web apllication itself. Therefor different test area selection is used for PDF compared to other containers. The testing of PDF signatures consists of following main cases: Containers with invalid signature(s) (different reasons for failure) are validated Containers with no signature are validated Containers sizes near maximum are validated Containers with different baseline profiles are validated Containers with serial and parallel signatures are validated Containers with different signature cryptocaphic algorithms are validated Containers with OCSP values inside and outside bounds are validated Containers with baseline B, T, LT and LTA profile Specific test cases and input files can be found in: PdfBaselineProfileIT.java PdfSignatureCryptographicAlgorithmIT.java PdfValidationFailIT.java PdfValidationPassIT.java LargeFileIT.java","title":"Testing of PDF signature validation"},{"location":"siva3/test_plan/#testing-of-x-road-asic-e-container-signature-validation","text":"The goal of the ASICE container signature validation testing is to check that the validation results given by X-Road signature validation utility are properly presented in validation report. The testing of ASICE signatures consists of following main cases: Containers with valid signature(s) are validated Containers with invalid signature(s) are validated Specific test cases and input files can be found in: XroadValidationPassIT.java XroadValidationFailIT.java What is not tested: Verification of different causes in container for invalid result is out of scope.","title":"Testing of X-Road ASIC-E container signature validation"},{"location":"siva3/test_plan/#testing-of-data-files-extraction","text":"The goal of the Data Files Extraction testing is to check if right data files returned for DDOC container and error messages for other types of containers. The testing of Data Files Extraction consists of following main cases: Extracting the data files from valid DDOC container Extracting the data files from Hashcoded DDOC returns null for Base64 encoded String Extracting the data files from DDOC container with 12 different types of files Extracting the data files from not DDOC container Extracting the data files from DDOC container with wrong Document Type Specific test cases and input files can be found in: DdocGetDataFilesIT.java","title":"Testing of Data Files Extraction"},{"location":"siva3/test_plan/#testing-of-user-statistics","text":"Testing of user statistics is carried out in combination of automatic data preparation and generation by integration tests and manual verification of the results. SiVa supports the following way of gathering user statistics: Validation results are printed to system log and can be gathered by any suitable means Following areas are covered: Statistics values are checked in log for all container types (this also includes parameters not present in validation report) Valid and invalid signatures are validated Error situations on signature validation (instead of validation report, error message is returned) Specific test cases and input files can be found in: StatisticsToLogsManualIT.java","title":"Testing of user statistics"},{"location":"siva3/test_plan/#siva-sample-application-tests","text":"Testing of SiVa Sample Application is done manually. The main cases are: Cross browser usage (IE, Edge, Chrome, Firefox and Safari) File upload (different sizes, suported and unsupported file types) Displayment of Validation Report both for REST and SOAP Layout of the page Error representation Sample test cases with input files can be found in: Sample Application Integration Test","title":"SiVa Sample Application tests"},{"location":"siva3/test_plan/#system-test-introduction","text":"While Integration Tests were mostly carried out automatically then System Testing is mostly depending on manual testing. System testing is carried out using two access points: Testing through SiVa Sample Application Testing through X-Road security server using SoapUI Note Testing through X-Road security server requires presence and configuration of X-Road security server to use SiVa service. Tests are run using SoapUI that simulates request to X-Road security server.","title":"System Test introduction"},{"location":"siva3/test_plan/#testing-through-x-road-security-server","text":"Following areas are covered for document validation: Validation of valid signature Validation of invalid signatur Validation that returns Soap error All of the above test cases are run with BDOC, DDOC, PDF, ASIC-S and X-Road ASiC-E containers. Following areas are covered for file extraction: Extraction of data files from valid ddoc Extraction of data files from invalid ddoc Error response from data file extraction Tests along with test case descriptions are available for rerun in github . Specific test cases and input files can be found in: X-Road Soap System Test","title":"Testing through X-Road security server"},{"location":"siva3/test_plan/#configurationadministration-testing","text":"Following areas are covered: SiVa Web Application configuration X-Road validation service configuration Sample application configuration Specific test cases can be found in: Configuration System Test","title":"Configuration/administration testing"},{"location":"siva3/test_plan/#load-test-introduction","text":"The goals of the load test was to: Determine the throughput capabilities of a single Siva node and how it handles requests under increasing load. Test whether the SiVa service throughput is horizontally scalable up to 50 requests per second. Each container type was load-tested separately since the business logic and underlying mechanics for validating specific container types are vastly different. Load tests were run in three stages \u2013 firstly a single Siva service node was tested to determine the baseline performance metrics. Second and third stage involved adding additional service node to previous setup and testing the horizontal scalability performance. All three target Siva service nodes had identical virtual machine set-up. Virtual machines were installed on separate physical hardware. Siva web service nodes on a target Linux virtual machine were packaged inside a Docker container (along with Java with 4 GB allocated for Heap). The test runner (JMeter plugin used by Maven) resided on a separate machine on local area network. Simple reverse proxy was used as a load balancer to distribute the load between nodes (using round robin algorithm). Load testing is carried out on following environments: System under test enviroment (processor: Intel(R) Xeon(R) CPU E5-2620 v3 @ 2.40GHz memory: 6GB (4GB allocated for Java heap)) Load balancer enviroment (processor: Intel(R) Xeon(R) CPU E5-2620 v3 @ 1.60GHz memory: 4GB) Jmeter executer enviroment (processor: Intel(R) Xeon(R) CPU E5-2620 v2 @ 2.10GHz memory: 10GB) Following test data is used in load test: BDOC-TS file with two valid signatures (~100KB and 5MB) BDOC-TM file with two valid signatures (~100KB and 5MB) PDF file with two valid signatures (~200KB and 5MB) DDOC file with two valid signatures (~300KB and 5MB) ASIC-E X-Road container with one valid signature (~10KB) ASIC-S file with two valid signatures (~20KB and 50KB) Each of the files are validated through REST interface. SOAP interface is used with small files for a comparison. It is evaluated that the interface (REST or SOAP) do not play noticeable effect on overall results. Each of the tested files follow the same test plan: Five concurrent requests are made per second This load is held for period of time Concurrent requests are increased by five until 50 concurrent requests per second is achieved Latency and throughput is measured on each concurrent request steps","title":"Load Test introduction"},{"location":"siva3/use_cases/","text":"Digitally signed document validation process Digitally signed document validation process shows how SiVa chooses validation service and possible output of validation process. User of SiVa system provides digitally signed document file in form of Base64 encoded string. The validation of file and validation policy is handled by validation services underlying libraries. In case of DDOC or BDOC containers with XAdES signatures it will be Timemark container validation Service In case of X-ROAD ASIC-E containers with XAdES signatures it will be Xroad Validation Service In case of ASIC-S containers with TimeStampToken it will be Timestamptoken Validation Service In case of other containers or with XAdES, CAdES and PAdES signatures it will be Generic Validation Service We will log following failure cases: When file upload fails (request started but was not completed successfully) When request validation (JSON or SOAP) fails When signature validation fails User of SiVa system provides detached signatures in form of Base64 encoded string. The validation of file and validation policy is handled by validation services underlying libraries. We will log following failure cases: When file upload fails (request started but was not completed successfully) When request validation (JSON or SOAP) fails When signatures validation fails Certificate loading process All validation services require certificates to validate digitally signed documents. Below process shows how certificates are loaded into validation service. Loading process is done separably for each validation service. Certificate loading process is scheduled cron job inside each validation service to update currently in memory loaded certificates. This process should run after TSL loader has completed updating SiVa local copy of certificates. X-Road 6 security server SOAP request process X-Road validation process is brought out because we skip authentication process for X-Road security server interface and and use XML SOAP as input source. Validation of SOAP request XML is done in the SiVa web application module. Document validation process is described in detail in Digitally signed document validation process Validation report output id described in Interface description TSL loading use case TSL implementd in seprate module. The process is executed in two ways. When SiVa application is started As scheduled job Loading process is required action when ASiCE (BDOC) or DDOC data file extraction process DDOC data file extraction process shows how SiVa extracts data file(s) from container and possible output of data file extraction. User of SiVa system provides digitally signed DDOC file in form of Base64 encoded string. The extraction of data files is handled by underlying JDigiDoc library. We will log following failure cases: When file upload fails (request started but was not completed successfully) When request validation (JSON or SOAP) fails.","title":"3.2 Use cases"},{"location":"siva3/use_cases/#digitally-signed-document-validation-process","text":"Digitally signed document validation process shows how SiVa chooses validation service and possible output of validation process. User of SiVa system provides digitally signed document file in form of Base64 encoded string. The validation of file and validation policy is handled by validation services underlying libraries. In case of DDOC or BDOC containers with XAdES signatures it will be Timemark container validation Service In case of X-ROAD ASIC-E containers with XAdES signatures it will be Xroad Validation Service In case of ASIC-S containers with TimeStampToken it will be Timestamptoken Validation Service In case of other containers or with XAdES, CAdES and PAdES signatures it will be Generic Validation Service We will log following failure cases: When file upload fails (request started but was not completed successfully) When request validation (JSON or SOAP) fails When signature validation fails User of SiVa system provides detached signatures in form of Base64 encoded string. The validation of file and validation policy is handled by validation services underlying libraries. We will log following failure cases: When file upload fails (request started but was not completed successfully) When request validation (JSON or SOAP) fails When signatures validation fails","title":"Digitally signed document validation process"},{"location":"siva3/use_cases/#certificate-loading-process","text":"All validation services require certificates to validate digitally signed documents. Below process shows how certificates are loaded into validation service. Loading process is done separably for each validation service. Certificate loading process is scheduled cron job inside each validation service to update currently in memory loaded certificates. This process should run after TSL loader has completed updating SiVa local copy of certificates.","title":"Certificate loading process"},{"location":"siva3/use_cases/#x-road-6-security-server-soap-request-process","text":"X-Road validation process is brought out because we skip authentication process for X-Road security server interface and and use XML SOAP as input source. Validation of SOAP request XML is done in the SiVa web application module. Document validation process is described in detail in Digitally signed document validation process Validation report output id described in Interface description","title":"X-Road 6 security server SOAP request process"},{"location":"siva3/use_cases/#tsl-loading-use-case","text":"TSL implementd in seprate module. The process is executed in two ways. When SiVa application is started As scheduled job Loading process is required action when ASiCE (BDOC) or","title":"TSL loading use case"},{"location":"siva3/use_cases/#ddoc-data-file-extraction-process","text":"DDOC data file extraction process shows how SiVa extracts data file(s) from container and possible output of data file extraction. User of SiVa system provides digitally signed DDOC file in form of Base64 encoded string. The extraction of data files is handled by underlying JDigiDoc library. We will log following failure cases: When file upload fails (request started but was not completed successfully) When request validation (JSON or SOAP) fails.","title":"DDOC data file extraction process"},{"location":"siva3/appendix/known_issues/","text":"Known issues All known issues should be reported and managed under GitHub project issues section","title":"Appendix 4 - Known Issues"},{"location":"siva3/appendix/known_issues/#known-issues","text":"All known issues should be reported and managed under GitHub project issues section","title":"Known issues"},{"location":"siva3/appendix/test_cases/","text":"Test Case Descriptions Introduction This document gives overview of the test cases. This page is partially generated using a script, more info about the script can be found in SiVa GitHub . The structure and elements of test case is described in QA Strategy document. All the files used in the tests can be found in SiVa GitHub . AsiceValidationFailIT.java Open file TestCaseID: Asice-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with single invalid signature Expected Result: The document should fail the validation File: InvalidLiveSignature.asice TestCaseID: Asice-ValidationFail-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice with multiple invalid signatures Expected Result: The document should fail the validation File: InvalidMultipleSignatures.bdoc TestCaseID: Asice-ValidationFail-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice with multiple signatures both valid and invalid Expected Result: The document should fail the validation File: InvalidAndValidSignatures.asice TestCaseID: Asice-ValidationFail-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice with no signatures Expected Result: The document should fail the validation File: AsiceContainerNoSignature.asice TestCaseID: Asice-ValidationFail-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Wrong signature timestamp Expected Result: The document should fail the validation File: TS-02_23634_TS_wrong_SignatureValue.asice TestCaseID: Asice-ValidationFail-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice No non-repudiation key usage value in the certificate, verification of AdES signature level Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-I-43.asice TestCaseID: Asice-ValidationFail-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice signers certificate does not have non-repudiation value in the certificates key usage field and it does not contain the QC and SSCD compliance information. Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-I-26.asice TestCaseID: Asice-ValidationFail-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: OCSP certificate is not trusted Expected Result: The document should fail the validation File: TM-01_bdoc21-unknown-resp.bdoc TestCaseID: Asice-ValidationFail-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice TSA certificate is not trusted Expected Result: The document should fail the validation File: TS-05_23634_TS_unknown_TSA.asice TestCaseID: Asice-ValidationFail-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice OCSP response status is revoked Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-R-25.asice TestCaseID: Asice-ValidationFail-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice difference between OCSP and time-stamp issuing times is more than 24 hours Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-V-20.asice TestCaseID: Asice-ValidationFail-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice unsigned data files in the container Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-V-34.asice TestCaseID: Asice-ValidationFail-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice SignatureValue does not correspond to the SignedInfo block Expected Result: The document should fail the validation File: REF-19_bdoc21-no-sig-asn1-pref.bdoc TestCaseID: Asice-ValidationFail-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice Baseline-BES file Expected Result: The document should fail the validation File: signWithIdCard_d4j_1.0.4_BES.asice TestCaseID: Asice-ValidationFail-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice Baseline-EPES file Expected Result: The document should fail the validation File: TM-04_kehtivuskinnituset.4.asice TestCaseID: Asice-ValidationFail-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice signers certificate is not trusted Expected Result: The document should fail the validation File: SS-4_teadmataCA.4.asice TestCaseID: Asice-ValidationFail-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice OCSP response status is revoked Expected Result: The document should fail the validation File: TM-15_revoked.4.asice TestCaseID: Asice-ValidationFail-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice OCSP response status is unknown Expected Result: The document should fail the validation File: TM-16_unknown.4.asice TestCaseID: Asice-ValidationFail-19 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice signed data file has been removed from the container Expected Result: The document should fail the validation File: KS-21_fileeemaldatud.4.asice TestCaseID: Asice-ValidationFail-20 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice no files in container Expected Result: The document should fail the validation File: KS-02_tyhi.bdoc TestCaseID: Asice-ValidationFail-21 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice signed data file(s) don't match the hash values in reference elements Expected Result: The document should fail the validation File: REF-14_filesisumuudetud.4.bdoc TestCaseID: Asice-ValidationFail-22 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice Baseline-T signature Expected Result: The document should fail the validation File: TS-06_23634_TS_missing_OCSP.asice TestCaseID: Asice-ValidationFail-23 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice certificate's validity time is not in the period of OCSP producedAt time Expected Result: The document should fail the validation File: **Attention! This test is disabled: test file is needed where certificate expiration end is before the OCSP produced at time TestCaseID: Asice-ValidationFail-24 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: BDoc with invalid signature, no signing certificate found Expected Result: The document should fail the validation File: TM-invalid-sig-no-sign-cert.asice TestCaseID: Asice-ValidationFail-25 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: BDoc with invalid signature, signed with expired certificate Expected Result: The document should fail the validation File: IB-5987_signed_with_expired_certificate.asice TestCaseID: Asice-ValidationFail-26 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc signed properties element missing Expected Result: The document should fail the validation File: REF-03_bdoc21-TS-no-signedpropref.asice TestCaseID: Asice-ValidationFail-27 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice LT signature signed with expired AIA OCSP certificate Expected Result: The document should fail the validation File: esteid2018signerAiaOcspLT.asice TestCaseID: Asice-ValidationFail-28 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice LTA signature signed with expired AIA OCSP certificate Expected Result: The document should fail the validation File: esteid2018signerAiaOcspLTA.asice AsiceValidationPassIT.java Open file TestCaseID: Asice-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice with single valid signature Expected Result: The document should pass the validation File: ValidLiveSignature.asice TestCaseID: Asice-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice TM with multiple valid signatures Expected Result: The document should pass the validation File: BDOC-TS.asice TestCaseID: Asice-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice One LT signature with certificates from different countries Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-30.asice TestCaseID: Asice-ValidationPass-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice Baseline-LT file Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-49.asice TestCaseID: Asice-ValidationPass-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice Baseline-LTA file Expected Result: The document should pass the validation File: EE_SER-AEX-B-LTA-V-24.asice **Attention! This test is disabled: 5\") TestCaseID: Asice-ValidationPass-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice file signed with Mobile-ID, ECC-SHA256 signature with prime256v1 key Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-2.asice TestCaseID: Asice-ValidationPass-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice file with ESTEID-SK 2015 certificate chain Expected Result: The document should pass the validation File: IB-4270_TS_ESTEID-SK 2015 SK OCSP RESPONDER 2011.asice TestCaseID: Asice-ValidationPass-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice file with KLASS3-SK 2010 (EECCRCA) certificate chain Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-28.asice TestCaseID: Asice-ValidationPass-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: *.sce file with TimeStamp Expected Result: The document should pass the validation File: ASICE_TS_LTA_content_as_sce.sce **Attention! This test is disabled: DD4J-615) TestCaseID: Asice-ValidationPass-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice-TS with special characters in data file Expected Result: The document should pass the validation with correct signature scope File: Nonconventionalcharacters.asice TestCaseID: Asice-ValidationPass-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: New Estonian ECC signature Expected Result: The document should pass the validation File: Mac_AS0099904_EsimeneAmetlikSKTestElliptilistega_TS.asice TestCaseID: Asice-ValidationPass-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice pss signature Expected Result: The document should pass the validation File: PSS-signature.asice AsicsValidationFailIT.java Open file TestCaseID: Asics-ValidationFail-1 TestType: Automated Requirement: Title: Only one datafile is allowed in ASIC-s Expected Result: The validation should fail File: TwoDataFilesAsics.asics TestCaseID: Asics-ValidationFail-2 TestType: Automated Requirement: Title: No data file in ASIC-s Expected Result: The validation should fail File: DataFileMissingAsics.asics TestCaseID: Asics-ValidationFail-3 TestType: Automated Requirement: Title: more folders that META-INF in ASIC-s Expected Result: The validation should fail File: FoldersInAsics.asics TestCaseID: Asics-ValidationFail-4 TestType: Automated Requirement: Title: META-INF folder not in root of container Expected Result: The validation should fail File: MetaInfNotInRoot.asics TestCaseID: Asics-ValidationFail-5 TestType: Automated Requirement: Title: Not allowed files in META-INF folder Expected Result: The validation should fail File: signatureMixedWithTST.asics TestCaseID: Asics-ValidationFail-6 TestType: Automated Requirement: Title: TST not intact Expected Result: The validation should fail File: AsicsTSTsignatureModified.asics TestCaseID: Asics-ValidationFail-7 TestType: Automated Requirement: Title: TST has been corrupted Expected Result: The validation should fail File: AsicsTSTsignatureBroken.asics TestCaseID: Asics-ValidationFail-8 TestType: Automated Requirement: Title: Data file changed Expected Result: The validation should fail File: DatafileAlteredButStillValid.asics TestCaseID: Asics-ValidationFail-9 TestType: Automated Requirement: Title: Exluding files in META-INF folder together with TST Expected Result: The validation should fail File: evidencerecordMixedWithTST.asics AsicsValidationPassIT.java Open file TestCaseID: Asics-ValidationPass-1 TestType: Automated Requirement: Title: Validation of ASICs with DDOC inside Expected Result: TST and inner DDOC are valid File: ddocWithRoleAndSigProductionPlace.asics TestCaseID: Asics-ValidationPass-2 TestType: Automated Requirement: Title: Validation of ASICs with DDOC inside SCS extension Expected Result: TST and inner DDOC are valid File: ValidDDOCinsideAsics.scs TestCaseID: Asics-ValidationPass-3 TestType: Automated Requirement: Title: Validation of ASICs with BDOC inside Expected Result: TST and inner BDOC are valid File: ValidBDOCinsideAsics.asics TestCaseID: Asics-ValidationPass-4 TestType: Automated Requirement: Title: Validation of ASICs with text document inside Expected Result: TST is valid File: TXTinsideAsics.asics TestCaseID: Asics-ValidationPass-5 TestType: Automated Requirement: Title: Validation of ASICs with ASICs inside Expected Result: TST is valid, no inner looping of ASICs File: ValidASICSinsideAsics.asics TestCaseID: Asics-ValidationPass-6 TestType: Automated Requirement: Title: Validation of ASICs with DDOC inside ZIP extension Expected Result: TST and inner DDOC are valid File: ValidDDOCinsideAsics.zip TestCaseID: Asics-ValidationPass-7 TestType: Automated Requirement: Title: Validation of ASICs with wrong mimetype with DDOC inside Expected Result: TST and inner DDOC are valid File: ValidDDOCinsideAsicsWrongMime.asics BdocValidationFailIT.java Open file TestCaseID: Bdoc-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with single invalid signature Expected Result: The document should fail the validation File: IB-3960_bdoc2.1_TSA_SignatureValue_altered.bdoc TestCaseID: Bdoc-ValidationFail-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with multiple invalid signatures Expected Result: The document should fail the validation File: BdocMultipleSignaturesInvalid.bdoc TestCaseID: Bdoc-ValidationFail-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with multiple signatures both valid and invalid Expected Result: The document should fail the validation File: BdocMultipleSignaturesMixedWithValidAndInvalid.bdoc TestCaseID: Bdoc-ValidationFail-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with no signatures Expected Result: The document should fail the validation File: BdocContainerNoSignature.bdoc TestCaseID: Bdoc-ValidationFail-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Wrong signature timestamp Expected Result: The document should fail the validation in DD4J File: TS-02_23634_TS_wrong_SignatureValue.asice TestCaseID: Bdoc-ValidationFail-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice No non-repudiation key usage value in the certificate, verification of AdES signature level Expected Result: The document should fail the validation in DD4J File: EE_SER-AEX-B-LT-I-43.asice TestCaseID: Bdoc-ValidationFail-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice signers certificate does not have non-repudiation value in the certificates key usage field and it does not contain the QC and SSCD compliance information. Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-I-26.asice TestCaseID: Bdoc-ValidationFail-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc OCSP certificate is not trusted Expected Result: The document should fail the validation File: TM-01_bdoc21-unknown-resp.bdoc TestCaseID: Bdoc-ValidationFail-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice TSA certificate is not trusted Expected Result: The document should fail the validation in DD4J File: TS-05_23634_TS_unknown_TSA.asice TestCaseID: Bdoc-ValidationFail-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice OCSP response status is revoked Expected Result: The document should fail the validation in DD4J File: EE_SER-AEX-B-LT-R-25.asice TestCaseID: Bdoc-ValidationFail-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice difference between OCSP and time-stamp issuing times is more than 24 hours Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-V-20.asice TestCaseID: Bdoc-ValidationFail-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc different data file mime-type values in signatures.xml and manifest.xml files Expected Result: The document should return warning regarding the mismatch File: 23613_TM_wrong-manifest-mimetype.bdoc TestCaseID: Bdoc-ValidationFail-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc SignatureValue does not correspond to the SignedInfo block Expected Result: The document should fail the validation File: REF-19_bdoc21-no-sig-asn1-pref.bdoc TestCaseID: Bdoc-ValidationFail-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc Baseline-BES file Expected Result: The document should fail the validation in DD4J File: signWithIdCard_d4j_1.0.4_BES.asice TestCaseID: Bdoc-ValidationFail-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc Baseline-EPES file Expected Result: The document should fail the validation File: TM-04_kehtivuskinnituset.4.asice TestCaseID: Bdoc-ValidationFail-19 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc signers certificate is not trusted Expected Result: The document should fail the validation File: SS-4_teadmataCA.4.asice TestCaseID: Bdoc-ValidationFail-20 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc OCSP response status is revoked Expected Result: The document should fail the validation File: TM-15_revoked.4.asice TestCaseID: Bdoc-ValidationFail-21 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc OCSP response status is unknown Expected Result: The document should fail the validation File: TM-16_unknown.4.asice TestCaseID: Bdoc-ValidationFail-22 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc signed data file has been removed from the container Expected Result: The document should fail the validation in DD4J File: KS-21_fileeemaldatud.4.asice TestCaseID: Bdoc-ValidationFail-23 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc no files in container Expected Result: The document should fail the validation File: KS-02_tyhi.bdoc TestCaseID: Bdoc-ValidationFail-24 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc wrong nonce Expected Result: The document should fail the validation File: TM-10_noncevale.4.asice TestCaseID: Bdoc-ValidationFail-25 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc signed data file(s) don't match the hash values in reference elements Expected Result: The document should fail the validation File: REF-14_filesisumuudetud.4.bdoc TestCaseID: Bdoc-ValidationFail-26 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice Baseline-T signature Expected Result: The document should fail the validation in DD4J File: TS-06_23634_TS_missing_OCSP.asice TestCaseID: Bdoc-ValidationFail-27 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc OCSP response is not the one expected Expected Result: The document should fail the validation File: 23608-bdoc21-TM-ocsp-bad-nonce.bdoc TestCaseID: Bdoc-ValidationFail-28 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc certificate's validity time is not in the period of OCSP producedAt time Expected Result: The document should fail the validation File: 23154_test1-old-sig-sigat-OK-prodat-NOK-1.bdoc TestCaseID: Bdoc-ValidationFail-29 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc BDOC-1.0 version container Expected Result: The document should fail the validation File: BDOC-1.0.bdoc TestCaseID: Bdoc-ValidationFail-30 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice unsigned data files in the container Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-V-34.asice TestCaseID: Bdoc-ValidationFail-31 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc signed properties element missing Expected Result: The document should fail the validation File: REF-03_bdoc21-TM-no-signedpropref.bdoc BdocValidationPassIT.java Open file TestCaseID: Bdoc-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Bdoc with single valid signature Expected Result: The document should pass the validation File: Valid_ID_sig.bdoc TestCaseID: Bdoc-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Bdoc TM with multiple valid signatures Expected Result: The document should pass the validation File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Bdoc-ValidationPass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Bdoc with warning on signature Expected Result: The document should pass the validation but warning should be returned File: bdoc_weak_warning_sha1.bdoc **Attention! This test is disabled: New file needed. This one has different mimetype value in manifest.xml and signature.xml TestCaseID: Bdoc-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice One LT signature with certificates from different countries Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-30.asice TestCaseID: Bdoc-ValidationPass-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Bdoc signed with Mobile-ID, ECC-SHA256 signature with prime256v1 key Expected Result: The document should pass the validation File: 24050_short_ecdsa_correct_file_mimetype.bdoc TestCaseID: Bdoc-ValidationPass-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice Baseline-LT file Expected Result: The document should pass the validation in DD4J File: EE_SER-AEX-B-LT-V-49.asice TestCaseID: Bdoc-ValidationPass-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice QES file Expected Result: The document should pass the validation File: ValidLiveSignature.asice TestCaseID: Bdoc-ValidationPass-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice Baseline-LTA file Expected Result: The document should pass the validation. DD4J do not return certificates for LTA timestamp. File: EE_SER-AEX-B-LTA-V-24.asice **Attention! This test is disabled: DD4J-615) TestCaseID: Bdoc-ValidationPass-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice file signed with Mobile-ID, ECC-SHA256 signature with prime256v1 key Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-2.asice TestCaseID: Bdoc-ValidationPass-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice file with ESTEID-SK 2015 certificate chain Expected Result: The document should pass the validation File: IB-4270_TS_ESTEID-SK 2015 SK OCSP RESPONDER 2011.asice TestCaseID: Bdoc-ValidationPass-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice file with KLASS3-SK 2010 (EECCRCA) certificate chain Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-28.asice TestCaseID: Bdoc-ValidationPass-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Bdoc with Baseline-LT_TM and QES signature level and ESTEID-SK 2011 certificate chain with valid signature Expected Result: The document should pass the validation File: BDOC2.1.bdoc TestCaseID: Bdoc-ValidationPass-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Bdoc TS with multiple valid signatures Expected Result: The document should pass the validation File: Test_id_aa.asice TestCaseID: Bdoc-ValidationPass-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Bdoc-TM with special characters in data file Expected Result: The document should pass the validation File: \u0160u\u017elikud s\u00f5id \u00fche \u00f5una \u00e4ra.bdoc TestCaseID: Bdoc-ValidationPass-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: *.sce file with TimeMark Expected Result: The document should pass the validation File: BDOC2.1_content_as_sce.sce TestCaseID: Bdoc-ValidationPass-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc-TS with special characters in data file Expected Result: The document should pass the validation with correct signature scope File: Nonconventionalcharacters.asice TestCaseID: Bdoc-ValidationPass-19 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: ECC signature vith BDOC TM Expected Result: The document should pass the validation File: testECCDemo.bdoc TestCaseID: Bdoc-ValidationPass-20 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: ECC signature vith BDOC TS Expected Result: The document should pass the validation File: Mac_AS0099904_EsimeneAmetlikSKTestElliptilistega_TS.asice TestCaseID: Bdoc-ValidationPass-21 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice with wrong slash character ('\\') in data file mime-type value Expected Result: The document should pass File: EE_SER-AEX-B-LT-V-33.bdoc TestCaseID: Bdoc-ValidationPass-22 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with invalid mimetype in manifest Expected Result: The document should pass File: 23147_weak-warning-sha1-invalid-mimetype-in-manifest.bdoc TestCaseID: Bdoc-ValidationPass-23 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with TEST of SK OCSP RESPONDER 2020 Expected Result: The document should pass File: test_of_OCSP_responder_2020.bdoc DdocGetDataFilesIT.java Open file TestCaseID: Ddoc-Get-Data-Files-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/use_cases/#ddoc-data-file-extraction-process Title: Valid DDOC with data file used Expected Result: The data file should be returned File: 18912.ddoc TestCaseID: Ddoc-Get-Data-Files-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/use_cases/#ddoc-data-file-extraction-process Title: Invalid DDOC with data file used Expected Result: The data file should be returned File: OCSP nonce vale.ddoc TestCaseID: Ddoc-Get-Data-Files-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/use_cases/#ddoc-data-file-extraction-process Title:DDOC with xml v1.1 is used Expected Result: The data file is returned File: DIGIDOC-XML1.1.ddoc TestCaseID: Ddoc-Get-Data-Files-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/use_cases/#ddoc-data-file-extraction-process Title:DDOC with xml v1.1 is used Expected Result: The data file is returned File: DIGIDOC-XML1.1.ddoc TestCaseID: Ddoc-Get-Data-Files-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/use_cases/#ddoc-data-file-extraction-process Title: DDOC with xml v1.2 is used Expected Result: The data file is returned File: DIGIDOC-XML1.2.ddoc TestCaseID: Ddoc-Get-Data-Files-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/use_cases/#ddoc-data-file-extraction-process Title: DDOC with xml v1.3 is used Expected Result: The data file is returned File: valid_XML1_3.ddoc TestCaseID: Ddoc-Get-Data-Files-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/use_cases/#ddoc-data-file-extraction-process Title: Hashcoded DDOC is used Expected Result: Null is returned File: DIGIDOC-XML1.3_hashcode.ddoc **Attention! This test is disabled TestCaseID: Ddoc-Get-Data-Files-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/use_cases/#ddoc-data-file-extraction-process Title: DDOC with 12 different files of different types is used Expected Result: Data file returned for each file correctly File: igasugust1.3.ddoc TestCaseID: Ddoc-Get-Data-Files-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/use_cases/#ddoc-data-file-extraction-process Title: BDOC with data file used Expected Result: The error message should be returned File: BDOC-TS.bdoc TestCaseID: Ddoc-Get-Data-Files-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/use_cases/#ddoc-data-file-extraction-process Title: PDF file used Expected Result: The error message should be returned File: hellopades-lt-b.pdf DdocValidationFailIT.java Open file TestCaseID: Ddoc-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc with single invalid signature Expected Result: The document should fail the validation File: AndmefailiAtribuudidMuudetud.ddoc TestCaseID: Ddoc-ValidationFail-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc with multiple invalid signatures Expected Result: The document should fail the validation File: multipleInvalidSignatures.ddoc TestCaseID: Ddoc-ValidationFail-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc with multiple signatures both valid and invalid Expected Result: The document should fail the validation File: multipleValidAndInvalidSignatures.ddoc TestCaseID: Ddoc-ValidationFail-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc signature value has been changed (SignatureValue does not correspond to the SignedInfo block) Expected Result: The document should fail the validation File: test-inv-sig-inf.ddoc TestCaseID: Ddoc-ValidationFail-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc Data file(s) don't match the hash values in Reference elements Expected Result: The document should fail the validation File: AndmefailiAtribuudidMuudetud.ddoc TestCaseID: Ddoc-ValidationFail-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc Baseline-BES file, no OCSP response Expected Result: The document should fail the validation File: ilma_kehtivuskinnituseta.ddoc TestCaseID: Ddoc-ValidationFail-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc no non-repudiation key usage value in the certificate Expected Result: The document should fail the validation File: test-non-repu1.ddoc TestCaseID: Ddoc-ValidationFail-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc Signer's certificate is not trusted Expected Result: The document should fail the validation File: Belgia_kandeavaldus_LIV.ddoc TestCaseID: Ddoc-ValidationFail-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc OCSP certificate is not trusted Expected Result: The document should fail the validation File: Tundmatu_OCSP_responder.ddoc TestCaseID: Ddoc-ValidationFail-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc has unsigned data files in the container Expected Result: The document should fail the validation File: lisatud_andmefail.ddoc TestCaseID: Ddoc-ValidationFail-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc signed data file has been removed from the container Expected Result: The document should fail the validation File: faileemald1.ddoc TestCaseID: Ddoc-ValidationFail-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc wrong nonce Expected Result: The document should fail the validation File: OCSP nonce vale.ddoc TestCaseID: Ddoc-ValidationFail-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/ Title: Ddoc with XML Entity expansion attack Expected Result: The document should fail the validation with error File: xml_expansion.ddoc TestCaseID: Ddoc-ValidationFail-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/ Title: Ddoc with XML server side request forgery attack Expected Result: The document should fail the validation with error File: xml_entity.ddoc TestCaseID: Ddoc-ValidationFail-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc no files in container Expected Result: The document should fail the validation File: KS-02_tyhi.ddoc TestCaseID: Ddoc-ValidationFail-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc with invalid datafile id Expected Result: The document should fail the validation File: 22915-bad-df-id.ddoc TestCaseID: Ddoc-ValidationFail-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Validation of DDOC with revoked certificate status Expected Result: The document should fail the validation File: cert-revoked.ddoc TestCaseID: Ddoc-ValidationFail-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Validation of DDOC with unknown OCSP status Expected Result: The document should fail the validation File: cert-unknown.ddoc DdocValidationPassIT.java Open file TestCaseID: Ddoc-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Ddoc v1.0 with valid signatures Expected Result: The document should pass the validation File: SK-XML1.0.ddoc TestCaseID: Ddoc-ValidationPass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Ddoc v1.1 with valid signature Expected Result: The document should pass the validation File: DIGIDOC-XML1.1.ddoc TestCaseID: Ddoc-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Ddoc v1.2 with valid signature Expected Result: The document should pass the validation File: DIGIDOC-XML1.2.ddoc TestCaseID: Ddoc-ValidationPass-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Ddoc v1.3 with valid signature with ESTEID-SK 2011 certificate chain Expected Result: The document should pass the validation File: DIGIDOC-XML1.3.ddoc TestCaseID: Ddoc-ValidationPass-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Ddoc v1.3 with valid signature, signed data file name has special characters and ESTEID-SK certificate chain Expected Result: The document should pass the validation File: susisevad1_3.ddoc TestCaseID: Ddoc-ValidationPass-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Ddoc v1.3 KLASS3-SK certificate chain with valid signature Expected Result: The document should pass the validation File: KLASS3-SK _ KLASS3-SK OCSP RESPONDER uus.ddoc TestCaseID: Ddoc-ValidationPass-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Ddoc v1.3 KLASS3-SK 2010 certificate chain with valid signature Expected Result: The document should pass the validation File: KLASS3-SK 2010 _ KLASS3-SK 2010 OCSP RESPONDER.ddoc TestCaseID: Ddoc-ValidationPass-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Ddoc v1.1 ESTEID-SK 2007 certificate chain with valid signature Expected Result: The document should pass the validation File: vaikesed1.1.ddoc TestCaseID: Ddoc-ValidationPass-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Ddoc v1.1 ESTEID-SK 2007 certificate chain with valid signature Expected Result: The document should pass the validation File: IB-4270_ESTEID-SK 2015 SK OCSP RESPONDER 2011.ddoc TestCaseID: Ddoc-ValidationPass-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Ddoc v1.1 ESTEID-SK certificate chain with valid signature Expected Result: The document should pass the validation File: EID-SK _ EID-SK OCSP RESPONDER.ddoc TestCaseID: Ddoc-ValidationPass-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Ddoc v1.1 ESTEID-SK 2007 and OCSP 2010 certificate chain with valid signature Expected Result: The document should pass the validation File: EID-SK 2007 _ EID-SK 2007 OCSP RESPONDER 2010.ddoc TestCaseID: Ddoc-ValidationPass-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Ddoc v1.3 ESTEID-SK 2007 and OCSP 2007 certificate chain with valid signature Expected Result: The document should pass the validation File: EID-SK 2007 _ EID-SK 2007 OCSP RESPONDER.ddoc TestCaseID: Ddoc-ValidationPass-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Ddoc v1.3 ESTEID-SK 2011 and OCSP 2011 certificate chain with valid signature Expected Result: The document should pass the validation File: EID-SK 2011 _ SK OCSP RESPONDER 2011.ddoc TestCaseID: Ddoc-ValidationPass-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc with warning should pass Expected Result: Document passes the validation File: 18912.ddoc TestCaseID: Ddoc-ValidationPass-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc with no signatures Expected Result: Document passes the validation File: DdocContainerNoSignature.ddoc TestCaseID: DdocHashcode-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Validation of DDOC Hashcode v1.0 Expected Result: Document passes the validation File: SK-XML1.0_hashcode.ddoc TestCaseID: DdocHashcode-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Validation of DDOC Hashcode v1.1 Expected Result: Document passes the validation File: DIGIDOC-XML1.1_hashcode.ddoc TestCaseID: DdocHashcode-ValidationPass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Validation of DDOC Hashcode v1.2 Expected Result: Document passes the validation File: DIGIDOC-XML1.2_hashcode.ddoc TestCaseID: DdocHashcode-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Validation of DDOC Hashcode v1.3 Expected Result: Document passes the validation File: DIGIDOC-XML1.3_hashcode.ddoc DocumentFormatIT.java Open file TestCaseID: DocumentFormat-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Validation of pdf document acceptance Expected Result: Pdf is accepted and correct signature validation is given File: hellopades-pades-lt-sha256-sign.pdf TestCaseID: DocumentFormat-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Validation of bdoc document acceptance Expected Result: Bdoc is accepted and correct signature validation is given File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: DocumentFormat-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Validation of asice document acceptance Expected Result: asice is accepted and correct signature validation is given File: Vbdoc21-TS.asice TestCaseID: DocumentFormat-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Validation of asics document acceptance Expected Result: asics is accepted and correct signature validation is given File: ValidDDOCinsideAsics.asics TestCaseID: DocumentFormat-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Validation of xades acceptance Expected Result: xades is accepted and correct signature validation is given File: signatures0.xml TestCaseID: DocumentFormat-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Validation of cades acceptance Expected Result: cades is accepted and correct signature validation is given File: **Attention! This test is disabled: Test file needed DocumentValidationIT.java Open file TestCaseID: Document-Validation-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title:Bdoc with two signatures and one unsigned document. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2s_1f_unsigned.bdoc TestCaseID: Document-Validation-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with two signatures and one document signed by only one signature. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2s_1partly_signed.bdoc TestCaseID: Document-Validation-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with two signatures and two documents signed by only one signature. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2s_2partly_signed.bdoc TestCaseID: Document-Validation-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with two signatures, one unsigned and two partly signed documents. Expected Result: The document should fail the validation and warnings should be displayed. File:4f_2s_all_combinations.bdoc TestCaseID: Document-Validation-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with three unsigned documents. Expected Result: The document should pass the validation and warnings should be displayed. File:6f_2s_3unsigned.bdoc TestCaseID: Document-Validation-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with deleted document, named in manifest. Expected Result: The document should fail the validation and warning should be displayed. File:2f_2signed_1f_deleted.bdoc TestCaseID: Document-Validation-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with deleted document, also removed from manifest. Expected Result: The document should fail the validation without warning. File:2f_2signed_1f_totally_removed.bdoc TestCaseID: Document-Validation-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with one unsigned document, named in manifest. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2signed_1unsigned_all_in_manifest.bdoc TestCaseID: Document-Validation-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with one unsigned document, NOT named in manifest. Expected Result: The document should fail the validation and warning should be displayed. File:3f_2signed_1unsigned_2in_manifest.bdoc TestCaseID: Document-Validation-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with signed documents. Expected Result: The document should pass the validation without warning. File:2f_all_signed.bdoc **Attention! This test is disabled EuPlugValidationPassIT.java Open file TestCaseID: EuPlug-ValidationPass-1 TestType: Automated Requirement: Title: Validation of Lithuania adoc-v2.0 signature Expected Result: The document should pass the validation File: Signature-A-LT_MIT-1.asice TestCaseID: EuPlug-ValidationPass-2 TestType: Automated Requirement: Title: Validation multiple of Lithuania adoc-v2.0 signatures Expected Result: The document should pass the validation File: Signature-A-LT_MIT-2.asice TestCaseID: EuPlug-ValidationPass-3 TestType: Automated Requirement: Title: Validation of Lithuania adoc-v2.0 signature with warning Expected Result: The document should pass the validation File: Signature-A-LT_MIT-5.asice\" TestCaseID: EuPlug-ValidationPass-4 TestType: Automated Requirement: Title: Validation of Latvian edoc-v2.0 signature Expected Result: The document should pass the validation File: Signature-A-LV_EUSO-1.asice TestCaseID: EuPlug-ValidationPass-5 TestType: Automated Requirement: Title: Expected Result: The document should pass the validation File: Signature-A-LV_EUSO-2.asice TestCaseID: EuPlug-ValidationPass-6 TestType: Automated Requirement: Title: Validation of Polish Asic-s with CAdES signature Expected Result: The document should pass the validation File: Signature-A-PL_KIR-1.asics TestCaseID: EuPlug-ValidationPass-7 TestType: Automated Requirement: Title: Validation of Polish Asic-s with XAdES signature Expected Result: The document should pass the validation File: Signature-A-PL_KIR-2.asics TestCaseID: EuPlug-ValidationPass-8 TestType: Automated Requirement: Title: Validation of Slovakia Asic-e with XAdES signature Expected Result: The document should pass the validation File: Signature-A-SK_DIT-3.asice TestCaseID: EuPlug-ValidationPass-10 TestType: Automated Requirement: Title: Expected Result: The document should pass the validation File: Signature-C-AT_SIT-1.p7m TestCaseID: EuPlug-ValidationPass-11 TestType: Automated Requirement: Title: Validation of German CAdES signature Expected Result: The document should pass the validation File: Signature-C-DE_SCI-1.p7m TestCaseID: EuPlug-ValidationPass-12 TestType: Automated Requirement: Title: Expected Result: The document should pass the validation File: Signature-C-ES_MIN-1.p7m TestCaseID: EuPlug-ValidationPass-13 TestType: Automated Requirement: Title: Expected Result: The document should pass the validation File: Signature-C-ES_MIN-2.p7m TestCaseID: EuPlug-ValidationPass-14 TestType: Automated Requirement: Title: Validation of Italian Cades signatures Expected Result: The document should pass the validation File: Signature-C-IT_BIT-5.p7m TestCaseID: EuPlug-ValidationPass-15 TestType: Automated Requirement: Title: Validation of Poland CAdES B signature Expected Result: The document should pass the validation File: Signature-C-PL_ADS-4.p7m TestCaseID: EuPlug-ValidationPass-16 TestType: Automated Requirement: Title: Validation of Poland CAdES T signature Expected Result: The document should pass the validation File: Signature-C-PL_ADS-7.p7m TestCaseID: EuPlug-ValidationPass-17 TestType: Automated Requirement: Title: Validation of Belgium PAdES B signature Expected Result: The document should pass the validation File: Signature-P-BE_CONN-1.pdf TestCaseID: EuPlug-ValidationPass-18 TestType: Automated Requirement: Title: Validation of Belgian PAdES LTA signature Expected Result: The document should pass the validation File: Signature-P-BE_CONN-7.pdf TestCaseID: EuPlug-ValidationPass-19 TestType: Automated Requirement: Title: Validation of German PAdES signature Expected Result: The document should pass the validation File: Signature-P-DE_SCI-2.pdf TestCaseID: EuPlug-ValidationPass-20 TestType: Automated Requirement: Title: Validation of Italian PAdES signature Expected Result: The document should pass the validation File: Signature-P-IT_MID-1.pdf TestCaseID: EuPlug-ValidationPass-21 TestType: Automated Requirement: Title: Validation of Lithuanian PAdES signature Expected Result: The document should pass the validation File: Signature-P-LT_MIT-1.pdf TestCaseID: EuPlug-ValidationPass-22 TestType: Automated Requirement: Title: Validation of Lithuanian PAdES signature 2 Expected Result: The document should pass the validation File: Signature-P-LT_MIT-2.pdf TestCaseID: EuPlug-ValidationPass-23 TestType: Automated Requirement: Title: Validation of Latvian PAdES signature Expected Result: The document should pass the validation File: Signature-P-LV_EUSO-1.pdf TestCaseID: EuPlug-ValidationPass-24 TestType: Automated Requirement: Title: Expected Result: The document should pass the validation File: Signature-P-LV_EUSO-2.pdf TestCaseID: EuPlug-ValidationPass-25 TestType: Automated Requirement: Title: Validation of Polish PAdES signature Expected Result: The document should pass the validation File: Signature-P-PL_ADS-6.pdf TestCaseID: EuPlug-ValidationPass-26 TestType: Automated Requirement: Title: Validation of Polish PAdES QES signature Expected Result: The document should pass the validation File: Signature-P-PL_ADS-8.pdf TestCaseID: EuPlug-ValidationPass-27 TestType: Automated Requirement: Title: Expected Result: The document should pass the validation File: Signature-A-LT_MIT-1.asice TestCaseID: EuPlug-ValidationPass-28 TestType: Automated Requirement: Title: Expected Result: The document should pass the validation File: Signature-A-LT_MIT-1.asice TestCaseID: EuPlug-ValidationPass-29 TestType: Automated Requirement: Title: Validation of Belgian XAdES signature Expected Result: The document should pass the validation File: Signature-X-BE_CONN-1.xml TestCaseID: EuPlug-ValidationPass-30 TestType: Automated Requirement: Title: Expected Result: The document should pass the validation File: Signature-X-BE_CONN-21.xml LargeFileIT.java Open file TestCaseID: PDF-LargeFiles-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/overview/#main-features-of-siva-validation-service Title: 9MB PDF files (PAdES Baseline LT). Expected Result: Validation report is returned File: 9MB_PDF.pdf TestCaseID: Bdoc-LargeFiles-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/overview/#main-features-of-siva-validation-service Title: 9MB ASIC-E file Expected Result: Validation report is returned File: 9MB_BDOC-TS.bdoc TestCaseID: Bdoc-LargeFiles-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/overview/#main-features-of-siva-validation-service Title: 9MB BDOC-TM Expected Result: Validation report is returned File: 9MB_BDOC-TM.bdoc TestCaseID: Ddoc-LargeFiles-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/overview/#main-features-of-siva-validation-service Title: 9MB DDOC Expected Result: Validation report is returned File: 9MB_DDOC.ddoc TestCaseID: Bdoc-ZipBomb-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/overview/#main-features-of-siva-validation-service Title: Bdoc Zip container with Bomb file Expected Result: The document should fail the validation File: zip-bomb-package-zip-1gb.bdoc TestCaseID: Asice-ZipBomb-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/overview/#main-features-of-siva-validation-service Title: Asice Zip container with Bomb file Expected Result: The document should fail the validation File: zip-bomb-package-zip-1gb.bdoc TestCaseID: Asice-ZipBomb-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/overview/#main-features-of-siva-validation-service Title: Asice Zip container with Matryoshka Bomb file Expected Result: Expected Result: Validation report is returned File: zip-bomb-packages.asice TestCaseID: Bdoc-ZipBomb-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/overview/#main-features-of-siva-validation-service Title: Bdoc Zip container with Matryoshka Bomb file Expected Result: Expected Result: Validation report is returned File: zip-bomb-packages.asice MonitoringIT.java Open file TestCaseID: WebApp-Monitoring-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#service-health-monitoring Title: Health monitor response structure Expected Result: response matches the expected structure of JSON File: not relevant PdfBaselineProfileIT.java Open file TestCaseID: PDF-BaselineProfile-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: The PDF has PAdES-B profile signature polv3 Expected Result: Document validation should fail as the profile is not supported with any policy File: hellopades-pades-b-sha256-auth.pdf TestCaseID: PDF-BaselineProfile-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: The PDF has PAdES-T profile signature polv3 Expected Result: Document validation should fail with any policy File: pades-baseline-t-live-aj.pdf TestCaseID: PDF-BaselineProfile-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: The PDF has PAdES-LT profile signature polv3 Expected Result: Document validation should pass with any policy File: hellopades-pades-lt-sha256-sign.pdf TestCaseID: PDF-BaselineProfile-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: The PDF has PAdES-LT profile signature polv4 Expected Result: Document validation should pass with any policy File: hellopades-pades-lt-sha256-sign.pdf TestCaseID: PDF-BaselineProfile-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: The PDF has PAdES-LTA profile signature polv3 Expected Result: Document validation should pass with any policy File: pades-baseline-lta-live-aj.pdf TestCaseID: PDF-BaselineProfile-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: The PDF has PAdES-LTA profile signature polv4 Expected Result: Document validation should pass with any policy File: pades-baseline-lta-live-aj.pdf TestCaseID: PDF-BaselineProfile-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: The PDF has PAdES-LT and B profile signature Expected Result: Document validation should fail File: hellopades-lt-b.pdf TestCaseID: PDF-BaselineProfile-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: PDF document message digest attribute value does not match calculate value Expected Result: Document validation should fail File: hellopades-lt1-lt2-wrongDigestValue.pdf TestCaseID: PDF-BaselineProfile-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: PDF file with a serial signature Expected Result: Document signed with multiple signers with serial signatures should pass File: hellopades-lt1-lt2-Serial.pdf PdfSignatureCryptographicAlgorithmIT.java Open file TestCaseID: PDF-SigCryptoAlg-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: SHA512 algorithms (PAdES Baseline LT) Expected Result: Document signed with SHA512 algorithm should pass File: hellopades-lt-sha512.pdf TestCaseID: PDF-SigCryptoAlg-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: SHA1 algorithms (PAdES Baseline LT) Expected Result: Document signed with SHA1 algorithm should pass File: hellopades-lt-sha1.pdf TestCaseID: PDF-SigCryptoAlg-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: ECDSA224 algorithms (PAdES Baseline LT) Expected Result: Document signed with ECDSA224 algorithm should fail File: hellopades-lt-sha256-ec224.pdf TestCaseID: PDF-SigCryptoAlg-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: ECDSA256 algorithms (PAdES Baseline LT) Expected Result: Document signed with ECDSA256 algorithm should pass File: hellopades-lt-sha256-ec256.pdf TestCaseID: PDF-SigCryptoAlg-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: RSA1024 algorithms (PAdES Baseline LT) Expected Result: Document signed with RSA1024 algorithm should pass File: hellopades-lt-sha256-rsa1024.pdf TestCaseID: PDF-SigCryptoAlg-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: RSA1023 algorithms (PAdES Baseline LT) Expected Result: Document signed with RSA1023 algorithm should fail File: hellopades-lt-sha256-rsa1023.pdf TestCaseID: PDF-SigCryptoAlg-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: RSA2047 algorithms (PAdES Baseline LT) Expected Result: Document signed with RSA2047 algorithm should pass File: hellopades-lt-sha256-rsa2047.pdf TestCaseID: PDF-SigCryptoAlg-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: RSA2048 algorithms (PAdES Baseline LT) Expected Result: Document signed with RSA2048 algorithm should pass File: PdfValidSingleSignature PdfValidationFailIT.java Open file TestCaseID: PDF-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: The PDF-file has been signed with expired certificate (PAdES Baseline T) Expected Result: Document signed with certificate that is expired should fail. File: hellopades-lt-rsa1024-sha1-expired.pdf TestCaseID: PDF-ValidationFail-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: The PDF-file has been signed with revoked certificate (PAdES Baseline LT) Expected Result: Document signed with certificate that is revoked should fail. File: pades_lt_revoked.pdf TestCaseID: PDF-ValidationFail-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: The PDF-file has been signed with certificate which has no non repudiation key usage attribute (PAdES Baseline LT) Expected Result: The PDF-file validation should fail with error. File: hellopades-pades-lt-sha256-auth.pdf TestCaseID: PDF-ValidationFail-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: hellopadess been signed with an expired certificate, where signing time is within the original validity Expected Result: Document signed with expired certificate should fail File: hellopades-lt-sha256-rsa2048-expired.pdf **Attention! This test is disabled: Needs new test file TestCaseID: PDF-ValidationFail-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: hellopadess been signed with an expired certificate, where signing time is within the original validity Expected Result: Document signed with expired certificate should fail File: hellopades-lt-sha256-rsa1024-expired2.pdf **Attention! This test is disabled: Test file needed TestCaseID: PDF-ValidationFail-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: OCSP is taken more than 24h after TS Expected Result: Document signed with expired certificate should fail File: hellopades-lt-sha256-rsa1024-expired2.pdf TestCaseID: PDF-ValidationFail-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: CRL is out of thisUpdate and nextUpdate range Expected Result: Validation should fail File: pades-lt-CRL-taken-days-later.pdf PdfValidationPassIT.java Open file TestCaseID: PDF-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: The PDF-file has been signed with certificate that is expired after signing (PAdES Baseline LT) Expected Result: Document signed with certificate that expired after signing should pass. File: hellopades-lt-sha256-rsa1024-not-expired.pdf TestCaseID: PDF-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: The PDF-file has been signed with certificate that will expire in 7 days after signing (PAdES Baseline LT) Expected Result: Document signed with certificate that expired after signing should pass. File: hellopades-lt-sha256-rsa2048-7d.pdf TestCaseID: PDF-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Pdf with single valid signature Expected Result: Document should pass. File: PdfValidSingleSignature.pdf TestCaseID: PDF-ValidationPass-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: The PDF-file has OCSP more than 15 minutes after TS but earlier than 24h Expected Result: Warning should be returned but validation should pass File: hellopades-lt-sha256-ocsp-15min1s.pdf TestCaseID: PDF-ValidationPass-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: The PDF-file has OCSP almost 24h before TS Expected Result: Warning should be returned but validation should pass File: hellopades-lt-sha256-rsa2048-ocsp-before-ts.pdf **Attention! This test is disabled ReportSignatureIT.java Open file TestCaseID: Detailed-Report-Signature-1 TestType: Auto Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Simple report signature should not be in response Expected Result: Simple report response should not contain signature File: hellopades-pades-lt-sha256-sign.pdf TestCaseID: Detailed-Report-Signature-2 TestType: Auto Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Detailed report signature should be in response Expected Result: Detailed report response should contain signature File: hellopades-pades-lt-sha256-sign.pdf TestCaseID: Detailed-Report-Signature-3 TestType: Auto Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature Expected Result: Signed report is successfully validated File: hellopades-lt-sha256-rsa2048.pdf TestCaseID: Detailed-Report-Signature-4 TestType: Auto Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: In simple report reportSignatureEnabled parameter value true Expected Result: File hash in hex in report File: hellopades-lt-sha256-rsa2048.pdf TestCaseID: Detailed-Report-Signature-5 TestType: Auto Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: In simple report reportSignatureEnabled parameter value false Expected Result: File hash in hex not in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: test should be run manually after configuring the report signature feature SignaturePolicyIT.java Open file TestCaseID: POLv4-Signature-Policy-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The PDF-file is Ades level Expected Result: Signatures are invalid according to policy File: soft-cert-signature.pdf **Attention! This test is disabled: New test file is needed TestCaseID: POLv4-Signature-Policy-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is Ades level Expected Result: Signatures are invalid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv4-Signature-Policy-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is Ades signature Expected Result: Signatures are invalid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv4-Signature-Policy-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The asice is Ades signature Expected Result: Signatures are invalid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv4-Signature-Policy-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is Ades seal Expected Result: Signatures are invalid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv4-Signature-Policy-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The asice is ades seal Expected Result: Signatures are valid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv4-Signature-Policy-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level signature, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, warning is returned about signature level File: testAdesQC.asice TestCaseID: POLv4-Signature-Policy-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level signature, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, warning is returned about signature level File: testAdesQC.asice TestCaseID: POLv4-Signature-Policy-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level seal, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, no warning about the signature level File: IB-4828_tempel_not_qscd_TS.asice TestCaseID: POLv4-Signature-Policy-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level seal, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, no warning about the signature level File: IB-4828_tempel_not_qscd_TM.bdoc TestCaseID: POLv4-Signature-Policy-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level, but do not have SSCD/QSCD compliance and type identifier Expected Result: Signatures are valid according to policy, no warning about the signature level File: **Attention! This test is disabled: file needed TestCaseID: POLv4-Signature-Policy-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level, but do not have SSCD/QSCD compliance and type identifier Expected Result: Signatures are valid according to policy, no warning about the signature level File: **Attention! This test is disabled: file needed TestCaseID: POLv4-Signature-Policy-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level signature Expected Result: Signatures are valid according to policy File: Valid_ID_sig.bdoc TestCaseID: POLv4-Signature-Policy-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level signature Expected Result: Signatures are valid according to policy File: ValidLiveSignature.asice TestCaseID: POLv4-Signature-Policy-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level seal Expected Result: Signatures are valid according to policy File: IB-4828_tempel_qscd_TM.bdoc TestCaseID: POLv4-Signature-Policy-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The asice is QES level seal Expected Result: Signatures are valid according to policy File: IB-4828_tempel_qscd_TS.asice TestCaseID: POLv4-Signature-Policy-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level Expected Result: Signatures are valid according to policy File: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc TestCaseID: POLv4-Signature-Policy-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The asice is QES level Expected Result: Signatures are valid according to policy File: EE_SER-AEX-B-LT-V-28.asice TestCaseID: POLv3-Signature-Policy-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-3-polv3 Title: The PDF-file is Ades level Expected Result: Signatures are not valid according to policy File: soft-cert-signature.pdf **Attention! This test is disabled: New testfile is needed TestCaseID: POLv3-Signature-Policy-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-3-polv3 Title: The bdoc is Ades level Expected Result: Signatures are valid according to policy File: allkiri_ades.asice **Attention! This test is disabled: New testfile is needed TestCaseID: POLv3-Signature-Policy-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-3-polv3 Title: The bdoc is ADES level signature Expected Result: Signatures are valid according to policy File: allkiri_ades.asice **Attention! This test is disabled: test file needed TestCaseID: POLv3-Signature-Policy-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-3-polv3 Title: The asice is Ades level signature Expected Result: Signatures are valid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv3-Signature-Policy-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-3-polv3 Title: The bdoc is Ades seal Expected Result: Signatures are valid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv3-Signature-Policy-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-3-polv3 Title: The asice is Ades level seal Expected Result: Signatures are valid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv3-Signature-Policy-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level signature, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, warning is returned about signature level File: testAdesQC.asice TestCaseID: POLv3-Signature-Policy-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level signature, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, warning is returned about signature level File: testAdesQC.asice TestCaseID: POLv3-Signature-Policy-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level seal, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, no warning about the signature level File: IB-4828_tempel_not_qscd_TS.asice TestCaseID: POLv3-Signature-Policy-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level seal, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, no warning about the signature level File: IB-4828_tempel_not_qscd_TM.bdoc TestCaseID: POLv3-Signature-Policy-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level, but do not have SSCD/QSCD compliance and type identifier Expected Result: Signatures are valid according to policy, no warning about the signature level File: **Attention! This test is disabled: file needed TestCaseID: POLv3-Signature-Policy-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level, but do not have SSCD/QSCD compliance and type identifier Expected Result: Signatures are valid according to policy, no warning about the signature level File: **Attention! This test is disabled: file needed TestCaseID: POLv3-Signature-Policy-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level signature Expected Result: Signatures are valid according to policy File: Valid_ID_sig.bdoc TestCaseID: POLv3-Signature-Policy-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level signature Expected Result: Signatures are valid according to policy File: ValidLiveSignature.asice TestCaseID: POLv3-Signature-Policy-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level seal Expected Result: Signatures are valid according to policy File: IB-4828_tempel_qscd_TM.bdoc TestCaseID: POLv3-Signature-Policy-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The asice is QES level seal Expected Result: Signatures are valid according to policy File: IB-4828_tempel_qscd_TS.asice TestCaseID: POLv3-Signature-Policy-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level Expected Result: Signatures are valid according to policy File: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc TestCaseID: POLv3-Signature-Policy-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The asice is QES level Expected Result: Signatures are valid according to policy File: EE_SER-AEX-B-LT-V-28.asice TestCaseID: Revocation-Signature-Policy-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The PDF-file is missing an OCSP or CRL Expected Result: Signatures are invalid according to policy File: PadesProfileT.pdf TestCaseID: Revocation-Signature-Policy-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The PDF-file with included CRL Expected Result: Signatures are valid according to policy File: PadesProfileLtWithCrl.pdf XadesHashcodeValidationFailIT.java Open file TestCaseID: Xades-Hashcode-Validation-Fail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Data file hash algorithm do not match signature hash algorithm Expected Result: Validation fails File: Valid_XAdES_LT_TM.xml TestCaseID: Xades-Hashcode-Validation-Fail-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Hashes do not match Expected Result: Validation fails File: Valid_XAdES_LT_TM.xml TestCaseID: Xades-Hashcode-Validation-Fail-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Wrong data file name is used Expected Result: Validation report is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Xades-Hashcode-Validation-Fail-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Invalid signature in XAdES Expected Result: Validation report is returned File: Valid_XAdES_LT_TM.xml TestCaseID: Xades-Hashcode-Validation-Fail-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Invalid signature in XAdES Expected Result: Error is given File: Valid_XAdES_LT_TM.xml XadesHashcodeValidationPassIT.java Open file TestCaseID: Xades-Hashcode-Validation-Pass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: XAdES extracted from ASICE Expected Result: The document should pass the validation File: Valid_XAdES_LT_TS.xml TestCaseID: Xades-Hashcode-Validation-Pass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: XAdES extracted from BDOC Expected Result: The document should pass the validation File: Valid_XAdES_LT_TM.xml TestCaseID: Xades-Hashcode-Validation-Pass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: XAdES extracted from BDOC Expected Result: The document should pass the validation File: Valid_XADES_LT_TS_multiple_datafiles.xml TestCaseID: Xades-Hashcode-Validation-Pass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Datafile has + in name Expected Result: The document should pass the validation File: test+document.xml TestCaseID: Xades-Hashcode-Validation-Pass-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Datafile has space in name Expected Result: The document should pass the validation File: spacesInDatafile.xml TestCaseID: Xades-Hashcode-Validation-Algorithms-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Datafile digest in SHA1 Expected Result: The document should pass the validation File: sha224_TS.xml TestCaseID: Xades-Hashcode-Validation-Algorithms-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Datafile digest in SHA224 Expected Result: The document should pass the validation File: sha224_TS.xml TestCaseID: Xades-Hashcode-Validation-Algorithms-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Datafile digest in SHA256 Expected Result: The document should pass the validation File: Valid_XAdES_LT_TS.xml TestCaseID: Xades-Hashcode-Validation-Algorithms-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Datafile digest in SHA384 Expected Result: The document should pass the validation File: sha384_TS.xml TestCaseID: Xades-Hashcode-Validation-Algorithms-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Datafile digest in SHA512 Expected Result: The document should pass the validation File: sha512_TS.xml DetailedReportValidationManualIT.java Open file TestCaseID: Detailed-Report-Validation-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: ValidationConclusion element Expected Result: Detailed report includes validationConclusion element File: ValidLiveSignature.asice TestCaseID: Detailed-Report-Validation-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: TL analysis element Expected Result: Detailed report includes tlanalysis element and its values File: pades-baseline-lta-live-aj.pdf **Attention! This test is disabled: New test LOTL is needed with correct data TestCaseID: Detailed-Report-Validation-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Signatures element Expected Result: Detailed report includes signatures element and its sub-elements and its values File: hellopades-lt-sha256-ec256.pdf TestCaseID: Detailed-Report-Validation-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: basicBuildingBlocks element Expected Result: Detailed report includes basicBuildingBlocks element and its sub-elements and its values File: pades-baseline-lta-live-aj.pdf TestCaseID: Detailed-Report-Validation-5 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: BasicBuildingBlocks element Expected Result: Detailed report includes basicBuildingBlocks element and its sub-elements and its values File: pades-baseline-lta-live-aj.pdf TestCaseID: Detailed-Report-Validation-6 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: BasicBuildingBlocks element Expected Result: Detailed report includes basicBuildingBlocks element and its sub-elements and its values File: pades-baseline-lta-live-aj.pdf TestCaseID: Detailed-Report-Validation-7 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Wrong signature value Expected Result: Detailed report includes wrong signature value File: TS-02_23634_TS_wrong_SignatureValue.asice TestCaseID: Detailed-Report-Validation-8 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Wrong data file in manifest Expected Result: File: WrongDataFileInManifestAsics.asics TestCaseID: Detailed-Report-Validation-9 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report file hash if ReportSignatureEnabled value true Expected Result: fileHash calculated File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: SIVA-196 TestCaseID: Detailed-Report-Validation-10 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report file hash if ReportSignatureEnabled value false Expected Result: fileHash no calculated File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: Needs possibility to configure report signing in tests DiagnosticReportValidationManualIT.java Open file TestCaseID: Diagnostic-Report-Validation-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: ValidationConclusion element Expected Result: Diagnostic report includes validationConclusion element File: ValidLiveSignature.asice TestCaseID: Diagnostic-Report-Validation-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Signatures element Expected Result: Diagnostic report includes tlanalysis element and its values File: pades-baseline-lta-live-aj.pdf TestCaseID: Diagnostic-Report-Validation-5 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Used Certificates Expected Result: Diagnostic report includes used certificates element and its values File: pades-baseline-lta-live-aj.pdf TestCaseID: Diagnostic-Report-Validation-6 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Wrong signature value Expected Result: Diagnostic report includes wrong signature value File: TS-02_23634_TS_wrong_SignatureValue.asice **Attention! This test is disabled ReportSignatureManuallT.java Open file TestCaseID: Detailed-Report-Signatures-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_LTA signed with RSA key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled TestCaseID: Detailed-Report-Signatures-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_LT signed with RSA key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled TestCaseID: Detailed-Report-Signatures-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_T signed with RSA key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled TestCaseID: Detailed-Report-Signatures-5 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_B signed with RSA key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled TestCaseID: Detailed-Report-Signatures-6 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_LTA and signed with ECC key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled TestCaseID: Detailed-Report-Signatures-7 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_LT and signed with ECC key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled TestCaseID: Detailed-Report-Signatures-8 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_T and signed with ECC key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled TestCaseID: Detailed-Report-Signatures-9 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_B and signed with ECC key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled TestCaseID: Detailed-Report-Signatures-10 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature when configuration parameter OcspUrl empty Expected Result: No signature File: hellopades-lt-sha256-rsa2048.pdf TestCaseID: Detailed-Report-Signatures-11 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature when configuration parameter TspUrl empty Expected Result: No signature File: hellopades-lt-sha256-rsa2048.pdf TestCaseID: Detailed-Report-Signatures-12 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature when configuration parameter Pkcs11 wrong value Expected Result: Error message File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled TestCaseID: Detailed-Report-Signatures-13 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature when configuration parameter SignatureLevel empty Expected Result: No Signature File: hellopades-lt-sha256-rsa2048.pdf TestCaseID: Detailed-Report-Signatures-14 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature when using pks11 to sign Expected Result: Signature exists File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled StatisticsToLogsManualIT.java Note All tests in this class expect manual verification of responses in log! The tests are made to prepare test data and ease the test execution. TestCaseID: Bdoc-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Bdoc valid container is validated Expected Result: Correct data is shown in the log with correct structure File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Bdoc-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Bdoc invalid container is validated Expected Result: Correct data is shown in the log with correct structure File: SS-4_teadmataCA.4.asice TestCaseID: Bdoc-Statistics-Log-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Bdoc not supported file is inserted Expected Result: No message in statistics as the container is not validated File: xroad-simple.asice TestCaseID: Bdoc-Statistics-Log-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Bdoc with certificates from different countries. Expected Result: Correct data is shown in the log with correct structure File: Baltic MoU digital signing_EST_LT_LV.bdoc TestCaseID: Ddoc-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Ddoc valid container is validated Expected Result: Correct data is shown in the log with correct structure File: valid_XML1_3.ddoc TestCaseID: Ddoc-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Ddoc invalid container is validated Expected Result: Correct data is shown in the log with correct structure File: ilma_kehtivuskinnituseta.ddoc TestCaseID: Ddoc-Statistics-Log-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Ddoc not supported file is inserted Expected Result: No message in statistics as the container is not validated File: xroad-simple.asice TestCaseID: Ddoc-Statistics-Log-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Ddoc with certificates from different countries. Expected Result: Correct data is shown in the log with correct structure File: Belgia_kandeavaldus_LIV.ddoc TestCaseID: Pdf-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Pdf valid container is validated Expected Result: Correct data is shown in the log with correct structure File: pades_lt_two_valid_sig.pdf TestCaseID: Pdf-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Pdf invalid container is validated Expected Result: Correct data is shown in the log with correct structure File: hellopades-lt1-lt2-wrongDigestValue.pdf TestCaseID: Pdf-Statistics-Log-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Pdf with certificates from non Estonian countries. Expected Result: Correct data is shown in the log with correct structure File: Regulatione-signedbyco-legislators.pdf TestCaseID: Xroad-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Xroad valid container is validated Expected Result: Correct data is shown in the log with correct structure File: xroad-batchsignature.asice TestCaseID: Xroad-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Xroad invalid container is validated Expected Result: Correct data is shown in the log with correct structure File: invalid-digest.asice TestCaseID: Xroad-Statistics-Log-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Xroad not supported file is inserted Expected Result: No message in statistics as the container is not validated File: BDOC-TS.bdoc TestCaseID: Asics-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: ASiCs valid container is validated Expected Result: Correct data is shown in the log with correct structure File: ValidBDOCinsideAsics.asics TestCaseID: Asics-Statistics-Log-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: asics invalid container is validated Expected Result: No message in statistics as the container is not validated File: TwoDataFilesAsics.asics GetDataFileRequestIT.java Open file TestCaseID: Get-Data-Files-Request-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Input empty values Expected Result: Errors are returned stating the missing values File: not relevant TestCaseID: Get-Data-Files-Request-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Totally empty request body is sent Expected Result: Errors are given File: not relevant TestCaseID: Get-Data-Files-Request-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Order of elements is changed in request Expected Result: Order of elements is ignored, no error messages in response File: valid_XML1_3.ddoc TestCaseID: Get-Data-Files-Request-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Additional elements are added Expected Result: Added elements ignored, no error messages and additional elements in response File: valid_XML1_3.ddoc TestCaseID: Get-Data-Files-Request-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Mandatory element 'documentType' is duplicated, duplicated element with bdoc value Expected Result: Error message is returned File: test_fail.ddoc TestCaseID: Get-Data-Files-Request-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Mandatory element 'document' is deleted Expected Result: Errors returned stating the missing element File: valid_XML1_3.ddoc TestCaseID: Get-Data-Files-Request-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Low case for document type is used Expected Result: Data file is returned, no error messages File: valid_XML1_3.ddoc TestCaseID: Get-Data-Files-Request-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Document Type is changed in request to BDOC, actual is DDOC Expected Result: Error is returned File: valid_XML1_3.ddoc TestCaseID: Get-Data-Files-Request-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Document Type is changed in request to PDF, actual is DDOC Expected Result: Error is returned File: valid_XML1_3.ddoc TestCaseID: Get-Data-Files-Request-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Document Type is changed in request to unsupported format (JPG), actual is DDOC Expected Result: Error is returned File: valid_XML1_3.ddoc TestCaseID: Get-Data-Files-Request-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Document Type is changed in request to XROAD format, actual is DDOC Expected Result: Error is returned File: valid_XML1_3.ddoc TestCaseID: Get-Data-Files-Request-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Document Type is changed in request to DDOC format, actual is BDOC Expected Result: Error is returned File: BDOC-TS.bdoc TestCaseID: Get-Data-Files-Request-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Document Type is changed in request to DDOC format, actual is PDF Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Get-Data-Files-Request-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: For Unsupported format Document Type is changed in request to DDOC format, actual is PNG Expected Result: Error is returned File: Picture.png HashcodeValidationRequestIT.java Open file TestCaseID: Hascode-Validation-Request-Report-Type-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input correct values for simple report Expected Result: Simple report is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Report-Type-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input correct values for detailed report Expected Result: Simple report is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Report-Type-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Report type missing Expected Result: Default is used File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Report-Type-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Report type case sensitivity Expected Result: Report type is case insensitive File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Report-Type-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Report type is invalid Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Report-Type-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input correct values for detailed report Expected Result: Simple report is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Policy-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Signature policy POLv3 Expected Result: Correct policy is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Policy-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Signature policy POLv4 Expected Result: Correct policy is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Policy-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Signature policy missing Expected Result: Default is used File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Policy-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Signature policy is invalid Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Policy-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Incorrect signature policy format Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Policy-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Signature policy is empty Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Policy-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Signature policy too long Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Policy-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Double signature policy Expected Result: Last value is used File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Signature-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input missing signature files Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Signature-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input missing signature file Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Signature-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input incorrect signature Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Signature-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input file without signature Expected Result: Validation report is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Signature-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Not correct file type Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Datafiles-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Data files not in request Expected Result: Simple report is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Datafiles-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Empty data files list Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Datafiles-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Data file filename missing Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Datafiles-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Data file filename empty Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Datafiles-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Data file filename too long Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Datafiles-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Data file invalid hash algorithm Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Datafiles-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Data file hash algorithm case sensitivity Expected Result: Validation report is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Datafiles-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Data file hash missing Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Datafiles-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Data file hash empty Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Datafiles-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Data file hash wrong format Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Datafiles-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Hash too long Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Policy-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Double fields in datafile object Expected Result: Last value is used File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Datafiles-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Excess data files are ignored Expected Result: Validation report is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Signatures-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Several signatures validated Expected Result: Validation report is returned File: multiple files TestCaseID: Hascode-Validation-Request-Signatures-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Several signatures validated with datafile info Expected Result: Validation report is returned File: multiple files TestCaseID: Hascode-Validation-Request-Signatures-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Several signatures validated one signature not valid Expected Result: Validation report is returned File: multiple files ValidationReportValueVerificationIT.java Open file TestCaseID: Bdoc-ValidationReportVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface#validation-request-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT_TM, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: TwoValidTmSignaturesWithRolesAndProductionPlace.bdoc TestCaseID: Bdoc-ValidationReportVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: validTsSignatureWithRolesAndProductionPlace.asice TestCaseID: Bdoc-ValidationReportVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc TestCaseID: Bdoc-ValidationReportVerification-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT-TM, AdESqc Expected Result: All required elements are present and meet the expected values. File: testAdesQCInvalid.asice TestCaseID: Bdoc-ValidationReportVerification-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: JSON structure has all elements (Bdoc valid multiple signatures) Expected Result: All required elements are present according to SimpleReportSchema.json File: Baltic MoU digital signing_EST_LT_LV.bdoc TestCaseID: Bdoc-ValidationReportVerification-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: JSON structure has all elements (Bdoc indeterminate status) Expected Result: All required elements are present according to BdocDocSimpleReportSchema.json File: SS-4_teadmataCA.4.asice **Attention! This test is disabled: needs investigation why the signature is determined as XAdES_BASELINE_T not as XAdES_BASELINE_LT_TM TestCaseID: Bdoc-ValidationReportVerification-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Bdoc report with no signatures Expected Result: Report is returned with required elements File:BdocContainerNoSignature.bdoc TestCaseID: Bdoc-ValidationReportVerification-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Bdoc with LT_TM, LT & LTA signature - timeAssertionMessageImprints in mixed container are reported correctly Expected Result: timeAssertionMessageImprint values are present and meet the expected values. File: 3_signatures_TM_LT_LTA.bdoc TestCaseID: Bdoc-ValidationReportVerification-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Asice with LT_TM, LT & LTA signature - timeAssertionMessageImprints in mixed container are reported correctly Expected Result: timeAssertionMessageImprint values are present and meet the expected values. File: 3_signatures_TM_LT_LTA.asice TestCaseID: Pdf-ValidationReportVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: JSON structure has all elements (Pdf valid single signature) Expected Result: All required elements are present according to SimpleReportSchema.json File: reason_and_location_Test.pdf TestCaseID: Pdf-ValidationReportVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: JSON structure has all elements (Pdf valid Multiple signatures) Expected Result: All required elements are present according to SimpleReportSchema.json File: pades_lt_two_valid_sig.pdf TestCaseID: Pdf-ValidationReportVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: JSON structure has all elements (Pdf invalid signature) Expected Result: All required elements are present according to SimpleReportSchema.json File: hellopades-lt-b.pdf TestCaseID: Pdf-ValidationReportVerification-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: JSON structure has all elements (Pdf indeterminate status) Expected Result: All required elements are present according to SimpleReportSchema.json File: hellopades-lt-rsa1024-sha1-expired.pdf TestCaseID: Pdf-ValidationReportVerification-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Pdf report with no signatures Expected Result: Report is returned with required elements File: PdfNoSignature.pdf TestCaseID: Ddoc-ValidationReportVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: JSON structure has all elements (ddoc valid single signature) Expected Result: All required elements are present according to SimpleReportSchema.json File: DIGIDOC-XML1.3.ddoc TestCaseID: Ddoc-ValidationReportVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: JSON structure has all elements (ddoc invalid signature) Expected Result: All required elements are present according to SimpleReportSchema.json File: multipleInvalidSignatures.ddoc TestCaseID: Ddoc-ValidationReportVerification-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Check for optional warning element Expected Result: Warning element is present File: 18912.ddoc TestCaseID: Ddoc-ValidationReportVerification-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Ddoc report with no signatures Expected Result: Report is returned with required elements File: DdocContainerNoSignature.ddoc TestCaseID: Ddoc-ValidationReportVerification-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.0, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: SK-XML1.0.ddoc TestCaseID: Ddoc-ValidationReportVerification-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.1, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.1.ddoc TestCaseID: Ddoc-ValidationReportVerification-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.2, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.2.ddoc TestCaseID: Ddoc-ValidationReportVerification-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.3, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.3.ddoc ValidationRequestIT.java Open file TestCaseID: ValidationRequest-Parameters-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Happy path valid mandatory inputs Expected Result: Validation report is returned File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Totally empty request body is sent Expected Result: Error is given File: not relevant TestCaseID: ValidationRequest-Parameters-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input empty values Expected Result: Errors are returned stating the missing values File: not relevant TestCaseID: ValidationRequest-Parameters-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with more parameters than expected is sent Expected Result: Error is given or extra parameters are ignored? File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request has invalid keys (capital letters) Expected Result: Error is returned stating wrong values File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Document parameter is missing Expected Result: Errors are returned stating missing Document values File: not relevant TestCaseID: ValidationRequest-Parameters-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Filename parameter is missing Expected Result: Errors are returned stating the missing values File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Happy path valid file encoding format Expected Result: Validation report is returned File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Happy path valid file encoding format Expected Result: Validation report is returned File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with not base64 string as document Expected Result: Error is returned stating encoding problem File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Filename field should be case insensitive Expected Result: Validation report is returned File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Filename field should ignore spaces Expected Result: Validation report is returned File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Filename is in allowed length Expected Result: Report is returned with the same filename File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Filename is over allowed length Expected Result: Error is returned File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: DocumentType parameter is missing Expected Result: Document type is selected automatically and validation report is returned File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-19 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: DocumentType parameter is XROAD Expected Result: Xroad validatior is used for validation and report is returned File: xroad-simple.asice TestCaseID: ValidationRequest-Parameters-20 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: SignaturePolicy parameter is missing, default is used Expected Result: Validation report is returned with POLv4 File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-21 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: SignaturePolicy is set as POLv3 Expected Result: Validation report is returned with POLv3 File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-22 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: SignaturePolicy is set as POLv4 Expected Result: Validation report is returned with POLv4 File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-23 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: SignaturePolicy has not allowed value Expected Result: error is returned File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-24 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: ReportType parameter is missing Expected Result: Simple report is returned as default File: singleValidSignatureTS.asice TestCaseID: ValidationRequest-Parameters-25 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: ReportType parameter Simple Expected Result: Simple report is returned File: singleValidSignatureTS.asice TestCaseID: ValidationRequest-Parameters-26 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: ReportType parameter Detailed Expected Result: Detailed report is returned File: singleValidSignatureTS.asice TestCaseID: ValidationRequest-Parameters-27 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: ReportType parameter is invalid Expected Result: Error is returned File: singleValidSignatureTS.asice TestCaseID: ValidationRequest-Parameters-28 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Filename is under allowed length Expected Result: Error is returned File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-29 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: SignaturePolicy is under allowed length Expected Result: Error is returned File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-30 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: SignaturePolicy is too long Expected Result: Error is returned File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-31 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: ReportType parameter Diagnostic Expected Result: Diagnostic report is returned File: singleValidSignatureTS.asice TestCaseID: ValidationRequest-Validator-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Mismatch in stated and actual document (bdoc and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: ValidationRequest-Validator-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input random base64 string as bdoc Expected Result: Error is returned stating problem in document File: not relevant TestCaseID: ValidationRequest-Validator-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Acceptance of ASICE as BDOC document type Expected Result: Asice files are handled the same as bdoc File: singleValidSignatureTS.asice TestCaseID: ValidationRequest-Validator-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input random base64 string as pdf Expected Result: Error is returned stating problem in document File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Validator-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Mismatch in stated and actual document (ddoc and bdoc) Expected Result: Error is returned File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Validator-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input random base64 string as ddoc Expected Result: Error is returned stating problem in document File: not relevant **Attention! This test is disabled: 6\") SoapGetDataFileReportIT.java Open file TestCaseID: SoapGetDataFile-Report-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-response-interface Title: Verification of values in Validation Report, checks for File name, Base64, Mimetype and Size Expected Result: All required elements are present and meet the expected values File: valid_XML1_3.ddoc TestCaseID: SoapGetDataFile-Report-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-response-interface Title: Verification of values in Validation Report xml v1.1, checks for File name, Base64, Mimetype and Size Expected Result: All required elements are present and meet the expected values File: DIGIDOC-XML1.1.ddoc TestCaseID: SoapGetDataFile-Report-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-response-interface Title: Verification of values in Validation Report xml v1.2, checks for File name, Base64, Mimetype and Size Expected Result: All required elements are present and meet the expected values File: DIGIDOC-XML1.2.ddoc TestCaseID: SoapGetDataFile-Report-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-response-interface Title: Verification of values in Validation Report for container with a number of files, checks for File name, Base64, Mimetype and Size for each file Expected Result: All required elements are present and meet the expected values File: igasugust1.3.ddoc SoapGetDataFileRequestIT.java Open file TestCaseID: Soap-Validation-Request-For-Data-Files-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Input empty values Expected Result: Error is returned File: not relevant TestCaseID: Soap-Validation-Request-For-Data-Files-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Input empty body Expected Result: Error is returned File: not relevant TestCaseID: Soap-Validation-Request-For-Data-Files-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Element DocumentType is removed from the body Expected Result: Error is returned File: valid_XML1_3.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Element Document is removed from the body Expected Result: Error is returned File: valid_XML1_3.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Element DocumentType is duplicated in the body with different value Expected Result: Error is returned File: valid_XML1_3.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Additional element Filename is added to the body Expected Result: Error is returned File: valid_XML1_3.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Value for element Document was changed Expected Result: Error is returned File: valid_XML1_3.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: DocumentType was changed to BDOC when actual is DDOC Expected Result: Error is returned File: valid_XML1_3.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: DocumentType was changed to PDF when actual is DDOC Expected Result: Error is returned File: valid_XML1_3.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: DocumentType was changed to XROAD when actual is DDOC Expected Result: Error is returned File: valid_XML1_3.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: DocumentType was changed to unsupported format JPG when actual is DDOC Expected Result: Error is returned File: valid_XML1_3.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: DocumentType was changed to DDOC when actual is PDF Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Soap-Validation-Request-For-Data-Files-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: DocumentType was changed to DDOC when actual is BDOC Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc SoapHashcodeValidationRequestIT.java Open file TestCaseID: Soap-Hashcode-Validation-Report-Type-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Valid request Expected Result: Simple report is returned with valid signatures File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-Validation-Report-Type-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Valid request with detailed report Expected Result: Simple report is returned with valid signatures File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-Validation-Report-Type-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Report type missing Expected Result: Default is used File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-Validation-Report-Type-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Report type case sensitivity Expected Result: Report type is case insensitive File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-Validation-Report-Type-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Report type is invalid Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-Validation-Report-Type-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Valid request with report Diagnostic Expected Result: Simple report is returned with valid signatures File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-Validation-Policy-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Signature policy POLv3 Expected Result: Correct policy is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-Validation-Policy-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Signature policy POLv4 Expected Result: Correct policy is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-Validation-Policy-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Default policy Expected Result: POLv4 is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-Validation-Policy-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Invalid policy asked Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-Validation-Policy-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Invalid policy format Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-Validation-Policy-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Too long policy Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Signature-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Signature file missing Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Signature-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Signature file empty Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Signature-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Signature file not Base64 Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Signature-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Signature file without signature Expected Result: Report without signature is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Signature-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Signature file not XML Expected Result: Report without signature is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Datafile-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request without datafiles Expected Result: Validation report is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Datafile-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with empty data files Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Datafile-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request without datafile filename Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Datafile-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with empty filename Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Datafile-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request without datafile filename Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Datafile-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with too long datafile name Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Datafile-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with invalid hash algorithm Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Datafile-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Hash algo small case Expected Result: Report is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Datafile-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Hash algo mismatch Expected Result: Report with invalid signature File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Datafile-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Datafile hash missing Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Datafile-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Data file hash empty Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Datafile-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Datafile hash not Base64 Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Multiple data files Expected Result: Report is returned with signature statuses File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Wrong hash Expected Result: Report is returned with invalid signature File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Wrong data file name Expected Result: Report is returned with signature statuses File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Empty request body Expected Result: Report is returned with signature statuses File: Valid_XAdES_LT_TS.xml TestCaseID: Xades-Hashcode-Validation-Special-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Datafile has + in name Expected Result: The document should pass the validation File: test+document.xml TestCaseID: Xades-Hashcode-Validation-Special-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Datafile has space in name Expected Result: The document should pass the validation File: spacesInDatafile.xml TestCaseID: Xades-Hashcode-Validation-Special-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Datafile has + in name with full API request Expected Result: The document should pass the validation File: test+document.xml TestCaseID: Xades-Hashcode-Validation-Special-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Datafile has space in name with full API request Expected Result: The document should pass the validation File: spacesInDatafile.xml SoapValidationReportValueIT.java Open file TestCaseID: Bdoc-SoapValidationReportValue-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT_TM, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: TwoValidTmSignaturesWithRolesAndProductionPlace.bdoc TestCaseID: Bdoc-SoapValidationReportValue-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: validTsSignatureWithRolesAndProductionPlace.asice TestCaseID: Bdoc-SoapValidationReportValue-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT, AdES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc **Attention! This test is disabled: New testfile needed TestCaseID: Bdoc-SoapValidationReportValue-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT_TM, AdESqc, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: testAdesQC.bdoc **Attention! This test is disabled: Testfile needed TestCaseID: Bdoc-SoapValidationReportValue-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LTA, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: EE_SER-AEX-B-LTA-V-24.bdoc **Attention! This test is disabled: 5\") TestCaseID: Ddoc-SoapValidationReportValue-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.0, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: SK-XML1.0.ddoc TestCaseID: Ddoc-SoapValidationReportValue-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.1, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.1.ddoc TestCaseID: Ddoc-SoapValidationReportValue-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.2, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.2.ddoc TestCaseID: Ddoc-SoapValidationReportValue-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.3, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.3.ddoc TestCaseID: Pdf-SoapValidationReportValue-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, PAdES_baseline_LT, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: pades_lt_two_valid_sig.pdf TestCaseID: Pdf-SoapValidationReportValue-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, PAdES_baseline_B, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: hellopades-pades-b-sha256-auth.pdf TestCaseID: Asice-SoapRoleAndProductionPlaceValue-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of filled SignerRole and SignatureProductionPlace values. Expected Result: All required elements are present and meet the expected values. File: role_productionPlace.asice TestCaseID: Asice-SoapRoleAndProductionPlaceValue-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of filled SignerRole and SignatureProductionPlace special character values. Expected Result: All required elements are present and meet the expected values. File: role_productionPlace.asice TestCaseID: Asice-SoapRoleAndProductionPlaceValue-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of filled SignerRole and SignatureProductionPlace values in XML and JSON syntax. Expected Result: All required elements are present and meet the expected values. Structure is not malformed. File: role_productionPlace.asice TestCaseID: Asice-SoapRoleAndProductionPlaceValue-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of empty SignerRole and SignatureProductionPlace elements. Expected Result: Structure does not contain SignerRole and SignatureProductionPlace elements. File: role_productionPlace.asice TestCaseID: Asice-SoapRoleAndProductionPlaceValue-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of filled SignerRole and empty SignatureProductionPlace elements. Expected Result: SignerRole element is present and meets the expected value. Structure does not contain SignatureProductionPlace elements. File: role_productionPlace.asice TestCaseID: Asice-SoapRoleAndProductionPlaceValue-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of empty SignerRole and partially filled SignatureProductionPlace element. Expected Result: SignatureProductionPlace.City element is present and meets the expected value. Structure does not contain SignerRole element. File: role_productionPlace.asice TestCaseID: Asice-SoapRoleAndProductionPlaceValue-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of short data type maximum range value for SignerRole and SignatureProductionPlace. Expected Result: All required elements are present and corresponding values meet the short data type maximum range of 32767 characters. File: role_productionPlace.asice TestCaseID: Asice-SoapRoleAndProductionPlaceValue-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of int data type value longer than short data type maximum value for SignatureProductionPlace. Expected Result: Element is present and meets expected value of 32768 characters. File: role_productionPlace.asice TestCaseID: Asice-SoapRoleAndProductionPlaceValue-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of 3 concurrent claimed roles. Expected Result: All claimed roles are present and meet the expected values. File: role_productionPlace.asice SoapValidationRequestIT.java Open file TestCaseID: Soap-ValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Empty request body Expected Result: Error is returned stating mismatch with required elements File: not relevant TestCaseID: Soap-ValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with not base64 string as document Expected Result: Error is returned stating encoding problem File: not relevant TestCaseID: Soap-ValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Verification of wrong document type as input Expected Result: Correct error code is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Verification of case sensitivity in document type Expected Result: Error is returned as WSDL defines the allowed values File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request has XML as document type (special case, XML is similar to ddoc and was a accepted document type in earlier versions) Expected Result: Error is given File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request has long filename field Expected Result: Report is returned with the same filename File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Totally empty request body is sent Expected Result: Error is given File: not relevant TestCaseID: Soap-ValidationRequest-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with more parameters than expected is sent Expected Result: Error is given or extra parameters are ignored? File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with more parameters than expected is sent Expected Result: Error is given or extra parameters are ignored? File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with special chars is sent Expected Result: Validation report is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with no optional SignaturePolicy field Expected Result: Validation report is returned using default policy File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with XML expansion Expected Result: Error is returned and Entity is not handled File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request XML external entity attack Expected Result: Error message is returned and Doctype field is not handled File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with empty document Expected Result: Error is returned File: not relevant TestCaseID: Soap-ValidationRequest-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with empty filename Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with not allowed signature policy characters Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: SignaturePolicy is over allowed length Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: SignaturePolicy is under allowed length Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-19 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Filename is under allowed length Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-20 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Filename is over allowed length Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-BdocValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input random base64 string as document with bdoc document type Expected Result: Error is returned stating problem in document File: not relevant TestCaseID: Soap-BdocValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Verification of filename value (filename do not match the actual file) Expected Result: The same filename is returned as sent in the request File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-BdocValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Soap-BdocValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Bdoc file, not existing value in signaturePolicy Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-BdocValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Bdoc file, policy fiels should be case insensitive Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-DdocValidationRequest-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and xroad) Expected Result: Error is returned File: xroad-simple.asice TestCaseID: Soap-DdocValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input random base64 string as document with ddoc document type Expected Result: Error is returned stating problem in document File: TestCaseID: Soap-DdocValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-DdocValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-DdocValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Soap-DdocValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Ddoc file, not existing value in signaturePolicy Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: Soap-DdocValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and xroad) Expected Result: Error is returned File: xroad-attachment.asice TestCaseID: Soap-PdfValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input random base64 string as document with pdf document type Expected Result: Error is returned stating problem in document File: not relevant TestCaseID: Soap-PdfValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: PDF file, not existing value in signaturePolicy Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Soap-ValidationRequest-PDF-ReportType-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Simple report is requested Expected Result: Simple report is returned File:PdfValidSingleSignature.pdf TestCaseID: Soap-ValidationRequest-PDF-ReportType-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Detailed report is requested Expected Result: Detailed report is returned File:PdfValidSingleSignature.pdf TestCaseID: Soap-ValidationRequest-PDF-ReportType-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Diagnostic report is requested Expected Result: Diagnostic report is returned File:PdfValidSingleSignature.pdf TestCaseID: Soap-ValidationRequest-BDOC-ReportType-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Simple report is requested Expected Result: Simple report is returned File: testECCDemo.bdoc TestCaseID: Soap-ValidationRequest-BDOC-ReportType-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Detailed report is requested Expected Result: Simple report is returned File: testECCDemo.bdoc TestCaseID: Soap-ValidationRequest-BDOC-ReportType-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Diagnostic report is requested Expected Result: Simple report is returned File: testECCDemo.bdoc TestCaseID: Soap-ValidationRequest-DDOC-ReportType-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Simple report is requested Expected Result: Simple report is returned File: igasugust1.3.ddoc TestCaseID: Soap-ValidationRequest-DDOC-ReportType-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Detailed report is requested Expected Result: Simple report is returned File: igasugust1.3.ddoc TestCaseID: Soap-ValidationRequest-DDOC-ReportType-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Diagnostic report is requested Expected Result: Simple report is returned File: igasugust1.3.ddoc TestCaseID: Soap-ValidationRequest-ASICE-ReportType-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Simple report is requested Expected Result: Simple report is returned File: Mac_AS0099904_EsimeneAmetlikSKTestElliptilistega_TS.asice TestCaseID: Soap-ValidationRequest-ASICE-ReportType-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Detailed report is requested Expected Result: Detailed report is returned File: Mac_AS0099904_EsimeneAmetlikSKTestElliptilistega_TS.asice TestCaseID: Soap-ValidationRequest-ASICE-ReportType-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Diagnostic report is requested Expected Result: Diagnostic report is returned File: Mac_AS0099904_EsimeneAmetlikSKTestElliptilistega_TS.asice TestCaseID: Soap-ValidationRequest-XROAD-ReportType-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Simple report is requested Expected Result: Simple report is returned File: xroad-simple.asice TestCaseID: Soap-ValidationRequest-XROAD-ReportType-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Detailed report is requested Expected Result: Simple report is returned File: xroad-simple.asice TestCaseID: Soap-ValidationRequest-XROAD-ReportType-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Diagnostic report is requested Expected Result: Simple report is returned File: xroad-simple.asice SoapXRoadRequestHeaderIT.java Open file TestCaseID: XroadSoap-RequestVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Soap headers are returned in response Expected Result: Same headers are in response as in request File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: XroadSoap-RequestVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Soap headers are returned in correct order Expected Result: Same headers are in response as in request File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: XroadSoap-RequestVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Soap headers are returned in error response Expected Result: Same headers are in response as in request File: not relevant TestCaseID: XroadSoap-GetDataFiles-RequestVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Soap headers are returned in response for Get Data Files Expected Result: Same headers are in response as in request File: susisevad1_3.ddoc TestCaseID: XroadSoap-GetDataFiles-RequestVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Soap headers are returned in correct order for Get Data Files Expected Result: Same headers are in response as in request File: valid_XML1_3.ddoc TestCaseID: XroadSoap-GetDataFiles-RequestVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Soap headers are returned in error response for Get Data Files Expected Result: Same headers are in response as in request File: not relevant XRoadValidationFailIT.java Open file TestCaseID: Xroad-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Simple xroad document with container fault Expected Result: Document should fail validation File: invalid-digest.asice XRoadValidationPassIT.java Open file TestCaseID: Xroad-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Simple xroad document Expected Result: Document should pass File: xroad-simple.asice TestCaseID: Xroad-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Batchsignature xroad document Expected Result: Document should pass File: xroad-batchsignature.asice TestCaseID: Xroad-ValidationPass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Attachment xroad document Expected Result: Document should pass File: xroad-attachment.asice ValidationReportValueVerificationIT.java Open file TestCaseID: Xroad-ValidationReportVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-simple container Expected Result: Report is returned with required elements File: xroad-simple.asice TestCaseID: Xroad-ValidationReportVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-batchsignature container Expected Result: Report is returned with required elements File: xroad-batchsignature.asice TestCaseID: Xroad-ValidationReportVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-attachment container Expected Result: Report is returned with required elements File: xroad-attachment.asice TestCaseID: Xroad-ValidationReportVerification-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report with invalid xroad container Expected Result: Report is returned with required elements File: xroad-attachment.asice ValidationRequestIT.java Open file TestCaseID: ValidationRequest-Parameters-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Happy path valid all input test Expected Result: Validation report is returned File: xroad-simple.asice TestCaseID: ValidationRequest-Parameters-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: DocumentType parameter is XROAD Expected Result: Xroad validatior is used for validation and report is returned File: xroad-simple.asice TestCaseID: ValidationRequest-Validator-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input random base64 string as document with xroad document type Expected Result: Error is returned stating problem in document File: not relevant TestCaseID: ValidationRequest-Validator-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Mismatch in stated and actual document (xroad and ddoc) Expected Result: Error is returned File: igasugust1.3.ddoc SoapValidationReportValueIT.java Open file TestCaseID: Xroad-SoapValidationReportValue-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-simple container Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: xroad-simple.asice TestCaseID: Xroad-SoapValidationReportValue-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-simple invalid container Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: invalid-digest.asice SoapValidationRequestIT.java Open file TestCaseID: Soap-XroadValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: X-road file, not existing value in signaturePolicy Expected Result: Error is returned File: xroad-simple.asice TestCaseID: Soap-XroadValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (xroad and ddoc) Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: Soap-XroadValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (pdf and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-XroadValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf","title":"Appendix 2 - Test Case Descriptions"},{"location":"siva3/appendix/test_cases/#test-case-descriptions","text":"","title":"Test Case Descriptions"},{"location":"siva3/appendix/test_cases/#introduction","text":"This document gives overview of the test cases. This page is partially generated using a script, more info about the script can be found in SiVa GitHub . The structure and elements of test case is described in QA Strategy document. All the files used in the tests can be found in SiVa GitHub .","title":"Introduction"},{"location":"siva3/appendix/test_cases/#asicevalidationfailitjava","text":"Open file TestCaseID: Asice-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with single invalid signature Expected Result: The document should fail the validation File: InvalidLiveSignature.asice TestCaseID: Asice-ValidationFail-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice with multiple invalid signatures Expected Result: The document should fail the validation File: InvalidMultipleSignatures.bdoc TestCaseID: Asice-ValidationFail-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice with multiple signatures both valid and invalid Expected Result: The document should fail the validation File: InvalidAndValidSignatures.asice TestCaseID: Asice-ValidationFail-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice with no signatures Expected Result: The document should fail the validation File: AsiceContainerNoSignature.asice TestCaseID: Asice-ValidationFail-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Wrong signature timestamp Expected Result: The document should fail the validation File: TS-02_23634_TS_wrong_SignatureValue.asice TestCaseID: Asice-ValidationFail-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice No non-repudiation key usage value in the certificate, verification of AdES signature level Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-I-43.asice TestCaseID: Asice-ValidationFail-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice signers certificate does not have non-repudiation value in the certificates key usage field and it does not contain the QC and SSCD compliance information. Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-I-26.asice TestCaseID: Asice-ValidationFail-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: OCSP certificate is not trusted Expected Result: The document should fail the validation File: TM-01_bdoc21-unknown-resp.bdoc TestCaseID: Asice-ValidationFail-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice TSA certificate is not trusted Expected Result: The document should fail the validation File: TS-05_23634_TS_unknown_TSA.asice TestCaseID: Asice-ValidationFail-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice OCSP response status is revoked Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-R-25.asice TestCaseID: Asice-ValidationFail-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice difference between OCSP and time-stamp issuing times is more than 24 hours Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-V-20.asice TestCaseID: Asice-ValidationFail-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice unsigned data files in the container Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-V-34.asice TestCaseID: Asice-ValidationFail-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice SignatureValue does not correspond to the SignedInfo block Expected Result: The document should fail the validation File: REF-19_bdoc21-no-sig-asn1-pref.bdoc TestCaseID: Asice-ValidationFail-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice Baseline-BES file Expected Result: The document should fail the validation File: signWithIdCard_d4j_1.0.4_BES.asice TestCaseID: Asice-ValidationFail-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice Baseline-EPES file Expected Result: The document should fail the validation File: TM-04_kehtivuskinnituset.4.asice TestCaseID: Asice-ValidationFail-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice signers certificate is not trusted Expected Result: The document should fail the validation File: SS-4_teadmataCA.4.asice TestCaseID: Asice-ValidationFail-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice OCSP response status is revoked Expected Result: The document should fail the validation File: TM-15_revoked.4.asice TestCaseID: Asice-ValidationFail-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice OCSP response status is unknown Expected Result: The document should fail the validation File: TM-16_unknown.4.asice TestCaseID: Asice-ValidationFail-19 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice signed data file has been removed from the container Expected Result: The document should fail the validation File: KS-21_fileeemaldatud.4.asice TestCaseID: Asice-ValidationFail-20 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice no files in container Expected Result: The document should fail the validation File: KS-02_tyhi.bdoc TestCaseID: Asice-ValidationFail-21 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice signed data file(s) don't match the hash values in reference elements Expected Result: The document should fail the validation File: REF-14_filesisumuudetud.4.bdoc TestCaseID: Asice-ValidationFail-22 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice Baseline-T signature Expected Result: The document should fail the validation File: TS-06_23634_TS_missing_OCSP.asice TestCaseID: Asice-ValidationFail-23 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice certificate's validity time is not in the period of OCSP producedAt time Expected Result: The document should fail the validation File: **Attention! This test is disabled: test file is needed where certificate expiration end is before the OCSP produced at time TestCaseID: Asice-ValidationFail-24 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: BDoc with invalid signature, no signing certificate found Expected Result: The document should fail the validation File: TM-invalid-sig-no-sign-cert.asice TestCaseID: Asice-ValidationFail-25 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: BDoc with invalid signature, signed with expired certificate Expected Result: The document should fail the validation File: IB-5987_signed_with_expired_certificate.asice TestCaseID: Asice-ValidationFail-26 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc signed properties element missing Expected Result: The document should fail the validation File: REF-03_bdoc21-TS-no-signedpropref.asice TestCaseID: Asice-ValidationFail-27 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice LT signature signed with expired AIA OCSP certificate Expected Result: The document should fail the validation File: esteid2018signerAiaOcspLT.asice TestCaseID: Asice-ValidationFail-28 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice LTA signature signed with expired AIA OCSP certificate Expected Result: The document should fail the validation File: esteid2018signerAiaOcspLTA.asice","title":"AsiceValidationFailIT.java"},{"location":"siva3/appendix/test_cases/#asicevalidationpassitjava","text":"Open file TestCaseID: Asice-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice with single valid signature Expected Result: The document should pass the validation File: ValidLiveSignature.asice TestCaseID: Asice-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice TM with multiple valid signatures Expected Result: The document should pass the validation File: BDOC-TS.asice TestCaseID: Asice-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice One LT signature with certificates from different countries Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-30.asice TestCaseID: Asice-ValidationPass-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice Baseline-LT file Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-49.asice TestCaseID: Asice-ValidationPass-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice Baseline-LTA file Expected Result: The document should pass the validation File: EE_SER-AEX-B-LTA-V-24.asice **Attention! This test is disabled: 5\") TestCaseID: Asice-ValidationPass-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice file signed with Mobile-ID, ECC-SHA256 signature with prime256v1 key Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-2.asice TestCaseID: Asice-ValidationPass-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice file with ESTEID-SK 2015 certificate chain Expected Result: The document should pass the validation File: IB-4270_TS_ESTEID-SK 2015 SK OCSP RESPONDER 2011.asice TestCaseID: Asice-ValidationPass-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice file with KLASS3-SK 2010 (EECCRCA) certificate chain Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-28.asice TestCaseID: Asice-ValidationPass-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: *.sce file with TimeStamp Expected Result: The document should pass the validation File: ASICE_TS_LTA_content_as_sce.sce **Attention! This test is disabled: DD4J-615) TestCaseID: Asice-ValidationPass-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice-TS with special characters in data file Expected Result: The document should pass the validation with correct signature scope File: Nonconventionalcharacters.asice TestCaseID: Asice-ValidationPass-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: New Estonian ECC signature Expected Result: The document should pass the validation File: Mac_AS0099904_EsimeneAmetlikSKTestElliptilistega_TS.asice TestCaseID: Asice-ValidationPass-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice pss signature Expected Result: The document should pass the validation File: PSS-signature.asice","title":"AsiceValidationPassIT.java"},{"location":"siva3/appendix/test_cases/#asicsvalidationfailitjava","text":"Open file TestCaseID: Asics-ValidationFail-1 TestType: Automated Requirement: Title: Only one datafile is allowed in ASIC-s Expected Result: The validation should fail File: TwoDataFilesAsics.asics TestCaseID: Asics-ValidationFail-2 TestType: Automated Requirement: Title: No data file in ASIC-s Expected Result: The validation should fail File: DataFileMissingAsics.asics TestCaseID: Asics-ValidationFail-3 TestType: Automated Requirement: Title: more folders that META-INF in ASIC-s Expected Result: The validation should fail File: FoldersInAsics.asics TestCaseID: Asics-ValidationFail-4 TestType: Automated Requirement: Title: META-INF folder not in root of container Expected Result: The validation should fail File: MetaInfNotInRoot.asics TestCaseID: Asics-ValidationFail-5 TestType: Automated Requirement: Title: Not allowed files in META-INF folder Expected Result: The validation should fail File: signatureMixedWithTST.asics TestCaseID: Asics-ValidationFail-6 TestType: Automated Requirement: Title: TST not intact Expected Result: The validation should fail File: AsicsTSTsignatureModified.asics TestCaseID: Asics-ValidationFail-7 TestType: Automated Requirement: Title: TST has been corrupted Expected Result: The validation should fail File: AsicsTSTsignatureBroken.asics TestCaseID: Asics-ValidationFail-8 TestType: Automated Requirement: Title: Data file changed Expected Result: The validation should fail File: DatafileAlteredButStillValid.asics TestCaseID: Asics-ValidationFail-9 TestType: Automated Requirement: Title: Exluding files in META-INF folder together with TST Expected Result: The validation should fail File: evidencerecordMixedWithTST.asics","title":"AsicsValidationFailIT.java"},{"location":"siva3/appendix/test_cases/#asicsvalidationpassitjava","text":"Open file TestCaseID: Asics-ValidationPass-1 TestType: Automated Requirement: Title: Validation of ASICs with DDOC inside Expected Result: TST and inner DDOC are valid File: ddocWithRoleAndSigProductionPlace.asics TestCaseID: Asics-ValidationPass-2 TestType: Automated Requirement: Title: Validation of ASICs with DDOC inside SCS extension Expected Result: TST and inner DDOC are valid File: ValidDDOCinsideAsics.scs TestCaseID: Asics-ValidationPass-3 TestType: Automated Requirement: Title: Validation of ASICs with BDOC inside Expected Result: TST and inner BDOC are valid File: ValidBDOCinsideAsics.asics TestCaseID: Asics-ValidationPass-4 TestType: Automated Requirement: Title: Validation of ASICs with text document inside Expected Result: TST is valid File: TXTinsideAsics.asics TestCaseID: Asics-ValidationPass-5 TestType: Automated Requirement: Title: Validation of ASICs with ASICs inside Expected Result: TST is valid, no inner looping of ASICs File: ValidASICSinsideAsics.asics TestCaseID: Asics-ValidationPass-6 TestType: Automated Requirement: Title: Validation of ASICs with DDOC inside ZIP extension Expected Result: TST and inner DDOC are valid File: ValidDDOCinsideAsics.zip TestCaseID: Asics-ValidationPass-7 TestType: Automated Requirement: Title: Validation of ASICs with wrong mimetype with DDOC inside Expected Result: TST and inner DDOC are valid File: ValidDDOCinsideAsicsWrongMime.asics","title":"AsicsValidationPassIT.java"},{"location":"siva3/appendix/test_cases/#bdocvalidationfailitjava","text":"Open file TestCaseID: Bdoc-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with single invalid signature Expected Result: The document should fail the validation File: IB-3960_bdoc2.1_TSA_SignatureValue_altered.bdoc TestCaseID: Bdoc-ValidationFail-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with multiple invalid signatures Expected Result: The document should fail the validation File: BdocMultipleSignaturesInvalid.bdoc TestCaseID: Bdoc-ValidationFail-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with multiple signatures both valid and invalid Expected Result: The document should fail the validation File: BdocMultipleSignaturesMixedWithValidAndInvalid.bdoc TestCaseID: Bdoc-ValidationFail-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with no signatures Expected Result: The document should fail the validation File: BdocContainerNoSignature.bdoc TestCaseID: Bdoc-ValidationFail-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Wrong signature timestamp Expected Result: The document should fail the validation in DD4J File: TS-02_23634_TS_wrong_SignatureValue.asice TestCaseID: Bdoc-ValidationFail-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice No non-repudiation key usage value in the certificate, verification of AdES signature level Expected Result: The document should fail the validation in DD4J File: EE_SER-AEX-B-LT-I-43.asice TestCaseID: Bdoc-ValidationFail-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice signers certificate does not have non-repudiation value in the certificates key usage field and it does not contain the QC and SSCD compliance information. Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-I-26.asice TestCaseID: Bdoc-ValidationFail-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc OCSP certificate is not trusted Expected Result: The document should fail the validation File: TM-01_bdoc21-unknown-resp.bdoc TestCaseID: Bdoc-ValidationFail-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice TSA certificate is not trusted Expected Result: The document should fail the validation in DD4J File: TS-05_23634_TS_unknown_TSA.asice TestCaseID: Bdoc-ValidationFail-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice OCSP response status is revoked Expected Result: The document should fail the validation in DD4J File: EE_SER-AEX-B-LT-R-25.asice TestCaseID: Bdoc-ValidationFail-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice difference between OCSP and time-stamp issuing times is more than 24 hours Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-V-20.asice TestCaseID: Bdoc-ValidationFail-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc different data file mime-type values in signatures.xml and manifest.xml files Expected Result: The document should return warning regarding the mismatch File: 23613_TM_wrong-manifest-mimetype.bdoc TestCaseID: Bdoc-ValidationFail-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc SignatureValue does not correspond to the SignedInfo block Expected Result: The document should fail the validation File: REF-19_bdoc21-no-sig-asn1-pref.bdoc TestCaseID: Bdoc-ValidationFail-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc Baseline-BES file Expected Result: The document should fail the validation in DD4J File: signWithIdCard_d4j_1.0.4_BES.asice TestCaseID: Bdoc-ValidationFail-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc Baseline-EPES file Expected Result: The document should fail the validation File: TM-04_kehtivuskinnituset.4.asice TestCaseID: Bdoc-ValidationFail-19 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc signers certificate is not trusted Expected Result: The document should fail the validation File: SS-4_teadmataCA.4.asice TestCaseID: Bdoc-ValidationFail-20 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc OCSP response status is revoked Expected Result: The document should fail the validation File: TM-15_revoked.4.asice TestCaseID: Bdoc-ValidationFail-21 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc OCSP response status is unknown Expected Result: The document should fail the validation File: TM-16_unknown.4.asice TestCaseID: Bdoc-ValidationFail-22 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc signed data file has been removed from the container Expected Result: The document should fail the validation in DD4J File: KS-21_fileeemaldatud.4.asice TestCaseID: Bdoc-ValidationFail-23 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc no files in container Expected Result: The document should fail the validation File: KS-02_tyhi.bdoc TestCaseID: Bdoc-ValidationFail-24 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc wrong nonce Expected Result: The document should fail the validation File: TM-10_noncevale.4.asice TestCaseID: Bdoc-ValidationFail-25 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc signed data file(s) don't match the hash values in reference elements Expected Result: The document should fail the validation File: REF-14_filesisumuudetud.4.bdoc TestCaseID: Bdoc-ValidationFail-26 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice Baseline-T signature Expected Result: The document should fail the validation in DD4J File: TS-06_23634_TS_missing_OCSP.asice TestCaseID: Bdoc-ValidationFail-27 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc OCSP response is not the one expected Expected Result: The document should fail the validation File: 23608-bdoc21-TM-ocsp-bad-nonce.bdoc TestCaseID: Bdoc-ValidationFail-28 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc certificate's validity time is not in the period of OCSP producedAt time Expected Result: The document should fail the validation File: 23154_test1-old-sig-sigat-OK-prodat-NOK-1.bdoc TestCaseID: Bdoc-ValidationFail-29 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc BDOC-1.0 version container Expected Result: The document should fail the validation File: BDOC-1.0.bdoc TestCaseID: Bdoc-ValidationFail-30 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice unsigned data files in the container Expected Result: The document should fail the validation File: EE_SER-AEX-B-LT-V-34.asice TestCaseID: Bdoc-ValidationFail-31 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc signed properties element missing Expected Result: The document should fail the validation File: REF-03_bdoc21-TM-no-signedpropref.bdoc","title":"BdocValidationFailIT.java"},{"location":"siva3/appendix/test_cases/#bdocvalidationpassitjava","text":"Open file TestCaseID: Bdoc-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Bdoc with single valid signature Expected Result: The document should pass the validation File: Valid_ID_sig.bdoc TestCaseID: Bdoc-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Bdoc TM with multiple valid signatures Expected Result: The document should pass the validation File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Bdoc-ValidationPass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Bdoc with warning on signature Expected Result: The document should pass the validation but warning should be returned File: bdoc_weak_warning_sha1.bdoc **Attention! This test is disabled: New file needed. This one has different mimetype value in manifest.xml and signature.xml TestCaseID: Bdoc-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice One LT signature with certificates from different countries Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-30.asice TestCaseID: Bdoc-ValidationPass-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Bdoc signed with Mobile-ID, ECC-SHA256 signature with prime256v1 key Expected Result: The document should pass the validation File: 24050_short_ecdsa_correct_file_mimetype.bdoc TestCaseID: Bdoc-ValidationPass-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice Baseline-LT file Expected Result: The document should pass the validation in DD4J File: EE_SER-AEX-B-LT-V-49.asice TestCaseID: Bdoc-ValidationPass-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice QES file Expected Result: The document should pass the validation File: ValidLiveSignature.asice TestCaseID: Bdoc-ValidationPass-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice Baseline-LTA file Expected Result: The document should pass the validation. DD4J do not return certificates for LTA timestamp. File: EE_SER-AEX-B-LTA-V-24.asice **Attention! This test is disabled: DD4J-615) TestCaseID: Bdoc-ValidationPass-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice file signed with Mobile-ID, ECC-SHA256 signature with prime256v1 key Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-2.asice TestCaseID: Bdoc-ValidationPass-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice file with ESTEID-SK 2015 certificate chain Expected Result: The document should pass the validation File: IB-4270_TS_ESTEID-SK 2015 SK OCSP RESPONDER 2011.asice TestCaseID: Bdoc-ValidationPass-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Asice file with KLASS3-SK 2010 (EECCRCA) certificate chain Expected Result: The document should pass the validation File: EE_SER-AEX-B-LT-V-28.asice TestCaseID: Bdoc-ValidationPass-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Bdoc with Baseline-LT_TM and QES signature level and ESTEID-SK 2011 certificate chain with valid signature Expected Result: The document should pass the validation File: BDOC2.1.bdoc TestCaseID: Bdoc-ValidationPass-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Bdoc TS with multiple valid signatures Expected Result: The document should pass the validation File: Test_id_aa.asice TestCaseID: Bdoc-ValidationPass-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Bdoc-TM with special characters in data file Expected Result: The document should pass the validation File: \u0160u\u017elikud s\u00f5id \u00fche \u00f5una \u00e4ra.bdoc TestCaseID: Bdoc-ValidationPass-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: *.sce file with TimeMark Expected Result: The document should pass the validation File: BDOC2.1_content_as_sce.sce TestCaseID: Bdoc-ValidationPass-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc-TS with special characters in data file Expected Result: The document should pass the validation with correct signature scope File: Nonconventionalcharacters.asice TestCaseID: Bdoc-ValidationPass-19 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: ECC signature vith BDOC TM Expected Result: The document should pass the validation File: testECCDemo.bdoc TestCaseID: Bdoc-ValidationPass-20 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: ECC signature vith BDOC TS Expected Result: The document should pass the validation File: Mac_AS0099904_EsimeneAmetlikSKTestElliptilistega_TS.asice TestCaseID: Bdoc-ValidationPass-21 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Asice with wrong slash character ('\\') in data file mime-type value Expected Result: The document should pass File: EE_SER-AEX-B-LT-V-33.bdoc TestCaseID: Bdoc-ValidationPass-22 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with invalid mimetype in manifest Expected Result: The document should pass File: 23147_weak-warning-sha1-invalid-mimetype-in-manifest.bdoc TestCaseID: Bdoc-ValidationPass-23 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with TEST of SK OCSP RESPONDER 2020 Expected Result: The document should pass File: test_of_OCSP_responder_2020.bdoc","title":"BdocValidationPassIT.java"},{"location":"siva3/appendix/test_cases/#ddocgetdatafilesitjava","text":"Open file TestCaseID: Ddoc-Get-Data-Files-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/use_cases/#ddoc-data-file-extraction-process Title: Valid DDOC with data file used Expected Result: The data file should be returned File: 18912.ddoc TestCaseID: Ddoc-Get-Data-Files-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/use_cases/#ddoc-data-file-extraction-process Title: Invalid DDOC with data file used Expected Result: The data file should be returned File: OCSP nonce vale.ddoc TestCaseID: Ddoc-Get-Data-Files-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/use_cases/#ddoc-data-file-extraction-process Title:DDOC with xml v1.1 is used Expected Result: The data file is returned File: DIGIDOC-XML1.1.ddoc TestCaseID: Ddoc-Get-Data-Files-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/use_cases/#ddoc-data-file-extraction-process Title:DDOC with xml v1.1 is used Expected Result: The data file is returned File: DIGIDOC-XML1.1.ddoc TestCaseID: Ddoc-Get-Data-Files-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/use_cases/#ddoc-data-file-extraction-process Title: DDOC with xml v1.2 is used Expected Result: The data file is returned File: DIGIDOC-XML1.2.ddoc TestCaseID: Ddoc-Get-Data-Files-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/use_cases/#ddoc-data-file-extraction-process Title: DDOC with xml v1.3 is used Expected Result: The data file is returned File: valid_XML1_3.ddoc TestCaseID: Ddoc-Get-Data-Files-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/use_cases/#ddoc-data-file-extraction-process Title: Hashcoded DDOC is used Expected Result: Null is returned File: DIGIDOC-XML1.3_hashcode.ddoc **Attention! This test is disabled TestCaseID: Ddoc-Get-Data-Files-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/use_cases/#ddoc-data-file-extraction-process Title: DDOC with 12 different files of different types is used Expected Result: Data file returned for each file correctly File: igasugust1.3.ddoc TestCaseID: Ddoc-Get-Data-Files-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/use_cases/#ddoc-data-file-extraction-process Title: BDOC with data file used Expected Result: The error message should be returned File: BDOC-TS.bdoc TestCaseID: Ddoc-Get-Data-Files-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/use_cases/#ddoc-data-file-extraction-process Title: PDF file used Expected Result: The error message should be returned File: hellopades-lt-b.pdf","title":"DdocGetDataFilesIT.java"},{"location":"siva3/appendix/test_cases/#ddocvalidationfailitjava","text":"Open file TestCaseID: Ddoc-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc with single invalid signature Expected Result: The document should fail the validation File: AndmefailiAtribuudidMuudetud.ddoc TestCaseID: Ddoc-ValidationFail-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc with multiple invalid signatures Expected Result: The document should fail the validation File: multipleInvalidSignatures.ddoc TestCaseID: Ddoc-ValidationFail-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc with multiple signatures both valid and invalid Expected Result: The document should fail the validation File: multipleValidAndInvalidSignatures.ddoc TestCaseID: Ddoc-ValidationFail-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc signature value has been changed (SignatureValue does not correspond to the SignedInfo block) Expected Result: The document should fail the validation File: test-inv-sig-inf.ddoc TestCaseID: Ddoc-ValidationFail-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc Data file(s) don't match the hash values in Reference elements Expected Result: The document should fail the validation File: AndmefailiAtribuudidMuudetud.ddoc TestCaseID: Ddoc-ValidationFail-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc Baseline-BES file, no OCSP response Expected Result: The document should fail the validation File: ilma_kehtivuskinnituseta.ddoc TestCaseID: Ddoc-ValidationFail-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc no non-repudiation key usage value in the certificate Expected Result: The document should fail the validation File: test-non-repu1.ddoc TestCaseID: Ddoc-ValidationFail-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc Signer's certificate is not trusted Expected Result: The document should fail the validation File: Belgia_kandeavaldus_LIV.ddoc TestCaseID: Ddoc-ValidationFail-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc OCSP certificate is not trusted Expected Result: The document should fail the validation File: Tundmatu_OCSP_responder.ddoc TestCaseID: Ddoc-ValidationFail-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc has unsigned data files in the container Expected Result: The document should fail the validation File: lisatud_andmefail.ddoc TestCaseID: Ddoc-ValidationFail-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc signed data file has been removed from the container Expected Result: The document should fail the validation File: faileemald1.ddoc TestCaseID: Ddoc-ValidationFail-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc wrong nonce Expected Result: The document should fail the validation File: OCSP nonce vale.ddoc TestCaseID: Ddoc-ValidationFail-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/ Title: Ddoc with XML Entity expansion attack Expected Result: The document should fail the validation with error File: xml_expansion.ddoc TestCaseID: Ddoc-ValidationFail-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/ Title: Ddoc with XML server side request forgery attack Expected Result: The document should fail the validation with error File: xml_entity.ddoc TestCaseID: Ddoc-ValidationFail-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc no files in container Expected Result: The document should fail the validation File: KS-02_tyhi.ddoc TestCaseID: Ddoc-ValidationFail-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc with invalid datafile id Expected Result: The document should fail the validation File: 22915-bad-df-id.ddoc TestCaseID: Ddoc-ValidationFail-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Validation of DDOC with revoked certificate status Expected Result: The document should fail the validation File: cert-revoked.ddoc TestCaseID: Ddoc-ValidationFail-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Validation of DDOC with unknown OCSP status Expected Result: The document should fail the validation File: cert-unknown.ddoc","title":"DdocValidationFailIT.java"},{"location":"siva3/appendix/test_cases/#ddocvalidationpassitjava","text":"Open file TestCaseID: Ddoc-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Ddoc v1.0 with valid signatures Expected Result: The document should pass the validation File: SK-XML1.0.ddoc TestCaseID: Ddoc-ValidationPass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Ddoc v1.1 with valid signature Expected Result: The document should pass the validation File: DIGIDOC-XML1.1.ddoc TestCaseID: Ddoc-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Ddoc v1.2 with valid signature Expected Result: The document should pass the validation File: DIGIDOC-XML1.2.ddoc TestCaseID: Ddoc-ValidationPass-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Ddoc v1.3 with valid signature with ESTEID-SK 2011 certificate chain Expected Result: The document should pass the validation File: DIGIDOC-XML1.3.ddoc TestCaseID: Ddoc-ValidationPass-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Ddoc v1.3 with valid signature, signed data file name has special characters and ESTEID-SK certificate chain Expected Result: The document should pass the validation File: susisevad1_3.ddoc TestCaseID: Ddoc-ValidationPass-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Ddoc v1.3 KLASS3-SK certificate chain with valid signature Expected Result: The document should pass the validation File: KLASS3-SK _ KLASS3-SK OCSP RESPONDER uus.ddoc TestCaseID: Ddoc-ValidationPass-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Ddoc v1.3 KLASS3-SK 2010 certificate chain with valid signature Expected Result: The document should pass the validation File: KLASS3-SK 2010 _ KLASS3-SK 2010 OCSP RESPONDER.ddoc TestCaseID: Ddoc-ValidationPass-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Ddoc v1.1 ESTEID-SK 2007 certificate chain with valid signature Expected Result: The document should pass the validation File: vaikesed1.1.ddoc TestCaseID: Ddoc-ValidationPass-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Ddoc v1.1 ESTEID-SK 2007 certificate chain with valid signature Expected Result: The document should pass the validation File: IB-4270_ESTEID-SK 2015 SK OCSP RESPONDER 2011.ddoc TestCaseID: Ddoc-ValidationPass-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Ddoc v1.1 ESTEID-SK certificate chain with valid signature Expected Result: The document should pass the validation File: EID-SK _ EID-SK OCSP RESPONDER.ddoc TestCaseID: Ddoc-ValidationPass-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Ddoc v1.1 ESTEID-SK 2007 and OCSP 2010 certificate chain with valid signature Expected Result: The document should pass the validation File: EID-SK 2007 _ EID-SK 2007 OCSP RESPONDER 2010.ddoc TestCaseID: Ddoc-ValidationPass-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Ddoc v1.3 ESTEID-SK 2007 and OCSP 2007 certificate chain with valid signature Expected Result: The document should pass the validation File: EID-SK 2007 _ EID-SK 2007 OCSP RESPONDER.ddoc TestCaseID: Ddoc-ValidationPass-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Ddoc v1.3 ESTEID-SK 2011 and OCSP 2011 certificate chain with valid signature Expected Result: The document should pass the validation File: EID-SK 2011 _ SK OCSP RESPONDER 2011.ddoc TestCaseID: Ddoc-ValidationPass-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc with warning should pass Expected Result: Document passes the validation File: 18912.ddoc TestCaseID: Ddoc-ValidationPass-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Ddoc with no signatures Expected Result: Document passes the validation File: DdocContainerNoSignature.ddoc TestCaseID: DdocHashcode-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Validation of DDOC Hashcode v1.0 Expected Result: Document passes the validation File: SK-XML1.0_hashcode.ddoc TestCaseID: DdocHashcode-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Validation of DDOC Hashcode v1.1 Expected Result: Document passes the validation File: DIGIDOC-XML1.1_hashcode.ddoc TestCaseID: DdocHashcode-ValidationPass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Validation of DDOC Hashcode v1.2 Expected Result: Document passes the validation File: DIGIDOC-XML1.2_hashcode.ddoc TestCaseID: DdocHashcode-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Validation of DDOC Hashcode v1.3 Expected Result: Document passes the validation File: DIGIDOC-XML1.3_hashcode.ddoc","title":"DdocValidationPassIT.java"},{"location":"siva3/appendix/test_cases/#documentformatitjava","text":"Open file TestCaseID: DocumentFormat-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Validation of pdf document acceptance Expected Result: Pdf is accepted and correct signature validation is given File: hellopades-pades-lt-sha256-sign.pdf TestCaseID: DocumentFormat-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Validation of bdoc document acceptance Expected Result: Bdoc is accepted and correct signature validation is given File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: DocumentFormat-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Validation of asice document acceptance Expected Result: asice is accepted and correct signature validation is given File: Vbdoc21-TS.asice TestCaseID: DocumentFormat-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Validation of asics document acceptance Expected Result: asics is accepted and correct signature validation is given File: ValidDDOCinsideAsics.asics TestCaseID: DocumentFormat-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Validation of xades acceptance Expected Result: xades is accepted and correct signature validation is given File: signatures0.xml TestCaseID: DocumentFormat-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Validation of cades acceptance Expected Result: cades is accepted and correct signature validation is given File: **Attention! This test is disabled: Test file needed","title":"DocumentFormatIT.java"},{"location":"siva3/appendix/test_cases/#documentvalidationitjava","text":"Open file TestCaseID: Document-Validation-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title:Bdoc with two signatures and one unsigned document. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2s_1f_unsigned.bdoc TestCaseID: Document-Validation-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with two signatures and one document signed by only one signature. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2s_1partly_signed.bdoc TestCaseID: Document-Validation-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with two signatures and two documents signed by only one signature. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2s_2partly_signed.bdoc TestCaseID: Document-Validation-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with two signatures, one unsigned and two partly signed documents. Expected Result: The document should fail the validation and warnings should be displayed. File:4f_2s_all_combinations.bdoc TestCaseID: Document-Validation-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with three unsigned documents. Expected Result: The document should pass the validation and warnings should be displayed. File:6f_2s_3unsigned.bdoc TestCaseID: Document-Validation-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with deleted document, named in manifest. Expected Result: The document should fail the validation and warning should be displayed. File:2f_2signed_1f_deleted.bdoc TestCaseID: Document-Validation-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with deleted document, also removed from manifest. Expected Result: The document should fail the validation without warning. File:2f_2signed_1f_totally_removed.bdoc TestCaseID: Document-Validation-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with one unsigned document, named in manifest. Expected Result: The document should fail the validation and warnings should be displayed. File:3f_2signed_1unsigned_all_in_manifest.bdoc TestCaseID: Document-Validation-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with one unsigned document, NOT named in manifest. Expected Result: The document should fail the validation and warning should be displayed. File:3f_2signed_1unsigned_2in_manifest.bdoc TestCaseID: Document-Validation-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Bdoc with signed documents. Expected Result: The document should pass the validation without warning. File:2f_all_signed.bdoc **Attention! This test is disabled","title":"DocumentValidationIT.java"},{"location":"siva3/appendix/test_cases/#euplugvalidationpassitjava","text":"Open file TestCaseID: EuPlug-ValidationPass-1 TestType: Automated Requirement: Title: Validation of Lithuania adoc-v2.0 signature Expected Result: The document should pass the validation File: Signature-A-LT_MIT-1.asice TestCaseID: EuPlug-ValidationPass-2 TestType: Automated Requirement: Title: Validation multiple of Lithuania adoc-v2.0 signatures Expected Result: The document should pass the validation File: Signature-A-LT_MIT-2.asice TestCaseID: EuPlug-ValidationPass-3 TestType: Automated Requirement: Title: Validation of Lithuania adoc-v2.0 signature with warning Expected Result: The document should pass the validation File: Signature-A-LT_MIT-5.asice\" TestCaseID: EuPlug-ValidationPass-4 TestType: Automated Requirement: Title: Validation of Latvian edoc-v2.0 signature Expected Result: The document should pass the validation File: Signature-A-LV_EUSO-1.asice TestCaseID: EuPlug-ValidationPass-5 TestType: Automated Requirement: Title: Expected Result: The document should pass the validation File: Signature-A-LV_EUSO-2.asice TestCaseID: EuPlug-ValidationPass-6 TestType: Automated Requirement: Title: Validation of Polish Asic-s with CAdES signature Expected Result: The document should pass the validation File: Signature-A-PL_KIR-1.asics TestCaseID: EuPlug-ValidationPass-7 TestType: Automated Requirement: Title: Validation of Polish Asic-s with XAdES signature Expected Result: The document should pass the validation File: Signature-A-PL_KIR-2.asics TestCaseID: EuPlug-ValidationPass-8 TestType: Automated Requirement: Title: Validation of Slovakia Asic-e with XAdES signature Expected Result: The document should pass the validation File: Signature-A-SK_DIT-3.asice TestCaseID: EuPlug-ValidationPass-10 TestType: Automated Requirement: Title: Expected Result: The document should pass the validation File: Signature-C-AT_SIT-1.p7m TestCaseID: EuPlug-ValidationPass-11 TestType: Automated Requirement: Title: Validation of German CAdES signature Expected Result: The document should pass the validation File: Signature-C-DE_SCI-1.p7m TestCaseID: EuPlug-ValidationPass-12 TestType: Automated Requirement: Title: Expected Result: The document should pass the validation File: Signature-C-ES_MIN-1.p7m TestCaseID: EuPlug-ValidationPass-13 TestType: Automated Requirement: Title: Expected Result: The document should pass the validation File: Signature-C-ES_MIN-2.p7m TestCaseID: EuPlug-ValidationPass-14 TestType: Automated Requirement: Title: Validation of Italian Cades signatures Expected Result: The document should pass the validation File: Signature-C-IT_BIT-5.p7m TestCaseID: EuPlug-ValidationPass-15 TestType: Automated Requirement: Title: Validation of Poland CAdES B signature Expected Result: The document should pass the validation File: Signature-C-PL_ADS-4.p7m TestCaseID: EuPlug-ValidationPass-16 TestType: Automated Requirement: Title: Validation of Poland CAdES T signature Expected Result: The document should pass the validation File: Signature-C-PL_ADS-7.p7m TestCaseID: EuPlug-ValidationPass-17 TestType: Automated Requirement: Title: Validation of Belgium PAdES B signature Expected Result: The document should pass the validation File: Signature-P-BE_CONN-1.pdf TestCaseID: EuPlug-ValidationPass-18 TestType: Automated Requirement: Title: Validation of Belgian PAdES LTA signature Expected Result: The document should pass the validation File: Signature-P-BE_CONN-7.pdf TestCaseID: EuPlug-ValidationPass-19 TestType: Automated Requirement: Title: Validation of German PAdES signature Expected Result: The document should pass the validation File: Signature-P-DE_SCI-2.pdf TestCaseID: EuPlug-ValidationPass-20 TestType: Automated Requirement: Title: Validation of Italian PAdES signature Expected Result: The document should pass the validation File: Signature-P-IT_MID-1.pdf TestCaseID: EuPlug-ValidationPass-21 TestType: Automated Requirement: Title: Validation of Lithuanian PAdES signature Expected Result: The document should pass the validation File: Signature-P-LT_MIT-1.pdf TestCaseID: EuPlug-ValidationPass-22 TestType: Automated Requirement: Title: Validation of Lithuanian PAdES signature 2 Expected Result: The document should pass the validation File: Signature-P-LT_MIT-2.pdf TestCaseID: EuPlug-ValidationPass-23 TestType: Automated Requirement: Title: Validation of Latvian PAdES signature Expected Result: The document should pass the validation File: Signature-P-LV_EUSO-1.pdf TestCaseID: EuPlug-ValidationPass-24 TestType: Automated Requirement: Title: Expected Result: The document should pass the validation File: Signature-P-LV_EUSO-2.pdf TestCaseID: EuPlug-ValidationPass-25 TestType: Automated Requirement: Title: Validation of Polish PAdES signature Expected Result: The document should pass the validation File: Signature-P-PL_ADS-6.pdf TestCaseID: EuPlug-ValidationPass-26 TestType: Automated Requirement: Title: Validation of Polish PAdES QES signature Expected Result: The document should pass the validation File: Signature-P-PL_ADS-8.pdf TestCaseID: EuPlug-ValidationPass-27 TestType: Automated Requirement: Title: Expected Result: The document should pass the validation File: Signature-A-LT_MIT-1.asice TestCaseID: EuPlug-ValidationPass-28 TestType: Automated Requirement: Title: Expected Result: The document should pass the validation File: Signature-A-LT_MIT-1.asice TestCaseID: EuPlug-ValidationPass-29 TestType: Automated Requirement: Title: Validation of Belgian XAdES signature Expected Result: The document should pass the validation File: Signature-X-BE_CONN-1.xml TestCaseID: EuPlug-ValidationPass-30 TestType: Automated Requirement: Title: Expected Result: The document should pass the validation File: Signature-X-BE_CONN-21.xml","title":"EuPlugValidationPassIT.java"},{"location":"siva3/appendix/test_cases/#largefileitjava","text":"Open file TestCaseID: PDF-LargeFiles-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/overview/#main-features-of-siva-validation-service Title: 9MB PDF files (PAdES Baseline LT). Expected Result: Validation report is returned File: 9MB_PDF.pdf TestCaseID: Bdoc-LargeFiles-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/overview/#main-features-of-siva-validation-service Title: 9MB ASIC-E file Expected Result: Validation report is returned File: 9MB_BDOC-TS.bdoc TestCaseID: Bdoc-LargeFiles-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/overview/#main-features-of-siva-validation-service Title: 9MB BDOC-TM Expected Result: Validation report is returned File: 9MB_BDOC-TM.bdoc TestCaseID: Ddoc-LargeFiles-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/overview/#main-features-of-siva-validation-service Title: 9MB DDOC Expected Result: Validation report is returned File: 9MB_DDOC.ddoc TestCaseID: Bdoc-ZipBomb-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/overview/#main-features-of-siva-validation-service Title: Bdoc Zip container with Bomb file Expected Result: The document should fail the validation File: zip-bomb-package-zip-1gb.bdoc TestCaseID: Asice-ZipBomb-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/overview/#main-features-of-siva-validation-service Title: Asice Zip container with Bomb file Expected Result: The document should fail the validation File: zip-bomb-package-zip-1gb.bdoc TestCaseID: Asice-ZipBomb-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/overview/#main-features-of-siva-validation-service Title: Asice Zip container with Matryoshka Bomb file Expected Result: Expected Result: Validation report is returned File: zip-bomb-packages.asice TestCaseID: Bdoc-ZipBomb-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/overview/#main-features-of-siva-validation-service Title: Bdoc Zip container with Matryoshka Bomb file Expected Result: Expected Result: Validation report is returned File: zip-bomb-packages.asice","title":"LargeFileIT.java"},{"location":"siva3/appendix/test_cases/#monitoringitjava","text":"Open file TestCaseID: WebApp-Monitoring-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#service-health-monitoring Title: Health monitor response structure Expected Result: response matches the expected structure of JSON File: not relevant","title":"MonitoringIT.java"},{"location":"siva3/appendix/test_cases/#pdfbaselineprofileitjava","text":"Open file TestCaseID: PDF-BaselineProfile-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: The PDF has PAdES-B profile signature polv3 Expected Result: Document validation should fail as the profile is not supported with any policy File: hellopades-pades-b-sha256-auth.pdf TestCaseID: PDF-BaselineProfile-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: The PDF has PAdES-T profile signature polv3 Expected Result: Document validation should fail with any policy File: pades-baseline-t-live-aj.pdf TestCaseID: PDF-BaselineProfile-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: The PDF has PAdES-LT profile signature polv3 Expected Result: Document validation should pass with any policy File: hellopades-pades-lt-sha256-sign.pdf TestCaseID: PDF-BaselineProfile-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: The PDF has PAdES-LT profile signature polv4 Expected Result: Document validation should pass with any policy File: hellopades-pades-lt-sha256-sign.pdf TestCaseID: PDF-BaselineProfile-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: The PDF has PAdES-LTA profile signature polv3 Expected Result: Document validation should pass with any policy File: pades-baseline-lta-live-aj.pdf TestCaseID: PDF-BaselineProfile-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: The PDF has PAdES-LTA profile signature polv4 Expected Result: Document validation should pass with any policy File: pades-baseline-lta-live-aj.pdf TestCaseID: PDF-BaselineProfile-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: The PDF has PAdES-LT and B profile signature Expected Result: Document validation should fail File: hellopades-lt-b.pdf TestCaseID: PDF-BaselineProfile-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: PDF document message digest attribute value does not match calculate value Expected Result: Document validation should fail File: hellopades-lt1-lt2-wrongDigestValue.pdf TestCaseID: PDF-BaselineProfile-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: PDF file with a serial signature Expected Result: Document signed with multiple signers with serial signatures should pass File: hellopades-lt1-lt2-Serial.pdf","title":"PdfBaselineProfileIT.java"},{"location":"siva3/appendix/test_cases/#pdfsignaturecryptographicalgorithmitjava","text":"Open file TestCaseID: PDF-SigCryptoAlg-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: SHA512 algorithms (PAdES Baseline LT) Expected Result: Document signed with SHA512 algorithm should pass File: hellopades-lt-sha512.pdf TestCaseID: PDF-SigCryptoAlg-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: SHA1 algorithms (PAdES Baseline LT) Expected Result: Document signed with SHA1 algorithm should pass File: hellopades-lt-sha1.pdf TestCaseID: PDF-SigCryptoAlg-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: ECDSA224 algorithms (PAdES Baseline LT) Expected Result: Document signed with ECDSA224 algorithm should fail File: hellopades-lt-sha256-ec224.pdf TestCaseID: PDF-SigCryptoAlg-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: ECDSA256 algorithms (PAdES Baseline LT) Expected Result: Document signed with ECDSA256 algorithm should pass File: hellopades-lt-sha256-ec256.pdf TestCaseID: PDF-SigCryptoAlg-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: RSA1024 algorithms (PAdES Baseline LT) Expected Result: Document signed with RSA1024 algorithm should pass File: hellopades-lt-sha256-rsa1024.pdf TestCaseID: PDF-SigCryptoAlg-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: RSA1023 algorithms (PAdES Baseline LT) Expected Result: Document signed with RSA1023 algorithm should fail File: hellopades-lt-sha256-rsa1023.pdf TestCaseID: PDF-SigCryptoAlg-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: RSA2047 algorithms (PAdES Baseline LT) Expected Result: Document signed with RSA2047 algorithm should pass File: hellopades-lt-sha256-rsa2047.pdf TestCaseID: PDF-SigCryptoAlg-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: RSA2048 algorithms (PAdES Baseline LT) Expected Result: Document signed with RSA2048 algorithm should pass File: PdfValidSingleSignature","title":"PdfSignatureCryptographicAlgorithmIT.java"},{"location":"siva3/appendix/test_cases/#pdfvalidationfailitjava","text":"Open file TestCaseID: PDF-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: The PDF-file has been signed with expired certificate (PAdES Baseline T) Expected Result: Document signed with certificate that is expired should fail. File: hellopades-lt-rsa1024-sha1-expired.pdf TestCaseID: PDF-ValidationFail-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: The PDF-file has been signed with revoked certificate (PAdES Baseline LT) Expected Result: Document signed with certificate that is revoked should fail. File: pades_lt_revoked.pdf TestCaseID: PDF-ValidationFail-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: The PDF-file has been signed with certificate which has no non repudiation key usage attribute (PAdES Baseline LT) Expected Result: The PDF-file validation should fail with error. File: hellopades-pades-lt-sha256-auth.pdf TestCaseID: PDF-ValidationFail-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: hellopadess been signed with an expired certificate, where signing time is within the original validity Expected Result: Document signed with expired certificate should fail File: hellopades-lt-sha256-rsa2048-expired.pdf **Attention! This test is disabled: Needs new test file TestCaseID: PDF-ValidationFail-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: hellopadess been signed with an expired certificate, where signing time is within the original validity Expected Result: Document signed with expired certificate should fail File: hellopades-lt-sha256-rsa1024-expired2.pdf **Attention! This test is disabled: Test file needed TestCaseID: PDF-ValidationFail-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: OCSP is taken more than 24h after TS Expected Result: Document signed with expired certificate should fail File: hellopades-lt-sha256-rsa1024-expired2.pdf TestCaseID: PDF-ValidationFail-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: CRL is out of thisUpdate and nextUpdate range Expected Result: Validation should fail File: pades-lt-CRL-taken-days-later.pdf","title":"PdfValidationFailIT.java"},{"location":"siva3/appendix/test_cases/#pdfvalidationpassitjava","text":"Open file TestCaseID: PDF-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: The PDF-file has been signed with certificate that is expired after signing (PAdES Baseline LT) Expected Result: Document signed with certificate that expired after signing should pass. File: hellopades-lt-sha256-rsa1024-not-expired.pdf TestCaseID: PDF-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: The PDF-file has been signed with certificate that will expire in 7 days after signing (PAdES Baseline LT) Expected Result: Document signed with certificate that expired after signing should pass. File: hellopades-lt-sha256-rsa2048-7d.pdf TestCaseID: PDF-ValidationPass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Pdf with single valid signature Expected Result: Document should pass. File: PdfValidSingleSignature.pdf TestCaseID: PDF-ValidationPass-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: The PDF-file has OCSP more than 15 minutes after TS but earlier than 24h Expected Result: Warning should be returned but validation should pass File: hellopades-lt-sha256-ocsp-15min1s.pdf TestCaseID: PDF-ValidationPass-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: The PDF-file has OCSP almost 24h before TS Expected Result: Warning should be returned but validation should pass File: hellopades-lt-sha256-rsa2048-ocsp-before-ts.pdf **Attention! This test is disabled","title":"PdfValidationPassIT.java"},{"location":"siva3/appendix/test_cases/#reportsignatureitjava","text":"Open file TestCaseID: Detailed-Report-Signature-1 TestType: Auto Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Simple report signature should not be in response Expected Result: Simple report response should not contain signature File: hellopades-pades-lt-sha256-sign.pdf TestCaseID: Detailed-Report-Signature-2 TestType: Auto Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Detailed report signature should be in response Expected Result: Detailed report response should contain signature File: hellopades-pades-lt-sha256-sign.pdf TestCaseID: Detailed-Report-Signature-3 TestType: Auto Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature Expected Result: Signed report is successfully validated File: hellopades-lt-sha256-rsa2048.pdf TestCaseID: Detailed-Report-Signature-4 TestType: Auto Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: In simple report reportSignatureEnabled parameter value true Expected Result: File hash in hex in report File: hellopades-lt-sha256-rsa2048.pdf TestCaseID: Detailed-Report-Signature-5 TestType: Auto Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: In simple report reportSignatureEnabled parameter value false Expected Result: File hash in hex not in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: test should be run manually after configuring the report signature feature","title":"ReportSignatureIT.java"},{"location":"siva3/appendix/test_cases/#signaturepolicyitjava","text":"Open file TestCaseID: POLv4-Signature-Policy-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The PDF-file is Ades level Expected Result: Signatures are invalid according to policy File: soft-cert-signature.pdf **Attention! This test is disabled: New test file is needed TestCaseID: POLv4-Signature-Policy-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is Ades level Expected Result: Signatures are invalid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv4-Signature-Policy-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is Ades signature Expected Result: Signatures are invalid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv4-Signature-Policy-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The asice is Ades signature Expected Result: Signatures are invalid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv4-Signature-Policy-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is Ades seal Expected Result: Signatures are invalid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv4-Signature-Policy-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The asice is ades seal Expected Result: Signatures are valid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv4-Signature-Policy-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level signature, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, warning is returned about signature level File: testAdesQC.asice TestCaseID: POLv4-Signature-Policy-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level signature, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, warning is returned about signature level File: testAdesQC.asice TestCaseID: POLv4-Signature-Policy-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level seal, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, no warning about the signature level File: IB-4828_tempel_not_qscd_TS.asice TestCaseID: POLv4-Signature-Policy-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level seal, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, no warning about the signature level File: IB-4828_tempel_not_qscd_TM.bdoc TestCaseID: POLv4-Signature-Policy-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level, but do not have SSCD/QSCD compliance and type identifier Expected Result: Signatures are valid according to policy, no warning about the signature level File: **Attention! This test is disabled: file needed TestCaseID: POLv4-Signature-Policy-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level, but do not have SSCD/QSCD compliance and type identifier Expected Result: Signatures are valid according to policy, no warning about the signature level File: **Attention! This test is disabled: file needed TestCaseID: POLv4-Signature-Policy-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level signature Expected Result: Signatures are valid according to policy File: Valid_ID_sig.bdoc TestCaseID: POLv4-Signature-Policy-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level signature Expected Result: Signatures are valid according to policy File: ValidLiveSignature.asice TestCaseID: POLv4-Signature-Policy-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level seal Expected Result: Signatures are valid according to policy File: IB-4828_tempel_qscd_TM.bdoc TestCaseID: POLv4-Signature-Policy-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The asice is QES level seal Expected Result: Signatures are valid according to policy File: IB-4828_tempel_qscd_TS.asice TestCaseID: POLv4-Signature-Policy-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level Expected Result: Signatures are valid according to policy File: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc TestCaseID: POLv4-Signature-Policy-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The asice is QES level Expected Result: Signatures are valid according to policy File: EE_SER-AEX-B-LT-V-28.asice TestCaseID: POLv3-Signature-Policy-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-3-polv3 Title: The PDF-file is Ades level Expected Result: Signatures are not valid according to policy File: soft-cert-signature.pdf **Attention! This test is disabled: New testfile is needed TestCaseID: POLv3-Signature-Policy-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-3-polv3 Title: The bdoc is Ades level Expected Result: Signatures are valid according to policy File: allkiri_ades.asice **Attention! This test is disabled: New testfile is needed TestCaseID: POLv3-Signature-Policy-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-3-polv3 Title: The bdoc is ADES level signature Expected Result: Signatures are valid according to policy File: allkiri_ades.asice **Attention! This test is disabled: test file needed TestCaseID: POLv3-Signature-Policy-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-3-polv3 Title: The asice is Ades level signature Expected Result: Signatures are valid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv3-Signature-Policy-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-3-polv3 Title: The bdoc is Ades seal Expected Result: Signatures are valid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv3-Signature-Policy-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-3-polv3 Title: The asice is Ades level seal Expected Result: Signatures are valid according to policy File: **Attention! This test is disabled: test file needed TestCaseID: POLv3-Signature-Policy-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level signature, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, warning is returned about signature level File: testAdesQC.asice TestCaseID: POLv3-Signature-Policy-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level signature, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, warning is returned about signature level File: testAdesQC.asice TestCaseID: POLv3-Signature-Policy-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level seal, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, no warning about the signature level File: IB-4828_tempel_not_qscd_TS.asice TestCaseID: POLv3-Signature-Policy-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level seal, but do not have SSCD/QSCD compliance Expected Result: Signatures are valid according to policy, no warning about the signature level File: IB-4828_tempel_not_qscd_TM.bdoc TestCaseID: POLv3-Signature-Policy-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level, but do not have SSCD/QSCD compliance and type identifier Expected Result: Signatures are valid according to policy, no warning about the signature level File: **Attention! This test is disabled: file needed TestCaseID: POLv3-Signature-Policy-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The certificate is QC level, but do not have SSCD/QSCD compliance and type identifier Expected Result: Signatures are valid according to policy, no warning about the signature level File: **Attention! This test is disabled: file needed TestCaseID: POLv3-Signature-Policy-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level signature Expected Result: Signatures are valid according to policy File: Valid_ID_sig.bdoc TestCaseID: POLv3-Signature-Policy-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level signature Expected Result: Signatures are valid according to policy File: ValidLiveSignature.asice TestCaseID: POLv3-Signature-Policy-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level seal Expected Result: Signatures are valid according to policy File: IB-4828_tempel_qscd_TM.bdoc TestCaseID: POLv3-Signature-Policy-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The asice is QES level seal Expected Result: Signatures are valid according to policy File: IB-4828_tempel_qscd_TS.asice TestCaseID: POLv3-Signature-Policy-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The bdoc is QES level Expected Result: Signatures are valid according to policy File: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc TestCaseID: POLv3-Signature-Policy-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The asice is QES level Expected Result: Signatures are valid according to policy File: EE_SER-AEX-B-LT-V-28.asice TestCaseID: Revocation-Signature-Policy-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The PDF-file is missing an OCSP or CRL Expected Result: Signatures are invalid according to policy File: PadesProfileT.pdf TestCaseID: Revocation-Signature-Policy-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4 Title: The PDF-file with included CRL Expected Result: Signatures are valid according to policy File: PadesProfileLtWithCrl.pdf","title":"SignaturePolicyIT.java"},{"location":"siva3/appendix/test_cases/#xadeshashcodevalidationfailitjava","text":"Open file TestCaseID: Xades-Hashcode-Validation-Fail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Data file hash algorithm do not match signature hash algorithm Expected Result: Validation fails File: Valid_XAdES_LT_TM.xml TestCaseID: Xades-Hashcode-Validation-Fail-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Hashes do not match Expected Result: Validation fails File: Valid_XAdES_LT_TM.xml TestCaseID: Xades-Hashcode-Validation-Fail-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Wrong data file name is used Expected Result: Validation report is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Xades-Hashcode-Validation-Fail-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Invalid signature in XAdES Expected Result: Validation report is returned File: Valid_XAdES_LT_TM.xml TestCaseID: Xades-Hashcode-Validation-Fail-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Invalid signature in XAdES Expected Result: Error is given File: Valid_XAdES_LT_TM.xml","title":"XadesHashcodeValidationFailIT.java"},{"location":"siva3/appendix/test_cases/#xadeshashcodevalidationpassitjava","text":"Open file TestCaseID: Xades-Hashcode-Validation-Pass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: XAdES extracted from ASICE Expected Result: The document should pass the validation File: Valid_XAdES_LT_TS.xml TestCaseID: Xades-Hashcode-Validation-Pass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: XAdES extracted from BDOC Expected Result: The document should pass the validation File: Valid_XAdES_LT_TM.xml TestCaseID: Xades-Hashcode-Validation-Pass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: XAdES extracted from BDOC Expected Result: The document should pass the validation File: Valid_XADES_LT_TS_multiple_datafiles.xml TestCaseID: Xades-Hashcode-Validation-Pass-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Datafile has + in name Expected Result: The document should pass the validation File: test+document.xml TestCaseID: Xades-Hashcode-Validation-Pass-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Datafile has space in name Expected Result: The document should pass the validation File: spacesInDatafile.xml TestCaseID: Xades-Hashcode-Validation-Algorithms-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Datafile digest in SHA1 Expected Result: The document should pass the validation File: sha224_TS.xml TestCaseID: Xades-Hashcode-Validation-Algorithms-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Datafile digest in SHA224 Expected Result: The document should pass the validation File: sha224_TS.xml TestCaseID: Xades-Hashcode-Validation-Algorithms-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Datafile digest in SHA256 Expected Result: The document should pass the validation File: Valid_XAdES_LT_TS.xml TestCaseID: Xades-Hashcode-Validation-Algorithms-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Datafile digest in SHA384 Expected Result: The document should pass the validation File: sha384_TS.xml TestCaseID: Xades-Hashcode-Validation-Algorithms-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Datafile digest in SHA512 Expected Result: The document should pass the validation File: sha512_TS.xml","title":"XadesHashcodeValidationPassIT.java"},{"location":"siva3/appendix/test_cases/#detailedreportvalidationmanualitjava","text":"Open file TestCaseID: Detailed-Report-Validation-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: ValidationConclusion element Expected Result: Detailed report includes validationConclusion element File: ValidLiveSignature.asice TestCaseID: Detailed-Report-Validation-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: TL analysis element Expected Result: Detailed report includes tlanalysis element and its values File: pades-baseline-lta-live-aj.pdf **Attention! This test is disabled: New test LOTL is needed with correct data TestCaseID: Detailed-Report-Validation-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Signatures element Expected Result: Detailed report includes signatures element and its sub-elements and its values File: hellopades-lt-sha256-ec256.pdf TestCaseID: Detailed-Report-Validation-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: basicBuildingBlocks element Expected Result: Detailed report includes basicBuildingBlocks element and its sub-elements and its values File: pades-baseline-lta-live-aj.pdf TestCaseID: Detailed-Report-Validation-5 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: BasicBuildingBlocks element Expected Result: Detailed report includes basicBuildingBlocks element and its sub-elements and its values File: pades-baseline-lta-live-aj.pdf TestCaseID: Detailed-Report-Validation-6 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: BasicBuildingBlocks element Expected Result: Detailed report includes basicBuildingBlocks element and its sub-elements and its values File: pades-baseline-lta-live-aj.pdf TestCaseID: Detailed-Report-Validation-7 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Wrong signature value Expected Result: Detailed report includes wrong signature value File: TS-02_23634_TS_wrong_SignatureValue.asice TestCaseID: Detailed-Report-Validation-8 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Wrong data file in manifest Expected Result: File: WrongDataFileInManifestAsics.asics TestCaseID: Detailed-Report-Validation-9 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report file hash if ReportSignatureEnabled value true Expected Result: fileHash calculated File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: SIVA-196 TestCaseID: Detailed-Report-Validation-10 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report file hash if ReportSignatureEnabled value false Expected Result: fileHash no calculated File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled: Needs possibility to configure report signing in tests","title":"DetailedReportValidationManualIT.java"},{"location":"siva3/appendix/test_cases/#diagnosticreportvalidationmanualitjava","text":"Open file TestCaseID: Diagnostic-Report-Validation-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: ValidationConclusion element Expected Result: Diagnostic report includes validationConclusion element File: ValidLiveSignature.asice TestCaseID: Diagnostic-Report-Validation-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Signatures element Expected Result: Diagnostic report includes tlanalysis element and its values File: pades-baseline-lta-live-aj.pdf TestCaseID: Diagnostic-Report-Validation-5 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Used Certificates Expected Result: Diagnostic report includes used certificates element and its values File: pades-baseline-lta-live-aj.pdf TestCaseID: Diagnostic-Report-Validation-6 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Wrong signature value Expected Result: Diagnostic report includes wrong signature value File: TS-02_23634_TS_wrong_SignatureValue.asice **Attention! This test is disabled","title":"DiagnosticReportValidationManualIT.java"},{"location":"siva3/appendix/test_cases/#reportsignaturemanualltjava","text":"Open file TestCaseID: Detailed-Report-Signatures-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_LTA signed with RSA key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled TestCaseID: Detailed-Report-Signatures-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_LT signed with RSA key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled TestCaseID: Detailed-Report-Signatures-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_T signed with RSA key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled TestCaseID: Detailed-Report-Signatures-5 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_B signed with RSA key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled TestCaseID: Detailed-Report-Signatures-6 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_LTA and signed with ECC key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled TestCaseID: Detailed-Report-Signatures-7 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_LT and signed with ECC key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled TestCaseID: Detailed-Report-Signatures-8 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_T and signed with ECC key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled TestCaseID: Detailed-Report-Signatures-9 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature when SignatureLevel XAdES_BASELINE_B and signed with ECC key. Expected Result: validationReportSignature exists in report File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled TestCaseID: Detailed-Report-Signatures-10 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature when configuration parameter OcspUrl empty Expected Result: No signature File: hellopades-lt-sha256-rsa2048.pdf TestCaseID: Detailed-Report-Signatures-11 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature when configuration parameter TspUrl empty Expected Result: No signature File: hellopades-lt-sha256-rsa2048.pdf TestCaseID: Detailed-Report-Signatures-12 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature when configuration parameter Pkcs11 wrong value Expected Result: Error message File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled TestCaseID: Detailed-Report-Signatures-13 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature when configuration parameter SignatureLevel empty Expected Result: No Signature File: hellopades-lt-sha256-rsa2048.pdf TestCaseID: Detailed-Report-Signatures-14 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Validate detailed report signature when using pks11 to sign Expected Result: Signature exists File: hellopades-lt-sha256-rsa2048.pdf **Attention! This test is disabled","title":"ReportSignatureManuallT.java"},{"location":"siva3/appendix/test_cases/#statisticstologsmanualitjava","text":"Note All tests in this class expect manual verification of responses in log! The tests are made to prepare test data and ease the test execution. TestCaseID: Bdoc-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Bdoc valid container is validated Expected Result: Correct data is shown in the log with correct structure File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Bdoc-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Bdoc invalid container is validated Expected Result: Correct data is shown in the log with correct structure File: SS-4_teadmataCA.4.asice TestCaseID: Bdoc-Statistics-Log-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Bdoc not supported file is inserted Expected Result: No message in statistics as the container is not validated File: xroad-simple.asice TestCaseID: Bdoc-Statistics-Log-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Bdoc with certificates from different countries. Expected Result: Correct data is shown in the log with correct structure File: Baltic MoU digital signing_EST_LT_LV.bdoc TestCaseID: Ddoc-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Ddoc valid container is validated Expected Result: Correct data is shown in the log with correct structure File: valid_XML1_3.ddoc TestCaseID: Ddoc-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Ddoc invalid container is validated Expected Result: Correct data is shown in the log with correct structure File: ilma_kehtivuskinnituseta.ddoc TestCaseID: Ddoc-Statistics-Log-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Ddoc not supported file is inserted Expected Result: No message in statistics as the container is not validated File: xroad-simple.asice TestCaseID: Ddoc-Statistics-Log-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Ddoc with certificates from different countries. Expected Result: Correct data is shown in the log with correct structure File: Belgia_kandeavaldus_LIV.ddoc TestCaseID: Pdf-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Pdf valid container is validated Expected Result: Correct data is shown in the log with correct structure File: pades_lt_two_valid_sig.pdf TestCaseID: Pdf-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Pdf invalid container is validated Expected Result: Correct data is shown in the log with correct structure File: hellopades-lt1-lt2-wrongDigestValue.pdf TestCaseID: Pdf-Statistics-Log-4 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Pdf with certificates from non Estonian countries. Expected Result: Correct data is shown in the log with correct structure File: Regulatione-signedbyco-legislators.pdf TestCaseID: Xroad-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Xroad valid container is validated Expected Result: Correct data is shown in the log with correct structure File: xroad-batchsignature.asice TestCaseID: Xroad-Statistics-Log-2 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Xroad invalid container is validated Expected Result: Correct data is shown in the log with correct structure File: invalid-digest.asice TestCaseID: Xroad-Statistics-Log-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: Xroad not supported file is inserted Expected Result: No message in statistics as the container is not validated File: BDOC-TS.bdoc TestCaseID: Asics-Statistics-Log-1 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: ASiCs valid container is validated Expected Result: Correct data is shown in the log with correct structure File: ValidBDOCinsideAsics.asics TestCaseID: Asics-Statistics-Log-3 TestType: Manual Requirement: http://open-eid.github.io/SiVa/siva3/deployment_guide/#statistics Title: asics invalid container is validated Expected Result: No message in statistics as the container is not validated File: TwoDataFilesAsics.asics","title":"StatisticsToLogsManualIT.java"},{"location":"siva3/appendix/test_cases/#getdatafilerequestitjava","text":"Open file TestCaseID: Get-Data-Files-Request-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Input empty values Expected Result: Errors are returned stating the missing values File: not relevant TestCaseID: Get-Data-Files-Request-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Totally empty request body is sent Expected Result: Errors are given File: not relevant TestCaseID: Get-Data-Files-Request-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Order of elements is changed in request Expected Result: Order of elements is ignored, no error messages in response File: valid_XML1_3.ddoc TestCaseID: Get-Data-Files-Request-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Additional elements are added Expected Result: Added elements ignored, no error messages and additional elements in response File: valid_XML1_3.ddoc TestCaseID: Get-Data-Files-Request-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Mandatory element 'documentType' is duplicated, duplicated element with bdoc value Expected Result: Error message is returned File: test_fail.ddoc TestCaseID: Get-Data-Files-Request-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Mandatory element 'document' is deleted Expected Result: Errors returned stating the missing element File: valid_XML1_3.ddoc TestCaseID: Get-Data-Files-Request-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Low case for document type is used Expected Result: Data file is returned, no error messages File: valid_XML1_3.ddoc TestCaseID: Get-Data-Files-Request-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Document Type is changed in request to BDOC, actual is DDOC Expected Result: Error is returned File: valid_XML1_3.ddoc TestCaseID: Get-Data-Files-Request-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Document Type is changed in request to PDF, actual is DDOC Expected Result: Error is returned File: valid_XML1_3.ddoc TestCaseID: Get-Data-Files-Request-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Document Type is changed in request to unsupported format (JPG), actual is DDOC Expected Result: Error is returned File: valid_XML1_3.ddoc TestCaseID: Get-Data-Files-Request-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Document Type is changed in request to XROAD format, actual is DDOC Expected Result: Error is returned File: valid_XML1_3.ddoc TestCaseID: Get-Data-Files-Request-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Document Type is changed in request to DDOC format, actual is BDOC Expected Result: Error is returned File: BDOC-TS.bdoc TestCaseID: Get-Data-Files-Request-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Document Type is changed in request to DDOC format, actual is PDF Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Get-Data-Files-Request-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: For Unsupported format Document Type is changed in request to DDOC format, actual is PNG Expected Result: Error is returned File: Picture.png","title":"GetDataFileRequestIT.java"},{"location":"siva3/appendix/test_cases/#hashcodevalidationrequestitjava","text":"Open file TestCaseID: Hascode-Validation-Request-Report-Type-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input correct values for simple report Expected Result: Simple report is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Report-Type-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input correct values for detailed report Expected Result: Simple report is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Report-Type-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Report type missing Expected Result: Default is used File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Report-Type-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Report type case sensitivity Expected Result: Report type is case insensitive File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Report-Type-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Report type is invalid Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Report-Type-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input correct values for detailed report Expected Result: Simple report is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Policy-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Signature policy POLv3 Expected Result: Correct policy is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Policy-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Signature policy POLv4 Expected Result: Correct policy is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Policy-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Signature policy missing Expected Result: Default is used File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Policy-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Signature policy is invalid Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Policy-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Incorrect signature policy format Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Policy-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Signature policy is empty Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Policy-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Signature policy too long Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Policy-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Double signature policy Expected Result: Last value is used File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Signature-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input missing signature files Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Signature-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input missing signature file Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Signature-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input incorrect signature Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Signature-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input file without signature Expected Result: Validation report is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Signature-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Not correct file type Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Datafiles-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Data files not in request Expected Result: Simple report is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Datafiles-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Empty data files list Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Datafiles-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Data file filename missing Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Datafiles-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Data file filename empty Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Datafiles-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Data file filename too long Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Datafiles-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Data file invalid hash algorithm Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Datafiles-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Data file hash algorithm case sensitivity Expected Result: Validation report is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Datafiles-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Data file hash missing Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Datafiles-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Data file hash empty Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Datafiles-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Data file hash wrong format Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Datafiles-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Hash too long Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Policy-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Double fields in datafile object Expected Result: Last value is used File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Datafiles-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Excess data files are ignored Expected Result: Validation report is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Hascode-Validation-Request-Signatures-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Several signatures validated Expected Result: Validation report is returned File: multiple files TestCaseID: Hascode-Validation-Request-Signatures-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Several signatures validated with datafile info Expected Result: Validation report is returned File: multiple files TestCaseID: Hascode-Validation-Request-Signatures-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Several signatures validated one signature not valid Expected Result: Validation report is returned File: multiple files","title":"HashcodeValidationRequestIT.java"},{"location":"siva3/appendix/test_cases/#validationreportvalueverificationitjava","text":"Open file TestCaseID: Bdoc-ValidationReportVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface#validation-request-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT_TM, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: TwoValidTmSignaturesWithRolesAndProductionPlace.bdoc TestCaseID: Bdoc-ValidationReportVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: validTsSignatureWithRolesAndProductionPlace.asice TestCaseID: Bdoc-ValidationReportVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc TestCaseID: Bdoc-ValidationReportVerification-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT-TM, AdESqc Expected Result: All required elements are present and meet the expected values. File: testAdesQCInvalid.asice TestCaseID: Bdoc-ValidationReportVerification-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: JSON structure has all elements (Bdoc valid multiple signatures) Expected Result: All required elements are present according to SimpleReportSchema.json File: Baltic MoU digital signing_EST_LT_LV.bdoc TestCaseID: Bdoc-ValidationReportVerification-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: JSON structure has all elements (Bdoc indeterminate status) Expected Result: All required elements are present according to BdocDocSimpleReportSchema.json File: SS-4_teadmataCA.4.asice **Attention! This test is disabled: needs investigation why the signature is determined as XAdES_BASELINE_T not as XAdES_BASELINE_LT_TM TestCaseID: Bdoc-ValidationReportVerification-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Bdoc report with no signatures Expected Result: Report is returned with required elements File:BdocContainerNoSignature.bdoc TestCaseID: Bdoc-ValidationReportVerification-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Bdoc with LT_TM, LT & LTA signature - timeAssertionMessageImprints in mixed container are reported correctly Expected Result: timeAssertionMessageImprint values are present and meet the expected values. File: 3_signatures_TM_LT_LTA.bdoc TestCaseID: Bdoc-ValidationReportVerification-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Asice with LT_TM, LT & LTA signature - timeAssertionMessageImprints in mixed container are reported correctly Expected Result: timeAssertionMessageImprint values are present and meet the expected values. File: 3_signatures_TM_LT_LTA.asice TestCaseID: Pdf-ValidationReportVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: JSON structure has all elements (Pdf valid single signature) Expected Result: All required elements are present according to SimpleReportSchema.json File: reason_and_location_Test.pdf TestCaseID: Pdf-ValidationReportVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: JSON structure has all elements (Pdf valid Multiple signatures) Expected Result: All required elements are present according to SimpleReportSchema.json File: pades_lt_two_valid_sig.pdf TestCaseID: Pdf-ValidationReportVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: JSON structure has all elements (Pdf invalid signature) Expected Result: All required elements are present according to SimpleReportSchema.json File: hellopades-lt-b.pdf TestCaseID: Pdf-ValidationReportVerification-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: JSON structure has all elements (Pdf indeterminate status) Expected Result: All required elements are present according to SimpleReportSchema.json File: hellopades-lt-rsa1024-sha1-expired.pdf TestCaseID: Pdf-ValidationReportVerification-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Pdf report with no signatures Expected Result: Report is returned with required elements File: PdfNoSignature.pdf TestCaseID: Ddoc-ValidationReportVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: JSON structure has all elements (ddoc valid single signature) Expected Result: All required elements are present according to SimpleReportSchema.json File: DIGIDOC-XML1.3.ddoc TestCaseID: Ddoc-ValidationReportVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: JSON structure has all elements (ddoc invalid signature) Expected Result: All required elements are present according to SimpleReportSchema.json File: multipleInvalidSignatures.ddoc TestCaseID: Ddoc-ValidationReportVerification-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Check for optional warning element Expected Result: Warning element is present File: 18912.ddoc TestCaseID: Ddoc-ValidationReportVerification-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Ddoc report with no signatures Expected Result: Report is returned with required elements File: DdocContainerNoSignature.ddoc TestCaseID: Ddoc-ValidationReportVerification-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.0, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: SK-XML1.0.ddoc TestCaseID: Ddoc-ValidationReportVerification-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.1, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.1.ddoc TestCaseID: Ddoc-ValidationReportVerification-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.2, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.2.ddoc TestCaseID: Ddoc-ValidationReportVerification-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.3, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.3.ddoc","title":"ValidationReportValueVerificationIT.java"},{"location":"siva3/appendix/test_cases/#validationrequestitjava","text":"Open file TestCaseID: ValidationRequest-Parameters-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Happy path valid mandatory inputs Expected Result: Validation report is returned File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Totally empty request body is sent Expected Result: Error is given File: not relevant TestCaseID: ValidationRequest-Parameters-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input empty values Expected Result: Errors are returned stating the missing values File: not relevant TestCaseID: ValidationRequest-Parameters-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with more parameters than expected is sent Expected Result: Error is given or extra parameters are ignored? File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request has invalid keys (capital letters) Expected Result: Error is returned stating wrong values File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Document parameter is missing Expected Result: Errors are returned stating missing Document values File: not relevant TestCaseID: ValidationRequest-Parameters-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Filename parameter is missing Expected Result: Errors are returned stating the missing values File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Happy path valid file encoding format Expected Result: Validation report is returned File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Happy path valid file encoding format Expected Result: Validation report is returned File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with not base64 string as document Expected Result: Error is returned stating encoding problem File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Parameters-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Filename field should be case insensitive Expected Result: Validation report is returned File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Filename field should ignore spaces Expected Result: Validation report is returned File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Filename is in allowed length Expected Result: Report is returned with the same filename File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Filename is over allowed length Expected Result: Error is returned File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: DocumentType parameter is missing Expected Result: Document type is selected automatically and validation report is returned File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-19 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: DocumentType parameter is XROAD Expected Result: Xroad validatior is used for validation and report is returned File: xroad-simple.asice TestCaseID: ValidationRequest-Parameters-20 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: SignaturePolicy parameter is missing, default is used Expected Result: Validation report is returned with POLv4 File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-21 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: SignaturePolicy is set as POLv3 Expected Result: Validation report is returned with POLv3 File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-22 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: SignaturePolicy is set as POLv4 Expected Result: Validation report is returned with POLv4 File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-23 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: SignaturePolicy has not allowed value Expected Result: error is returned File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-24 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: ReportType parameter is missing Expected Result: Simple report is returned as default File: singleValidSignatureTS.asice TestCaseID: ValidationRequest-Parameters-25 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: ReportType parameter Simple Expected Result: Simple report is returned File: singleValidSignatureTS.asice TestCaseID: ValidationRequest-Parameters-26 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: ReportType parameter Detailed Expected Result: Detailed report is returned File: singleValidSignatureTS.asice TestCaseID: ValidationRequest-Parameters-27 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: ReportType parameter is invalid Expected Result: Error is returned File: singleValidSignatureTS.asice TestCaseID: ValidationRequest-Parameters-28 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Filename is under allowed length Expected Result: Error is returned File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-29 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: SignaturePolicy is under allowed length Expected Result: Error is returned File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-30 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: SignaturePolicy is too long Expected Result: Error is returned File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Parameters-31 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: ReportType parameter Diagnostic Expected Result: Diagnostic report is returned File: singleValidSignatureTS.asice TestCaseID: ValidationRequest-Validator-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Mismatch in stated and actual document (bdoc and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: ValidationRequest-Validator-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input random base64 string as bdoc Expected Result: Error is returned stating problem in document File: not relevant TestCaseID: ValidationRequest-Validator-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Acceptance of ASICE as BDOC document type Expected Result: Asice files are handled the same as bdoc File: singleValidSignatureTS.asice TestCaseID: ValidationRequest-Validator-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input random base64 string as pdf Expected Result: Error is returned stating problem in document File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: ValidationRequest-Validator-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Mismatch in stated and actual document (ddoc and bdoc) Expected Result: Error is returned File: singleValidSignatureTM.bdoc TestCaseID: ValidationRequest-Validator-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input random base64 string as ddoc Expected Result: Error is returned stating problem in document File: not relevant **Attention! This test is disabled: 6\")","title":"ValidationRequestIT.java"},{"location":"siva3/appendix/test_cases/#soapgetdatafilereportitjava","text":"Open file TestCaseID: SoapGetDataFile-Report-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-response-interface Title: Verification of values in Validation Report, checks for File name, Base64, Mimetype and Size Expected Result: All required elements are present and meet the expected values File: valid_XML1_3.ddoc TestCaseID: SoapGetDataFile-Report-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-response-interface Title: Verification of values in Validation Report xml v1.1, checks for File name, Base64, Mimetype and Size Expected Result: All required elements are present and meet the expected values File: DIGIDOC-XML1.1.ddoc TestCaseID: SoapGetDataFile-Report-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-response-interface Title: Verification of values in Validation Report xml v1.2, checks for File name, Base64, Mimetype and Size Expected Result: All required elements are present and meet the expected values File: DIGIDOC-XML1.2.ddoc TestCaseID: SoapGetDataFile-Report-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-response-interface Title: Verification of values in Validation Report for container with a number of files, checks for File name, Base64, Mimetype and Size for each file Expected Result: All required elements are present and meet the expected values File: igasugust1.3.ddoc","title":"SoapGetDataFileReportIT.java"},{"location":"siva3/appendix/test_cases/#soapgetdatafilerequestitjava","text":"Open file TestCaseID: Soap-Validation-Request-For-Data-Files-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Input empty values Expected Result: Error is returned File: not relevant TestCaseID: Soap-Validation-Request-For-Data-Files-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Input empty body Expected Result: Error is returned File: not relevant TestCaseID: Soap-Validation-Request-For-Data-Files-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Element DocumentType is removed from the body Expected Result: Error is returned File: valid_XML1_3.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Element Document is removed from the body Expected Result: Error is returned File: valid_XML1_3.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Element DocumentType is duplicated in the body with different value Expected Result: Error is returned File: valid_XML1_3.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Additional element Filename is added to the body Expected Result: Error is returned File: valid_XML1_3.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Value for element Document was changed Expected Result: Error is returned File: valid_XML1_3.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: DocumentType was changed to BDOC when actual is DDOC Expected Result: Error is returned File: valid_XML1_3.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: DocumentType was changed to PDF when actual is DDOC Expected Result: Error is returned File: valid_XML1_3.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: DocumentType was changed to XROAD when actual is DDOC Expected Result: Error is returned File: valid_XML1_3.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: DocumentType was changed to unsupported format JPG when actual is DDOC Expected Result: Error is returned File: valid_XML1_3.ddoc TestCaseID: Soap-Validation-Request-For-Data-Files-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: DocumentType was changed to DDOC when actual is PDF Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Soap-Validation-Request-For-Data-Files-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: DocumentType was changed to DDOC when actual is BDOC Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc","title":"SoapGetDataFileRequestIT.java"},{"location":"siva3/appendix/test_cases/#soaphashcodevalidationrequestitjava","text":"Open file TestCaseID: Soap-Hashcode-Validation-Report-Type-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Valid request Expected Result: Simple report is returned with valid signatures File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-Validation-Report-Type-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Valid request with detailed report Expected Result: Simple report is returned with valid signatures File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-Validation-Report-Type-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Report type missing Expected Result: Default is used File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-Validation-Report-Type-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Report type case sensitivity Expected Result: Report type is case insensitive File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-Validation-Report-Type-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Report type is invalid Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-Validation-Report-Type-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Valid request with report Diagnostic Expected Result: Simple report is returned with valid signatures File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-Validation-Policy-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Signature policy POLv3 Expected Result: Correct policy is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-Validation-Policy-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Signature policy POLv4 Expected Result: Correct policy is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-Validation-Policy-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Default policy Expected Result: POLv4 is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-Validation-Policy-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Invalid policy asked Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-Validation-Policy-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Invalid policy format Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-Validation-Policy-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Too long policy Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Signature-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Signature file missing Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Signature-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Signature file empty Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Signature-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Signature file not Base64 Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Signature-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Signature file without signature Expected Result: Report without signature is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Signature-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Signature file not XML Expected Result: Report without signature is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Datafile-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request without datafiles Expected Result: Validation report is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Datafile-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with empty data files Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Datafile-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request without datafile filename Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Datafile-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with empty filename Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Datafile-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request without datafile filename Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Datafile-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with too long datafile name Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Datafile-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with invalid hash algorithm Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Datafile-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Hash algo small case Expected Result: Report is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Datafile-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Hash algo mismatch Expected Result: Report with invalid signature File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Datafile-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Datafile hash missing Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Datafile-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Data file hash empty Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-Datafile-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Datafile hash not Base64 Expected Result: Error is returned File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Multiple data files Expected Result: Report is returned with signature statuses File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Wrong hash Expected Result: Report is returned with invalid signature File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Wrong data file name Expected Result: Report is returned with signature statuses File: Valid_XAdES_LT_TS.xml TestCaseID: Soap-Hashcode-ValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Empty request body Expected Result: Report is returned with signature statuses File: Valid_XAdES_LT_TS.xml TestCaseID: Xades-Hashcode-Validation-Special-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Datafile has + in name Expected Result: The document should pass the validation File: test+document.xml TestCaseID: Xades-Hashcode-Validation-Special-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Datafile has space in name Expected Result: The document should pass the validation File: spacesInDatafile.xml TestCaseID: Xades-Hashcode-Validation-Special-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Datafile has + in name with full API request Expected Result: The document should pass the validation File: test+document.xml TestCaseID: Xades-Hashcode-Validation-Special-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 Title: Datafile has space in name with full API request Expected Result: The document should pass the validation File: spacesInDatafile.xml","title":"SoapHashcodeValidationRequestIT.java"},{"location":"siva3/appendix/test_cases/#soapvalidationreportvalueitjava","text":"Open file TestCaseID: Bdoc-SoapValidationReportValue-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT_TM, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: TwoValidTmSignaturesWithRolesAndProductionPlace.bdoc TestCaseID: Bdoc-SoapValidationReportValue-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: validTsSignatureWithRolesAndProductionPlace.asice TestCaseID: Bdoc-SoapValidationReportValue-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT, AdES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: 23154_test1-old-sig-sigat-NOK-prodat-OK-1.bdoc **Attention! This test is disabled: New testfile needed TestCaseID: Bdoc-SoapValidationReportValue-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LT_TM, AdESqc, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: testAdesQC.bdoc **Attention! This test is disabled: Testfile needed TestCaseID: Bdoc-SoapValidationReportValue-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report XAdES_BASELINE_LTA, QES, FullSignatureScope Expected Result: All required elements are present and meet the expected values. File: EE_SER-AEX-B-LTA-V-24.bdoc **Attention! This test is disabled: 5\") TestCaseID: Ddoc-SoapValidationReportValue-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.0, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: SK-XML1.0.ddoc TestCaseID: Ddoc-SoapValidationReportValue-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.1, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.1.ddoc TestCaseID: Ddoc-SoapValidationReportValue-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.2, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.2.ddoc TestCaseID: Ddoc-SoapValidationReportValue-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xml v1.3, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: Igasugust1.3.ddoc TestCaseID: Pdf-SoapValidationReportValue-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, PAdES_baseline_LT, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: pades_lt_two_valid_sig.pdf TestCaseID: Pdf-SoapValidationReportValue-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, PAdES_baseline_B, checks for missing info Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: hellopades-pades-b-sha256-auth.pdf TestCaseID: Asice-SoapRoleAndProductionPlaceValue-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of filled SignerRole and SignatureProductionPlace values. Expected Result: All required elements are present and meet the expected values. File: role_productionPlace.asice TestCaseID: Asice-SoapRoleAndProductionPlaceValue-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of filled SignerRole and SignatureProductionPlace special character values. Expected Result: All required elements are present and meet the expected values. File: role_productionPlace.asice TestCaseID: Asice-SoapRoleAndProductionPlaceValue-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of filled SignerRole and SignatureProductionPlace values in XML and JSON syntax. Expected Result: All required elements are present and meet the expected values. Structure is not malformed. File: role_productionPlace.asice TestCaseID: Asice-SoapRoleAndProductionPlaceValue-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of empty SignerRole and SignatureProductionPlace elements. Expected Result: Structure does not contain SignerRole and SignatureProductionPlace elements. File: role_productionPlace.asice TestCaseID: Asice-SoapRoleAndProductionPlaceValue-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of filled SignerRole and empty SignatureProductionPlace elements. Expected Result: SignerRole element is present and meets the expected value. Structure does not contain SignatureProductionPlace elements. File: role_productionPlace.asice TestCaseID: Asice-SoapRoleAndProductionPlaceValue-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of empty SignerRole and partially filled SignatureProductionPlace element. Expected Result: SignatureProductionPlace.City element is present and meets the expected value. Structure does not contain SignerRole element. File: role_productionPlace.asice TestCaseID: Asice-SoapRoleAndProductionPlaceValue-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of short data type maximum range value for SignerRole and SignatureProductionPlace. Expected Result: All required elements are present and corresponding values meet the short data type maximum range of 32767 characters. File: role_productionPlace.asice TestCaseID: Asice-SoapRoleAndProductionPlaceValue-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of int data type value longer than short data type maximum value for SignatureProductionPlace. Expected Result: Element is present and meets expected value of 32768 characters. File: role_productionPlace.asice TestCaseID: Asice-SoapRoleAndProductionPlaceValue-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of 3 concurrent claimed roles. Expected Result: All claimed roles are present and meet the expected values. File: role_productionPlace.asice","title":"SoapValidationReportValueIT.java"},{"location":"siva3/appendix/test_cases/#soapvalidationrequestitjava","text":"Open file TestCaseID: Soap-ValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Empty request body Expected Result: Error is returned stating mismatch with required elements File: not relevant TestCaseID: Soap-ValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with not base64 string as document Expected Result: Error is returned stating encoding problem File: not relevant TestCaseID: Soap-ValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Verification of wrong document type as input Expected Result: Correct error code is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Verification of case sensitivity in document type Expected Result: Error is returned as WSDL defines the allowed values File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request has XML as document type (special case, XML is similar to ddoc and was a accepted document type in earlier versions) Expected Result: Error is given File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request has long filename field Expected Result: Report is returned with the same filename File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Totally empty request body is sent Expected Result: Error is given File: not relevant TestCaseID: Soap-ValidationRequest-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with more parameters than expected is sent Expected Result: Error is given or extra parameters are ignored? File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-9 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with more parameters than expected is sent Expected Result: Error is given or extra parameters are ignored? File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-10 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with special chars is sent Expected Result: Validation report is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-11 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with no optional SignaturePolicy field Expected Result: Validation report is returned using default policy File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-12 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with XML expansion Expected Result: Error is returned and Entity is not handled File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-13 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request XML external entity attack Expected Result: Error message is returned and Doctype field is not handled File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-14 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with empty document Expected Result: Error is returned File: not relevant TestCaseID: Soap-ValidationRequest-15 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with empty filename Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-16 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Request with not allowed signature policy characters Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-17 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: SignaturePolicy is over allowed length Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: SignaturePolicy is under allowed length Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-19 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Filename is under allowed length Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-ValidationRequest-20 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Filename is over allowed length Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-BdocValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input random base64 string as document with bdoc document type Expected Result: Error is returned stating problem in document File: not relevant TestCaseID: Soap-BdocValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Verification of filename value (filename do not match the actual file) Expected Result: The same filename is returned as sent in the request File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-BdocValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Soap-BdocValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Bdoc file, not existing value in signaturePolicy Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-BdocValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Bdoc file, policy fiels should be case insensitive Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-DdocValidationRequest-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and xroad) Expected Result: Error is returned File: xroad-simple.asice TestCaseID: Soap-DdocValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input random base64 string as document with ddoc document type Expected Result: Error is returned stating problem in document File: TestCaseID: Soap-DdocValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-DdocValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-DdocValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Soap-DdocValidationRequest-5 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Ddoc file, not existing value in signaturePolicy Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: Soap-DdocValidationRequest-6 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (ddoc and xroad) Expected Result: Error is returned File: xroad-attachment.asice TestCaseID: Soap-PdfValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input random base64 string as document with pdf document type Expected Result: Error is returned stating problem in document File: not relevant TestCaseID: Soap-PdfValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: PDF file, not existing value in signaturePolicy Expected Result: Error is returned File: PdfValidSingleSignature.pdf TestCaseID: Soap-ValidationRequest-PDF-ReportType-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Simple report is requested Expected Result: Simple report is returned File:PdfValidSingleSignature.pdf TestCaseID: Soap-ValidationRequest-PDF-ReportType-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Detailed report is requested Expected Result: Detailed report is returned File:PdfValidSingleSignature.pdf TestCaseID: Soap-ValidationRequest-PDF-ReportType-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Diagnostic report is requested Expected Result: Diagnostic report is returned File:PdfValidSingleSignature.pdf TestCaseID: Soap-ValidationRequest-BDOC-ReportType-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Simple report is requested Expected Result: Simple report is returned File: testECCDemo.bdoc TestCaseID: Soap-ValidationRequest-BDOC-ReportType-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Detailed report is requested Expected Result: Simple report is returned File: testECCDemo.bdoc TestCaseID: Soap-ValidationRequest-BDOC-ReportType-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Diagnostic report is requested Expected Result: Simple report is returned File: testECCDemo.bdoc TestCaseID: Soap-ValidationRequest-DDOC-ReportType-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Simple report is requested Expected Result: Simple report is returned File: igasugust1.3.ddoc TestCaseID: Soap-ValidationRequest-DDOC-ReportType-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Detailed report is requested Expected Result: Simple report is returned File: igasugust1.3.ddoc TestCaseID: Soap-ValidationRequest-DDOC-ReportType-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Diagnostic report is requested Expected Result: Simple report is returned File: igasugust1.3.ddoc TestCaseID: Soap-ValidationRequest-ASICE-ReportType-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Simple report is requested Expected Result: Simple report is returned File: Mac_AS0099904_EsimeneAmetlikSKTestElliptilistega_TS.asice TestCaseID: Soap-ValidationRequest-ASICE-ReportType-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Detailed report is requested Expected Result: Detailed report is returned File: Mac_AS0099904_EsimeneAmetlikSKTestElliptilistega_TS.asice TestCaseID: Soap-ValidationRequest-ASICE-ReportType-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Diagnostic report is requested Expected Result: Diagnostic report is returned File: Mac_AS0099904_EsimeneAmetlikSKTestElliptilistega_TS.asice TestCaseID: Soap-ValidationRequest-XROAD-ReportType-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Simple report is requested Expected Result: Simple report is returned File: xroad-simple.asice TestCaseID: Soap-ValidationRequest-XROAD-ReportType-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Detailed report is requested Expected Result: Simple report is returned File: xroad-simple.asice TestCaseID: Soap-ValidationRequest-XROAD-ReportType-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Diagnostic report is requested Expected Result: Simple report is returned File: xroad-simple.asice","title":"SoapValidationRequestIT.java"},{"location":"siva3/appendix/test_cases/#soapxroadrequestheaderitjava","text":"Open file TestCaseID: XroadSoap-RequestVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Soap headers are returned in response Expected Result: Same headers are in response as in request File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: XroadSoap-RequestVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Soap headers are returned in correct order Expected Result: Same headers are in response as in request File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: XroadSoap-RequestVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Soap headers are returned in error response Expected Result: Same headers are in response as in request File: not relevant TestCaseID: XroadSoap-GetDataFiles-RequestVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Soap headers are returned in response for Get Data Files Expected Result: Same headers are in response as in request File: susisevad1_3.ddoc TestCaseID: XroadSoap-GetDataFiles-RequestVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Soap headers are returned in correct order for Get Data Files Expected Result: Same headers are in response as in request File: valid_XML1_3.ddoc TestCaseID: XroadSoap-GetDataFiles-RequestVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#data-files-request-interface Title: Soap headers are returned in error response for Get Data Files Expected Result: Same headers are in response as in request File: not relevant","title":"SoapXRoadRequestHeaderIT.java"},{"location":"siva3/appendix/test_cases/#xroadvalidationfailitjava","text":"Open file TestCaseID: Xroad-ValidationFail-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Simple xroad document with container fault Expected Result: Document should fail validation File: invalid-digest.asice","title":"XRoadValidationFailIT.java"},{"location":"siva3/appendix/test_cases/#xroadvalidationpassitjava","text":"Open file TestCaseID: Xroad-ValidationPass-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Simple xroad document Expected Result: Document should pass File: xroad-simple.asice TestCaseID: Xroad-ValidationPass-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Batchsignature xroad document Expected Result: Document should pass File: xroad-batchsignature.asice TestCaseID: Xroad-ValidationPass-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#common_POLv3_POLv4 Title: Attachment xroad document Expected Result: Document should pass File: xroad-attachment.asice","title":"XRoadValidationPassIT.java"},{"location":"siva3/appendix/test_cases/#validationreportvalueverificationitjava_1","text":"Open file TestCaseID: Xroad-ValidationReportVerification-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-simple container Expected Result: Report is returned with required elements File: xroad-simple.asice TestCaseID: Xroad-ValidationReportVerification-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-batchsignature container Expected Result: Report is returned with required elements File: xroad-batchsignature.asice TestCaseID: Xroad-ValidationReportVerification-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-attachment container Expected Result: Report is returned with required elements File: xroad-attachment.asice TestCaseID: Xroad-ValidationReportVerification-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report with invalid xroad container Expected Result: Report is returned with required elements File: xroad-attachment.asice","title":"ValidationReportValueVerificationIT.java"},{"location":"siva3/appendix/test_cases/#validationrequestitjava_1","text":"Open file TestCaseID: ValidationRequest-Parameters-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Happy path valid all input test Expected Result: Validation report is returned File: xroad-simple.asice TestCaseID: ValidationRequest-Parameters-18 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: DocumentType parameter is XROAD Expected Result: Xroad validatior is used for validation and report is returned File: xroad-simple.asice TestCaseID: ValidationRequest-Validator-8 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Input random base64 string as document with xroad document type Expected Result: Error is returned stating problem in document File: not relevant TestCaseID: ValidationRequest-Validator-7 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Mismatch in stated and actual document (xroad and ddoc) Expected Result: Error is returned File: igasugust1.3.ddoc","title":"ValidationRequestIT.java"},{"location":"siva3/appendix/test_cases/#soapvalidationreportvalueitjava_1","text":"Open file TestCaseID: Xroad-SoapValidationReportValue-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-simple container Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: xroad-simple.asice TestCaseID: Xroad-SoapValidationReportValue-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-response-interface Title: Verification of values in Validation Report, xroad-simple invalid container Expected Result: All required elements are present and meet the expected values and other values are empty as expected. File: invalid-digest.asice","title":"SoapValidationReportValueIT.java"},{"location":"siva3/appendix/test_cases/#soapvalidationrequestitjava_1","text":"Open file TestCaseID: Soap-XroadValidationRequest-1 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: X-road file, not existing value in signaturePolicy Expected Result: Error is returned File: xroad-simple.asice TestCaseID: Soap-XroadValidationRequest-2 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (xroad and ddoc) Expected Result: Error is returned File: igasugust1.3.ddoc TestCaseID: Soap-XroadValidationRequest-3 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (pdf and bdoc) Expected Result: Error is returned File: Valid_IDCard_MobID_signatures.bdoc TestCaseID: Soap-XroadValidationRequest-4 TestType: Automated Requirement: http://open-eid.github.io/SiVa/siva3/interfaces/#validation-request-interface Title: Mismatch in documentType and actual document (bdoc and pdf) Expected Result: Error is returned File: PdfValidSingleSignature.pdf","title":"SoapValidationRequestIT.java"},{"location":"siva3/appendix/validation_policy/","text":"SiVa Signature Validation Policy Introduction This signature validation policy document specifies signature validation rules used for validating signatures in SiVa digital signature validation service (hereinafter: Service). Versioning Different policy versions may be used by the service in the following conditions: different validation policies may be in use simultaneously, enabling the Service's user to choose the most suitable policy for a specific business context; validation policies are subject to change, i.e. there may be an update to a policy which causes the previous version to become no longer used (obsolete); for later reference, the validation report returned by the Service must indicate the specific version of validation policy that was used during validation process. for later reference, previous versions of validation policy documents should remain available for the Service's users. The following validation policy versions are supported in SiVa 2.0 and 3.0 service: SiVA Signature Validation Policy - Version 3 (POLv3) SiVA Signature Validation Policy - Version 4 (POLv4) The following validation policy versions are marked as obsolete in SiVa 2.0 service: SiVA Signature Validation Policy - Version 1 (POLv1) SiVA Signature Validation Policy - Version 2 (POLv2) General principles of SiVa validation policies The validation policy documents describe validation rules for all digital signature formats that are supported in SiVa. All rules described for electronic signatures also apply for electronic seals and digital stamps if not explicitly stated otherwise. The set of signature validation constraints that are used by the Service are a combination of constraints defined in the Service itself and constraints that are implicitly defined in base components of the service, including: Validation rules defined by the standard or specification documents of the digital signature formats supported in SiVa (described in Signature format constraints section). Validation rules defined by base libraries used in SiVa that implement the supported digital signature formats, i.e. the validation constraints that are imposed by the source code implementation or configuration of the base libraries (described in Base libraries' constraints section). Note When no specific validation rule is set in the present document, the requirements and rules from the abovementioned implicit sources for validation requirements shall apply in their entirety. When specific requirements and rules are set in the present validation policy document, they shall prevail over the corresponding requirements set in the implicit resources. SiVA Signature Validation Policy - Version 3 (POLv3) Description Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature. URL http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv3 POLv3 validation constraints The signature may be a Qualified Electronic Signature (QES), Advanced electronic Signature (AdES) or AdES supported by a Qualified Certificate (AdES/QC) taking account of the following requirements: Qualified Certificate (QC) requirement The signer\u2019s certificate may be a qualified or non-qualified certificate, as meant by the eIDAS regulation. The signer's certificate is considered acceptable by the validation process even if it is not possible to determine the certificate's QC compliance. SSCD/QSCD (Secure/Qualified Signature Creation Device) requirement Signer certificate may or may not comply with SSCD/QSCD criteria. The signer's certificate is considered acceptable by the validation process even if it is not possible to determine the certificate's SSCD/QSCD compliance. Constraints defined in the Common validation constraints (POLv3, POLv4) section SiVA Signature Validation Policy - Version 4 (POLv4) Description Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result. URL http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4 POLv4 validation constraints The requirements for the signature level depend on signature type. Qualified Certificate (QC) requirement The signer\u2019s certificate must be a qualified certificate, as meant by the eIDAS regulation. If Trusted Lists are used during signature validation then also the signer certificate\u2019s qualification information in the Trusted List is taken into account. SSCD/QSCD (Secure/Qualified Signature Creation Device) requirement In case of Signatures, signer certificate should comply with SSCD/QSCD criteria, otherwise warning is returned. In case of Seals, there is no requirement for SSCD/QSCD criteria. If it is not possible to determine the signature type, it must comply with SSCD/QSCD criteria. If Trusted Lists are used during signature validation then the also signer certificate\u2019s SSCD/QSCD qualification information in the Trusted List is taken into account. The signer's certificate is not considered acceptable by the validation process if it is not possible to determine the certificate's QC and SSCD/QSCD compliance, with the following exception: In case of DIGIDOC-XML 1.0...1.3 and the respective hashcode formats, it is assumed that the signer's certificate complies with QC and SSCD/QSCD requirements, if the certificate is issued by SK and if the nonRepudiation bit has been set in the certificate's Key Usage field. See also Certificate Profile documents of certificates issued by SK, ETSI EN 319 412-2 and ETSI EN 319 412-3 . Constraints defined in the Common validation constraints (POLv3, POLv4) section Common validation constraints (POLv3, POLv4) General constraints The validation result returned by SiVa determines whether a signature is technically valid and depending of a container type also conforms to a set of validation constraints that are specific to Estonian legislation and local practices of digital signing. The policy may not be suitable for signatures created in other territories. The validation result returned by SiVa comprises validation results of all the signatures in a single signature container (in case of detached signatures) or all signatures in a signed document (in case of enveloped or enveloping signatures). I.e. in case of multiple detached/enveloped/enveloping signatures, overall validation result correspoinding to the collection of signatures is not determined. Signature format constraints SiVa implicitly implements constraints that are specified in the specification documents of the signature formats supported by the Service: BDOC 2.1 ASiC-E/XAdES signatures X-Road ASiC-E/XAdES signatures PAdES signatures XAdES signatures CAdES signatures DIGIDOC-XML 1.0, 1.1, 1.2, 1.3 signatures DIGIDOC-XML 1.0, 1.1, 1.2 and 1.3 signatures in hashcode format Base libraries' constraints SiVa implicitly implements constraints that are imposed by the base software libraries that are used by the service. For more information, see the documentation and source code of the base libraries: DigiDoc4J - is used to validate signatures in BDOC 2.1 and DDOC format asicverifier - is used for validating ASiC-E/XAdES signatures created in X-Road system. Open-eID DSS fork - is used to validate all other signature formats than mentioned above Baseline Profile constraints The signature must comply with Baseline Profile of the respective signature format: XAdES Baseline Profile PAdES Baseline Profile CAdES Baseline Profile In case of Baseline LT-level signature with time-mark, the notation BASELINE_LT_TM is used. The following table describes supported Baseline Profile levels, according to signature formats: Signature format BASELINE_B BASELINE_T BASELINE_LT BASELINE_LT_TM BASELINE_LTA BDOC NOK NOK OK OK OK X-Road signature (simple form) NOK NOK OK NOK NOK X-Road signature (batch signature) OK NOK NOK NOK NOK PAdES NOK NOK OK NOK OK XAdES NOK NOK OK NOK OK CAdES NOK NOK OK NOK OK DIGIDOC-XML 1.0...1.3 NOK NOK NOK OK NOK DIGIDOC-XML 1.0...1.3 hashcode NOK NOK NOK OK NOK Legend: OK - the respective Baseline Profile level is supported and acceptable. NOK - the respective Baseline Profile level is not supported or is considered insufficient for the signature format. X.509 validation constraints The signer certificate\u2019s Key Usage field must have nonRepudiation bit set (also referred to as contentCommitment). Cryptographic algorithm constraints Hash algorithm constraints: In case of BDOC format: when validating a signature where SHA-1 function has been used then a validation warning about weak digest method is returned. Asymmetric cryptographic algorithm contraints: RSA and ECC cryptographic algorithms are supported In case of PAdES/XAdES(also BDOC)/CAdES formats, the RSA key lenght must be at least 1024 bits and ECC key length at least 192 bits. Trust anchor constraints The signature must contain the certificate of the trust anchor and all certificates necessary for the signature validator to build a certification path up to the trust anchor. This applies to the signer\u2019s certificate and the certificates of trust service providers that have issued the time-stamp token and revocation data that are incorporated in the signature. Trust Anchors are: In case of XAdES/CAdES/PAdES formats: EU Member State Trusted Lists . In case of DIGIDOC-XML 1.0...1.3 and respective hashcode formats: Estonian CA certificates issued by SK , defined in local configuration file. In case of X-Road ASiC-E signatures, SK issued KLASS3-SK 2010, and KLASS3-SK 2010 OCSP RESPONDER and SK TIMESTAMPING AUTHORITY certificates, defined in local configuration file. Revocation data constraints The signature must contain evidence record to confirm that certificate was valid at the time of signing. The evidence record of signer certificate must be in the form of an OCSP confirmation or as a Certificate Revocation List. No additional revocation data other than the data that was originally incorporated in the signature shall be requested during validation time. Checking revocation of certificates regarded as Trust Anchors: In case of DIGIDOC-XML 1.0...1.3 and X-Road formats: revocation of Trust Anchor certificates is not checked. In case of XAdES/CAdES/PAdES formats: revocation of Trust Anchor certificates is checked on the basis of the data in Trusted Lists. Signer certificate's revocation freshness constraints In case of BDOC and DIGIDOC-XML 1.0...1.3 BASELINE_LT_TM signatures with time-mark: revocation data is always considered fresh as the revocation data is issued at the trusted signing time. In case of XAdES/CAdES/PAdES BASELINE_LT and BASELINE_LTA signatures with signature time-stamp: revocation data freshness is checked according to the following rules: In case of OCSP responce if difference between signature time-stamp's production time (genTime field) and signer certificate OCSP confirmation\u2019s production time (producedAt field) is more than 24 hours then the signature is considered invalid. If the difference is more than 15 minutes and less then 24h then a validation warning is returned. In case of Certificate Revocation List the signature time-stamp's production time (genTime field) must be within validity range of the CRL (between thisUpdate and nextUpdate) Trusted signing time constraints Trusted signing time, denoting the earliest time when it can be trusted (because proven by some Proof-of-Existence present in the signature) that a signature has existed, is determined as follows: In case of signature with time-mark (BASELINE_LT_TM level) - the producedAt value of the earliest valid time-mark (OCSP confirmation of the signer's certificate) in the signature. In case of signature with time-stamp (BASELINE_T, BASELINE_LT or BASELINE_LTA level) - the genTime value of the earliest valid signature time-stamp token in the signature. In case of basic signature (BASELINE_B) - the trusted signing time value cannot be determined as there is no Proof-of-Existence of the signature. BDOC container spceific requirements The BDOC container must conform with BDOC 2.1 standard. 1. File extension * \".bdoc\" file extension is supported during signature validation. 2. Only one signature shall be stored in one signatures.xml file. 3. All signatures in the container must sign all of the data files. 4. All data files in the container must be signed, i.e. all files in the container, except of \"mimetype\" file and the files in META-INF/ folder, must be signed. 5. Two data files with the same name and same path shall not be allowed in the container as the signed data file must be uniquely identifiable in the container. To avoid conflicts in some operating system environments, file names shall be case insensitive. 6. Only relative file paths are supported, for example \"META-INF/signatures.xml\" and \"document.txt\" instead of \"/META-INF/signatures.xml\" and \"/document.txt\". 7. \"META-INF/manifest.xml\" file shall be conformant to OASIS Open Document Format version 1.0 or 1.2 . ASICE container spceific requirements The ASICE container must conform with ETSI EN 319 162-1 standard. 1. Warning is returned when signatures in the container do not sign all of the data files. 2. Manifest file must be present. ASICS container spceific requirements The service supports both signature and Time Stamp Token (TST) based ASIC-S containers. Evidence record based containers are not supported. The ASIC-S container must conform with ETSI EN 319 162-1 and ETSI EN 319 162-2 standards. Manifest file can not be present in case of signature based ASIC-S containers. Only one TimeStampToken per container is supported. No AsicArchiveManifest.xml support. No TSL based verification of certificates is done in case of TimeStampToken based containers.","title":"Appendix 1 - Validation Policy"},{"location":"siva3/appendix/validation_policy/#siva-signature-validation-policy","text":"","title":"SiVa Signature Validation Policy"},{"location":"siva3/appendix/validation_policy/#introduction","text":"This signature validation policy document specifies signature validation rules used for validating signatures in SiVa digital signature validation service (hereinafter: Service).","title":"Introduction"},{"location":"siva3/appendix/validation_policy/#versioning","text":"Different policy versions may be used by the service in the following conditions: different validation policies may be in use simultaneously, enabling the Service's user to choose the most suitable policy for a specific business context; validation policies are subject to change, i.e. there may be an update to a policy which causes the previous version to become no longer used (obsolete); for later reference, the validation report returned by the Service must indicate the specific version of validation policy that was used during validation process. for later reference, previous versions of validation policy documents should remain available for the Service's users. The following validation policy versions are supported in SiVa 2.0 and 3.0 service: SiVA Signature Validation Policy - Version 3 (POLv3) SiVA Signature Validation Policy - Version 4 (POLv4) The following validation policy versions are marked as obsolete in SiVa 2.0 service: SiVA Signature Validation Policy - Version 1 (POLv1) SiVA Signature Validation Policy - Version 2 (POLv2)","title":"Versioning"},{"location":"siva3/appendix/validation_policy/#general-principles-of-siva-validation-policies","text":"The validation policy documents describe validation rules for all digital signature formats that are supported in SiVa. All rules described for electronic signatures also apply for electronic seals and digital stamps if not explicitly stated otherwise. The set of signature validation constraints that are used by the Service are a combination of constraints defined in the Service itself and constraints that are implicitly defined in base components of the service, including: Validation rules defined by the standard or specification documents of the digital signature formats supported in SiVa (described in Signature format constraints section). Validation rules defined by base libraries used in SiVa that implement the supported digital signature formats, i.e. the validation constraints that are imposed by the source code implementation or configuration of the base libraries (described in Base libraries' constraints section). Note When no specific validation rule is set in the present document, the requirements and rules from the abovementioned implicit sources for validation requirements shall apply in their entirety. When specific requirements and rules are set in the present validation policy document, they shall prevail over the corresponding requirements set in the implicit resources.","title":"General principles of SiVa validation policies"},{"location":"siva3/appendix/validation_policy/#siva-signature-validation-policy-version-3-polv3","text":"","title":"SiVA Signature Validation Policy - Version 3 (POLv3)"},{"location":"siva3/appendix/validation_policy/#description","text":"Policy for validating Electronic Signatures and Electronic Seals regardless of the legal type of the signature or seal (according to Regulation (EU) No 910/2014), i.e. the fact that the electronic signature or electronic seal is either Advanced electronic Signature (AdES), AdES supported by a Qualified Certificate (AdES/QC) or a Qualified electronic Signature (QES) does not change the total validation result of the signature.","title":"Description"},{"location":"siva3/appendix/validation_policy/#url","text":"http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv3","title":"URL"},{"location":"siva3/appendix/validation_policy/#polv3-validation-constraints","text":"The signature may be a Qualified Electronic Signature (QES), Advanced electronic Signature (AdES) or AdES supported by a Qualified Certificate (AdES/QC) taking account of the following requirements: Qualified Certificate (QC) requirement The signer\u2019s certificate may be a qualified or non-qualified certificate, as meant by the eIDAS regulation. The signer's certificate is considered acceptable by the validation process even if it is not possible to determine the certificate's QC compliance. SSCD/QSCD (Secure/Qualified Signature Creation Device) requirement Signer certificate may or may not comply with SSCD/QSCD criteria. The signer's certificate is considered acceptable by the validation process even if it is not possible to determine the certificate's SSCD/QSCD compliance. Constraints defined in the Common validation constraints (POLv3, POLv4) section","title":"POLv3 validation constraints"},{"location":"siva3/appendix/validation_policy/#siva-signature-validation-policy-version-4-polv4","text":"","title":"SiVA Signature Validation Policy - Version 4 (POLv4)"},{"location":"siva3/appendix/validation_policy/#description_1","text":"Policy for validating Qualified Electronic Signatures and Qualified Electronic Seals (according to Regulation (EU) No 910/2014). I.e. signatures that have been recognized as Advanced electronic Signatures (AdES) and AdES supported by a Qualified Certificate (AdES/QC) do not produce a positive validation result.","title":"Description"},{"location":"siva3/appendix/validation_policy/#url_1","text":"http://open-eid.github.io/SiVa/siva3/appendix/validation_policy/#POLv4","title":"URL"},{"location":"siva3/appendix/validation_policy/#polv4-validation-constraints","text":"The requirements for the signature level depend on signature type. Qualified Certificate (QC) requirement The signer\u2019s certificate must be a qualified certificate, as meant by the eIDAS regulation. If Trusted Lists are used during signature validation then also the signer certificate\u2019s qualification information in the Trusted List is taken into account. SSCD/QSCD (Secure/Qualified Signature Creation Device) requirement In case of Signatures, signer certificate should comply with SSCD/QSCD criteria, otherwise warning is returned. In case of Seals, there is no requirement for SSCD/QSCD criteria. If it is not possible to determine the signature type, it must comply with SSCD/QSCD criteria. If Trusted Lists are used during signature validation then the also signer certificate\u2019s SSCD/QSCD qualification information in the Trusted List is taken into account. The signer's certificate is not considered acceptable by the validation process if it is not possible to determine the certificate's QC and SSCD/QSCD compliance, with the following exception: In case of DIGIDOC-XML 1.0...1.3 and the respective hashcode formats, it is assumed that the signer's certificate complies with QC and SSCD/QSCD requirements, if the certificate is issued by SK and if the nonRepudiation bit has been set in the certificate's Key Usage field. See also Certificate Profile documents of certificates issued by SK, ETSI EN 319 412-2 and ETSI EN 319 412-3 . Constraints defined in the Common validation constraints (POLv3, POLv4) section","title":"POLv4 validation constraints"},{"location":"siva3/appendix/validation_policy/#common-validation-constraints-polv3-polv4","text":"","title":"Common validation constraints (POLv3, POLv4)"},{"location":"siva3/appendix/validation_policy/#general-constraints","text":"The validation result returned by SiVa determines whether a signature is technically valid and depending of a container type also conforms to a set of validation constraints that are specific to Estonian legislation and local practices of digital signing. The policy may not be suitable for signatures created in other territories. The validation result returned by SiVa comprises validation results of all the signatures in a single signature container (in case of detached signatures) or all signatures in a signed document (in case of enveloped or enveloping signatures). I.e. in case of multiple detached/enveloped/enveloping signatures, overall validation result correspoinding to the collection of signatures is not determined.","title":"General constraints"},{"location":"siva3/appendix/validation_policy/#signature-format-constraints","text":"SiVa implicitly implements constraints that are specified in the specification documents of the signature formats supported by the Service: BDOC 2.1 ASiC-E/XAdES signatures X-Road ASiC-E/XAdES signatures PAdES signatures XAdES signatures CAdES signatures DIGIDOC-XML 1.0, 1.1, 1.2, 1.3 signatures DIGIDOC-XML 1.0, 1.1, 1.2 and 1.3 signatures in hashcode format","title":"Signature format constraints"},{"location":"siva3/appendix/validation_policy/#base-libraries-constraints","text":"SiVa implicitly implements constraints that are imposed by the base software libraries that are used by the service. For more information, see the documentation and source code of the base libraries: DigiDoc4J - is used to validate signatures in BDOC 2.1 and DDOC format asicverifier - is used for validating ASiC-E/XAdES signatures created in X-Road system. Open-eID DSS fork - is used to validate all other signature formats than mentioned above","title":"Base libraries' constraints"},{"location":"siva3/appendix/validation_policy/#baseline-profile-constraints","text":"The signature must comply with Baseline Profile of the respective signature format: XAdES Baseline Profile PAdES Baseline Profile CAdES Baseline Profile In case of Baseline LT-level signature with time-mark, the notation BASELINE_LT_TM is used. The following table describes supported Baseline Profile levels, according to signature formats: Signature format BASELINE_B BASELINE_T BASELINE_LT BASELINE_LT_TM BASELINE_LTA BDOC NOK NOK OK OK OK X-Road signature (simple form) NOK NOK OK NOK NOK X-Road signature (batch signature) OK NOK NOK NOK NOK PAdES NOK NOK OK NOK OK XAdES NOK NOK OK NOK OK CAdES NOK NOK OK NOK OK DIGIDOC-XML 1.0...1.3 NOK NOK NOK OK NOK DIGIDOC-XML 1.0...1.3 hashcode NOK NOK NOK OK NOK Legend: OK - the respective Baseline Profile level is supported and acceptable. NOK - the respective Baseline Profile level is not supported or is considered insufficient for the signature format.","title":"Baseline Profile constraints"},{"location":"siva3/appendix/validation_policy/#x509-validation-constraints","text":"The signer certificate\u2019s Key Usage field must have nonRepudiation bit set (also referred to as contentCommitment).","title":"X.509 validation constraints"},{"location":"siva3/appendix/validation_policy/#cryptographic-algorithm-constraints","text":"Hash algorithm constraints: In case of BDOC format: when validating a signature where SHA-1 function has been used then a validation warning about weak digest method is returned. Asymmetric cryptographic algorithm contraints: RSA and ECC cryptographic algorithms are supported In case of PAdES/XAdES(also BDOC)/CAdES formats, the RSA key lenght must be at least 1024 bits and ECC key length at least 192 bits.","title":"Cryptographic algorithm constraints"},{"location":"siva3/appendix/validation_policy/#trust-anchor-constraints","text":"The signature must contain the certificate of the trust anchor and all certificates necessary for the signature validator to build a certification path up to the trust anchor. This applies to the signer\u2019s certificate and the certificates of trust service providers that have issued the time-stamp token and revocation data that are incorporated in the signature. Trust Anchors are: In case of XAdES/CAdES/PAdES formats: EU Member State Trusted Lists . In case of DIGIDOC-XML 1.0...1.3 and respective hashcode formats: Estonian CA certificates issued by SK , defined in local configuration file. In case of X-Road ASiC-E signatures, SK issued KLASS3-SK 2010, and KLASS3-SK 2010 OCSP RESPONDER and SK TIMESTAMPING AUTHORITY certificates, defined in local configuration file.","title":"Trust anchor constraints"},{"location":"siva3/appendix/validation_policy/#revocation-data-constraints","text":"The signature must contain evidence record to confirm that certificate was valid at the time of signing. The evidence record of signer certificate must be in the form of an OCSP confirmation or as a Certificate Revocation List. No additional revocation data other than the data that was originally incorporated in the signature shall be requested during validation time. Checking revocation of certificates regarded as Trust Anchors: In case of DIGIDOC-XML 1.0...1.3 and X-Road formats: revocation of Trust Anchor certificates is not checked. In case of XAdES/CAdES/PAdES formats: revocation of Trust Anchor certificates is checked on the basis of the data in Trusted Lists.","title":"Revocation data constraints"},{"location":"siva3/appendix/validation_policy/#signer-certificates-revocation-freshness-constraints","text":"In case of BDOC and DIGIDOC-XML 1.0...1.3 BASELINE_LT_TM signatures with time-mark: revocation data is always considered fresh as the revocation data is issued at the trusted signing time. In case of XAdES/CAdES/PAdES BASELINE_LT and BASELINE_LTA signatures with signature time-stamp: revocation data freshness is checked according to the following rules: In case of OCSP responce if difference between signature time-stamp's production time (genTime field) and signer certificate OCSP confirmation\u2019s production time (producedAt field) is more than 24 hours then the signature is considered invalid. If the difference is more than 15 minutes and less then 24h then a validation warning is returned. In case of Certificate Revocation List the signature time-stamp's production time (genTime field) must be within validity range of the CRL (between thisUpdate and nextUpdate)","title":"Signer certificate's revocation freshness constraints"},{"location":"siva3/appendix/validation_policy/#trusted-signing-time-constraints","text":"Trusted signing time, denoting the earliest time when it can be trusted (because proven by some Proof-of-Existence present in the signature) that a signature has existed, is determined as follows: In case of signature with time-mark (BASELINE_LT_TM level) - the producedAt value of the earliest valid time-mark (OCSP confirmation of the signer's certificate) in the signature. In case of signature with time-stamp (BASELINE_T, BASELINE_LT or BASELINE_LTA level) - the genTime value of the earliest valid signature time-stamp token in the signature. In case of basic signature (BASELINE_B) - the trusted signing time value cannot be determined as there is no Proof-of-Existence of the signature.","title":"Trusted signing time constraints"},{"location":"siva3/appendix/validation_policy/#bdoc-container-spceific-requirements","text":"The BDOC container must conform with BDOC 2.1 standard. 1. File extension * \".bdoc\" file extension is supported during signature validation. 2. Only one signature shall be stored in one signatures.xml file. 3. All signatures in the container must sign all of the data files. 4. All data files in the container must be signed, i.e. all files in the container, except of \"mimetype\" file and the files in META-INF/ folder, must be signed. 5. Two data files with the same name and same path shall not be allowed in the container as the signed data file must be uniquely identifiable in the container. To avoid conflicts in some operating system environments, file names shall be case insensitive. 6. Only relative file paths are supported, for example \"META-INF/signatures.xml\" and \"document.txt\" instead of \"/META-INF/signatures.xml\" and \"/document.txt\". 7. \"META-INF/manifest.xml\" file shall be conformant to OASIS Open Document Format version 1.0 or 1.2 .","title":"BDOC container spceific requirements"},{"location":"siva3/appendix/validation_policy/#asice-container-spceific-requirements","text":"The ASICE container must conform with ETSI EN 319 162-1 standard. 1. Warning is returned when signatures in the container do not sign all of the data files. 2. Manifest file must be present.","title":"ASICE container spceific requirements"},{"location":"siva3/appendix/validation_policy/#asics-container-spceific-requirements","text":"The service supports both signature and Time Stamp Token (TST) based ASIC-S containers. Evidence record based containers are not supported. The ASIC-S container must conform with ETSI EN 319 162-1 and ETSI EN 319 162-2 standards. Manifest file can not be present in case of signature based ASIC-S containers. Only one TimeStampToken per container is supported. No AsicArchiveManifest.xml support. No TSL based verification of certificates is done in case of TimeStampToken based containers.","title":"ASICS container spceific requirements"},{"location":"siva3/appendix/wsdl/","text":"See also Interfaces for more information about the SOAP interfaces. Validation web service wsdl <wsdl:definitions xmlns:wsdl= \"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:soap= \"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:xrd= \"http://x-road.eu/xsd/xroad.xsd\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" xmlns:response= \"http://soap.webapp.siva.openeid.ee/response/\" name= \"SignatureValidationService\" > <wsdl:types> <xs:schema xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" > <xs:import namespace= \"http://x-road.eu/xsd/xroad.xsd\" schemaLocation= \"xroad.xsd\" /> <xs:import namespace= \"http://soap.webapp.siva.openeid.ee/response/\" schemaLocation= \"ValidationResponse.xsd\" /> <xs:element name= \"ValidateDocument\" type= \"tns:ValidateDocument\" /> <xs:element name= \"ValidationRequest\" type= \"tns:SoapValidationRequest\" /> <xs:element name= \"ValidateDocumentResponse\" type= \"response:ValidateDocumentResponse\" /> <xs:complexType name= \"ValidateDocument\" > <xs:sequence> <xs:element ref= \"tns:ValidationRequest\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"SoapValidationRequest\" > <xs:sequence> <xs:element name= \"Document\" type= \"xs:string\" /> <xs:element name= \"Filename\" type= \"xs:string\" /> <xs:element minOccurs= \"0\" name= \"ReportType\" type= \"xs:string\" /> <xs:element minOccurs= \"0\" name= \"DocumentType\" type= \"tns:DocumentType\" /> <xs:element minOccurs= \"0\" name= \"SignaturePolicy\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:simpleType name= \"DocumentType\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"XROAD\" /> </xs:restriction> </xs:simpleType> </xs:schema> </wsdl:types> <wsdl:message name= \"ValidateDocument\" > <wsdl:part element= \"tns:ValidateDocument\" name= \"parameters\" /> </wsdl:message> <wsdl:message name= \"ValidateDocumentResponse\" > <wsdl:part element= \"tns:ValidateDocumentResponse\" name= \"parameters\" /> </wsdl:message> <wsdl:message name= \"requestHeader\" > <wsdl:part name= \"client\" element= \"xrd:client\" /> <wsdl:part name= \"service\" element= \"xrd:service\" /> <wsdl:part name= \"id\" element= \"xrd:id\" /> <wsdl:part name= \"userId\" element= \"xrd:userId\" /> <wsdl:part name= \"issue\" element= \"xrd:issue\" /> <wsdl:part name= \"protocolVersion\" element= \"xrd:protocolVersion\" /> </wsdl:message> <wsdl:portType name= \"ValidationWebService\" > <wsdl:operation name= \"ValidateDocument\" > <wsdl:input message= \"tns:ValidateDocument\" name= \"ValidateDocument\" /> <wsdl:output message= \"tns:ValidateDocumentResponse\" name= \"ValidateDocumentResponse\" /> </wsdl:operation> </wsdl:portType> <wsdl:binding name= \"ValidationWebServiceSoapBinding\" type= \"tns:ValidationWebService\" > <soap:binding style= \"document\" transport= \"http://schemas.xmlsoap.org/soap/http\" /> <wsdl:operation name= \"ValidateDocument\" > <soap:operation soapAction= \"\" style= \"document\" /> <wsdl:input name= \"ValidateDocument\" > <soap:body use= \"literal\" /> </wsdl:input> <wsdl:output name= \"ValidateDocumentResponse\" > <soap:body use= \"literal\" /> </wsdl:output> </wsdl:operation> </wsdl:binding> <wsdl:binding name= \"XRoadValidationWebServiceSoapBinding\" type= \"tns:ValidationWebService\" > <soap:binding style= \"document\" transport= \"http://schemas.xmlsoap.org/soap/http\" /> <wsdl:operation name= \"ValidateDocument\" > <soap:operation soapAction= \"\" style= \"document\" /> <wsdl:input name= \"ValidateDocument\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:input> <wsdl:output name= \"ValidateDocumentResponse\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:output> </wsdl:operation> </wsdl:binding> <wsdl:service name= \"ValidationWebServiceService\" > <wsdl:port binding= \"tns:ValidationWebServiceSoapBinding\" name= \"ValidationWebServiceImplPort\" > <soap:address location= \"http://localhost:8080/soap/validationWebService\" /> </wsdl:port> </wsdl:service> <wsdl:service name= \"XRoadValidationWebService\" > <wsdl:port binding= \"tns:XRoadValidationWebServiceSoapBinding\" name= \"XRoadValidationWebServiceImplPort\" > <soap:address location= \"http://localhost:8080/soap/validationWebService\" /> </wsdl:port> </wsdl:service> </wsdl:definitions> Hashcode validation web service wsdl <wsdl:definitions xmlns:wsdl= \"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:soap= \"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:xrd= \"http://x-road.eu/xsd/xroad.xsd\" xmlns:response= \"http://soap.webapp.siva.openeid.ee/response/\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" name= \"SignatureHashcodeValidationService\" > <wsdl:types> <xs:schema xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" > <xs:import namespace= \"http://x-road.eu/xsd/xroad.xsd\" schemaLocation= \"xroad.xsd\" /> <xs:import namespace= \"http://soap.webapp.siva.openeid.ee/response/\" schemaLocation= \"ValidationResponse.xsd\" /> <xs:element name= \"HashcodeValidationDocument\" type= \"tns:HashcodeValidationDocument\" /> <xs:element name= \"HashcodeValidationRequest\" type= \"tns:SoapHashcodeValidationRequest\" /> <xs:element name= \"HashcodeValidationResponse\" type= \"response:ValidateDocumentResponse\" /> <xs:complexType name= \"HashcodeValidationDocument\" > <xs:sequence> <xs:element ref= \"tns:HashcodeValidationRequest\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"SoapHashcodeValidationRequest\" > <xs:sequence> <xs:element name= \"SignatureFiles\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" name= \"SignatureFile\" type= \"tns:SignatureFile\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element minOccurs= \"0\" name= \"ReportType\" type= \"tns:ReportType\" default= \"SIMPLE\" /> <xs:element minOccurs= \"0\" name= \"SignaturePolicy\" type= \"tns:SignaturePolicy\" default= \"POLv4\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"SignatureFile\" > <xs:sequence> <xs:element name= \"Signature\" type= \"tns:NotEmptyString\" /> <xs:element minOccurs= \"0\" name= \"DataFiles\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" name= \"DataFile\" type= \"tns:HashDataFile\" /> </xs:sequence> </xs:complexType> </xs:element> </xs:sequence> </xs:complexType> <xs:complexType name= \"HashDataFile\" > <xs:sequence> <xs:element name= \"Filename\" type= \"tns:Filename\" /> <xs:element name= \"HashAlgo\" type= \"tns:HashAlgorithm\" /> <xs:element name= \"Hash\" type= \"tns:NotEmptyString\" /> </xs:sequence> </xs:complexType> <xs:simpleType name= \"NotEmptyString\" > <xs:restriction base= \"xs:string\" > <xs:minLength value= \"1\" /> <xs:pattern value= \"\\S+\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"Filename\" > <xs:restriction base= \"xs:string\" > <xs:minLength value= \"1\" /> <xs:maxLength value= \"260\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"ReportType\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"SIMPLE\" /> <xs:enumeration value= \"DETAILED\" /> <xs:enumeration value= \"DIAGNOSTIC\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"SignaturePolicy\" > <xs:restriction base= \"xs:string\" > <xs:minLength value= \"1\" /> <xs:maxLength value= \"100\" /> <xs:pattern value= \"[A-Za-z0-9_ -]*\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"HashAlgorithm\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"SHA1\" /> <xs:enumeration value= \"SHA224\" /> <xs:enumeration value= \"SHA256\" /> <xs:enumeration value= \"SHA384\" /> <xs:enumeration value= \"SHA512\" /> <xs:enumeration value= \"RIPEMD160\" /> <xs:enumeration value= \"MD2\" /> <xs:enumeration value= \"MD5\" /> </xs:restriction> </xs:simpleType> </xs:schema> </wsdl:types> <wsdl:message name= \"HashcodeValidationDocument\" > <wsdl:part element= \"tns:HashcodeValidationDocument\" name= \"parameters\" /> </wsdl:message> <wsdl:message name= \"HashcodeValidationResponse\" > <wsdl:part element= \"tns:HashcodeValidationResponse\" name= \"parameters\" /> </wsdl:message> <wsdl:message name= \"requestHeader\" > <wsdl:part name= \"client\" element= \"xrd:client\" /> <wsdl:part name= \"service\" element= \"xrd:service\" /> <wsdl:part name= \"id\" element= \"xrd:id\" /> <wsdl:part name= \"userId\" element= \"xrd:userId\" /> <wsdl:part name= \"issue\" element= \"xrd:issue\" /> <wsdl:part name= \"protocolVersion\" element= \"xrd:protocolVersion\" /> </wsdl:message> <wsdl:portType name= \"HashcodeValidationWebService\" > <wsdl:operation name= \"HashcodeValidationDocument\" > <wsdl:input message= \"tns:HashcodeValidationDocument\" name= \"HashcodeValidationDocument\" /> <wsdl:output message= \"tns:HashcodeValidationResponse\" name= \"HashcodeValidationResponse\" /> </wsdl:operation> </wsdl:portType> <wsdl:binding name= \"HashcodeValidationWebServiceSoapBinding\" type= \"tns:HashcodeValidationWebService\" > <soap:binding style= \"document\" transport= \"http://schemas.xmlsoap.org/soap/http\" /> <wsdl:operation name= \"HashcodeValidationDocument\" > <soap:operation soapAction= \"\" style= \"document\" /> <wsdl:input name= \"HashcodeValidationDocument\" > <soap:body use= \"literal\" /> </wsdl:input> <wsdl:output name= \"HashcodeValidationResponse\" > <soap:body use= \"literal\" /> </wsdl:output> </wsdl:operation> </wsdl:binding> <wsdl:binding name= \"XRoadHashcodeValidationWebServiceSoapBinding\" type= \"tns:HashcodeValidationWebService\" > <soap:binding style= \"document\" transport= \"http://schemas.xmlsoap.org/soap/http\" /> <wsdl:operation name= \"HashcodeValidationDocument\" > <soap:operation soapAction= \"\" style= \"document\" /> <wsdl:input name= \"HashcodeValidationDocument\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:input> <wsdl:output name= \"HashcodeValidationResponse\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:output> </wsdl:operation> </wsdl:binding> <wsdl:service name= \"HashcodeValidationWebServiceService\" > <wsdl:port binding= \"tns:HashcodeValidationWebServiceSoapBinding\" name= \"HashcodeValidationWebServiceImplPort\" > <soap:address location= \"http://localhost:8080/soap/hashcodeValidationWebService\" /> </wsdl:port> </wsdl:service> <wsdl:service name= \"XRoadHashcodeValidationWebService\" > <wsdl:port binding= \"tns:XRoadHashcodeValidationWebServiceSoapBinding\" name= \"XRoadHashcodeValidationWebServiceImplPort\" > <soap:address location= \"http://localhost:8080/soap/hashcodeValidationWebService\" /> </wsdl:port> </wsdl:service> </wsdl:definitions> Data files web service wsdl <wsdl:definitions xmlns:wsdl= \"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:soap= \"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:xrd= \"http://x-road.eu/xsd/xroad.xsd\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" name= \"DataFilesService\" > <wsdl:types> <xs:schema xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" > <xs:import namespace= \"http://x-road.eu/xsd/xroad.xsd\" schemaLocation= \"xroad.xsd\" /> <xs:element name= \"GetDocumentDataFiles\" type= \"tns:GetDocumentDataFiles\" /> <xs:element name= \"GetDocumentDataFilesResponse\" type= \"tns:GetDocumentDataFilesResponse\" /> <xs:element name= \"DataFilesReport\" type= \"tns:DataFilesReport\" /> <xs:element name= \"DataFilesRequest\" type= \"tns:SoapDataFilesRequest\" /> <xs:complexType name= \"GetDocumentDataFiles\" > <xs:sequence> <xs:element ref= \"tns:DataFilesRequest\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"SoapDataFilesRequest\" > <xs:sequence> <xs:element name= \"Document\" type= \"xs:string\" /> <xs:element name= \"Filename\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"GetDocumentDataFilesResponse\" > <xs:sequence> <xs:element minOccurs= \"0\" ref= \"tns:DataFilesReport\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"DataFilesReport\" > <xs:sequence> <xs:element name= \"DataFiles\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"DataFile\" type= \"tns:DataFile\" /> </xs:sequence> </xs:complexType> </xs:element> </xs:sequence> </xs:complexType> <xs:complexType name= \"DataFile\" > <xs:sequence> <xs:element name= \"Base64\" type= \"xs:string\" /> <xs:element name= \"Filename\" type= \"xs:string\" /> <xs:element name= \"MimeType\" type= \"xs:string\" /> <xs:element name= \"Size\" type= \"xs:long\" /> </xs:sequence> </xs:complexType> </xs:schema> </wsdl:types> <wsdl:message name= \"GetDocumentDataFiles\" > <wsdl:part element= \"tns:GetDocumentDataFiles\" name= \"parameters\" /> </wsdl:message> <wsdl:message name= \"GetDocumentDataFilesResponse\" > <wsdl:part element= \"tns:GetDocumentDataFilesResponse\" name= \"parameters\" /> </wsdl:message> <wsdl:message name= \"requestHeader\" > <wsdl:part name= \"client\" element= \"xrd:client\" /> <wsdl:part name= \"service\" element= \"xrd:service\" /> <wsdl:part name= \"id\" element= \"xrd:id\" /> <wsdl:part name= \"userId\" element= \"xrd:userId\" /> <wsdl:part name= \"issue\" element= \"xrd:issue\" /> <wsdl:part name= \"protocolVersion\" element= \"xrd:protocolVersion\" /> </wsdl:message> <wsdl:portType name= \"DataFilesWebService\" > <wsdl:operation name= \"GetDocumentDataFiles\" > <wsdl:input message= \"tns:GetDocumentDataFiles\" name= \"GetDocumentDataFiles\" /> <wsdl:output message= \"tns:GetDocumentDataFilesResponse\" name= \"GetDocumentDataFilesResponse\" /> </wsdl:operation> </wsdl:portType> <wsdl:binding name= \"DataFilesWebServiceSoapBinding\" type= \"tns:DataFilesWebService\" > <soap:binding style= \"document\" transport= \"http://schemas.xmlsoap.org/soap/http\" /> <wsdl:operation name= \"GetDocumentDataFiles\" > <soap:operation soapAction= \"\" style= \"document\" /> <wsdl:input name= \"GetDocumentDataFiles\" > <soap:body use= \"literal\" /> </wsdl:input> <wsdl:output name= \"GetDocumentDataFilesResponse\" > <soap:body use= \"literal\" /> </wsdl:output> </wsdl:operation> </wsdl:binding> <wsdl:binding name= \"XRoadDataFilesWebServiceSoapBinding\" type= \"tns:DataFilesWebService\" > <soap:binding style= \"document\" transport= \"http://schemas.xmlsoap.org/soap/http\" /> <wsdl:operation name= \"GetDocumentDataFiles\" > <soap:operation soapAction= \"\" style= \"document\" /> <wsdl:input name= \"GetDocumentDataFiles\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:input> <wsdl:output name= \"GetDocumentDataFilesResponse\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:output> </wsdl:operation> </wsdl:binding> <wsdl:service name= \"DataFilesWebServiceService\" > <wsdl:port binding= \"tns:DataFilesWebServiceSoapBinding\" name= \"DataFilesWebServiceImplPort\" > <soap:address location= \"http://localhost:8080/soap/dataFilesWebService\" /> </wsdl:port> </wsdl:service> <wsdl:service name= \"XRoadDataFilesWebService\" > <wsdl:port binding= \"tns:XRoadDataFilesWebServiceSoapBinding\" name= \"XRoadDataFilesWebServiceImplPort\" > <soap:address location= \"http://localhost:8080/soap/dataFilesWebService\" /> </wsdl:port> </wsdl:service> </wsdl:definitions> Validation response XSD <?xml version=\"1.0\" encoding=\"UTF-8\"?> <xs:schema elementFormDefault= \"qualified\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/response/\" xmlns= \"http://soap.webapp.siva.openeid.ee/response/\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/response/\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:detailed= \"http://dss.esig.europa.eu/validation/detailed-report\" xmlns:diagnostic= \"http://dss.esig.europa.eu/validation/diagnostic\" > <xs:import namespace= \"http://dss.esig.europa.eu/validation/detailed-report\" schemaLocation= \"DetailedReport.xsd\" /> <xs:import namespace= \"http://dss.esig.europa.eu/validation/diagnostic\" schemaLocation= \"DiagnosticData.xsd\" /> <xs:element name= \"ValidationReport\" type= \"tns:ValidationReport\" /> <xs:element name= \"ValidationConclusion\" type= \"tns:ValidationConclusion\" /> <xs:element name= \"ValidationProcess\" substitutionGroup= \"detailed:DetailedReport\" /> <xs:element name= \"DiagnosticData\" substitutionGroup= \"diagnostic:DiagnosticData\" /> <xs:complexType name= \"ValidateDocumentResponse\" > <xs:sequence> <xs:element ref= \"tns:ValidationReport\" /> <xs:element minOccurs= \"0\" name= \"ValidationReportSignature\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"ValidationReport\" > <xs:sequence> <xs:element ref= \"tns:ValidationConclusion\" /> <xs:element minOccurs= \"0\" ref= \"tns:ValidationProcess\" /> <xs:element minOccurs= \"0\" ref= \"tns:DiagnosticData\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"ValidationConclusion\" > <xs:sequence> <xs:element name= \"Policy\" type= \"tns:Policy\" /> <xs:element name= \"ValidationTime\" type= \"xs:string\" /> <xs:element name= \"ValidatedDocument\" type= \"tns:ValidatedDocumentData\" /> <xs:element name= \"ValidationLevel\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"ValidationWarnings\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"ValidationWarning\" type= \"tns:ValidationWarning\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"SignatureForm\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"Signatures\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"Signature\" type= \"tns:SignatureValidationData\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"TimeStampTokens\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element minOccurs= \"0\" maxOccurs= \"unbounded\" name= \"TimeStampToken\" type= \"tns:TimeStampTokenData\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"ValidSignaturesCount\" minOccurs= \"0\" type= \"xs:int\" /> <xs:element name= \"SignaturesCount\" minOccurs= \"0\" type= \"xs:int\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"Policy\" > <xs:sequence> <xs:element name= \"PolicyDescription\" type= \"xs:string\" /> <xs:element name= \"PolicyName\" type= \"xs:string\" /> <xs:element name= \"PolicyUrl\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"TimeStampTokenData\" > <xs:sequence> <xs:element name= \"Indication\" type= \"tns:Indication\" /> <xs:element name= \"SignedBy\" type= \"xs:string\" /> <xs:element name= \"SignedTime\" type= \"xs:string\" /> <xs:element name= \"Errors\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"Error\" type= \"tns:Error\" /> </xs:sequence> </xs:complexType> </xs:element> </xs:sequence> </xs:complexType> <xs:complexType name= \"SignatureValidationData\" > <xs:sequence> <xs:element name= \"Id\" type= \"xs:string\" /> <xs:element name= \"SignatureFormat\" type= \"xs:string\" /> <xs:element name= \"SignatureMethod\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"SignatureLevel\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"SignedBy\" type= \"xs:string\" /> <xs:element name= \"SubjectDistinguishedName\" minOccurs= \"0\" type= \"tns:SubjectDistinguishedName\" /> <xs:element name= \"Certificates\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"Certificate\" type= \"tns:Certificate\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"Indication\" type= \"tns:Indication\" /> <xs:element name= \"SubIndication\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"Errors\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"Error\" type= \"tns:Error\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"SignatureScopes\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" name= \"SignatureScope\" type= \"tns:SignatureScope\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"ClaimedSigningTime\" type= \"xs:string\" /> <xs:element name= \"Warnings\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"Warning\" type= \"tns:Warning\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"Info\" minOccurs= \"0\" type= \"tns:Info\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"Error\" > <xs:sequence> <xs:element name= \"Content\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"ValidationWarning\" > <xs:sequence> <xs:element name= \"Content\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"SignatureScope\" > <xs:sequence> <xs:element name= \"Name\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"Scope\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"Content\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"HashAlgo\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"Hash\" minOccurs= \"0\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"Warning\" > <xs:sequence> <xs:element name= \"Content\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"Info\" > <xs:sequence> <xs:element minOccurs= \"0\" name= \"BestSignatureTime\" type= \"xs:string\" /> <xs:element name= \"TimeAssertionMessageImprint\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"SignerRole\" minOccurs= \"0\" maxOccurs= \"unbounded\" type= \"tns:SignerRole\" /> <xs:element minOccurs= \"0\" name= \"SignatureProductionPlace\" type= \"tns:SignatureProductionPlace\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"SignerRole\" > <xs:sequence> <xs:element name= \"ClaimedRole\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"SignatureProductionPlace\" > <xs:sequence> <xs:element minOccurs= \"0\" name= \"CountryName\" type= \"xs:string\" /> <xs:element minOccurs= \"0\" name= \"StateOrProvince\" type= \"xs:string\" /> <xs:element minOccurs= \"0\" name= \"City\" type= \"xs:string\" /> <xs:element minOccurs= \"0\" name= \"PostalCode\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"SubjectDistinguishedName\" > <xs:sequence> <xs:element name= \"SerialNumber\" type= \"xs:string\" /> <xs:element name= \"CommonName\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"Certificate\" > <xs:sequence> <xs:element name= \"Content\" type= \"xs:string\" /> <xs:element name= \"CommonName\" type= \"xs:string\" /> <xs:element name= \"Issuer\" type= \"tns:Certificate\" /> <xs:element name= \"Type\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:simpleType name= \"Indication\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"TOTAL-PASSED\" /> <xs:enumeration value= \"TOTAL-FAILED\" /> <xs:enumeration value= \"INDETERMINATE\" /> </xs:restriction> </xs:simpleType> <xs:complexType name= \"ValidatedDocumentData\" > <xs:sequence> <xs:element name= \"Filename\" type= \"xs:string\" /> <xs:element name= \"FileHash\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"HashAlgo\" minOccurs= \"0\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> </xs:schema> DSS detailed report XSD <?xml version=\"1.0\" encoding=\"UTF-8\"?> <xs:schema attributeFormDefault= \"unqualified\" elementFormDefault= \"qualified\" targetNamespace= \"http://dss.esig.europa.eu/validation/detailed-report\" xmlns= \"http://dss.esig.europa.eu/validation/detailed-report\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" > <xs:element name= \"DetailedReport\" > <xs:complexType> <xs:sequence> <xs:element type= \"Signature\" name= \"Signatures\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element type= \"Certificate\" name= \"Certificate\" minOccurs= \"0\" maxOccurs= \"1\" /> <xs:element type= \"BasicBuildingBlocks\" name= \"BasicBuildingBlocks\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element name= \"TLAnalysis\" type= \"TLAnalysis\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:complexType name= \"Signature\" > <xs:sequence> <xs:element type= \"ValidationProcessBasicSignatures\" name= \"ValidationProcessBasicSignatures\" minOccurs= \"0\" /> <xs:element type= \"ValidationProcessTimestamps\" name= \"ValidationProcessTimestamps\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element type= \"ValidationProcessLongTermData\" name= \"ValidationProcessLongTermData\" minOccurs= \"0\" /> <xs:element type= \"ValidationProcessArchivalData\" name= \"ValidationProcessArchivalData\" minOccurs= \"0\" /> <xs:element type= \"ValidationSignatureQualification\" name= \"ValidationSignatureQualification\" minOccurs= \"0\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"CounterSignature\" type= \"xs:boolean\" use= \"optional\" /> </xs:complexType> <xs:complexType name= \"Certificate\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:sequence> <xs:element name= \"ValidationCertificateQualification\" type= \"ValidationCertificateQualification\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"BasicBuildingBlocks\" > <xs:sequence> <xs:element type= \"FC\" name= \"FC\" minOccurs= \"0\" /> <xs:element type= \"ISC\" name= \"ISC\" minOccurs= \"0\" /> <xs:element type= \"VCI\" name= \"VCI\" minOccurs= \"0\" /> <xs:element type= \"CV\" name= \"CV\" minOccurs= \"0\" /> <xs:element type= \"SAV\" name= \"SAV\" minOccurs= \"0\" /> <xs:element type= \"XCV\" name= \"XCV\" minOccurs= \"0\" /> <xs:element type= \"PSV\" name= \"PSV\" minOccurs= \"0\" /> <xs:element type= \"PCV\" name= \"PCV\" minOccurs= \"0\" /> <xs:element type= \"VTS\" name= \"VTS\" minOccurs= \"0\" /> <xs:element name= \"CertificateChain\" type= \"CertificateChain\" /> <xs:element type= \"Conclusion\" name= \"Conclusion\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"Type\" type= \"Context\" use= \"required\" /> </xs:complexType> <xs:complexType name= \"TLAnalysis\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:attribute name= \"CountryCode\" type= \"xs:string\" use= \"required\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ValidationSignatureQualification\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:sequence> <xs:element name= \"ValidationCertificateQualification\" type= \"ValidationCertificateQualification\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"SignatureQualification\" type= \"SignatureQualification\" use= \"optional\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ValidationCertificateQualification\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"DateTime\" type= \"xs:dateTime\" /> <xs:attribute name= \"ValidationTime\" type= \"ValidationTime\" /> <xs:attribute name= \"CertificateQualification\" type= \"CertificateQualification\" use= \"optional\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ConstraintsConclusion\" > <xs:sequence> <xs:element type= \"Constraint\" name= \"Constraint\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element type= \"Conclusion\" name= \"Conclusion\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"ConstraintsConclusionWithControlTime\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:sequence> <xs:element name= \"ControlTime\" type= \"xs:dateTime\" minOccurs= \"0\" /> </xs:sequence> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ValidationProcessBasicSignatures\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:attribute name= \"BestSignatureTime\" type= \"xs:dateTime\" use= \"required\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ValidationProcessTimestamps\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"Type\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"ProductionTime\" type= \"xs:dateTime\" use= \"required\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ValidationProcessLongTermData\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:attribute name= \"BestSignatureTime\" type= \"xs:dateTime\" use= \"required\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ValidationProcessArchivalData\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:attribute name= \"BestSignatureTime\" type= \"xs:dateTime\" use= \"required\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"FC\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ISC\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:sequence> <xs:element name= \"CertificateChain\" type= \"CertificateChain\" /> </xs:sequence> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"VCI\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"RFC\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"CV\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"SAV\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"XCV\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:sequence> <xs:element name= \"SubXCV\" type= \"SubXCV\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"SubXCV\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:sequence> <xs:element name= \"RFC\" type= \"RFC\" minOccurs= \"0\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"TrustAnchor\" type= \"xs:boolean\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"VTS\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusionWithControlTime\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"PCV\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusionWithControlTime\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"PSV\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusionWithControlTime\" /> </xs:complexContent> </xs:complexType> <!-- Not supported --> <!-- <xs:complexType name=\"ERV\"> --> <!-- <xs:complexContent> --> <!-- <xs:extension base=\"ConstraintsConclusion\" /> --> <!-- </xs:complexContent> --> <!-- </xs:complexType> --> <xs:complexType name= \"Constraint\" > <xs:sequence> <xs:element type= \"Name\" name= \"Name\" /> <xs:element type= \"Status\" name= \"Status\" /> <xs:element type= \"Name\" name= \"Error\" minOccurs= \"0\" /> <xs:element type= \"Name\" name= \"Warning\" minOccurs= \"0\" /> <xs:element type= \"Name\" name= \"Info\" minOccurs= \"0\" /> <xs:element type= \"xs:string\" name= \"AdditionalInfo\" minOccurs= \"0\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"optional\" /> <!-- In case of constraint with a BBB --> </xs:complexType> <xs:complexType name= \"Conclusion\" > <xs:sequence> <xs:element type= \"Indication\" name= \"Indication\" /> <xs:element type= \"SubIndication\" name= \"SubIndication\" minOccurs= \"0\" /> <xs:element type= \"Name\" name= \"Errors\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element type= \"Name\" name= \"Warnings\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element type= \"Name\" name= \"Infos\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"Name\" > <xs:simpleContent> <xs:extension base= \"xs:string\" > <xs:attribute name= \"NameId\" type= \"xs:string\" /> </xs:extension> </xs:simpleContent> </xs:complexType> <xs:simpleType name= \"Status\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"OK\" /> <xs:enumeration value= \"NOT OK\" /> <xs:enumeration value= \"IGNORED\" /> <xs:enumeration value= \"INFORMATION\" /> <xs:enumeration value= \"WARNING\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"Indication\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"PASSED\" /> <xs:enumeration value= \"INDETERMINATE\" /> <xs:enumeration value= \"FAILED\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"SubIndication\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"NO_SIGNING_CERTIFICATE_FOUND\" /> <xs:enumeration value= \"FORMAT_FAILURE\" /> <xs:enumeration value= \"SIGNATURE_POLICY_NOT_AVAILABLE\" /> <xs:enumeration value= \"POLICY_PROCESSING_ERROR\" /> <xs:enumeration value= \"OUT_OF_BOUNDS_NO_POE\" /> <xs:enumeration value= \"NO_CERTIFICATE_CHAIN_FOUND\" /> <xs:enumeration value= \"TRY_LATER\" /> <xs:enumeration value= \"REVOKED_NO_POE\" /> <xs:enumeration value= \"REVOKED_CA_NO_POE\" /> <xs:enumeration value= \"CHAIN_CONSTRAINTS_FAILURE\" /> <xs:enumeration value= \"CRYPTO_CONSTRAINTS_FAILURE\" /> <xs:enumeration value= \"CRYPTO_CONSTRAINTS_FAILURE_NO_POE\" /> <xs:enumeration value= \"SIGNED_DATA_NOT_FOUND\" /> <xs:enumeration value= \"HASH_FAILURE\" /> <xs:enumeration value= \"SIG_CRYPTO_FAILURE\" /> <xs:enumeration value= \"SIG_CONSTRAINTS_FAILURE\" /> <xs:enumeration value= \"NOT_YET_VALID\" /> <xs:enumeration value= \"TIMESTAMP_ORDER_FAILURE\" /> <xs:enumeration value= \"REVOKED\" /> <xs:enumeration value= \"EXPIRED\" /> <xs:enumeration value= \"NO_POE\" /> <xs:enumeration value= \"CERTIFICATE_CHAIN_GENERAL_FAILURE\" /> <xs:enumeration value= \"UNEXPECTED_ERROR\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"CertificateQualification\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"QC Cert for ESig with QSCD\" /> <xs:enumeration value= \"QC Cert for ESeal with QSCD\" /> <!-- non sense <xs:enumeration value=\"QC Cert for WSA with QSCD\" /> --> <xs:enumeration value= \"QC Cert for ESig\" /> <xs:enumeration value= \"QC Cert for ESeal\" /> <xs:enumeration value= \"QC Cert for WSA\" /> <xs:enumeration value= \"Cert for ESig\" /> <xs:enumeration value= \"Cert for ESeal\" /> <xs:enumeration value= \"Cert for WSA\" /> <xs:enumeration value= \"N/A\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"SignatureQualification\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"QESig\" /> <xs:enumeration value= \"QESeal\" /> <xs:enumeration value= \"QES?\" /> <xs:enumeration value= \"AdESig-QC\" /> <xs:enumeration value= \"AdESeal-QC\" /> <xs:enumeration value= \"AdES?-QC\" /> <xs:enumeration value= \"AdESig\" /> <xs:enumeration value= \"AdESeal\" /> <xs:enumeration value= \"AdES?\" /> <xs:enumeration value= \"Indeterminate QESig\" /> <xs:enumeration value= \"Indeterminate QESeal\" /> <xs:enumeration value= \"Indeterminate QES?\" /> <xs:enumeration value= \"Indeterminate AdESig-QC\" /> <xs:enumeration value= \"Indeterminate AdESeal-QC\" /> <xs:enumeration value= \"Indeterminate AdES?-QC\" /> <xs:enumeration value= \"Indeterminate AdESig\" /> <xs:enumeration value= \"Indeterminate AdESeal\" /> <xs:enumeration value= \"Indeterminate AdES?\" /> <xs:enumeration value= \"Not AdES but QC with QSCD\" /> <xs:enumeration value= \"Not AdES but QC\" /> <xs:enumeration value= \"Not AdES\" /> <xs:enumeration value= \"N/A\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"Context\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"SIGNATURE\" /> <xs:enumeration value= \"COUNTER_SIGNATURE\" /> <xs:enumeration value= \"TIMESTAMP\" /> <xs:enumeration value= \"REVOCATION\" /> <!-- For Qualification --> <xs:enumeration value= \"CERTIFICATE\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"ValidationTime\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"CERTIFICATE_ISSUANCE_TIME\" /> <xs:enumeration value= \"BEST_SIGNATURE_TIME\" /> <xs:enumeration value= \"VALIDATION_TIME\" /> </xs:restriction> </xs:simpleType> <xs:complexType name= \"CertificateChain\" > <xs:sequence> <xs:element name= \"ChainItem\" minOccurs= \"0\" maxOccurs= \"unbounded\" > <xs:complexType> <xs:sequence> <xs:element name= \"Source\" type= \"xs:string\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> </xs:complexType> </xs:element> </xs:sequence> </xs:complexType> </xs:schema> DSS diagnostic data report XSD <?xml version=\"1.0\" encoding=\"UTF-8\"?> <xs:schema elementFormDefault= \"qualified\" targetNamespace= \"http://dss.esig.europa.eu/validation/diagnostic\" xmlns= \"http://dss.esig.europa.eu/validation/diagnostic\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" > <xs:element name= \"DiagnosticData\" > <xs:complexType> <xs:sequence> <xs:element name= \"DocumentName\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"ValidationDate\" type= \"xs:dateTime\" /> <xs:element name= \"ContainerInfo\" type= \"ContainerInfo\" minOccurs= \"0\" /> <xs:element name= \"Signatures\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"Signature\" type= \"Signature\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"UsedCertificates\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"Certificate\" type= \"Certificate\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"TrustedLists\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"TrustedList\" type= \"TrustedList\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"ListOfTrustedLists\" type= \"TrustedList\" minOccurs= \"0\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:complexType name= \"ContainerInfo\" > <xs:sequence> <xs:element name= \"ContainerType\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"ZipComment\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"MimeTypeFilePresent\" type= \"xs:boolean\" minOccurs= \"0\" /> <xs:element name= \"MimeTypeContent\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"ManifestFiles\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"ManifestFile\" type= \"ManifestFile\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"ContentFiles\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"ContentFile\" type= \"xs:string\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> </xs:sequence> </xs:complexType> <xs:complexType name= \"ManifestFile\" > <xs:sequence> <xs:element name= \"Filename\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"SignatureFilename\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"Entries\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"Entry\" type= \"xs:string\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> </xs:sequence> </xs:complexType> <xs:complexType name= \"Signature\" > <xs:sequence> <xs:element name= \"SignatureFilename\" type= \"xs:string\" /> <xs:element name= \"ParentId\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"ErrorMessage\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"DateTime\" type= \"xs:dateTime\" minOccurs= \"0\" /> <xs:element name= \"SignatureFormat\" type= \"xs:string\" /> <xs:element name= \"StructuralValidation\" type= \"StructuralValidation\" minOccurs= \"0\" /> <xs:element name= \"DigestMatchers\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"DigestMatcher\" type= \"DigestMatcher\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"BasicSignature\" type= \"BasicSignature\" /> <xs:element name= \"SigningCertificate\" type= \"SigningCertificate\" minOccurs= \"0\" /> <xs:element name= \"CertificateChain\" type= \"CertificateChain\" minOccurs= \"0\" /> <xs:element name= \"ContentType\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"ContentIdentifier\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"ContentHints\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"SignatureProductionPlace\" type= \"SignatureProductionPlace\" minOccurs= \"0\" /> <xs:element name= \"CommitmentTypeIndication\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"Indication\" type= \"xs:string\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"ClaimedRoles\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"ClaimedRoles\" type= \"xs:string\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"CertifiedRoles\" type= \"CertifiedRole\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element name= \"Policy\" type= \"Policy\" minOccurs= \"0\" /> <xs:element name= \"Timestamps\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"Timestamp\" type= \"Timestamp\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"SignatureScopes\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"SignatureScope\" type= \"SignatureScope\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"CounterSignature\" type= \"xs:boolean\" use= \"optional\" /> </xs:complexType> <xs:complexType name= \"SignatureProductionPlace\" > <xs:sequence> <xs:element name= \"Address\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"City\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"StateOrProvince\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"PostalCode\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"CountryName\" type= \"xs:string\" minOccurs= \"0\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"Policy\" > <xs:sequence> <xs:element name= \"Id\" type= \"xs:string\" /> <xs:element name= \"Url\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"Notice\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"DigestAlgoAndValue\" type= \"DigestAlgoAndValue\" minOccurs= \"0\" /> <xs:element name= \"Asn1Processable\" type= \"xs:boolean\" minOccurs= \"0\" /> <xs:element name= \"Identified\" type= \"xs:boolean\" minOccurs= \"0\" /> <xs:element name= \"Status\" type= \"xs:boolean\" minOccurs= \"0\" /> <xs:element name= \"ProcessingError\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"DigestAlgorithmsEqual\" type= \"xs:boolean\" minOccurs= \"0\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"Certificate\" > <xs:sequence> <xs:element name= \"SubjectDistinguishedName\" type= \"DistinguishedName\" maxOccurs= \"unbounded\" /> <xs:element name= \"IssuerDistinguishedName\" type= \"DistinguishedName\" maxOccurs= \"unbounded\" /> <xs:element name= \"SerialNumber\" type= \"xs:integer\" /> <xs:element name= \"CommonName\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"Locality\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"State\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"CountryName\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"OrganizationName\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"GivenName\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"OrganizationalUnit\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"Surname\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"Pseudonym\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"Email\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"AuthorityInformationAccessUrls\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"Url\" type= \"xs:string\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"CRLDistributionPoints\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"Url\" type= \"xs:string\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"OCSPAccessUrls\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"Url\" type= \"xs:string\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"DigestAlgoAndValues\" type= \"DigestAlgoAndValues\" minOccurs= \"0\" /> <xs:element name= \"NotAfter\" type= \"xs:dateTime\" /> <xs:element name= \"NotBefore\" type= \"xs:dateTime\" /> <xs:element name= \"PublicKeySize\" type= \"xs:int\" /> <xs:element name= \"PublicKeyEncryptionAlgo\" type= \"xs:string\" /> <xs:element name= \"KeyUsageBits\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"KeyUsage\" type= \"xs:string\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"ExtendedKeyUsages\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"oid\" type= \"OID\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"IdPkixOcspNoCheck\" type= \"xs:boolean\" minOccurs= \"0\" /> <xs:element name= \"BasicSignature\" type= \"BasicSignature\" /> <xs:element name= \"SigningCertificate\" type= \"SigningCertificate\" minOccurs= \"0\" /> <xs:element name= \"CertificateChain\" type= \"CertificateChain\" minOccurs= \"0\" /> <xs:element name= \"Trusted\" type= \"xs:boolean\" /> <xs:element name= \"SelfSigned\" type= \"xs:boolean\" /> <xs:element name= \"CertificatePolicies\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"certificatePolicy\" type= \"CertificatePolicy\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"QCStatementIds\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"oid\" type= \"OID\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"QCTypes\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"oid\" type= \"OID\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"TrustedServiceProviders\" > <xs:complexType> <xs:sequence> <xs:element name= \"TrustedServiceProvider\" type= \"TrustedServiceProvider\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"Revocations\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"Revocation\" type= \"Revocation\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"Base64Encoded\" type= \"xs:base64Binary\" minOccurs= \"0\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> </xs:complexType> <xs:complexType name= \"OID\" > <xs:simpleContent> <xs:extension base= \"xs:string\" > <xs:attribute name= \"Description\" type= \"xs:string\" use= \"optional\" /> </xs:extension> </xs:simpleContent> </xs:complexType> <xs:complexType name= \"CertificatePolicy\" > <xs:complexContent> <xs:extension base= \"OID\" > <xs:attribute name= \"cpsUrl\" type= \"xs:string\" use= \"optional\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"DistinguishedName\" > <xs:simpleContent> <xs:extension base= \"xs:string\" > <xs:attribute name= \"Format\" type= \"xs:string\" use= \"optional\" /> </xs:extension> </xs:simpleContent> </xs:complexType> <xs:complexType name= \"SignatureScope\" > <xs:simpleContent> <xs:extension base= \"xs:string\" > <xs:attribute name= \"name\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"scope\" type= \"ScopeType\" use= \"required\" /> </xs:extension> </xs:simpleContent> </xs:complexType> <xs:simpleType name= \"ScopeType\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"FULL\" /> <xs:enumeration value= \"PARTIAL\" /> </xs:restriction> </xs:simpleType> <xs:complexType name= \"StructuralValidation\" > <xs:sequence> <xs:element name= \"Valid\" type= \"xs:boolean\" minOccurs= \"0\" /> <xs:element name= \"Message\" type= \"xs:string\" minOccurs= \"0\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"BasicSignature\" > <xs:sequence> <xs:element name= \"EncryptionAlgoUsedToSignThisToken\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"KeyLengthUsedToSignThisToken\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"DigestAlgoUsedToSignThisToken\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"MaskGenerationFunctionUsedToSignThisToken\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"SignatureIntact\" type= \"xs:boolean\" /> <xs:element name= \"SignatureValid\" type= \"xs:boolean\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"SigningCertificate\" > <xs:sequence> <xs:element name= \"AttributePresent\" type= \"xs:boolean\" minOccurs= \"0\" /> <xs:element name= \"DigestValuePresent\" type= \"xs:boolean\" minOccurs= \"0\" /> <xs:element name= \"DigestValueMatch\" type= \"xs:boolean\" minOccurs= \"0\" /> <xs:element name= \"IssuerSerialMatch\" type= \"xs:boolean\" minOccurs= \"0\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> </xs:complexType> <xs:complexType name= \"TimestampedObjects\" > <xs:sequence> <xs:element name= \"TimestampedObject\" type= \"TimestampedObject\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"TimestampedObject\" > <xs:sequence> <xs:element name= \"DigestAlgoAndValue\" type= \"DigestAlgoAndValue\" minOccurs= \"0\" maxOccurs= \"1\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"optional\" /> <xs:attribute name= \"Category\" type= \"TimestampedObjectType\" use= \"required\" /> </xs:complexType> <xs:simpleType name= \"TimestampedObjectType\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"CERTIFICATE\" /> <xs:enumeration value= \"SIGNATURE\" /> <xs:enumeration value= \"TIMESTAMP\" /> <xs:enumeration value= \"REVOCATION\" /> </xs:restriction> </xs:simpleType> <xs:complexType name= \"Certificate\" > <xs:sequence> <xs:element name= \"ChainItem\" minOccurs= \"0\" maxOccurs= \"unbounded\" > <xs:complexType> <xs:sequence> <xs:element name= \"Source\" type= \"xs:string\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> </xs:complexType> </xs:element> </xs:sequence> </xs:complexType> <xs:complexType name= \"CertifiedRole\" > <xs:sequence> <xs:element name= \"CertifiedRole\" type= \"xs:string\" /> <xs:element name= \"NotAfter\" type= \"xs:dateTime\" /> <xs:element name= \"NotBefore\" type= \"xs:dateTime\" /> </xs:sequence> <xs:attribute name= \"Category\" type= \"xs:string\" use= \"required\" /> </xs:complexType> <xs:complexType name= \"DigestAlgoAndValue\" > <xs:sequence> <xs:element name= \"DigestMethod\" type= \"xs:string\" minOccurs= \"0\" /> <!-- Optional in case the digest cannot be retrieved --> <xs:element name= \"DigestValue\" type= \"xs:string\" minOccurs= \"0\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"DigestMatcher\" > <xs:complexContent> <xs:extension base= \"DigestAlgoAndValue\" > <xs:sequence> <xs:element name= \"DataFound\" type= \"xs:boolean\" /> <xs:element name= \"DataIntact\" type= \"xs:boolean\" /> </xs:sequence> <xs:attribute name= \"type\" type= \"DigestMatcherType\" use= \"required\" /> <xs:attribute name= \"name\" type= \"xs:string\" use= \"optional\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:simpleType name= \"DigestMatcherType\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <!-- XAdES --> <xs:enumeration value= \"REFERENCE\" /> <xs:enumeration value= \"OBJECT\" /> <xs:enumeration value= \"MANIFEST\" /> <xs:enumeration value= \"MANIFEST_ENTRY\" /> <xs:enumeration value= \"SIGNED_PROPERTIES\" /> <!-- CAdES --> <xs:enumeration value= \"MESSAGE_DIGEST\" /> <!-- TIMESTAMP --> <xs:enumeration value= \"MESSAGE_IMPRINT\" /> </xs:restriction> </xs:simpleType> <xs:complexType name= \"Timestamp\" > <xs:sequence> <xs:element name= \"ProductionTime\" type= \"xs:dateTime\" /> <xs:element name= \"DigestMatcher\" type= \"DigestMatcher\" /> <xs:element name= \"BasicSignature\" type= \"BasicSignature\" /> <xs:element name= \"SigningCertificate\" type= \"SigningCertificate\" minOccurs= \"0\" /> <xs:element name= \"CertificateChain\" type= \"CertificateChain\" minOccurs= \"0\" /> <xs:element name= \"TimestampedObjects\" type= \"TimestampedObjects\" minOccurs= \"0\" /> <xs:element name= \"Base64Encoded\" type= \"xs:base64Binary\" minOccurs= \"0\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"Type\" type= \"xs:string\" use= \"required\" /> </xs:complexType> <xs:complexType name= \"Revocation\" > <xs:sequence> <xs:element name= \"Origin\" type= \"xs:string\" /> <xs:element name= \"Source\" type= \"xs:string\" /> <xs:element name= \"SourceAddress\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"Available\" type= \"xs:boolean\" minOccurs= \"0\" /> <xs:element name= \"Status\" type= \"xs:boolean\" /> <xs:element name= \"Reason\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"ProductionDate\" type= \"xs:dateTime\" minOccurs= \"0\" /> <!-- Can be null in case of no SUCCESSFUL response of OCSP --> <xs:element name= \"ThisUpdate\" type= \"xs:dateTime\" minOccurs= \"0\" /> <xs:element name= \"NextUpdate\" type= \"xs:dateTime\" minOccurs= \"0\" /> <xs:element name= \"RevocationDate\" type= \"xs:dateTime\" minOccurs= \"0\" /> <xs:element name= \"ExpiredCertsOnCRL\" type= \"xs:dateTime\" minOccurs= \"0\" /> <!-- CRL --> <xs:element name= \"ArchiveCutOff\" type= \"xs:dateTime\" minOccurs= \"0\" /> <!-- OCSP --> <xs:element name= \"CertHashExtensionPresent\" type= \"xs:boolean\" minOccurs= \"0\" /> <!-- OCSP --> <xs:element name= \"CertHashExtensionMatch\" type= \"xs:boolean\" minOccurs= \"0\" /> <!-- OCSP --> <xs:element name= \"DigestAlgoAndValues\" type= \"DigestAlgoAndValues\" minOccurs= \"0\" /> <xs:element name= \"BasicSignature\" type= \"BasicSignature\" minOccurs= \"0\" /> <!-- Can be null in case of no SUCCESSFUL response of OCSP --> <xs:element name= \"SigningCertificate\" type= \"SigningCertificate\" minOccurs= \"0\" /> <xs:element name= \"Certificate\" type= \"Certificate\" minOccurs= \"0\" /> <xs:element name= \"Base64Encoded\" type= \"xs:base64Binary\" minOccurs= \"0\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> </xs:complexType> <xs:complexType name= \"TrustedList\" > <xs:sequence> <xs:element name= \"CountryCode\" type= \"xs:string\" /> <xs:element name= \"Url\" type= \"xs:string\" /> <xs:element name= \"SequenceNumber\" type= \"xs:int\" minOccurs= \"0\" /> <xs:element name= \"Version\" type= \"xs:int\" minOccurs= \"0\" /> <xs:element name= \"LastLoading\" type= \"xs:dateTime\" minOccurs= \"0\" /> <xs:element name= \"IssueDate\" type= \"xs:dateTime\" minOccurs= \"0\" /> <xs:element name= \"NextUpdate\" type= \"xs:dateTime\" minOccurs= \"0\" /> <xs:element name= \"WellSigned\" type= \"xs:boolean\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"TrustedServiceProvider\" > <xs:sequence> <xs:element name= \"TSPName\" type= \"xs:string\" /> <xs:element name= \"TSPRegistrationIdentifier\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"CountryCode\" type= \"xs:string\" /> <xs:element name= \"TrustedServices\" > <xs:complexType> <xs:sequence> <xs:element name= \"TrustedService\" type= \"TrustedService\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> </xs:sequence> </xs:complexType> <xs:complexType name= \"TrustedService\" > <xs:sequence> <xs:element name= \"ServiceName\" type= \"xs:string\" /> <xs:element name= \"ServiceType\" type= \"xs:string\" /> <xs:element name= \"Status\" type= \"xs:string\" /> <xs:element name= \"StartDate\" type= \"xs:dateTime\" /> <xs:element name= \"EndDate\" type= \"xs:dateTime\" minOccurs= \"0\" /> <xs:element name= \"CapturedQualifiers\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"Qualifier\" type= \"xs:string\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"AdditionalServiceInfoUris\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"URI\" type= \"xs:string\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"ServiceSupplyPoints\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"URI\" type= \"xs:string\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"expiredCertsRevocationInfo\" type= \"xs:dateTime\" minOccurs= \"0\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"DigestAlgoAndValues\" > <xs:sequence> <xs:element name= \"DigestAlgoAndValue\" type= \"DigestAlgoAndValue\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:schema>","title":"Appendix 3 - WSDL/XSD of SOAP Interface"},{"location":"siva3/appendix/wsdl/#validation-web-service-wsdl","text":"<wsdl:definitions xmlns:wsdl= \"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:soap= \"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:xrd= \"http://x-road.eu/xsd/xroad.xsd\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" xmlns:response= \"http://soap.webapp.siva.openeid.ee/response/\" name= \"SignatureValidationService\" > <wsdl:types> <xs:schema xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" > <xs:import namespace= \"http://x-road.eu/xsd/xroad.xsd\" schemaLocation= \"xroad.xsd\" /> <xs:import namespace= \"http://soap.webapp.siva.openeid.ee/response/\" schemaLocation= \"ValidationResponse.xsd\" /> <xs:element name= \"ValidateDocument\" type= \"tns:ValidateDocument\" /> <xs:element name= \"ValidationRequest\" type= \"tns:SoapValidationRequest\" /> <xs:element name= \"ValidateDocumentResponse\" type= \"response:ValidateDocumentResponse\" /> <xs:complexType name= \"ValidateDocument\" > <xs:sequence> <xs:element ref= \"tns:ValidationRequest\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"SoapValidationRequest\" > <xs:sequence> <xs:element name= \"Document\" type= \"xs:string\" /> <xs:element name= \"Filename\" type= \"xs:string\" /> <xs:element minOccurs= \"0\" name= \"ReportType\" type= \"xs:string\" /> <xs:element minOccurs= \"0\" name= \"DocumentType\" type= \"tns:DocumentType\" /> <xs:element minOccurs= \"0\" name= \"SignaturePolicy\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:simpleType name= \"DocumentType\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"XROAD\" /> </xs:restriction> </xs:simpleType> </xs:schema> </wsdl:types> <wsdl:message name= \"ValidateDocument\" > <wsdl:part element= \"tns:ValidateDocument\" name= \"parameters\" /> </wsdl:message> <wsdl:message name= \"ValidateDocumentResponse\" > <wsdl:part element= \"tns:ValidateDocumentResponse\" name= \"parameters\" /> </wsdl:message> <wsdl:message name= \"requestHeader\" > <wsdl:part name= \"client\" element= \"xrd:client\" /> <wsdl:part name= \"service\" element= \"xrd:service\" /> <wsdl:part name= \"id\" element= \"xrd:id\" /> <wsdl:part name= \"userId\" element= \"xrd:userId\" /> <wsdl:part name= \"issue\" element= \"xrd:issue\" /> <wsdl:part name= \"protocolVersion\" element= \"xrd:protocolVersion\" /> </wsdl:message> <wsdl:portType name= \"ValidationWebService\" > <wsdl:operation name= \"ValidateDocument\" > <wsdl:input message= \"tns:ValidateDocument\" name= \"ValidateDocument\" /> <wsdl:output message= \"tns:ValidateDocumentResponse\" name= \"ValidateDocumentResponse\" /> </wsdl:operation> </wsdl:portType> <wsdl:binding name= \"ValidationWebServiceSoapBinding\" type= \"tns:ValidationWebService\" > <soap:binding style= \"document\" transport= \"http://schemas.xmlsoap.org/soap/http\" /> <wsdl:operation name= \"ValidateDocument\" > <soap:operation soapAction= \"\" style= \"document\" /> <wsdl:input name= \"ValidateDocument\" > <soap:body use= \"literal\" /> </wsdl:input> <wsdl:output name= \"ValidateDocumentResponse\" > <soap:body use= \"literal\" /> </wsdl:output> </wsdl:operation> </wsdl:binding> <wsdl:binding name= \"XRoadValidationWebServiceSoapBinding\" type= \"tns:ValidationWebService\" > <soap:binding style= \"document\" transport= \"http://schemas.xmlsoap.org/soap/http\" /> <wsdl:operation name= \"ValidateDocument\" > <soap:operation soapAction= \"\" style= \"document\" /> <wsdl:input name= \"ValidateDocument\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:input> <wsdl:output name= \"ValidateDocumentResponse\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:output> </wsdl:operation> </wsdl:binding> <wsdl:service name= \"ValidationWebServiceService\" > <wsdl:port binding= \"tns:ValidationWebServiceSoapBinding\" name= \"ValidationWebServiceImplPort\" > <soap:address location= \"http://localhost:8080/soap/validationWebService\" /> </wsdl:port> </wsdl:service> <wsdl:service name= \"XRoadValidationWebService\" > <wsdl:port binding= \"tns:XRoadValidationWebServiceSoapBinding\" name= \"XRoadValidationWebServiceImplPort\" > <soap:address location= \"http://localhost:8080/soap/validationWebService\" /> </wsdl:port> </wsdl:service> </wsdl:definitions>","title":"Validation web service wsdl"},{"location":"siva3/appendix/wsdl/#hashcode-validation-web-service-wsdl","text":"<wsdl:definitions xmlns:wsdl= \"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:soap= \"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:xrd= \"http://x-road.eu/xsd/xroad.xsd\" xmlns:response= \"http://soap.webapp.siva.openeid.ee/response/\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" name= \"SignatureHashcodeValidationService\" > <wsdl:types> <xs:schema xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" > <xs:import namespace= \"http://x-road.eu/xsd/xroad.xsd\" schemaLocation= \"xroad.xsd\" /> <xs:import namespace= \"http://soap.webapp.siva.openeid.ee/response/\" schemaLocation= \"ValidationResponse.xsd\" /> <xs:element name= \"HashcodeValidationDocument\" type= \"tns:HashcodeValidationDocument\" /> <xs:element name= \"HashcodeValidationRequest\" type= \"tns:SoapHashcodeValidationRequest\" /> <xs:element name= \"HashcodeValidationResponse\" type= \"response:ValidateDocumentResponse\" /> <xs:complexType name= \"HashcodeValidationDocument\" > <xs:sequence> <xs:element ref= \"tns:HashcodeValidationRequest\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"SoapHashcodeValidationRequest\" > <xs:sequence> <xs:element name= \"SignatureFiles\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" name= \"SignatureFile\" type= \"tns:SignatureFile\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element minOccurs= \"0\" name= \"ReportType\" type= \"tns:ReportType\" default= \"SIMPLE\" /> <xs:element minOccurs= \"0\" name= \"SignaturePolicy\" type= \"tns:SignaturePolicy\" default= \"POLv4\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"SignatureFile\" > <xs:sequence> <xs:element name= \"Signature\" type= \"tns:NotEmptyString\" /> <xs:element minOccurs= \"0\" name= \"DataFiles\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" name= \"DataFile\" type= \"tns:HashDataFile\" /> </xs:sequence> </xs:complexType> </xs:element> </xs:sequence> </xs:complexType> <xs:complexType name= \"HashDataFile\" > <xs:sequence> <xs:element name= \"Filename\" type= \"tns:Filename\" /> <xs:element name= \"HashAlgo\" type= \"tns:HashAlgorithm\" /> <xs:element name= \"Hash\" type= \"tns:NotEmptyString\" /> </xs:sequence> </xs:complexType> <xs:simpleType name= \"NotEmptyString\" > <xs:restriction base= \"xs:string\" > <xs:minLength value= \"1\" /> <xs:pattern value= \"\\S+\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"Filename\" > <xs:restriction base= \"xs:string\" > <xs:minLength value= \"1\" /> <xs:maxLength value= \"260\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"ReportType\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"SIMPLE\" /> <xs:enumeration value= \"DETAILED\" /> <xs:enumeration value= \"DIAGNOSTIC\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"SignaturePolicy\" > <xs:restriction base= \"xs:string\" > <xs:minLength value= \"1\" /> <xs:maxLength value= \"100\" /> <xs:pattern value= \"[A-Za-z0-9_ -]*\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"HashAlgorithm\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"SHA1\" /> <xs:enumeration value= \"SHA224\" /> <xs:enumeration value= \"SHA256\" /> <xs:enumeration value= \"SHA384\" /> <xs:enumeration value= \"SHA512\" /> <xs:enumeration value= \"RIPEMD160\" /> <xs:enumeration value= \"MD2\" /> <xs:enumeration value= \"MD5\" /> </xs:restriction> </xs:simpleType> </xs:schema> </wsdl:types> <wsdl:message name= \"HashcodeValidationDocument\" > <wsdl:part element= \"tns:HashcodeValidationDocument\" name= \"parameters\" /> </wsdl:message> <wsdl:message name= \"HashcodeValidationResponse\" > <wsdl:part element= \"tns:HashcodeValidationResponse\" name= \"parameters\" /> </wsdl:message> <wsdl:message name= \"requestHeader\" > <wsdl:part name= \"client\" element= \"xrd:client\" /> <wsdl:part name= \"service\" element= \"xrd:service\" /> <wsdl:part name= \"id\" element= \"xrd:id\" /> <wsdl:part name= \"userId\" element= \"xrd:userId\" /> <wsdl:part name= \"issue\" element= \"xrd:issue\" /> <wsdl:part name= \"protocolVersion\" element= \"xrd:protocolVersion\" /> </wsdl:message> <wsdl:portType name= \"HashcodeValidationWebService\" > <wsdl:operation name= \"HashcodeValidationDocument\" > <wsdl:input message= \"tns:HashcodeValidationDocument\" name= \"HashcodeValidationDocument\" /> <wsdl:output message= \"tns:HashcodeValidationResponse\" name= \"HashcodeValidationResponse\" /> </wsdl:operation> </wsdl:portType> <wsdl:binding name= \"HashcodeValidationWebServiceSoapBinding\" type= \"tns:HashcodeValidationWebService\" > <soap:binding style= \"document\" transport= \"http://schemas.xmlsoap.org/soap/http\" /> <wsdl:operation name= \"HashcodeValidationDocument\" > <soap:operation soapAction= \"\" style= \"document\" /> <wsdl:input name= \"HashcodeValidationDocument\" > <soap:body use= \"literal\" /> </wsdl:input> <wsdl:output name= \"HashcodeValidationResponse\" > <soap:body use= \"literal\" /> </wsdl:output> </wsdl:operation> </wsdl:binding> <wsdl:binding name= \"XRoadHashcodeValidationWebServiceSoapBinding\" type= \"tns:HashcodeValidationWebService\" > <soap:binding style= \"document\" transport= \"http://schemas.xmlsoap.org/soap/http\" /> <wsdl:operation name= \"HashcodeValidationDocument\" > <soap:operation soapAction= \"\" style= \"document\" /> <wsdl:input name= \"HashcodeValidationDocument\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:input> <wsdl:output name= \"HashcodeValidationResponse\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:output> </wsdl:operation> </wsdl:binding> <wsdl:service name= \"HashcodeValidationWebServiceService\" > <wsdl:port binding= \"tns:HashcodeValidationWebServiceSoapBinding\" name= \"HashcodeValidationWebServiceImplPort\" > <soap:address location= \"http://localhost:8080/soap/hashcodeValidationWebService\" /> </wsdl:port> </wsdl:service> <wsdl:service name= \"XRoadHashcodeValidationWebService\" > <wsdl:port binding= \"tns:XRoadHashcodeValidationWebServiceSoapBinding\" name= \"XRoadHashcodeValidationWebServiceImplPort\" > <soap:address location= \"http://localhost:8080/soap/hashcodeValidationWebService\" /> </wsdl:port> </wsdl:service> </wsdl:definitions>","title":"Hashcode validation web service wsdl"},{"location":"siva3/appendix/wsdl/#data-files-web-service-wsdl","text":"<wsdl:definitions xmlns:wsdl= \"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:soap= \"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:xrd= \"http://x-road.eu/xsd/xroad.xsd\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" name= \"DataFilesService\" > <wsdl:types> <xs:schema xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/\" > <xs:import namespace= \"http://x-road.eu/xsd/xroad.xsd\" schemaLocation= \"xroad.xsd\" /> <xs:element name= \"GetDocumentDataFiles\" type= \"tns:GetDocumentDataFiles\" /> <xs:element name= \"GetDocumentDataFilesResponse\" type= \"tns:GetDocumentDataFilesResponse\" /> <xs:element name= \"DataFilesReport\" type= \"tns:DataFilesReport\" /> <xs:element name= \"DataFilesRequest\" type= \"tns:SoapDataFilesRequest\" /> <xs:complexType name= \"GetDocumentDataFiles\" > <xs:sequence> <xs:element ref= \"tns:DataFilesRequest\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"SoapDataFilesRequest\" > <xs:sequence> <xs:element name= \"Document\" type= \"xs:string\" /> <xs:element name= \"Filename\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"GetDocumentDataFilesResponse\" > <xs:sequence> <xs:element minOccurs= \"0\" ref= \"tns:DataFilesReport\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"DataFilesReport\" > <xs:sequence> <xs:element name= \"DataFiles\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"DataFile\" type= \"tns:DataFile\" /> </xs:sequence> </xs:complexType> </xs:element> </xs:sequence> </xs:complexType> <xs:complexType name= \"DataFile\" > <xs:sequence> <xs:element name= \"Base64\" type= \"xs:string\" /> <xs:element name= \"Filename\" type= \"xs:string\" /> <xs:element name= \"MimeType\" type= \"xs:string\" /> <xs:element name= \"Size\" type= \"xs:long\" /> </xs:sequence> </xs:complexType> </xs:schema> </wsdl:types> <wsdl:message name= \"GetDocumentDataFiles\" > <wsdl:part element= \"tns:GetDocumentDataFiles\" name= \"parameters\" /> </wsdl:message> <wsdl:message name= \"GetDocumentDataFilesResponse\" > <wsdl:part element= \"tns:GetDocumentDataFilesResponse\" name= \"parameters\" /> </wsdl:message> <wsdl:message name= \"requestHeader\" > <wsdl:part name= \"client\" element= \"xrd:client\" /> <wsdl:part name= \"service\" element= \"xrd:service\" /> <wsdl:part name= \"id\" element= \"xrd:id\" /> <wsdl:part name= \"userId\" element= \"xrd:userId\" /> <wsdl:part name= \"issue\" element= \"xrd:issue\" /> <wsdl:part name= \"protocolVersion\" element= \"xrd:protocolVersion\" /> </wsdl:message> <wsdl:portType name= \"DataFilesWebService\" > <wsdl:operation name= \"GetDocumentDataFiles\" > <wsdl:input message= \"tns:GetDocumentDataFiles\" name= \"GetDocumentDataFiles\" /> <wsdl:output message= \"tns:GetDocumentDataFilesResponse\" name= \"GetDocumentDataFilesResponse\" /> </wsdl:operation> </wsdl:portType> <wsdl:binding name= \"DataFilesWebServiceSoapBinding\" type= \"tns:DataFilesWebService\" > <soap:binding style= \"document\" transport= \"http://schemas.xmlsoap.org/soap/http\" /> <wsdl:operation name= \"GetDocumentDataFiles\" > <soap:operation soapAction= \"\" style= \"document\" /> <wsdl:input name= \"GetDocumentDataFiles\" > <soap:body use= \"literal\" /> </wsdl:input> <wsdl:output name= \"GetDocumentDataFilesResponse\" > <soap:body use= \"literal\" /> </wsdl:output> </wsdl:operation> </wsdl:binding> <wsdl:binding name= \"XRoadDataFilesWebServiceSoapBinding\" type= \"tns:DataFilesWebService\" > <soap:binding style= \"document\" transport= \"http://schemas.xmlsoap.org/soap/http\" /> <wsdl:operation name= \"GetDocumentDataFiles\" > <soap:operation soapAction= \"\" style= \"document\" /> <wsdl:input name= \"GetDocumentDataFiles\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:input> <wsdl:output name= \"GetDocumentDataFilesResponse\" > <soap:body use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"client\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"service\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"id\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"userId\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"issue\" use= \"literal\" /> <soap:header message= \"tns:requestHeader\" part= \"protocolVersion\" use= \"literal\" /> </wsdl:output> </wsdl:operation> </wsdl:binding> <wsdl:service name= \"DataFilesWebServiceService\" > <wsdl:port binding= \"tns:DataFilesWebServiceSoapBinding\" name= \"DataFilesWebServiceImplPort\" > <soap:address location= \"http://localhost:8080/soap/dataFilesWebService\" /> </wsdl:port> </wsdl:service> <wsdl:service name= \"XRoadDataFilesWebService\" > <wsdl:port binding= \"tns:XRoadDataFilesWebServiceSoapBinding\" name= \"XRoadDataFilesWebServiceImplPort\" > <soap:address location= \"http://localhost:8080/soap/dataFilesWebService\" /> </wsdl:port> </wsdl:service> </wsdl:definitions>","title":"Data files web service wsdl"},{"location":"siva3/appendix/wsdl/#validation-response-xsd","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <xs:schema elementFormDefault= \"qualified\" targetNamespace= \"http://soap.webapp.siva.openeid.ee/response/\" xmlns= \"http://soap.webapp.siva.openeid.ee/response/\" xmlns:tns= \"http://soap.webapp.siva.openeid.ee/response/\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:detailed= \"http://dss.esig.europa.eu/validation/detailed-report\" xmlns:diagnostic= \"http://dss.esig.europa.eu/validation/diagnostic\" > <xs:import namespace= \"http://dss.esig.europa.eu/validation/detailed-report\" schemaLocation= \"DetailedReport.xsd\" /> <xs:import namespace= \"http://dss.esig.europa.eu/validation/diagnostic\" schemaLocation= \"DiagnosticData.xsd\" /> <xs:element name= \"ValidationReport\" type= \"tns:ValidationReport\" /> <xs:element name= \"ValidationConclusion\" type= \"tns:ValidationConclusion\" /> <xs:element name= \"ValidationProcess\" substitutionGroup= \"detailed:DetailedReport\" /> <xs:element name= \"DiagnosticData\" substitutionGroup= \"diagnostic:DiagnosticData\" /> <xs:complexType name= \"ValidateDocumentResponse\" > <xs:sequence> <xs:element ref= \"tns:ValidationReport\" /> <xs:element minOccurs= \"0\" name= \"ValidationReportSignature\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"ValidationReport\" > <xs:sequence> <xs:element ref= \"tns:ValidationConclusion\" /> <xs:element minOccurs= \"0\" ref= \"tns:ValidationProcess\" /> <xs:element minOccurs= \"0\" ref= \"tns:DiagnosticData\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"ValidationConclusion\" > <xs:sequence> <xs:element name= \"Policy\" type= \"tns:Policy\" /> <xs:element name= \"ValidationTime\" type= \"xs:string\" /> <xs:element name= \"ValidatedDocument\" type= \"tns:ValidatedDocumentData\" /> <xs:element name= \"ValidationLevel\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"ValidationWarnings\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"ValidationWarning\" type= \"tns:ValidationWarning\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"SignatureForm\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"Signatures\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"Signature\" type= \"tns:SignatureValidationData\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"TimeStampTokens\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element minOccurs= \"0\" maxOccurs= \"unbounded\" name= \"TimeStampToken\" type= \"tns:TimeStampTokenData\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"ValidSignaturesCount\" minOccurs= \"0\" type= \"xs:int\" /> <xs:element name= \"SignaturesCount\" minOccurs= \"0\" type= \"xs:int\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"Policy\" > <xs:sequence> <xs:element name= \"PolicyDescription\" type= \"xs:string\" /> <xs:element name= \"PolicyName\" type= \"xs:string\" /> <xs:element name= \"PolicyUrl\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"TimeStampTokenData\" > <xs:sequence> <xs:element name= \"Indication\" type= \"tns:Indication\" /> <xs:element name= \"SignedBy\" type= \"xs:string\" /> <xs:element name= \"SignedTime\" type= \"xs:string\" /> <xs:element name= \"Errors\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"Error\" type= \"tns:Error\" /> </xs:sequence> </xs:complexType> </xs:element> </xs:sequence> </xs:complexType> <xs:complexType name= \"SignatureValidationData\" > <xs:sequence> <xs:element name= \"Id\" type= \"xs:string\" /> <xs:element name= \"SignatureFormat\" type= \"xs:string\" /> <xs:element name= \"SignatureMethod\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"SignatureLevel\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"SignedBy\" type= \"xs:string\" /> <xs:element name= \"SubjectDistinguishedName\" minOccurs= \"0\" type= \"tns:SubjectDistinguishedName\" /> <xs:element name= \"Certificates\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"Certificate\" type= \"tns:Certificate\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"Indication\" type= \"tns:Indication\" /> <xs:element name= \"SubIndication\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"Errors\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"Error\" type= \"tns:Error\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"SignatureScopes\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" name= \"SignatureScope\" type= \"tns:SignatureScope\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"ClaimedSigningTime\" type= \"xs:string\" /> <xs:element name= \"Warnings\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element maxOccurs= \"unbounded\" minOccurs= \"0\" name= \"Warning\" type= \"tns:Warning\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"Info\" minOccurs= \"0\" type= \"tns:Info\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"Error\" > <xs:sequence> <xs:element name= \"Content\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"ValidationWarning\" > <xs:sequence> <xs:element name= \"Content\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"SignatureScope\" > <xs:sequence> <xs:element name= \"Name\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"Scope\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"Content\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"HashAlgo\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"Hash\" minOccurs= \"0\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"Warning\" > <xs:sequence> <xs:element name= \"Content\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"Info\" > <xs:sequence> <xs:element minOccurs= \"0\" name= \"BestSignatureTime\" type= \"xs:string\" /> <xs:element name= \"TimeAssertionMessageImprint\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"SignerRole\" minOccurs= \"0\" maxOccurs= \"unbounded\" type= \"tns:SignerRole\" /> <xs:element minOccurs= \"0\" name= \"SignatureProductionPlace\" type= \"tns:SignatureProductionPlace\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"SignerRole\" > <xs:sequence> <xs:element name= \"ClaimedRole\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"SignatureProductionPlace\" > <xs:sequence> <xs:element minOccurs= \"0\" name= \"CountryName\" type= \"xs:string\" /> <xs:element minOccurs= \"0\" name= \"StateOrProvince\" type= \"xs:string\" /> <xs:element minOccurs= \"0\" name= \"City\" type= \"xs:string\" /> <xs:element minOccurs= \"0\" name= \"PostalCode\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"SubjectDistinguishedName\" > <xs:sequence> <xs:element name= \"SerialNumber\" type= \"xs:string\" /> <xs:element name= \"CommonName\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"Certificate\" > <xs:sequence> <xs:element name= \"Content\" type= \"xs:string\" /> <xs:element name= \"CommonName\" type= \"xs:string\" /> <xs:element name= \"Issuer\" type= \"tns:Certificate\" /> <xs:element name= \"Type\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> <xs:simpleType name= \"Indication\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"TOTAL-PASSED\" /> <xs:enumeration value= \"TOTAL-FAILED\" /> <xs:enumeration value= \"INDETERMINATE\" /> </xs:restriction> </xs:simpleType> <xs:complexType name= \"ValidatedDocumentData\" > <xs:sequence> <xs:element name= \"Filename\" type= \"xs:string\" /> <xs:element name= \"FileHash\" minOccurs= \"0\" type= \"xs:string\" /> <xs:element name= \"HashAlgo\" minOccurs= \"0\" type= \"xs:string\" /> </xs:sequence> </xs:complexType> </xs:schema>","title":"Validation response XSD"},{"location":"siva3/appendix/wsdl/#dss-detailed-report-xsd","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <xs:schema attributeFormDefault= \"unqualified\" elementFormDefault= \"qualified\" targetNamespace= \"http://dss.esig.europa.eu/validation/detailed-report\" xmlns= \"http://dss.esig.europa.eu/validation/detailed-report\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" > <xs:element name= \"DetailedReport\" > <xs:complexType> <xs:sequence> <xs:element type= \"Signature\" name= \"Signatures\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element type= \"Certificate\" name= \"Certificate\" minOccurs= \"0\" maxOccurs= \"1\" /> <xs:element type= \"BasicBuildingBlocks\" name= \"BasicBuildingBlocks\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element name= \"TLAnalysis\" type= \"TLAnalysis\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:complexType name= \"Signature\" > <xs:sequence> <xs:element type= \"ValidationProcessBasicSignatures\" name= \"ValidationProcessBasicSignatures\" minOccurs= \"0\" /> <xs:element type= \"ValidationProcessTimestamps\" name= \"ValidationProcessTimestamps\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element type= \"ValidationProcessLongTermData\" name= \"ValidationProcessLongTermData\" minOccurs= \"0\" /> <xs:element type= \"ValidationProcessArchivalData\" name= \"ValidationProcessArchivalData\" minOccurs= \"0\" /> <xs:element type= \"ValidationSignatureQualification\" name= \"ValidationSignatureQualification\" minOccurs= \"0\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"CounterSignature\" type= \"xs:boolean\" use= \"optional\" /> </xs:complexType> <xs:complexType name= \"Certificate\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:sequence> <xs:element name= \"ValidationCertificateQualification\" type= \"ValidationCertificateQualification\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"BasicBuildingBlocks\" > <xs:sequence> <xs:element type= \"FC\" name= \"FC\" minOccurs= \"0\" /> <xs:element type= \"ISC\" name= \"ISC\" minOccurs= \"0\" /> <xs:element type= \"VCI\" name= \"VCI\" minOccurs= \"0\" /> <xs:element type= \"CV\" name= \"CV\" minOccurs= \"0\" /> <xs:element type= \"SAV\" name= \"SAV\" minOccurs= \"0\" /> <xs:element type= \"XCV\" name= \"XCV\" minOccurs= \"0\" /> <xs:element type= \"PSV\" name= \"PSV\" minOccurs= \"0\" /> <xs:element type= \"PCV\" name= \"PCV\" minOccurs= \"0\" /> <xs:element type= \"VTS\" name= \"VTS\" minOccurs= \"0\" /> <xs:element name= \"CertificateChain\" type= \"CertificateChain\" /> <xs:element type= \"Conclusion\" name= \"Conclusion\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"Type\" type= \"Context\" use= \"required\" /> </xs:complexType> <xs:complexType name= \"TLAnalysis\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:attribute name= \"CountryCode\" type= \"xs:string\" use= \"required\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ValidationSignatureQualification\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:sequence> <xs:element name= \"ValidationCertificateQualification\" type= \"ValidationCertificateQualification\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"SignatureQualification\" type= \"SignatureQualification\" use= \"optional\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ValidationCertificateQualification\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"DateTime\" type= \"xs:dateTime\" /> <xs:attribute name= \"ValidationTime\" type= \"ValidationTime\" /> <xs:attribute name= \"CertificateQualification\" type= \"CertificateQualification\" use= \"optional\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ConstraintsConclusion\" > <xs:sequence> <xs:element type= \"Constraint\" name= \"Constraint\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element type= \"Conclusion\" name= \"Conclusion\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"ConstraintsConclusionWithControlTime\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:sequence> <xs:element name= \"ControlTime\" type= \"xs:dateTime\" minOccurs= \"0\" /> </xs:sequence> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ValidationProcessBasicSignatures\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:attribute name= \"BestSignatureTime\" type= \"xs:dateTime\" use= \"required\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ValidationProcessTimestamps\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"Type\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"ProductionTime\" type= \"xs:dateTime\" use= \"required\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ValidationProcessLongTermData\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:attribute name= \"BestSignatureTime\" type= \"xs:dateTime\" use= \"required\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ValidationProcessArchivalData\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:attribute name= \"BestSignatureTime\" type= \"xs:dateTime\" use= \"required\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"FC\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"ISC\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:sequence> <xs:element name= \"CertificateChain\" type= \"CertificateChain\" /> </xs:sequence> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"VCI\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"RFC\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"CV\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"SAV\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"XCV\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:sequence> <xs:element name= \"SubXCV\" type= \"SubXCV\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"SubXCV\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusion\" > <xs:sequence> <xs:element name= \"RFC\" type= \"RFC\" minOccurs= \"0\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"TrustAnchor\" type= \"xs:boolean\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"VTS\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusionWithControlTime\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"PCV\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusionWithControlTime\" /> </xs:complexContent> </xs:complexType> <xs:complexType name= \"PSV\" > <xs:complexContent> <xs:extension base= \"ConstraintsConclusionWithControlTime\" /> </xs:complexContent> </xs:complexType> <!-- Not supported --> <!-- <xs:complexType name=\"ERV\"> --> <!-- <xs:complexContent> --> <!-- <xs:extension base=\"ConstraintsConclusion\" /> --> <!-- </xs:complexContent> --> <!-- </xs:complexType> --> <xs:complexType name= \"Constraint\" > <xs:sequence> <xs:element type= \"Name\" name= \"Name\" /> <xs:element type= \"Status\" name= \"Status\" /> <xs:element type= \"Name\" name= \"Error\" minOccurs= \"0\" /> <xs:element type= \"Name\" name= \"Warning\" minOccurs= \"0\" /> <xs:element type= \"Name\" name= \"Info\" minOccurs= \"0\" /> <xs:element type= \"xs:string\" name= \"AdditionalInfo\" minOccurs= \"0\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"optional\" /> <!-- In case of constraint with a BBB --> </xs:complexType> <xs:complexType name= \"Conclusion\" > <xs:sequence> <xs:element type= \"Indication\" name= \"Indication\" /> <xs:element type= \"SubIndication\" name= \"SubIndication\" minOccurs= \"0\" /> <xs:element type= \"Name\" name= \"Errors\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element type= \"Name\" name= \"Warnings\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element type= \"Name\" name= \"Infos\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"Name\" > <xs:simpleContent> <xs:extension base= \"xs:string\" > <xs:attribute name= \"NameId\" type= \"xs:string\" /> </xs:extension> </xs:simpleContent> </xs:complexType> <xs:simpleType name= \"Status\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"OK\" /> <xs:enumeration value= \"NOT OK\" /> <xs:enumeration value= \"IGNORED\" /> <xs:enumeration value= \"INFORMATION\" /> <xs:enumeration value= \"WARNING\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"Indication\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"PASSED\" /> <xs:enumeration value= \"INDETERMINATE\" /> <xs:enumeration value= \"FAILED\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"SubIndication\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"NO_SIGNING_CERTIFICATE_FOUND\" /> <xs:enumeration value= \"FORMAT_FAILURE\" /> <xs:enumeration value= \"SIGNATURE_POLICY_NOT_AVAILABLE\" /> <xs:enumeration value= \"POLICY_PROCESSING_ERROR\" /> <xs:enumeration value= \"OUT_OF_BOUNDS_NO_POE\" /> <xs:enumeration value= \"NO_CERTIFICATE_CHAIN_FOUND\" /> <xs:enumeration value= \"TRY_LATER\" /> <xs:enumeration value= \"REVOKED_NO_POE\" /> <xs:enumeration value= \"REVOKED_CA_NO_POE\" /> <xs:enumeration value= \"CHAIN_CONSTRAINTS_FAILURE\" /> <xs:enumeration value= \"CRYPTO_CONSTRAINTS_FAILURE\" /> <xs:enumeration value= \"CRYPTO_CONSTRAINTS_FAILURE_NO_POE\" /> <xs:enumeration value= \"SIGNED_DATA_NOT_FOUND\" /> <xs:enumeration value= \"HASH_FAILURE\" /> <xs:enumeration value= \"SIG_CRYPTO_FAILURE\" /> <xs:enumeration value= \"SIG_CONSTRAINTS_FAILURE\" /> <xs:enumeration value= \"NOT_YET_VALID\" /> <xs:enumeration value= \"TIMESTAMP_ORDER_FAILURE\" /> <xs:enumeration value= \"REVOKED\" /> <xs:enumeration value= \"EXPIRED\" /> <xs:enumeration value= \"NO_POE\" /> <xs:enumeration value= \"CERTIFICATE_CHAIN_GENERAL_FAILURE\" /> <xs:enumeration value= \"UNEXPECTED_ERROR\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"CertificateQualification\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"QC Cert for ESig with QSCD\" /> <xs:enumeration value= \"QC Cert for ESeal with QSCD\" /> <!-- non sense <xs:enumeration value=\"QC Cert for WSA with QSCD\" /> --> <xs:enumeration value= \"QC Cert for ESig\" /> <xs:enumeration value= \"QC Cert for ESeal\" /> <xs:enumeration value= \"QC Cert for WSA\" /> <xs:enumeration value= \"Cert for ESig\" /> <xs:enumeration value= \"Cert for ESeal\" /> <xs:enumeration value= \"Cert for WSA\" /> <xs:enumeration value= \"N/A\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"SignatureQualification\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"QESig\" /> <xs:enumeration value= \"QESeal\" /> <xs:enumeration value= \"QES?\" /> <xs:enumeration value= \"AdESig-QC\" /> <xs:enumeration value= \"AdESeal-QC\" /> <xs:enumeration value= \"AdES?-QC\" /> <xs:enumeration value= \"AdESig\" /> <xs:enumeration value= \"AdESeal\" /> <xs:enumeration value= \"AdES?\" /> <xs:enumeration value= \"Indeterminate QESig\" /> <xs:enumeration value= \"Indeterminate QESeal\" /> <xs:enumeration value= \"Indeterminate QES?\" /> <xs:enumeration value= \"Indeterminate AdESig-QC\" /> <xs:enumeration value= \"Indeterminate AdESeal-QC\" /> <xs:enumeration value= \"Indeterminate AdES?-QC\" /> <xs:enumeration value= \"Indeterminate AdESig\" /> <xs:enumeration value= \"Indeterminate AdESeal\" /> <xs:enumeration value= \"Indeterminate AdES?\" /> <xs:enumeration value= \"Not AdES but QC with QSCD\" /> <xs:enumeration value= \"Not AdES but QC\" /> <xs:enumeration value= \"Not AdES\" /> <xs:enumeration value= \"N/A\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"Context\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"SIGNATURE\" /> <xs:enumeration value= \"COUNTER_SIGNATURE\" /> <xs:enumeration value= \"TIMESTAMP\" /> <xs:enumeration value= \"REVOCATION\" /> <!-- For Qualification --> <xs:enumeration value= \"CERTIFICATE\" /> </xs:restriction> </xs:simpleType> <xs:simpleType name= \"ValidationTime\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"CERTIFICATE_ISSUANCE_TIME\" /> <xs:enumeration value= \"BEST_SIGNATURE_TIME\" /> <xs:enumeration value= \"VALIDATION_TIME\" /> </xs:restriction> </xs:simpleType> <xs:complexType name= \"CertificateChain\" > <xs:sequence> <xs:element name= \"ChainItem\" minOccurs= \"0\" maxOccurs= \"unbounded\" > <xs:complexType> <xs:sequence> <xs:element name= \"Source\" type= \"xs:string\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> </xs:complexType> </xs:element> </xs:sequence> </xs:complexType> </xs:schema>","title":"DSS detailed report XSD"},{"location":"siva3/appendix/wsdl/#dss-diagnostic-data-report-xsd","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <xs:schema elementFormDefault= \"qualified\" targetNamespace= \"http://dss.esig.europa.eu/validation/diagnostic\" xmlns= \"http://dss.esig.europa.eu/validation/diagnostic\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" > <xs:element name= \"DiagnosticData\" > <xs:complexType> <xs:sequence> <xs:element name= \"DocumentName\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"ValidationDate\" type= \"xs:dateTime\" /> <xs:element name= \"ContainerInfo\" type= \"ContainerInfo\" minOccurs= \"0\" /> <xs:element name= \"Signatures\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"Signature\" type= \"Signature\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"UsedCertificates\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"Certificate\" type= \"Certificate\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"TrustedLists\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"TrustedList\" type= \"TrustedList\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"ListOfTrustedLists\" type= \"TrustedList\" minOccurs= \"0\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:complexType name= \"ContainerInfo\" > <xs:sequence> <xs:element name= \"ContainerType\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"ZipComment\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"MimeTypeFilePresent\" type= \"xs:boolean\" minOccurs= \"0\" /> <xs:element name= \"MimeTypeContent\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"ManifestFiles\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"ManifestFile\" type= \"ManifestFile\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"ContentFiles\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"ContentFile\" type= \"xs:string\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> </xs:sequence> </xs:complexType> <xs:complexType name= \"ManifestFile\" > <xs:sequence> <xs:element name= \"Filename\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"SignatureFilename\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"Entries\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"Entry\" type= \"xs:string\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> </xs:sequence> </xs:complexType> <xs:complexType name= \"Signature\" > <xs:sequence> <xs:element name= \"SignatureFilename\" type= \"xs:string\" /> <xs:element name= \"ParentId\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"ErrorMessage\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"DateTime\" type= \"xs:dateTime\" minOccurs= \"0\" /> <xs:element name= \"SignatureFormat\" type= \"xs:string\" /> <xs:element name= \"StructuralValidation\" type= \"StructuralValidation\" minOccurs= \"0\" /> <xs:element name= \"DigestMatchers\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"DigestMatcher\" type= \"DigestMatcher\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"BasicSignature\" type= \"BasicSignature\" /> <xs:element name= \"SigningCertificate\" type= \"SigningCertificate\" minOccurs= \"0\" /> <xs:element name= \"CertificateChain\" type= \"CertificateChain\" minOccurs= \"0\" /> <xs:element name= \"ContentType\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"ContentIdentifier\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"ContentHints\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"SignatureProductionPlace\" type= \"SignatureProductionPlace\" minOccurs= \"0\" /> <xs:element name= \"CommitmentTypeIndication\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"Indication\" type= \"xs:string\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"ClaimedRoles\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"ClaimedRoles\" type= \"xs:string\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"CertifiedRoles\" type= \"CertifiedRole\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> <xs:element name= \"Policy\" type= \"Policy\" minOccurs= \"0\" /> <xs:element name= \"Timestamps\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"Timestamp\" type= \"Timestamp\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"SignatureScopes\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"SignatureScope\" type= \"SignatureScope\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"CounterSignature\" type= \"xs:boolean\" use= \"optional\" /> </xs:complexType> <xs:complexType name= \"SignatureProductionPlace\" > <xs:sequence> <xs:element name= \"Address\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"City\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"StateOrProvince\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"PostalCode\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"CountryName\" type= \"xs:string\" minOccurs= \"0\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"Policy\" > <xs:sequence> <xs:element name= \"Id\" type= \"xs:string\" /> <xs:element name= \"Url\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"Notice\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"DigestAlgoAndValue\" type= \"DigestAlgoAndValue\" minOccurs= \"0\" /> <xs:element name= \"Asn1Processable\" type= \"xs:boolean\" minOccurs= \"0\" /> <xs:element name= \"Identified\" type= \"xs:boolean\" minOccurs= \"0\" /> <xs:element name= \"Status\" type= \"xs:boolean\" minOccurs= \"0\" /> <xs:element name= \"ProcessingError\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"DigestAlgorithmsEqual\" type= \"xs:boolean\" minOccurs= \"0\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"Certificate\" > <xs:sequence> <xs:element name= \"SubjectDistinguishedName\" type= \"DistinguishedName\" maxOccurs= \"unbounded\" /> <xs:element name= \"IssuerDistinguishedName\" type= \"DistinguishedName\" maxOccurs= \"unbounded\" /> <xs:element name= \"SerialNumber\" type= \"xs:integer\" /> <xs:element name= \"CommonName\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"Locality\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"State\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"CountryName\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"OrganizationName\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"GivenName\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"OrganizationalUnit\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"Surname\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"Pseudonym\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"Email\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"AuthorityInformationAccessUrls\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"Url\" type= \"xs:string\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"CRLDistributionPoints\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"Url\" type= \"xs:string\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"OCSPAccessUrls\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"Url\" type= \"xs:string\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"DigestAlgoAndValues\" type= \"DigestAlgoAndValues\" minOccurs= \"0\" /> <xs:element name= \"NotAfter\" type= \"xs:dateTime\" /> <xs:element name= \"NotBefore\" type= \"xs:dateTime\" /> <xs:element name= \"PublicKeySize\" type= \"xs:int\" /> <xs:element name= \"PublicKeyEncryptionAlgo\" type= \"xs:string\" /> <xs:element name= \"KeyUsageBits\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"KeyUsage\" type= \"xs:string\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"ExtendedKeyUsages\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"oid\" type= \"OID\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"IdPkixOcspNoCheck\" type= \"xs:boolean\" minOccurs= \"0\" /> <xs:element name= \"BasicSignature\" type= \"BasicSignature\" /> <xs:element name= \"SigningCertificate\" type= \"SigningCertificate\" minOccurs= \"0\" /> <xs:element name= \"CertificateChain\" type= \"CertificateChain\" minOccurs= \"0\" /> <xs:element name= \"Trusted\" type= \"xs:boolean\" /> <xs:element name= \"SelfSigned\" type= \"xs:boolean\" /> <xs:element name= \"CertificatePolicies\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"certificatePolicy\" type= \"CertificatePolicy\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"QCStatementIds\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"oid\" type= \"OID\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"QCTypes\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"oid\" type= \"OID\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"TrustedServiceProviders\" > <xs:complexType> <xs:sequence> <xs:element name= \"TrustedServiceProvider\" type= \"TrustedServiceProvider\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"Revocations\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"Revocation\" type= \"Revocation\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"Base64Encoded\" type= \"xs:base64Binary\" minOccurs= \"0\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> </xs:complexType> <xs:complexType name= \"OID\" > <xs:simpleContent> <xs:extension base= \"xs:string\" > <xs:attribute name= \"Description\" type= \"xs:string\" use= \"optional\" /> </xs:extension> </xs:simpleContent> </xs:complexType> <xs:complexType name= \"CertificatePolicy\" > <xs:complexContent> <xs:extension base= \"OID\" > <xs:attribute name= \"cpsUrl\" type= \"xs:string\" use= \"optional\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:complexType name= \"DistinguishedName\" > <xs:simpleContent> <xs:extension base= \"xs:string\" > <xs:attribute name= \"Format\" type= \"xs:string\" use= \"optional\" /> </xs:extension> </xs:simpleContent> </xs:complexType> <xs:complexType name= \"SignatureScope\" > <xs:simpleContent> <xs:extension base= \"xs:string\" > <xs:attribute name= \"name\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"scope\" type= \"ScopeType\" use= \"required\" /> </xs:extension> </xs:simpleContent> </xs:complexType> <xs:simpleType name= \"ScopeType\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"FULL\" /> <xs:enumeration value= \"PARTIAL\" /> </xs:restriction> </xs:simpleType> <xs:complexType name= \"StructuralValidation\" > <xs:sequence> <xs:element name= \"Valid\" type= \"xs:boolean\" minOccurs= \"0\" /> <xs:element name= \"Message\" type= \"xs:string\" minOccurs= \"0\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"BasicSignature\" > <xs:sequence> <xs:element name= \"EncryptionAlgoUsedToSignThisToken\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"KeyLengthUsedToSignThisToken\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"DigestAlgoUsedToSignThisToken\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"MaskGenerationFunctionUsedToSignThisToken\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"SignatureIntact\" type= \"xs:boolean\" /> <xs:element name= \"SignatureValid\" type= \"xs:boolean\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"SigningCertificate\" > <xs:sequence> <xs:element name= \"AttributePresent\" type= \"xs:boolean\" minOccurs= \"0\" /> <xs:element name= \"DigestValuePresent\" type= \"xs:boolean\" minOccurs= \"0\" /> <xs:element name= \"DigestValueMatch\" type= \"xs:boolean\" minOccurs= \"0\" /> <xs:element name= \"IssuerSerialMatch\" type= \"xs:boolean\" minOccurs= \"0\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> </xs:complexType> <xs:complexType name= \"TimestampedObjects\" > <xs:sequence> <xs:element name= \"TimestampedObject\" type= \"TimestampedObject\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"TimestampedObject\" > <xs:sequence> <xs:element name= \"DigestAlgoAndValue\" type= \"DigestAlgoAndValue\" minOccurs= \"0\" maxOccurs= \"1\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"optional\" /> <xs:attribute name= \"Category\" type= \"TimestampedObjectType\" use= \"required\" /> </xs:complexType> <xs:simpleType name= \"TimestampedObjectType\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <xs:enumeration value= \"CERTIFICATE\" /> <xs:enumeration value= \"SIGNATURE\" /> <xs:enumeration value= \"TIMESTAMP\" /> <xs:enumeration value= \"REVOCATION\" /> </xs:restriction> </xs:simpleType> <xs:complexType name= \"Certificate\" > <xs:sequence> <xs:element name= \"ChainItem\" minOccurs= \"0\" maxOccurs= \"unbounded\" > <xs:complexType> <xs:sequence> <xs:element name= \"Source\" type= \"xs:string\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> </xs:complexType> </xs:element> </xs:sequence> </xs:complexType> <xs:complexType name= \"CertifiedRole\" > <xs:sequence> <xs:element name= \"CertifiedRole\" type= \"xs:string\" /> <xs:element name= \"NotAfter\" type= \"xs:dateTime\" /> <xs:element name= \"NotBefore\" type= \"xs:dateTime\" /> </xs:sequence> <xs:attribute name= \"Category\" type= \"xs:string\" use= \"required\" /> </xs:complexType> <xs:complexType name= \"DigestAlgoAndValue\" > <xs:sequence> <xs:element name= \"DigestMethod\" type= \"xs:string\" minOccurs= \"0\" /> <!-- Optional in case the digest cannot be retrieved --> <xs:element name= \"DigestValue\" type= \"xs:string\" minOccurs= \"0\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"DigestMatcher\" > <xs:complexContent> <xs:extension base= \"DigestAlgoAndValue\" > <xs:sequence> <xs:element name= \"DataFound\" type= \"xs:boolean\" /> <xs:element name= \"DataIntact\" type= \"xs:boolean\" /> </xs:sequence> <xs:attribute name= \"type\" type= \"DigestMatcherType\" use= \"required\" /> <xs:attribute name= \"name\" type= \"xs:string\" use= \"optional\" /> </xs:extension> </xs:complexContent> </xs:complexType> <xs:simpleType name= \"DigestMatcherType\" final= \"restriction\" > <xs:restriction base= \"xs:string\" > <!-- XAdES --> <xs:enumeration value= \"REFERENCE\" /> <xs:enumeration value= \"OBJECT\" /> <xs:enumeration value= \"MANIFEST\" /> <xs:enumeration value= \"MANIFEST_ENTRY\" /> <xs:enumeration value= \"SIGNED_PROPERTIES\" /> <!-- CAdES --> <xs:enumeration value= \"MESSAGE_DIGEST\" /> <!-- TIMESTAMP --> <xs:enumeration value= \"MESSAGE_IMPRINT\" /> </xs:restriction> </xs:simpleType> <xs:complexType name= \"Timestamp\" > <xs:sequence> <xs:element name= \"ProductionTime\" type= \"xs:dateTime\" /> <xs:element name= \"DigestMatcher\" type= \"DigestMatcher\" /> <xs:element name= \"BasicSignature\" type= \"BasicSignature\" /> <xs:element name= \"SigningCertificate\" type= \"SigningCertificate\" minOccurs= \"0\" /> <xs:element name= \"CertificateChain\" type= \"CertificateChain\" minOccurs= \"0\" /> <xs:element name= \"TimestampedObjects\" type= \"TimestampedObjects\" minOccurs= \"0\" /> <xs:element name= \"Base64Encoded\" type= \"xs:base64Binary\" minOccurs= \"0\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> <xs:attribute name= \"Type\" type= \"xs:string\" use= \"required\" /> </xs:complexType> <xs:complexType name= \"Revocation\" > <xs:sequence> <xs:element name= \"Origin\" type= \"xs:string\" /> <xs:element name= \"Source\" type= \"xs:string\" /> <xs:element name= \"SourceAddress\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"Available\" type= \"xs:boolean\" minOccurs= \"0\" /> <xs:element name= \"Status\" type= \"xs:boolean\" /> <xs:element name= \"Reason\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"ProductionDate\" type= \"xs:dateTime\" minOccurs= \"0\" /> <!-- Can be null in case of no SUCCESSFUL response of OCSP --> <xs:element name= \"ThisUpdate\" type= \"xs:dateTime\" minOccurs= \"0\" /> <xs:element name= \"NextUpdate\" type= \"xs:dateTime\" minOccurs= \"0\" /> <xs:element name= \"RevocationDate\" type= \"xs:dateTime\" minOccurs= \"0\" /> <xs:element name= \"ExpiredCertsOnCRL\" type= \"xs:dateTime\" minOccurs= \"0\" /> <!-- CRL --> <xs:element name= \"ArchiveCutOff\" type= \"xs:dateTime\" minOccurs= \"0\" /> <!-- OCSP --> <xs:element name= \"CertHashExtensionPresent\" type= \"xs:boolean\" minOccurs= \"0\" /> <!-- OCSP --> <xs:element name= \"CertHashExtensionMatch\" type= \"xs:boolean\" minOccurs= \"0\" /> <!-- OCSP --> <xs:element name= \"DigestAlgoAndValues\" type= \"DigestAlgoAndValues\" minOccurs= \"0\" /> <xs:element name= \"BasicSignature\" type= \"BasicSignature\" minOccurs= \"0\" /> <!-- Can be null in case of no SUCCESSFUL response of OCSP --> <xs:element name= \"SigningCertificate\" type= \"SigningCertificate\" minOccurs= \"0\" /> <xs:element name= \"Certificate\" type= \"Certificate\" minOccurs= \"0\" /> <xs:element name= \"Base64Encoded\" type= \"xs:base64Binary\" minOccurs= \"0\" /> </xs:sequence> <xs:attribute name= \"Id\" type= \"xs:string\" use= \"required\" /> </xs:complexType> <xs:complexType name= \"TrustedList\" > <xs:sequence> <xs:element name= \"CountryCode\" type= \"xs:string\" /> <xs:element name= \"Url\" type= \"xs:string\" /> <xs:element name= \"SequenceNumber\" type= \"xs:int\" minOccurs= \"0\" /> <xs:element name= \"Version\" type= \"xs:int\" minOccurs= \"0\" /> <xs:element name= \"LastLoading\" type= \"xs:dateTime\" minOccurs= \"0\" /> <xs:element name= \"IssueDate\" type= \"xs:dateTime\" minOccurs= \"0\" /> <xs:element name= \"NextUpdate\" type= \"xs:dateTime\" minOccurs= \"0\" /> <xs:element name= \"WellSigned\" type= \"xs:boolean\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"TrustedServiceProvider\" > <xs:sequence> <xs:element name= \"TSPName\" type= \"xs:string\" /> <xs:element name= \"TSPRegistrationIdentifier\" type= \"xs:string\" minOccurs= \"0\" /> <xs:element name= \"CountryCode\" type= \"xs:string\" /> <xs:element name= \"TrustedServices\" > <xs:complexType> <xs:sequence> <xs:element name= \"TrustedService\" type= \"TrustedService\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> </xs:sequence> </xs:complexType> <xs:complexType name= \"TrustedService\" > <xs:sequence> <xs:element name= \"ServiceName\" type= \"xs:string\" /> <xs:element name= \"ServiceType\" type= \"xs:string\" /> <xs:element name= \"Status\" type= \"xs:string\" /> <xs:element name= \"StartDate\" type= \"xs:dateTime\" /> <xs:element name= \"EndDate\" type= \"xs:dateTime\" minOccurs= \"0\" /> <xs:element name= \"CapturedQualifiers\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"Qualifier\" type= \"xs:string\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"AdditionalServiceInfoUris\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"URI\" type= \"xs:string\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"ServiceSupplyPoints\" minOccurs= \"0\" > <xs:complexType> <xs:sequence> <xs:element name= \"URI\" type= \"xs:string\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:element> <xs:element name= \"expiredCertsRevocationInfo\" type= \"xs:dateTime\" minOccurs= \"0\" /> </xs:sequence> </xs:complexType> <xs:complexType name= \"DigestAlgoAndValues\" > <xs:sequence> <xs:element name= \"DigestAlgoAndValue\" type= \"DigestAlgoAndValue\" minOccurs= \"0\" maxOccurs= \"unbounded\" /> </xs:sequence> </xs:complexType> </xs:schema>","title":"DSS diagnostic data report XSD"}]}